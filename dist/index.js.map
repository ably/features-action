{"version":3,"file":"index.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjhpvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzzvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxcjknmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpxlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbzlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrasBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChrxbzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxhpqCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+KA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9CA;;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjjnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACptdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChhxnDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjldA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrpczllkrVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvthBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACprpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrhvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxtbnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrvriBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtzlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACplEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrzQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpxUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClxlnpxajlpt0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzlhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7gv2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtvthptCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnjdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACltQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfpVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjxzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjhQA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACprDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvvQA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtfpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClpvgxthnlqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;;;;ACAA;AACA;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../webpack://@ably/features-action/./node_modules/@ably/features-core/compare.js","../webpack://@ably/features-action/./node_modules/@ably/features-core/html-matrix-build.js","../webpack://@ably/features-action/./node_modules/@ably/features-core/html-matrix-renderer.js","../webpack://@ably/features-action/./node_modules/@ably/features-core/html.js","../webpack://@ably/features-action/./node_modules/@ably/features-core/manifest.js","../webpack://@ably/features-action/./node_modules/@ably/features-core/matrix.js","../webpack://@ably/features-action/./node_modules/@ably/features-core/sdk-node-properties.js","../webpack://@ably/features-action/./node_modules/@ably/features-core/transform.js","../webpack://@ably/features-action/./node_modules/@ably/features-core/yaml-structure.js","../webpack://@ably/features-action/./node_modules/@actions/core/lib/command.js","../webpack://@ably/features-action/./node_modules/@actions/core/lib/core.js","../webpack://@ably/features-action/./node_modules/@actions/core/lib/file-command.js","../webpack://@ably/features-action/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://@ably/features-action/./node_modules/@actions/core/lib/path-utils.js","../webpack://@ably/features-action/./node_modules/@actions/core/lib/summary.js","../webpack://@ably/features-action/./node_modules/@actions/core/lib/utils.js","../webpack://@ably/features-action/./node_modules/@actions/http-client/lib/auth.js","../webpack://@ably/features-action/./node_modules/@actions/http-client/lib/index.js","../webpack://@ably/features-action/./node_modules/@actions/http-client/lib/proxy.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/adapters/fs.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/constants.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/index.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/providers/async.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/providers/common.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/providers/sync.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/settings.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/utils/fs.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.scandir/out/utils/index.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.stat/out/adapters/fs.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.stat/out/index.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.stat/out/providers/async.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.stat/out/providers/sync.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.stat/out/settings.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/index.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/providers/async.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/providers/stream.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/providers/sync.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/readers/async.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/readers/common.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/readers/reader.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/readers/sync.js","../webpack://@ably/features-action/./node_modules/@nodelib/fs.walk/out/settings.js","../webpack://@ably/features-action/./node_modules/acorn-node/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/lib/bigint/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/lib/class-fields/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/lib/dynamic-import/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/lib/export-ns-from/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/lib/import-meta/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/lib/numeric-separator/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/lib/private-class-elements/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/lib/static-class-features/index.js","../webpack://@ably/features-action/./node_modules/acorn-node/walk.js","../webpack://@ably/features-action/./node_modules/acorn-walk/dist/walk.js","../webpack://@ably/features-action/./node_modules/acorn/dist/acorn.js","../webpack://@ably/features-action/./node_modules/autoprefixer/data/prefixes.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/at-rule.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/autoprefixer.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/brackets.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/browsers.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/declaration.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/align-content.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/align-items.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/align-self.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/animation.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/appearance.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/autofill.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/backdrop-filter.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/background-clip.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/background-size.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/block-logical.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/border-image.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/border-radius.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/break-props.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/cross-fade.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/display-flex.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/display-grid.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/file-selector-button.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/filter-value.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/filter.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/flex-basis.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/flex-direction.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/flex-flow.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/flex-grow.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/flex-shrink.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/flex-spec.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/flex-wrap.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/flex.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/fullscreen.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/gradient.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-area.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-column-align.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-end.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-row-align.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-row-column.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-rows-columns.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-start.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-template-areas.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-template.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/grid-utils.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/image-rendering.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/image-set.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/inline-logical.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/intrinsic.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/justify-content.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/mask-border.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/mask-composite.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/order.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/overscroll-behavior.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/pixelated.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/place-self.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/placeholder-shown.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/placeholder.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/print-color-adjust.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/text-decoration-skip-ink.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/text-decoration.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/text-emphasis-position.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/transform-decl.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/user-select.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/hacks/writing-mode.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/info.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/old-selector.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/old-value.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/prefixer.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/prefixes.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/processor.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/resolution.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/selector.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/supports.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/transition.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/utils.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/value.js","../webpack://@ably/features-action/./node_modules/autoprefixer/lib/vendor.js","../webpack://@ably/features-action/./node_modules/braces/index.js","../webpack://@ably/features-action/./node_modules/braces/lib/compile.js","../webpack://@ably/features-action/./node_modules/braces/lib/constants.js","../webpack://@ably/features-action/./node_modules/braces/lib/expand.js","../webpack://@ably/features-action/./node_modules/braces/lib/parse.js","../webpack://@ably/features-action/./node_modules/braces/lib/stringify.js","../webpack://@ably/features-action/./node_modules/braces/lib/utils.js","../webpack://@ably/features-action/./node_modules/browserslist/error.js","../webpack://@ably/features-action/./node_modules/browserslist/index.js","../webpack://@ably/features-action/./node_modules/browserslist/node.js","../webpack://@ably/features-action/./node_modules/browserslist/parse.js","../webpack://@ably/features-action/./node_modules/camelcase-css/index.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/agents.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/browserVersions.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/browsers.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/aac.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/abortcontroller.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ac3-ec3.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/accelerometer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/addeventlistener.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/alternate-stylesheet.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ambient-light.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/apng.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/array-find-index.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/array-find.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/array-flat.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/array-includes.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/arrow-functions.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/asmjs.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/async-clipboard.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/async-functions.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/atob-btoa.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/audio-api.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/audio.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/audiotracks.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/autofocus.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/auxclick.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/av1.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/avif.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/background-attachment.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/background-clip-text.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/background-img-opts.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/background-position-x-y.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/background-repeat-round-space.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/background-sync.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/battery-status.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/beacon.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/beforeafterprint.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/bigint.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/blobbuilder.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/bloburls.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/border-image.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/border-radius.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/broadcastchannel.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/brotli.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/calc.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/canvas-blending.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/canvas-text.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/canvas.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ch-unit.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/chacha20-poly1305.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/channel-messaging.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/childnode-remove.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/classlist.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/client-hints-dpr-width-viewport.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/clipboard.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/colr-v1.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/colr.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/comparedocumentposition.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/console-basic.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/console-time.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/const.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/constraint-validation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/contenteditable.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/contentsecuritypolicy.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/contentsecuritypolicy2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/cookie-store-api.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/cors.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/createimagebitmap.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/credential-management.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/cryptography.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-all.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-animation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-any-link.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-appearance.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-at-counter-style.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-autofill.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-backdrop-filter.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-background-offsets.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-backgroundblendmode.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-boxdecorationbreak.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-boxshadow.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-canvas.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-caret-color.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-cascade-layers.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-case-insensitive.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-clip-path.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-color-adjust.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-color-function.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-conic-gradients.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-container-queries-style.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-container-queries.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-container-query-units.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-containment.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-content-visibility.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-counters.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-crisp-edges.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-cross-fade.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-default-pseudo.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-descendant-gtgt.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-deviceadaptation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-dir-pseudo.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-display-contents.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-element-function.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-env-function.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-exclusions.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-featurequeries.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-file-selector-button.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-filter-function.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-filters.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-first-letter.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-first-line.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-fixed.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-focus-visible.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-focus-within.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-font-palette.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-font-rendering-controls.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-font-stretch.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-gencontent.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-gradients.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-grid-animation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-grid.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-hanging-punctuation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-has.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-hyphens.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-image-orientation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-image-set.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-in-out-of-range.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-indeterminate-pseudo.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-initial-letter.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-initial-value.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-lch-lab.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-letter-spacing.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-line-clamp.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-logical-props.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-marker-pseudo.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-masks.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-matches-pseudo.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-math-functions.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-media-interaction.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-media-range-syntax.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-media-resolution.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-media-scripting.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-mediaqueries.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-mixblendmode.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-motion-paths.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-namespaces.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-nesting.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-not-sel-list.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-nth-child-of.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-opacity.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-optional-pseudo.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-overflow-anchor.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-overflow-overlay.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-overflow.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-overscroll-behavior.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-page-break.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-paged-media.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-paint-api.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-placeholder-shown.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-placeholder.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-print-color-adjust.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-read-only-write.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-rebeccapurple.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-reflections.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-regions.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-repeating-gradients.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-resize.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-revert-value.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-rrggbbaa.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-scroll-behavior.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-scroll-timeline.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-scrollbar.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-sel2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-sel3.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-selection.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-shapes.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-snappoints.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-sticky.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-subgrid.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-supports-api.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-table.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-text-align-last.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-text-indent.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-text-justify.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-text-orientation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-text-spacing.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-textshadow.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-touch-action.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-transitions.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-unicode-bidi.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-unset-value.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-variables.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-when-else.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-widows-orphans.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-width-stretch.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-writing-mode.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css-zoom.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css3-attr.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css3-boxsizing.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css3-colors.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css3-cursors-grab.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css3-cursors-newer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css3-cursors.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/css3-tabsize.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/currentcolor.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/custom-elements.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/custom-elementsv1.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/customevent.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/datalist.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/dataset.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/datauri.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/date-tolocaledatestring.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/declarative-shadow-dom.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/decorators.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/details.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/deviceorientation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/devicepixelratio.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/dialog.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/dispatchevent.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/dnssec.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/do-not-track.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/document-currentscript.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/document-evaluate-xpath.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/document-execcommand.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/document-policy.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/document-scrollingelement.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/documenthead.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/dom-manip-convenience.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/dom-range.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/domcontentloaded.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/dommatrix.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/download.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/dragndrop.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/element-closest.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/element-from-point.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/element-scroll-methods.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/eme.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/eot.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/es5.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/es6-class.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/es6-generators.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/es6-module-dynamic-import.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/es6-module.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/es6-number.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/es6-string-includes.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/es6.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/eventsource.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/extended-system-fonts.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/feature-policy.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/fetch.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/fieldset-disabled.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/fileapi.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/filereader.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/filereadersync.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/filesystem.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/flac.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/flexbox-gap.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/flexbox.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/flow-root.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/focusin-focusout-events.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-family-system-ui.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-feature.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-kerning.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-loading.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-size-adjust.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-smooth.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-unicode-range.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-variant-alternates.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/font-variant-numeric.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/fontface.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/form-attribute.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/form-submit-attributes.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/form-validation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/forms.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/fullscreen.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/gamepad.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/geolocation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/getboundingclientrect.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/getcomputedstyle.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/getelementsbyclassname.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/getrandomvalues.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/gyroscope.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/hardwareconcurrency.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/hashchange.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/heif.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/hevc.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/hidden.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/high-resolution-time.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/history.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/html-media-capture.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/html5semantic.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/http-live-streaming.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/http2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/http3.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/iframe-sandbox.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/iframe-seamless.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/iframe-srcdoc.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/imagecapture.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ime.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/img-naturalwidth-naturalheight.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/import-maps.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/imports.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/indeterminate-checkbox.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/indexeddb.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/indexeddb2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/inline-block.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/innertext.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-autocomplete-onoff.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-color.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-datetime.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-email-tel-url.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-event.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-file-accept.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-file-directory.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-file-multiple.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-inputmode.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-minlength.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-number.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-pattern.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-placeholder.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-range.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-search.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/input-selection.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/insert-adjacent.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/insertadjacenthtml.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/internationalization.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/intersectionobserver-v2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/intersectionobserver.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/intl-pluralrules.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/intrinsic-width.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/jpeg2000.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/jpegxl.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/jpegxr.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/js-regexp-lookbehind.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/json.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/justify-content-space-evenly.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/kerning-pairs-ligatures.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/keyboardevent-charcode.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/keyboardevent-code.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/keyboardevent-getmodifierstate.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/keyboardevent-key.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/keyboardevent-location.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/keyboardevent-which.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/lazyload.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/let.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/link-icon-png.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/link-icon-svg.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/link-rel-dns-prefetch.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/link-rel-modulepreload.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/link-rel-preconnect.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/link-rel-prefetch.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/link-rel-preload.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/link-rel-prerender.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/loading-lazy-attr.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/localecompare.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/magnetometer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/matchesselector.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/matchmedia.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mathml.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/maxlength.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mdn-text-decoration-color.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mdn-text-decoration-line.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mdn-text-decoration-shorthand.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mdn-text-decoration-style.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/media-fragments.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mediacapture-fromelement.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mediarecorder.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mediasource.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/menu.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/meta-theme-color.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/meter.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/midi.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/minmaxwh.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mp3.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mpeg-dash.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mpeg4.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/multibackgrounds.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/multicolumn.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mutation-events.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/mutationobserver.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/namevalue-storage.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/native-filesystem-api.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/nav-timing.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/netinfo.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/notifications.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/object-entries.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/object-fit.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/object-observe.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/object-values.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/objectrtc.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/offline-apps.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/offscreencanvas.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ogg-vorbis.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ogv.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ol-reversed.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/once-event-listener.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/online-status.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/opus.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/orientation-sensor.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/outline.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/pad-start-end.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/page-transition-events.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/pagevisibility.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/passive-event-listener.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/passwordrules.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/path2d.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/payment-request.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/pdf-viewer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/permissions-api.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/permissions-policy.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/picture-in-picture.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/picture.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ping.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/png-alpha.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/pointer-events.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/pointer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/pointerlock.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/portals.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/prefers-color-scheme.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/prefers-reduced-motion.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/progress.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/promise-finally.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/promises.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/proximity.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/proxy.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/publickeypinning.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/push-api.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/queryselector.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/readonly-attr.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/referrer-policy.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/registerprotocolhandler.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/rel-noopener.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/rel-noreferrer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/rellist.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/rem.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/requestanimationframe.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/requestidlecallback.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/resizeobserver.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/resource-timing.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/rest-parameters.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/rtcpeerconnection.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ruby.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/run-in.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/same-site-cookie-attribute.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/screen-orientation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/script-async.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/script-defer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/scrollintoview.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/scrollintoviewifneeded.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/sdch.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/selection-api.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/server-timing.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/serviceworkers.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/setimmediate.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/shadowdom.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/shadowdomv1.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/sharedarraybuffer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/sharedworkers.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/sni.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/spdy.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/speech-recognition.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/speech-synthesis.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/spellcheck-attribute.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/sql-storage.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/srcset.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/stream.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/streams.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/stricttransportsecurity.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/style-scoped.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/subresource-bundling.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/subresource-integrity.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg-css.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg-filters.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg-fonts.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg-fragment.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg-html.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg-html5.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg-img.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg-smil.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/svg.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/sxg.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/tabindex-attr.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/template-literals.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/template.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/temporal.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/testfeat.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/text-decoration.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/text-emphasis.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/text-overflow.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/text-size-adjust.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/text-stroke.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/textcontent.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/textencoder.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/tls1-1.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/tls1-2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/tls1-3.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/touch.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/transforms2d.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/transforms3d.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/trusted-types.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/ttf.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/typedarrays.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/u2f.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/unhandledrejection.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/upgradeinsecurerequests.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/url-scroll-to-text-fragment.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/url.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/urlsearchparams.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/use-strict.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/user-select-none.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/user-timing.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/variable-fonts.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/vector-effect.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/vibration.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/video.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/videotracks.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/viewport-unit-variants.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/viewport-units.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/wai-aria.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/wake-lock.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/wasm.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/wav.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/wbr-element.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/web-animation.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/web-app-manifest.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/web-bluetooth.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/web-serial.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/web-share.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webauthn.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webcodecs.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webgl.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webgl2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webgpu.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webhid.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webkit-user-drag.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webm.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webnfc.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webp.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/websockets.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webtransport.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webusb.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webvr.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webvtt.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webworkers.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/webxr.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/will-change.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/woff.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/woff2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/word-break.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/wordwrap.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/x-doc-messaging.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/x-frame-options.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/xhr2.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/xhtml.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/xhtmlsmil.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/data/features/xml-serializer.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/lib/statuses.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/lib/supported.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/unpacker/agents.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/unpacker/browserVersions.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/unpacker/browsers.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/unpacker/feature.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/unpacker/features.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/unpacker/index.js","../webpack://@ably/features-action/./node_modules/caniuse-lite/dist/unpacker/region.js","../webpack://@ably/features-action/./node_modules/color-name/index.js","../webpack://@ably/features-action/./node_modules/cssesc/cssesc.js","../webpack://@ably/features-action/./node_modules/defined/index.js","../webpack://@ably/features-action/./node_modules/detective/index.js","../webpack://@ably/features-action/./node_modules/didyoumean/didYouMean-1.2.1.js","../webpack://@ably/features-action/./node_modules/dlv/dist/dlv.js","../webpack://@ably/features-action/./node_modules/electron-to-chromium/versions.js","../webpack://@ably/features-action/./node_modules/escape-html/index.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/index.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/managers/patterns.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/managers/tasks.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/async.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/filters/deep.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/filters/entry.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/filters/error.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/matchers/matcher.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/matchers/partial.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/provider.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/stream.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/sync.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/providers/transformers/entry.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/readers/async.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/readers/reader.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/readers/stream.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/readers/sync.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/settings.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/utils/array.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/utils/errno.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/utils/fs.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/utils/index.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/utils/path.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/utils/pattern.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/utils/stream.js","../webpack://@ably/features-action/./node_modules/fast-glob/out/utils/string.js","../webpack://@ably/features-action/./node_modules/fastq/queue.js","../webpack://@ably/features-action/./node_modules/fill-range/index.js","../webpack://@ably/features-action/./node_modules/fraction.js/fraction.js","../webpack://@ably/features-action/./node_modules/function-bind/implementation.js","../webpack://@ably/features-action/./node_modules/function-bind/index.js","../webpack://@ably/features-action/./node_modules/glob-parent/index.js","../webpack://@ably/features-action/./node_modules/has/src/index.js","../webpack://@ably/features-action/./node_modules/is-core-module/index.js","../webpack://@ably/features-action/./node_modules/is-extglob/index.js","../webpack://@ably/features-action/./node_modules/is-glob/index.js","../webpack://@ably/features-action/./node_modules/is-number/index.js","../webpack://@ably/features-action/./node_modules/merge2/index.js","../webpack://@ably/features-action/./node_modules/micromatch/index.js","../webpack://@ably/features-action/./node_modules/normalize-path/index.js","../webpack://@ably/features-action/./node_modules/normalize-range/index.js","../webpack://@ably/features-action/./node_modules/object-hash/index.js","../webpack://@ably/features-action/./node_modules/path-parse/index.js","../webpack://@ably/features-action/./node_modules/picocolors/picocolors.js","../webpack://@ably/features-action/./node_modules/picomatch/index.js","../webpack://@ably/features-action/./node_modules/picomatch/lib/constants.js","../webpack://@ably/features-action/./node_modules/picomatch/lib/parse.js","../webpack://@ably/features-action/./node_modules/picomatch/lib/picomatch.js","../webpack://@ably/features-action/./node_modules/picomatch/lib/scan.js","../webpack://@ably/features-action/./node_modules/picomatch/lib/utils.js","../webpack://@ably/features-action/./node_modules/postcss-js/async.js","../webpack://@ably/features-action/./node_modules/postcss-js/index.js","../webpack://@ably/features-action/./node_modules/postcss-js/objectifier.js","../webpack://@ably/features-action/./node_modules/postcss-js/parser.js","../webpack://@ably/features-action/./node_modules/postcss-js/process-result.js","../webpack://@ably/features-action/./node_modules/postcss-js/sync.js","../webpack://@ably/features-action/./node_modules/postcss-nested/index.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/index.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/parser.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/processor.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/attribute.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/className.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/combinator.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/comment.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/constructors.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/container.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/guards.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/id.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/index.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/namespace.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/nesting.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/node.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/pseudo.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/root.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/selector.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/string.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/tag.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/types.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/selectors/universal.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/sortAscending.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/tokenTypes.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/tokenize.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/util/ensureObject.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/util/getProp.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/util/index.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/util/stripComments.js","../webpack://@ably/features-action/./node_modules/postcss-selector-parser/dist/util/unesc.js","../webpack://@ably/features-action/./node_modules/postcss-value-parser/lib/index.js","../webpack://@ably/features-action/./node_modules/postcss-value-parser/lib/parse.js","../webpack://@ably/features-action/./node_modules/postcss-value-parser/lib/stringify.js","../webpack://@ably/features-action/./node_modules/postcss-value-parser/lib/unit.js","../webpack://@ably/features-action/./node_modules/postcss-value-parser/lib/walk.js","../webpack://@ably/features-action/./node_modules/postcss/lib/at-rule.js","../webpack://@ably/features-action/./node_modules/postcss/lib/comment.js","../webpack://@ably/features-action/./node_modules/postcss/lib/container.js","../webpack://@ably/features-action/./node_modules/postcss/lib/css-syntax-error.js","../webpack://@ably/features-action/./node_modules/postcss/lib/declaration.js","../webpack://@ably/features-action/./node_modules/postcss/lib/document.js","../webpack://@ably/features-action/./node_modules/postcss/lib/fromJSON.js","../webpack://@ably/features-action/./node_modules/postcss/lib/input.js","../webpack://@ably/features-action/./node_modules/postcss/lib/lazy-result.js","../webpack://@ably/features-action/./node_modules/postcss/lib/list.js","../webpack://@ably/features-action/./node_modules/postcss/lib/map-generator.js","../webpack://@ably/features-action/./node_modules/postcss/lib/no-work-result.js","../webpack://@ably/features-action/./node_modules/postcss/lib/node.js","../webpack://@ably/features-action/./node_modules/postcss/lib/parse.js","../webpack://@ably/features-action/./node_modules/postcss/lib/parser.js","../webpack://@ably/features-action/./node_modules/postcss/lib/postcss.js","../webpack://@ably/features-action/./node_modules/postcss/lib/previous-map.js","../webpack://@ably/features-action/./node_modules/postcss/lib/processor.js","../webpack://@ably/features-action/./node_modules/postcss/lib/result.js","../webpack://@ably/features-action/./node_modules/postcss/lib/root.js","../webpack://@ably/features-action/./node_modules/postcss/lib/rule.js","../webpack://@ably/features-action/./node_modules/postcss/lib/stringifier.js","../webpack://@ably/features-action/./node_modules/postcss/lib/stringify.js","../webpack://@ably/features-action/./node_modules/postcss/lib/symbols.js","../webpack://@ably/features-action/./node_modules/postcss/lib/terminal-highlight.js","../webpack://@ably/features-action/./node_modules/postcss/lib/tokenize.js","../webpack://@ably/features-action/./node_modules/postcss/lib/warn-once.js","../webpack://@ably/features-action/./node_modules/postcss/lib/warning.js","../webpack://@ably/features-action/./node_modules/queue-microtask/index.js","../webpack://@ably/features-action/./node_modules/quick-lru/index.js","../webpack://@ably/features-action/./node_modules/resolve/index.js","../webpack://@ably/features-action/./node_modules/resolve/lib/async.js","../webpack://@ably/features-action/./node_modules/resolve/lib/caller.js","../webpack://@ably/features-action/./node_modules/resolve/lib/core.js","../webpack://@ably/features-action/./node_modules/resolve/lib/homedir.js","../webpack://@ably/features-action/./node_modules/resolve/lib/is-core.js","../webpack://@ably/features-action/./node_modules/resolve/lib/node-modules-paths.js","../webpack://@ably/features-action/./node_modules/resolve/lib/normalize-options.js","../webpack://@ably/features-action/./node_modules/resolve/lib/sync.js","../webpack://@ably/features-action/./node_modules/reusify/reusify.js","../webpack://@ably/features-action/./node_modules/run-parallel/index.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/array-set.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/base64-vlq.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/base64.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/binary-search.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/mapping-list.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/quick-sort.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/source-map-consumer.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/source-map-generator.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/source-node.js","../webpack://@ably/features-action/./node_modules/source-map-js/lib/util.js","../webpack://@ably/features-action/./node_modules/source-map-js/source-map.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/corePluginList.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/corePlugins.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/featureFlags.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/index.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/cacheInvalidation.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/collapseAdjacentRules.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/collapseDuplicateDeclarations.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/content.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/defaultExtractor.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/detectNesting.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/evaluateTailwindFunctions.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/expandApplyAtRules.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/expandTailwindAtRules.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/findAtConfigPath.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/generateRules.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/getModuleDependencies.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/normalizeTailwindDirectives.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/offsets.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/partitionApplyAtRules.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/regex.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/remap-bitfield.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/resolveDefaultsAtRules.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/setupContextUtils.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/setupTrackingContext.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/sharedState.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/lib/substituteScreenAtRules.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/oxide/postcss-plugin.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/plugin.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/processTailwindFeatures.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/public/colors.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/public/create-plugin.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/public/resolve-config.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/bigSign.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/buildMediaQuery.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/cloneDeep.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/cloneNodes.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/color.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/configurePlugins.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/createPlugin.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/createUtilityPlugin.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/dataTypes.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/defaults.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/escapeClassName.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/escapeCommas.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/flattenColorPalette.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/formatVariantSelector.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/getAllConfigs.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/hashConfig.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/isPlainObject.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/isSyntacticallyValidPropertyValue.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/log.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/nameClass.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/negateValue.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/normalizeConfig.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/normalizeScreens.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/parseAnimationValue.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/parseBoxShadowValue.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/parseDependency.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/parseGlob.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/parseObjectStyles.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/pluginUtils.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/prefixSelector.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/removeAlphaVariables.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/resolveConfig.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/resolveConfigPath.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/splitAtTopLevelOnly.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/toColorValue.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/toPath.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/transformThemeValue.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/validateConfig.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/validateFormalSyntax.js","../webpack://@ably/features-action/./node_modules/tailwindcss/lib/util/withAlphaVariable.js","../webpack://@ably/features-action/./node_modules/tailwindcss/node_modules/glob-parent/index.js","../webpack://@ably/features-action/./node_modules/tailwindcss/plugin.js","../webpack://@ably/features-action/./node_modules/tailwindcss/stubs/defaultConfig.stub.js","../webpack://@ably/features-action/./node_modules/to-regex-range/index.js","../webpack://@ably/features-action/./node_modules/tunnel/index.js","../webpack://@ably/features-action/./node_modules/tunnel/lib/tunnel.js","../webpack://@ably/features-action/./node_modules/util-deprecate/node.js","../webpack://@ably/features-action/./node_modules/uuid/dist/index.js","../webpack://@ably/features-action/./node_modules/uuid/dist/md5.js","../webpack://@ably/features-action/./node_modules/uuid/dist/nil.js","../webpack://@ably/features-action/./node_modules/uuid/dist/parse.js","../webpack://@ably/features-action/./node_modules/uuid/dist/regex.js","../webpack://@ably/features-action/./node_modules/uuid/dist/rng.js","../webpack://@ably/features-action/./node_modules/uuid/dist/sha1.js","../webpack://@ably/features-action/./node_modules/uuid/dist/stringify.js","../webpack://@ably/features-action/./node_modules/uuid/dist/v1.js","../webpack://@ably/features-action/./node_modules/uuid/dist/v3.js","../webpack://@ably/features-action/./node_modules/uuid/dist/v35.js","../webpack://@ably/features-action/./node_modules/uuid/dist/v4.js","../webpack://@ably/features-action/./node_modules/uuid/dist/v5.js","../webpack://@ably/features-action/./node_modules/uuid/dist/validate.js","../webpack://@ably/features-action/./node_modules/uuid/dist/version.js","../webpack://@ably/features-action/./node_modules/xtend/immutable.js","../webpack://@ably/features-action/./tailwind-wrapper.js","../webpack://@ably/features-action/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://@ably/features-action/./node_modules/browserslist/ sync","../webpack://@ably/features-action/external node-commonjs \"assert\"","../webpack://@ably/features-action/external node-commonjs \"crypto\"","../webpack://@ably/features-action/external node-commonjs \"events\"","../webpack://@ably/features-action/external node-commonjs \"fs\"","../webpack://@ably/features-action/external node-commonjs \"http\"","../webpack://@ably/features-action/external node-commonjs \"https\"","../webpack://@ably/features-action/external node-commonjs \"net\"","../webpack://@ably/features-action/external node-commonjs \"node:https\"","../webpack://@ably/features-action/external node-commonjs \"os\"","../webpack://@ably/features-action/external node-commonjs \"path\"","../webpack://@ably/features-action/external node-commonjs \"stream\"","../webpack://@ably/features-action/external node-commonjs \"tls\"","../webpack://@ably/features-action/external node-commonjs \"tty\"","../webpack://@ably/features-action/external node-commonjs \"url\"","../webpack://@ably/features-action/external node-commonjs \"util\"","../webpack://@ably/features-action/./node_modules/yaml/dist/Document-9b4560a1.js","../webpack://@ably/features-action/./node_modules/yaml/dist/PlainValue-ec8e588e.js","../webpack://@ably/features-action/./node_modules/yaml/dist/Schema-88e323a7.js","../webpack://@ably/features-action/./node_modules/yaml/dist/index.js","../webpack://@ably/features-action/./node_modules/yaml/dist/parse-cst.js","../webpack://@ably/features-action/./node_modules/yaml/dist/resolveSeq-d03cb037.js","../webpack://@ably/features-action/./node_modules/yaml/dist/warnings-1000a372.js","../webpack://@ably/features-action/./node_modules/yaml/index.js","../webpack://@ably/features-action/./node_modules/marked/lib/marked.cjs","../webpack://@ably/features-action/./node_modules/nanoid/non-secure/index.cjs","../webpack://@ably/features-action/webpack/bootstrap","../webpack://@ably/features-action/webpack/runtime/hasOwnProperty shorthand","../webpack://@ably/features-action/webpack/runtime/compat","../webpack://@ably/features-action/./server.js"],"sourcesContent":["/**\n * Compares two string keys, using our preferred comparison method.\n *\n * This method uses `localCompare` with the `sensitivity` option set to 'base',\n * meaning that comparisons are case insensitive.\n *\n * @param {string} a The first string (a.k.a. `referenceStr`).\n * @param {string} b The second string (a.k.a. `compareString`).\n * @returns {number} A negative number if `a` occurs before `b`;\n * positive if the `a` occurs after `b`; 0 if they are equivalent.\n */\nfunction compareKeys(a, b) {\n  return a.localeCompare(b, 'en', { sensitivity: 'base' });\n}\n\nmodule.exports = {\n  compareKeys,\n};\n","const fs = require('fs');\nconst path = require('path');\nconst YAML = require('yaml');\n\nconst { Manifest } = require('./manifest');\nconst { MatrixGenerator } = require('./matrix');\nconst { writeDocument } = require('./html-matrix-renderer');\nconst { validateStructure } = require('./yaml-structure');\nconst { isString } = require('./transform');\n\nconst loadSource = (filePath) => fs.readFileSync(filePath).toString();\nconst yamlParserOptions = { mapAsMap: true };\n\nclass ManifestObjects {\n  /**\n   * Loads SDK feature compliance manifest(s) from YAML file(s).\n   *\n   * @param {string[]} suffixes In the order they're to be explored for each feature.\n   * @param {Map} sourcePaths The paths to the YAML documents containing SDK manifests, keyed by suffix.\n   */\n  constructor(suffixes, sourcePaths) {\n    if (!suffixes || suffixes.length < 1) {\n      throw new Error('suffixes must be defined and not empty.');\n    }\n    if ((new Set(suffixes)).size !== suffixes.length) {\n      throw new Error('Values in suffixes must all be unique (array as ordered set).');\n    }\n    if (suffixes.length !== sourcePaths.size) {\n      throw new Error('suffixes.length must match sourcePaths.size.');\n    }\n\n    // Load YAML sources up-front and do first-pass (first parse) structural validation.\n    const sources = new Map();\n    suffixes.forEach((suffix) => {\n      const source = loadSource(sourcePaths.get(suffix));\n      validateStructure(YAML.parseDocument(source).contents);\n      sources.set(suffix, source);\n    });\n\n    // Do second-pass (second parse) parsing raw YAML sources to JS objects.\n    const objects = new Map();\n    sources.forEach((source, suffix) => {\n      try {\n        const object = YAML.parse(source, yamlParserOptions);\n        objects.set(suffix, object);\n      } catch (error) {\n        throw new Error(\n          `Failed YAML parse for manifest with ${suffix}.`,\n          { cause: error },\n        );\n      }\n    });\n\n    // Ensure that all objects contain a top-level key with a value indicating the\n    // version of the canonical feature list to which this manifest aligns.\n    let commonVersion;\n    objects.forEach((object, suffix) => {\n      try {\n        if (!(object instanceof Map)) {\n          throw new Error('manifest must be a Map.');\n        }\n        const version = object.get('common-version');\n        if (!isString(version)) {\n          throw new Error('common-version must be a string.');\n        }\n        if (version.trim().length < 1) {\n          throw new Error('common-version may not be empty.');\n        }\n        if (commonVersion) {\n          if (commonVersion !== version) {\n            throw new Error(`common-version '${version}' must match '${commonVersion}' from previously processed manifests.`);\n          }\n        } else {\n          commonVersion = version;\n        }\n      } catch (error) {\n        throw new Error(\n          `Failed common version locate for manifest with ${suffix}.`,\n          { cause: error },\n        );\n      }\n    });\n\n    this.commonVersion = commonVersion;\n    this.suffixes = suffixes; // in desired order\n    this.objects = objects;\n  }\n}\n\n/**\n * Renders the canonical feature list to HTML, with SDK columns.\n *\n * @param {string} canonicalSource The YAML document containing the canonical feature list.\n * @param {ManifestObjects} sdkManifestObjects In memory, having passed initial structural validation and YAML parse.\n * @param {string} outputDirectoryPath The path to the directory to generate the HTML document to.\n */\nconst build = (\n  canonicalSource,\n  sdkManifestObjects,\n  outputDirectoryPath,\n) => {\n  // Load YAML source up-front for the canonical features list.\n  validateStructure(YAML.parseDocument(canonicalSource).contents);\n\n  // Second Parse: using YAML's simplest API, rendering pure JS entities representing our data model\n  const features = YAML.parse(canonicalSource, yamlParserOptions);\n  const sdkManifests = new Map();\n  sdkManifestObjects.objects.forEach((object, suffix) => {\n    try {\n      const manifest = new Manifest(object, features);\n      sdkManifests.set(suffix, manifest);\n    } catch (error) {\n      throw new Error(\n        `Failed manifest validation for ${suffix}.`,\n        { cause: error },\n      );\n    }\n  });\n\n  const sortedManifests = sdkManifestObjects.suffixes.map((suffix) => sdkManifests.get(suffix));\n  const generator = new MatrixGenerator(features, sortedManifests);\n\n  // First Pass: Measure depth.\n  const arbitraryMaximumDepth = 10;\n  const levelCount = generator.generate(arbitraryMaximumDepth);\n  console.log(`levelCount = ${levelCount}`);\n\n  // Create output directory in standard location within working directory.\n  // The expectation is that this tool is run from the root of the repository.\n  createDirectory(outputDirectoryPath);\n\n  writeDocument(\n    path.join(outputDirectoryPath, 'index.html'),\n    generator,\n    sdkManifestObjects.suffixes,\n    levelCount,\n  );\n\n  /**\n   * Creates a directory at the given path if it doesn't exist, recursively if necessary.\n   *\n   * @param {string} directoryPath The directory path. Can be relative to current working directory.\n   */\n  function createDirectory(directoryPath) {\n    if (!fs.existsSync(directoryPath)) {\n      fs.mkdirSync(directoryPath, { recursive: true });\n    }\n  }\n};\n\nmodule.exports = {\n  build,\n  loadSource,\n  ManifestObjects,\n};\n","const fs = require('fs');\nconst escape = require('escape-html');\nconst { marked } = require('marked');\nconst {\n  DocumentWriter,\n  TableWriter,\n} = require('./html');\nconst { MatrixGenerator, MatrixConsumer } = require('./matrix');\n\n// from Google Fonts' Icons (originally called 'Close' and 'Done').\n// https://fonts.google.com/icons\nconst svgSize = '1.5em';\nconst crossSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"${svgSize}\" width=\"${svgSize}\" viewBox=\"0 0 48 48\"><path d=\"M12.45 37.65 10.35 35.55 21.9 24 10.35 12.45 12.45 10.35 24 21.9 35.55 10.35 37.65 12.45 26.1 24 37.65 35.55 35.55 37.65 24 26.1Z\"/></svg>`;\nconst tickSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"${svgSize}\" width=\"${svgSize}\" viewBox=\"0 0 48 48\"><path d=\"M18.9 35.7 7.7 24.5 9.85 22.35 18.9 31.4 38.1 12.2 40.25 14.35Z\"/></svg>`;\nconst partialSvg = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"${svgSize}\" width=\"${svgSize}\" viewBox=\"0 0 48 48\"><path d=\"M10.4 26.4Q9.4 26.4 8.7 25.7Q8 25 8 24Q8 23 8.7 22.3Q9.4 21.6 10.4 21.6Q11.4 21.6 12.1 22.3Q12.8 23 12.8 24Q12.8 25 12.1 25.7Q11.4 26.4 10.4 26.4ZM24 26.4Q23 26.4 22.3 25.7Q21.6 25 21.6 24Q21.6 23 22.3 22.3Q23 21.6 24 21.6Q25 21.6 25.7 22.3Q26.4 23 26.4 24Q26.4 25 25.7 25.7Q25 26.4 24 26.4ZM37.6 26.4Q36.6 26.4 35.9 25.7Q35.2 25 35.2 24Q35.2 23 35.9 22.3Q36.6 21.6 37.6 21.6Q38.6 21.6 39.3 22.3Q40 23 40 24Q40 25 39.3 25.7Q38.6 26.4 37.6 26.4Z\"/></svg>`;\n\nconst verticalBordersStyle = 'border-slate-300 border-b-2';\n\nconst title = 'Ably';\nconst subTitle = 'SDK Features Matrix';\n\nconst commonFeatureCellStyle = `${verticalBordersStyle} border-r-2`;\n\n/**\n * @implements {MatrixConsumer}\n */\nclass TableRenderer extends MatrixConsumer {\n  constructor(tableWriter) {\n    super();\n    this.tableWriter = tableWriter;\n  }\n\n  onFeature(parentKeys, key, properties, maximumLevel) {\n    const {\n      specificationPoints,\n      documentationUrls,\n      requires,\n      synopsis,\n      isHeading,\n    } = properties;\n    const level = parentKeys.length;\n\n    const { tableWriter } = this;\n    tableWriter.class(`align-middle tooltip-container${isHeading ? ' bg-slate-200' : ''}`);\n    const rowWriter = tableWriter.startRow();\n    this.rowWriter = rowWriter; // used by calls to onCompliance() for this feature row\n\n    // Indent using empty cells\n    for (let i = 1; i <= level; i += 1) {\n      rowWriter.class(`px-3 ${verticalBordersStyle}`);\n      rowWriter.cell((cellContentWriter) => {\n        cellContentWriter.write('&nbsp;');\n      });\n    }\n\n    // Contents, with column spanning to fill remaining cells, after indentation\n    const cellCount = maximumLevel - level;\n    if (cellCount > 1) {\n      rowWriter.columnSpan(cellCount);\n    }\n    rowWriter.class(`pr-3 whitespace-nowrap ${commonFeatureCellStyle} ${isHeading ? 'font-bold' : ''}`);\n    rowWriter.cell((cellContentWriter) => {\n      if (level > 0) {\n        const tip = `<strong>${escape(parentKeys.join(': '))}</strong>: ${escape(key)}`;\n        cellContentWriter.write(`<span class=\"tooltip-contents\">${tip}</span>`);\n      }\n      cellContentWriter.text(key);\n    });\n\n    // Specification Points\n    rowWriter.class(`px-1 ${commonFeatureCellStyle}`);\n    rowWriter.cell((cellContentWriter) => {\n      cellContentWriter.write(specificationPoints\n        ? specificationPoints\n          .map((element) => element.toHtmlLink())\n          .join(', ')\n        : '&nbsp;');\n    });\n\n    // Conceptual Documentation Links and Synopsis\n    rowWriter.class(`px-1 ${commonFeatureCellStyle}`);\n    rowWriter.cell((cellContentWriter) => {\n      let empty = true;\n\n      const markdownRequires = requires\n        ? `Requires: ${requires.map((featureNodePath) => `**${featureNodePath.join(': ')}**`).join(' | ')}`\n        : null;\n      const markdown = synopsis\n        ? `${synopsis}${markdownRequires ? `\\n${markdownRequires}` : ''}`\n        : markdownRequires;\n\n      if (documentationUrls) {\n        const needComplexLayout = !!markdown;\n\n        if (needComplexLayout) {\n          // With Synopsis and Documentation URLs we need a more complex layout\n          cellContentWriter.write('<div class=\"flex flex-row\">'); // this div is closed below, after writing documentation URLs\n          cellContentWriter.write(`<div class=\"grow\">${marked.parse(markdown)}</div>`);\n          cellContentWriter.write('<div class=\"grow-0\">'); // this div is closed below, after writing documentation URLs\n        }\n\n        cellContentWriter.write(documentationUrls\n          .map((element) => `<a class=\"btn btn-blue\" href=\"${element}\" target=\"_blank\" rel=\"noopener\">${titleForLink(element)}</a>`)\n          .join(' '));\n\n        if (needComplexLayout) {\n          cellContentWriter.write('</div></div>');\n        }\n\n        empty = false;\n      } else if (markdown) {\n        // No Documentation URLs, so simply render the Synopsis.\n        cellContentWriter.write(marked.parse(markdown));\n        empty = false;\n      }\n      if (empty) {\n        cellContentWriter.write('&nbsp;');\n      }\n    });\n  }\n\n  onCompliance(compliance, manifest, featureProperties) {\n    const { rowWriter } = this;\n    const { isHeading } = featureProperties;\n\n    let colourClass = 'bg-red-400';\n    let svg = crossSvg;\n    if (compliance) {\n      const { caveats, variants } = compliance;\n      const hasPartialSupportForVariants = variants && manifest.isPartialVariantsCoverage(variants);\n      if (hasPartialSupportForVariants || caveats) {\n        colourClass = 'bg-amber-400';\n        svg = partialSvg;\n      } else {\n        colourClass = 'bg-green-400';\n        svg = tickSvg;\n      }\n    }\n\n    rowWriter.class(`px-1 ${isHeading ? '' : colourClass} ${commonFeatureCellStyle}`);\n    rowWriter.cell((cellContentWriter) => {\n      cellContentWriter.write('<div class=\"flex justify-center\">');\n      cellContentWriter.write(isHeading ? '&nbsp;' : svg);\n      cellContentWriter.write('</div>');\n    });\n  }\n\n  onFeatureFinished() {\n    this.tableWriter.finishRow();\n    this.rowWriter = undefined;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onIgnoredNode(level, description) {\n    const consoleIndent = ' '.repeat(2).repeat(level);\n    console.log(`${consoleIndent}\"${description}\"`);\n  }\n}\n\n/**\n * Render column headings to a table row.\n *\n * @param {TableWriter} writer The HTML table writer to use.\n * @param {number} maximumLevel The maximum depth, previously measured.\n * @param {string[]} sdkManifestSuffixes In the order they're to be explored for each feature, same as supplied to the generator.\n */\nfunction renderTableHeaderRow(writer, maximumLevel, sdkManifestSuffixes) {\n  writer.class('align-top sticky top-0 bg-blue-700 text-white font-bold');\n  const commonCellStyle = 'pt-2 pb-2 border-y-4 border-white border-r-4 sticky top-0 align-middle';\n  writer.row((rowWriter) => {\n    rowWriter.columnSpan(maximumLevel);\n    rowWriter.class(`pr-1 text-center ${commonCellStyle}`);\n    rowWriter.cell((cellContentWriter) => {\n      cellContentWriter.text('Feature');\n    });\n\n    // Specification Points\n    rowWriter.class(`px-1 ${commonCellStyle}`);\n    rowWriter.cell((cellContentWriter) => {\n      cellContentWriter.text('Specification');\n    });\n\n    // Conceptual Documentation Links and Synopsis\n    rowWriter.class(`px-1 ${commonCellStyle}`);\n    rowWriter.cell((cellContentWriter) => {\n      cellContentWriter.text('Synopsis and Links to Conceptual Documentation');\n    });\n\n    // SDK columns\n    // eslint-disable-next-line no-restricted-syntax\n    sdkManifestSuffixes.forEach((sdkManifestSuffix) => {\n      rowWriter.class(`px-1 ${commonCellStyle}`);\n      rowWriter.cell((cellContentWriter) => {\n        cellContentWriter.write('<div class=\"-rotate-180 m-auto vertical-lr\">');\n        cellContentWriter.text(sdkManifestSuffix);\n        cellContentWriter.write('</div>');\n      });\n    });\n  });\n}\n\n/**\n * Writes an HTML document to file, containing the rendered matrix.\n *\n * @param {string} outputFilePath Where to create the HTML document.\n * @param {MatrixGenerator} generator To be used to generate the matrix, where this implementation is the consumer.\n * @param {string[]} sdkManifestSuffixes In the order they're to be explored for each feature, same as supplied to the generator.\n * @param {number} levelCount The depth of the canonical features tree being rendered.\n */\nconst writeDocument = (outputFilePath, generator, sdkManifestSuffixes, levelCount) => {\n  const documentWriter = new DocumentWriter(\n    { title: `${subTitle} | ${title}` },\n    fs.createWriteStream(outputFilePath),\n  );\n\n  documentWriter.document((contentWriter) => {\n    contentWriter.h(1, `${title} ${subTitle}`);\n\n    // Our convention, for this table, is borders to the right and bottom of cells.\n    // (only exception being the top row, where there's also a border to the top)\n    contentWriter.class('border-separate zero-border-spacing');\n\n    contentWriter.table((tableWriter) => {\n      renderTableHeaderRow(tableWriter, levelCount, sdkManifestSuffixes);\n\n      // Second Pass: Render rows.\n      generator.generate(levelCount, new TableRenderer(tableWriter));\n    });\n  });\n};\n\n/**\n * Returns a short title to be used as the button label for linking to the given URL.\n *\n * @param {url} url The URL to which the button will link.\n * @returns {string} A short title to be used as a button label.\n */\nfunction titleForLink(url) {\n  const titlesForPrefixes = [\n    ['ably.com/blog', 'blog'],\n    ['ably.com/docs', 'docs'],\n    ['faqs.ably.com', 'faq'],\n    ['github.com/ably/.*/issues', 'issue'],\n  ];\n\n  const foundPair = titlesForPrefixes.find((element) => (new RegExp(`https://${element[0]}/`)).test(url));\n  return foundPair ? foundPair[1] : 'link';\n}\n\nmodule.exports = {\n  writeDocument,\n};\n","const escape = require('escape-html');\nconst fs = require('fs');\n\n/**\n * Callback populating a table.\n *\n * @callback TableGenerator\n * @param {TableWriter} writer Used to create rows in the table.\n * @returns {void}\n */\n\n/**\n * Callback populating a table row.\n *\n * @callback TableRowGenerator\n * @param {TableRowWriter} writer Used to create cells in the table row.\n * @returns {void}\n */\n\n/**\n * Callback populating content.\n *\n * @callback ContentGenerator\n * @param {ContentWriter} writer Used to create content.\n * @returns {void}\n */\n\n/**\n * Callback populating a document.\n *\n * @callback DocumentGenerator\n * @param {DocumentWriter} writer Used to create content.\n * @returns {void}\n */\n\nclass Writer {\n  /**\n   * @param {fs.WriteStream} writeStream The stream to wrap.\n   */\n  constructor(writeStream) {\n    this.writeStream = writeStream;\n  }\n\n  class(classNames) {\n    this.classAttributeValue = classNames;\n  }\n\n  /**\n   * Consumes the attribute value(s) and then resets them to undefined.\n   * The idea is that this method is called when the next element is generated.\n   *\n   * @returns {string[]} Zero or more attribute strings in `key=value` form.\n   */\n  useAttributes() {\n    const classValue = this.classAttributeValue;\n    this.classAttributeValue = undefined;\n    return classValue ? [`class=\"${classValue}\"`] : [];\n  }\n\n  /**\n   * Write raw HTML.\n   *\n   * @param {string} chunk The raw contents to write.\n   */\n  write(chunk) {\n    this.writeStream.write(chunk);\n  }\n\n  /**\n   * Write plain text, with HTML special characters escaped.\n   *\n   * @param {string} text The plain text to write.\n   */\n  text(text) {\n    this.write(escape(text));\n  }\n}\n\nclass ContentWriter extends Writer {\n  h(depth, text) {\n    const attributes = this.useAttributes();\n    this.write(`<h${depth} ${attributes.join(' ')}>${escape(text)}</h${depth}>`);\n  }\n\n  /**\n   * Create a table.\n   *\n   * @param {TableGenerator} generator Code to populate the table. Called synchronously.\n   */\n  table(generator) {\n    const attributes = this.useAttributes();\n    this.write(`<table ${attributes.join(' ')}>`);\n    generator(new TableWriter(this.writeStream));\n    this.write('</table>');\n  }\n}\n\n/**\n * Utility wrapping a writeable stream, offering methods to fluidly write an HTML document to it.\n */\nclass DocumentWriter extends ContentWriter {\n  constructor(properties, writeStream) {\n    super(writeStream);\n    this.properties = properties ?? {};\n    this.documentCalled = false;\n  }\n\n  /**\n   * Create the document.\n   * This method may only be called once.\n   *\n   * @param {ContentGenerator} generator Code to populate the document. Called synchronously.\n   */\n  document(generator) {\n    if (this.documentCalled) {\n      throw new Error('Only a single document may be written for a single writer instance.');\n    }\n    this.documentCalled = true;\n\n    this.write(`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <link href=\"tailwind.css\" rel=\"stylesheet\">\n          <title>${this.properties.title || 'Document'}</title>\n        </head>\n        <body>\n          <div class=\"my-1 mx-2\">\n    `);\n    generator(new ContentWriter(this.writeStream));\n    this.write(`\n          </div>\n        </body>\n      </html>\n    `);\n  }\n}\n\nclass TableWriter extends Writer {\n  /**\n   * Create a table row.\n   *\n   * @param {TableRowGenerator} generator Code to populate the table row. Called synchronously.\n   */\n  row(generator) {\n    generator(this.startRow());\n    this.finishRow();\n  }\n\n  /**\n   * Create a table row. The finishRow() method must be called after the row has been populated using the returned writer.\n   *\n   * @returns {TableRowWriter} The writer to be used to populate content for this row.\n   */\n  startRow() {\n    if (this.inTableRow) {\n      throw new Error('Already within startRow() for this TableWriter.');\n    }\n\n    const attributes = this.useAttributes();\n    this.write(`<tr ${attributes.join(' ')}>`);\n    this.inTableRow = true;\n    return new TableRowWriter(this.writeStream);\n  }\n\n  /**\n   * Finish a table row. This method must be called after a matching call to startRow().\n   */\n  finishRow() {\n    if (!this.inTableRow) {\n      throw new Error('Not seen startRow() for this TableWriter.');\n    }\n\n    this.write('</tr>');\n    this.inTableRow = false;\n  }\n}\n\nclass TableRowWriter extends Writer {\n  columnSpan(count) {\n    this.columnSpanAttributeValue = count;\n  }\n\n  useAttributes() {\n    const attributes = super.useAttributes();\n    const columnSpanValue = this.columnSpanAttributeValue;\n    this.columnSpanAttributeValue = undefined;\n    return columnSpanValue ? [`colspan=${columnSpanValue}`, ...attributes] : attributes;\n  }\n\n  /**\n   * Create a table cell.\n   *\n   * @param {ContentGenerator} generator Code to populate the table cell. Called synchronously.\n   */\n  cell(generator) {\n    const attributes = this.useAttributes();\n    this.write(`<td ${attributes.join(' ')}>`);\n    generator(new ContentWriter(this.writeStream));\n    this.write('</td>');\n  }\n}\n\nmodule.exports = {\n  DocumentWriter,\n  TableWriter,\n};\n","const {\n  isPropertyKey,\n  Properties,\n} = require('./sdk-node-properties');\n\nconst COMPLIANCE_KEY = 'compliance';\nconst VARIANTS_KEY = 'variants';\n\nclass Manifest {\n  constructor(manifest, canonicalFeatures) {\n    if (!(manifest instanceof Map)) {\n      throw new Error('manifest should be a Map.');\n    }\n    if (!(manifest.get(COMPLIANCE_KEY) instanceof Map)) {\n      throw new Error('manifest compliance should be a Map.');\n    }\n    assertFeatures(canonicalFeatures, [], manifest.get(COMPLIANCE_KEY));\n    this.manifest = manifest;\n  }\n\n  /**\n   * Locate a node indicating compliance with a particular feature.\n   *\n   * @param {string[]} featurePath The feature node names, from root, forming a path to the feature.\n   * @returns {Properties|undefined} The manifest's compliance node properties, or `undefined` if a node doesn't exist.\n   */\n  find(featurePath) {\n    let node = this.manifest.get(COMPLIANCE_KEY);\n    let notFound = false;\n    featurePath.forEach((featurePathComponent) => {\n      if (node) {\n        node = node.get(featurePathComponent);\n        if (node === undefined) {\n          notFound = true;\n        } else if (node !== null && !(node instanceof Map)) {\n          throw new Error(`manifest node with key '${featurePathComponent}' should be a Map but it is of type '${typeof node}'.`);\n        }\n      } else {\n        notFound = true;\n      }\n    });\n    if (notFound) {\n      return undefined; // not found\n    }\n    return new Properties(node);\n  }\n\n  /**\n   * Check whether a variants node property includes all canonically listed variants for this manifest.\n   *\n   * @param {string[]} variants The list of variants supported for a particular feature.\n   * @returns {boolean} `true` if only a subset of the canonically listed variants are included.\n   * @throws If the given variants list is of wrong type or empty, or there is no canonical list to refer to.\n   */\n  isPartialVariantsCoverage(variants) {\n    if (!Array.isArray(variants)) {\n      throw new Error('Expected an array (of strings).');\n    }\n    if (variants.length < 1) {\n      throw new Error('Expected a non-empty array (of strings).');\n    }\n    const canonicalVariants = this.manifest.get(VARIANTS_KEY);\n    if (!canonicalVariants || canonicalVariants.length < 1) {\n      throw new Error('There is not a non-empty list of canonical variants to refer to.');\n    }\n\n    let isPartial = false;\n    canonicalVariants.forEach((variant) => {\n      if (!variants.includes(variant)) {\n        isPartial = true;\n      }\n    });\n\n    return isPartial;\n  }\n}\n\n/**\n * Validates that all feature nodes in the manifest are listed in the canonical tree.\n *\n * @param {Map} canonicalNode The node in the canonical tree to inspect.\n * @param {string[]} path The path to this node, mainly for debugging errors but also to cap recursion depth.\n * @param {Map} manifestNode The node in the manifest to inspect.\n * @returns {number} The number of direct child nodes underlying manifestNode.\n * @throws If nodes aren't maps or if validation fails.\n */\nfunction assertFeatures(canonicalNode, path, manifestNode) {\n  if (path.length > 10) {\n    throw new Error('Depth has exceeded arbitrary limit.');\n  }\n  if (!(manifestNode instanceof Map)) {\n    throw new Error(`Manifest node is not a Map at path \"${path}\". Type is \"${typeof manifestNode}\", Stringified Value is \"${manifestNode}\".`);\n  }\n  if (!(canonicalNode instanceof Map) && canonicalNode !== null) {\n    throw new Error(`Canonical node is not a Map, or null, at path \"${path}\". Type is \"${typeof canonicalNode}\", Stringified Value is \"${canonicalNode}\".`);\n  }\n\n  let directChildCount = 0;\n  manifestNode.forEach((value, key) => {\n    if (!isPropertyKey(key)) {\n      const fullPath = [...path, key];\n      if (!(canonicalNode instanceof Map)) {\n        throw new Error(`Canonical node is not a Map at path \"${path}\". Type is \"${typeof canonicalNode}\", Stringified Value is \"${canonicalNode}\".`);\n      }\n      const canonicalValue = canonicalNode.get(key);\n      if (canonicalValue === undefined) {\n        throw new Error(`Canonical node not found for manifest node at path \"${fullPath}\".`);\n      }\n\n      // value will be null here where the key in the YAML document doesn't have an explicit value,\n      // typically a Map, Array or string. e.g. in the case of nullValue here:\n      //\n      // %YAML 1.2\n      // ---\n      // arrayValue:\n      //   - arrayElement\n      // nullValue:\n      // mapValue:\n      //   mapKey: mapValue\n      // stringValue: Hello World\n\n      let hasNoChildren = true;\n      if (value !== null) {\n        hasNoChildren = (assertFeatures(canonicalValue, fullPath, value) < 1);\n      }\n\n      const canonicalProperties = new Properties(canonicalValue);\n      if (hasNoChildren && canonicalProperties.isHeading) {\n        throw new Error(`Canonical node is a Header at path \"${fullPath}\", yet the manifest node has no children.`);\n      }\n\n      directChildCount += 1;\n    }\n  });\n\n  return directChildCount;\n}\n\nmodule.exports = {\n  Manifest,\n};\n","const { compareKeys } = require('./compare');\nconst { Manifest } = require('./manifest');\nconst { isPropertyKey, Properties } = require('./sdk-node-properties');\n\n/**\n * Abstract class (interface) implemented by users of {@link MatrixGenerator#generate}.\n *\n * Implementations of this protocol may be supplied in order to receive callbacks while inspecting the canonical feature\n * list alongside SDK manifests.\n *\n * @interface\n */\nclass MatrixConsumer {\n  /**\n   * Called first, upon encountering a feature, before any calls to {@link #onCompliance}.\n   *\n   * @param {string[]} parentKeys The names of the feature nodes forming the hierarchy above this feature node.\n   * @param {string} key The name of this feature node.\n   * @param {Properties} properties Of this feature node.\n   * @param {number} maximumLevel The maximum depth, previously measured or arbitrary.\n   */\n  // eslint-disable-next-line class-methods-use-this, no-unused-vars\n  onFeature(parentKeys, key, properties, maximumLevel) {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Called one or more times, once for each manifest, for each each feature.\n   *\n   * @param {Properties|undefined} compliance Of the manifest's compliance node, or `undefined` if compliance not indicated.\n   * @param {Manifest} manifest From which this compliance was deduced.\n   * @param {Properties} featureProperties Of the feature for which this compliance applies.\n   */\n  // eslint-disable-next-line class-methods-use-this, no-unused-vars\n  onCompliance(compliance, manifest, featureProperties) {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Called last, per feature, once all calls to {@link #onCompliance} have been completed for that feature.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  onFeatureFinished() {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Called when generating if a node was encountered which hasn't been processed. Implementors should log this\n   * information somewhere in case it is needed for debugging purposes.\n   *\n   * @param {number} level The depth within the hierarchy at which this feature node was found.\n   * @param {string} description Of this feature node.\n   */\n  // eslint-disable-next-line class-methods-use-this, no-unused-vars\n  onIgnoredNode(level, description) {\n    throw new Error('Not implemented.');\n  }\n}\n\n/**\n * A no-op implementation of MatrixConsumer.\n *\n * @implements {MatrixConsumer}\n */\nclass VoidConsumer extends MatrixConsumer {\n  // eslint-disable-next-line class-methods-use-this\n  onFeature() { }\n\n  // eslint-disable-next-line class-methods-use-this\n  onCompliance() { }\n\n  // eslint-disable-next-line class-methods-use-this\n  onFeatureFinished() { }\n\n  // eslint-disable-next-line class-methods-use-this\n  onIgnoredNode() { }\n}\n\nclass MatrixGenerator {\n  /**\n   * @param {Map} canonicalFeatureList The canonical feature list.\n   * @param {Manifest[]} manifests In the order they're to be explored for each feature.\n   */\n  constructor(canonicalFeatureList, manifests) {\n    this.canonicalFeatureList = canonicalFeatureList;\n    this.manifests = manifests;\n  }\n\n  /**\n   * Inspect the canonical tree from the root node, optionally calling the consumer as that exploration progresses.\n   *\n   * @param {number} maximumDepth The maximum depth, previously measured or arbitrary.\n   * @param {MatrixConsumer} [consumer] To be called during the exploration.\n   * @returns {number} The number of levels found.\n   */\n  generate(maximumDepth, consumer) {\n    return generateMatrix(\n      this.manifests,\n      consumer ?? new VoidConsumer(),\n      maximumDepth,\n      [],\n      this.canonicalFeatureList,\n    );\n  }\n}\n\n/**\n * Inspect a node, and it's children, optionally rendering to table rows.\n *\n * @param {Manifest[]} manifests In the order they're to be explored for each feature.\n * @param {MatrixConsumer} consumer Call during the generation process.\n * @param {number} maximumLevel The maximum depth, previously measured or arbitrary.\n * @param {string[]} parentKeys Parent keys, also indicating the depth of this node. Nodes at root have an empty array.\n * @param {*} node The canonical feature node.\n * @returns {number} The number of levels, including this node and its children.\n */\nfunction generateMatrix(manifests, consumer, maximumLevel, parentKeys, node) {\n  const level = parentKeys.length;\n  if (level > maximumLevel) {\n    throw new Error(`Maximum depth limit exceeded (${maximumLevel}).`);\n  }\n\n  let maximumDepth = 0;\n  if (node instanceof Map) {\n    const sortedKeys = Array.from(node.keys()).sort(compareKeys);\n    sortedKeys.forEach((key) => {\n      const value = node.get(key);\n      if (!isPropertyKey(key)) {\n        const properties = new Properties(value);\n\n        consumer.onFeature(parentKeys, key, properties, maximumLevel);\n        manifests.forEach((manifest) => {\n          const compliance = manifest.find([...parentKeys, key]);\n          consumer.onCompliance(compliance, manifest, properties);\n        });\n        consumer.onFeatureFinished();\n\n        const depth = generateMatrix(manifests, consumer, maximumLevel, [...parentKeys, key], value);\n        maximumDepth = Math.max(maximumDepth, 1 + depth);\n      }\n    });\n  } else if (Array.isArray(node)) {\n    node.forEach((element) => {\n      const depth = generateMatrix(manifests, consumer, maximumLevel, parentKeys, element);\n      maximumDepth = Math.max(maximumDepth, depth);\n    });\n  } else if (node instanceof String || typeof node === 'string') {\n    if (consumer) {\n      consumer.onIgnoredNode(level, `${node}`);\n    }\n    maximumDepth = 1;\n  } else if (node === null) {\n    // the value for a key with no value defined\n  } else if (consumer) {\n    // informational only, while debugging\n    consumer.onIgnoredNode(level, `${typeof node} = ${node}`);\n  }\n\n  return maximumDepth;\n}\n\nmodule.exports = {\n  MatrixGenerator,\n  MatrixConsumer,\n};\n","const escape = require('escape-html');\n\nconst {\n  IDENTITY_TRANSFORM,\n  transformPath,\n  transformString,\n  transformStrings,\n} = require('./transform');\n\nconst isPropertyKey = (key) => key.startsWith('.');\nconst propertyKeyName = (key) => key.substring(1);\n\nconst specificationPointRegExp = /^[A-Z]{1,3}[1-9]\\d*([a-z]((([1-9]\\d*)?[a-z])?([1-9]\\d*)?)?)?$/;\n\nclass SpecificationPoint {\n  constructor(value) {\n    if (!specificationPointRegExp.test(value)) {\n      throw new Error(`Value '${value}' is not formatted like a specification point.`);\n    }\n    this.value = value;\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  toHtmlLink() {\n    const url = `https://sdk.ably.com/builds/ably/specification/main/features/#${this.value}`;\n    return `<a href=\"${url}\" target=\"_blank\" rel=\"noopener\"><code>${escape(this.value)}</code></a>`;\n  }\n}\n\nclass Properties {\n  constructor(node) {\n    if (!(node instanceof Map)) {\n      return; // nothing to be extracted\n    }\n    node.forEach((value, key) => {\n      if (isPropertyKey(key)) {\n        const name = propertyKeyName(key);\n        switch (name) {\n          case 'caveats':\n            // used in the canonical features list\n            this.caveats = transformString(value, IDENTITY_TRANSFORM);\n            break;\n\n          case 'class':\n            // used in the canonical features list\n            if (transformString(value, IDENTITY_TRANSFORM) !== 'Heading') {\n              throw new Error(\"Class value is not recognised, expected 'Heading'.\");\n            }\n            this.isHeading = true;\n            break;\n\n          case 'documentation':\n            // used in the canonical features list\n            this.documentationUrls = transformStrings(value, (stringValue) => new URL(stringValue));\n            break;\n\n          case 'requires':\n            // used in the canonical features list\n            this.requires = transformStrings(value, transformPath);\n            break;\n\n          case 'specification':\n            // used in the canonical features list\n            this.specificationPoints = transformStrings(value, (stringValue) => new SpecificationPoint(stringValue));\n            break;\n\n          case 'synopsis':\n            // used in the canonical features list\n            this.synopsis = transformString(value, IDENTITY_TRANSFORM);\n            break;\n\n          case 'variants':\n            // used in the SDK manifests\n            this.variants = transformStrings(value, IDENTITY_TRANSFORM);\n            break;\n\n          default:\n            throw new Error(`Property key '${name}' is not recognised.`);\n        }\n      }\n    });\n  }\n}\n\nmodule.exports = {\n  isPropertyKey,\n  Properties,\n  SpecificationPoint,\n};\n","const IDENTITY_TRANSFORM = (value) => value;\n\nconst isString = (value) => value instanceof String || typeof value === 'string';\n\n/**\n * Callback transforming a string.\n *\n * @callback StringTransformer\n * @param {string} value The string to be transformed.\n * @returns {*} The result of transforming the string.\n */\n\n/**\n * Creates a new array populated with one or more strings, each representing a segment of a path.\n *\n * @param {string} value A single string, representing a path, with segments delimited by ': '.\n * @returns {string[]} The path segments. Will never have zero length.\n * @throws If the provided value was not a string or could not be parsed as path segments.\n */\nfunction transformPath(value) {\n  if (!isString(value)) {\n    throw new Error(`Encountered value of type '${typeof value}' (${value}) when expecting a string path.`);\n  }\n\n  const segments = value.split(': ');\n  segments.forEach((segment, segmentIndex) => {\n    const errorContext = () => `in segment #${segmentIndex} '${segment}' when parsing path value '${value}'.`;\n    const trimmed = segment.trim();\n    if (trimmed.length < 1) {\n      throw new Error('Empty or whitespace-only'.concat(errorContext()));\n    }\n    if (trimmed !== segment) {\n      throw new Error('Spurious leading or trailing whitespace'.concat(errorContext()));\n    }\n    if (segment.includes(':')) {\n      throw new Error(\"Illegal character ':'\".concat(errorContext()));\n    }\n  });\n\n  return segments;\n}\n\n/**\n * Creates a new array populated with the results of calling a provided function with one\n * or more string values.\n *\n * Supported Translations:\n * - string => [string]\n * - [string1, string2] => [string1, string2]\n *\n * @param {string|string[]} value A single string, or an array of strings.\n * @param {StringTransformer} transformer A function to be called with each string.\n * @returns {*[]} The results of transforming the string(s).\n * @throws If no values were provided or some values were not strings.\n */\nfunction transformStrings(value, transformer) {\n  if (value === null || value === undefined) {\n    throw new Error('The value may not be null or undefined.');\n  }\n  const array = Array.isArray(value) ? value : [value];\n  if (array.length < 1) {\n    throw new Error('No values to transform.');\n  }\n  return array.map((element) => transformString(element, transformer));\n}\n\n/**\n * Returns the result of calling a provided function with a string value.\n *\n * @param {string} value A single string.\n * @param {StringTransformer} transformer A function to be called with the string.\n * @returns {*} The result of transforming the string.\n * @throws If the value provided is not a string.\n */\nfunction transformString(value, transformer) {\n  if (isString(value)) {\n    return transformer(value);\n  }\n  throw new Error(`Encountered '${typeof value}' (${value}) when expecting a string.`);\n}\n\nmodule.exports = {\n  IDENTITY_TRANSFORM,\n  transformPath,\n  transformStrings,\n  transformString,\n  isString,\n};\n","const { compareKeys } = require('./compare');\n\n/**\n * Inspects YAML AST to ensure source constraints are met (e.g. ordered keys).\n * Used as our First Parse: using YAML's mid-level API, rendering a graph of the YAML structure,\n * and then running some of our checks over that structure to check foundational requirements.\n *\n * @param {*} astNode The YAML AST node.\n * @param {string[]} parentKeys Parent keys, also indicating the depth of this node. Nodes at root have an empty array.\n */\nfunction validateStructure(astNode, parentKeys = []) {\n  if (astNode === undefined || astNode === null) {\n    throw new Error(`Unexpected - astNode value cannot be undefined or null at \"${parentKeys}\".`);\n  }\n  if (parentKeys.length > 20) {\n    throw new Error('Recursion depth exceeded arbitrary limit.');\n  }\n\n  const nodeType = astNode.type;\n  let arrayIndex = 0;\n  switch (nodeType) {\n    case 'MAP':\n      validateMapItems(astNode.items, parentKeys);\n      break;\n\n    case 'FLOW_SEQ':\n    case 'SEQ':\n      astNode.items.forEach((item) => {\n        validateStructure(item, [...parentKeys, `${arrayIndex}`]);\n        arrayIndex += 1;\n      });\n      break;\n\n    case 'PLAIN':\n    case 'BLOCK_LITERAL':\n    case 'QUOTE_SINGLE':\n      break;\n\n    default:\n      throw new Error(`Unhandled YAML AST node type \"${nodeType}\".`);\n  }\n}\n\n/**\n * Inspects items of YAML AST map to ensure source constraints are met.\n *\n * @param {*[]} items The YAML AST 'MAP' node items.\n * @param {string[]} parentKeys Parent keys, also indicating the depth of this node. Nodes at root have an empty array.\n */\nfunction validateMapItems(items, parentKeys) {\n  let previousKeyValue;\n  items.forEach((item) => {\n    if (item.type !== 'PAIR') {\n      throw new Error('Map items should be pairs.');\n    }\n\n    const { key, value } = item;\n    if (key.type !== 'PLAIN') {\n      throw new Error('Map keys must be plain scalars.');\n    }\n    const keyValue = key.value;\n\n    if (previousKeyValue && compareKeys(keyValue, previousKeyValue) < 0) {\n      throw new Error(`Keys not sorted (\"${keyValue}\" should not be after \"${previousKeyValue}\").`);\n    }\n    previousKeyValue = keyValue;\n\n    // It is normal for `value` to be `null` here, where the map key is 'hanging' in the YAML - e.g. in the case of the\n    // 'Hanging Parent Key' in this snippet:\n    //\n    // ```yaml\n    // Some Parent Key:\n    //   Hanging Parent Key:\n    //   Some Other Key that Does have a Value: Hello World\n    // ```\n    //\n    // The hanging key represents that there is intended to be a node at this location in the tree, but that there is\n    // no additional information to convey about this node - above and beyond its name (the key).\n    if (value !== null) {\n      validateStructure(value, [...parentKeys, key]);\n    }\n  });\n}\n\nmodule.exports = {\n  validateStructure,\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));\n    }\n    command_1.issueCommand('set-env', { name }, convertedVal);\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueFileCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    if (options && options.trimWhitespace === false) {\n        return inputs;\n    }\n    return inputs.map(input => input.trim());\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    const filePath = process.env['GITHUB_OUTPUT'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));\n    }\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    const filePath = process.env['GITHUB_STATE'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));\n    }\n    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n/**\n * Summary exports\n */\nvar summary_1 = require(\"./summary\");\nObject.defineProperty(exports, \"summary\", { enumerable: true, get: function () { return summary_1.summary; } });\n/**\n * @deprecated use core.summary\n */\nvar summary_2 = require(\"./summary\");\nObject.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function () { return summary_2.markdownSummary; } });\n/**\n * Path exports\n */\nvar path_utils_1 = require(\"./path-utils\");\nObject.defineProperty(exports, \"toPosixPath\", { enumerable: true, get: function () { return path_utils_1.toPosixPath; } });\nObject.defineProperty(exports, \"toWin32Path\", { enumerable: true, get: function () { return path_utils_1.toWin32Path; } });\nObject.defineProperty(exports, \"toPlatformPath\", { enumerable: true, get: function () { return path_utils_1.toPlatformPath; } });\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareKeyValueMessage = exports.issueFileCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst uuid_1 = require(\"uuid\");\nconst utils_1 = require(\"./utils\");\nfunction issueFileCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueFileCommand = issueFileCommand;\nfunction prepareKeyValueMessage(key, value) {\n    const delimiter = `ghadelimiter_${uuid_1.v4()}`;\n    const convertedValue = utils_1.toCommandValue(value);\n    // These should realistically never happen, but just in case someone finds a\n    // way to exploit uuid generation let's not allow keys or values that contain\n    // the delimiter.\n    if (key.includes(delimiter)) {\n        throw new Error(`Unexpected input: name should not contain the delimiter \"${delimiter}\"`);\n    }\n    if (convertedValue.includes(delimiter)) {\n        throw new Error(`Unexpected input: value should not contain the delimiter \"${delimiter}\"`);\n    }\n    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;\n}\nexports.prepareKeyValueMessage = prepareKeyValueMessage;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/lib/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;\nconst path = __importStar(require(\"path\"));\n/**\n * toPosixPath converts the given path to the posix form. On Windows, \\\\ will be\n * replaced with /.\n *\n * @param pth. Path to transform.\n * @return string Posix path.\n */\nfunction toPosixPath(pth) {\n    return pth.replace(/[\\\\]/g, '/');\n}\nexports.toPosixPath = toPosixPath;\n/**\n * toWin32Path converts the given path to the win32 form. On Linux, / will be\n * replaced with \\\\.\n *\n * @param pth. Path to transform.\n * @return string Win32 path.\n */\nfunction toWin32Path(pth) {\n    return pth.replace(/[/]/g, '\\\\');\n}\nexports.toWin32Path = toWin32Path;\n/**\n * toPlatformPath converts the given path to a platform-specific path. It does\n * this by replacing instances of / and \\ with the platform-specific path\n * separator.\n *\n * @param pth The path to platformize.\n * @return string The platform-specific path.\n */\nfunction toPlatformPath(pth) {\n    return pth.replace(/[/\\\\]/g, path.sep);\n}\nexports.toPlatformPath = toPlatformPath;\n//# sourceMappingURL=path-utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;\nconst os_1 = require(\"os\");\nconst fs_1 = require(\"fs\");\nconst { access, appendFile, writeFile } = fs_1.promises;\nexports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';\nexports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';\nclass Summary {\n    constructor() {\n        this._buffer = '';\n    }\n    /**\n     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist\n     * Also checks r/w permissions.\n     *\n     * @returns step summary file path\n     */\n    filePath() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._filePath) {\n                return this._filePath;\n            }\n            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n            if (!pathFromEnv) {\n                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n            }\n            try {\n                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n            }\n            catch (_a) {\n                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n            }\n            this._filePath = pathFromEnv;\n            return this._filePath;\n        });\n    }\n    /**\n     * Wraps content in an HTML tag, adding any HTML attributes\n     *\n     * @param {string} tag HTML tag to wrap\n     * @param {string | null} content content within the tag\n     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add\n     *\n     * @returns {string} content wrapped in HTML element\n     */\n    wrap(tag, content, attrs = {}) {\n        const htmlAttrs = Object.entries(attrs)\n            .map(([key, value]) => ` ${key}=\"${value}\"`)\n            .join('');\n        if (!content) {\n            return `<${tag}${htmlAttrs}>`;\n        }\n        return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    /**\n     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.\n     *\n     * @param {SummaryWriteOptions} [options] (optional) options for write operation\n     *\n     * @returns {Promise<Summary>} summary instance\n     */\n    write(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);\n            const filePath = yield this.filePath();\n            const writeFunc = overwrite ? writeFile : appendFile;\n            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });\n            return this.emptyBuffer();\n        });\n    }\n    /**\n     * Clears the summary buffer and wipes the summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.emptyBuffer().write({ overwrite: true });\n        });\n    }\n    /**\n     * Returns the current summary buffer as a string\n     *\n     * @returns {string} string of summary buffer\n     */\n    stringify() {\n        return this._buffer;\n    }\n    /**\n     * If the summary buffer is empty\n     *\n     * @returns {boolen} true if the buffer is empty\n     */\n    isEmptyBuffer() {\n        return this._buffer.length === 0;\n    }\n    /**\n     * Resets the summary buffer without writing to summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    emptyBuffer() {\n        this._buffer = '';\n        return this;\n    }\n    /**\n     * Adds raw text to the summary buffer\n     *\n     * @param {string} text content to add\n     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addRaw(text, addEOL = false) {\n        this._buffer += text;\n        return addEOL ? this.addEOL() : this;\n    }\n    /**\n     * Adds the operating system-specific end-of-line marker to the buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addEOL() {\n        return this.addRaw(os_1.EOL);\n    }\n    /**\n     * Adds an HTML codeblock to the summary buffer\n     *\n     * @param {string} code content to render within fenced code block\n     * @param {string} lang (optional) language to syntax highlight code\n     *\n     * @returns {Summary} summary instance\n     */\n    addCodeBlock(code, lang) {\n        const attrs = Object.assign({}, (lang && { lang }));\n        const element = this.wrap('pre', this.wrap('code', code), attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML list to the summary buffer\n     *\n     * @param {string[]} items list of items to render\n     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addList(items, ordered = false) {\n        const tag = ordered ? 'ol' : 'ul';\n        const listItems = items.map(item => this.wrap('li', item)).join('');\n        const element = this.wrap(tag, listItems);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML table to the summary buffer\n     *\n     * @param {SummaryTableCell[]} rows table rows\n     *\n     * @returns {Summary} summary instance\n     */\n    addTable(rows) {\n        const tableBody = rows\n            .map(row => {\n            const cells = row\n                .map(cell => {\n                if (typeof cell === 'string') {\n                    return this.wrap('td', cell);\n                }\n                const { header, data, colspan, rowspan } = cell;\n                const tag = header ? 'th' : 'td';\n                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));\n                return this.wrap(tag, data, attrs);\n            })\n                .join('');\n            return this.wrap('tr', cells);\n        })\n            .join('');\n        const element = this.wrap('table', tableBody);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds a collapsable HTML details element to the summary buffer\n     *\n     * @param {string} label text for the closed state\n     * @param {string} content collapsable content\n     *\n     * @returns {Summary} summary instance\n     */\n    addDetails(label, content) {\n        const element = this.wrap('details', this.wrap('summary', label) + content);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML image tag to the summary buffer\n     *\n     * @param {string} src path to the image you to embed\n     * @param {string} alt text description of the image\n     * @param {SummaryImageOptions} options (optional) addition image attributes\n     *\n     * @returns {Summary} summary instance\n     */\n    addImage(src, alt, options) {\n        const { width, height } = options || {};\n        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));\n        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML section heading element\n     *\n     * @param {string} text heading text\n     * @param {number | string} [level=1] (optional) the heading level, default: 1\n     *\n     * @returns {Summary} summary instance\n     */\n    addHeading(text, level) {\n        const tag = `h${level}`;\n        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)\n            ? tag\n            : 'h1';\n        const element = this.wrap(allowedTag, text);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML thematic break (<hr>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addSeparator() {\n        const element = this.wrap('hr', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML line break (<br>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addBreak() {\n        const element = this.wrap('br', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML blockquote to the summary buffer\n     *\n     * @param {string} text quote text\n     * @param {string} cite (optional) citation url\n     *\n     * @returns {Summary} summary instance\n     */\n    addQuote(text, cite) {\n        const attrs = Object.assign({}, (cite && { cite }));\n        const element = this.wrap('blockquote', text, attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML anchor tag to the summary buffer\n     *\n     * @param {string} text link text/content\n     * @param {string} href hyperlink\n     *\n     * @returns {Summary} summary instance\n     */\n    addLink(text, href) {\n        const element = this.wrap('a', text, { href });\n        return this.addRaw(element).addEOL();\n    }\n}\nconst _summary = new Summary();\n/**\n * @deprecated use `core.summary`\n */\nexports.markdownSummary = _summary;\nexports.summary = _summary;\n//# sourceMappingURL=summary.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n//# sourceMappingURL=auth.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nconst pm = __importStar(require(\"./proxy\"));\nconst tunnel = __importStar(require(\"tunnel\"));\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let output = Buffer.alloc(0);\n                this.message.on('data', (chunk) => {\n                    output = Buffer.concat([output, chunk]);\n                });\n                this.message.on('end', () => {\n                    resolve(output.toString());\n                });\n            }));\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    const parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    get(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('GET', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    del(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('POST', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PUT', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    head(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request(verb, requestUrl, stream, additionalHeaders);\n        });\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    getJson(requestUrl, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            const res = yield this.get(requestUrl, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    postJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.post(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    putJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.put(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    patchJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.patch(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    request(verb, requestUrl, data, headers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                throw new Error('Client has already been disposed.');\n            }\n            const parsedUrl = new URL(requestUrl);\n            let info = this._prepareRequest(verb, parsedUrl, headers);\n            // Only perform retries on reads since writes may not be idempotent.\n            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)\n                ? this._maxRetries + 1\n                : 1;\n            let numTries = 0;\n            let response;\n            do {\n                response = yield this.requestRaw(info, data);\n                // Check if it's an authentication challenge\n                if (response &&\n                    response.message &&\n                    response.message.statusCode === HttpCodes.Unauthorized) {\n                    let authenticationHandler;\n                    for (const handler of this.handlers) {\n                        if (handler.canHandleAuthentication(response)) {\n                            authenticationHandler = handler;\n                            break;\n                        }\n                    }\n                    if (authenticationHandler) {\n                        return authenticationHandler.handleAuthentication(this, info, data);\n                    }\n                    else {\n                        // We have received an unauthorized response but have no handlers to handle it.\n                        // Let the response return to the caller.\n                        return response;\n                    }\n                }\n                let redirectsRemaining = this._maxRedirects;\n                while (response.message.statusCode &&\n                    HttpRedirectCodes.includes(response.message.statusCode) &&\n                    this._allowRedirects &&\n                    redirectsRemaining > 0) {\n                    const redirectUrl = response.message.headers['location'];\n                    if (!redirectUrl) {\n                        // if there's no location to redirect to, we won't\n                        break;\n                    }\n                    const parsedRedirectUrl = new URL(redirectUrl);\n                    if (parsedUrl.protocol === 'https:' &&\n                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&\n                        !this._allowRedirectDowngrade) {\n                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                    }\n                    // we need to finish reading the response before reassigning response\n                    // which will leak the open socket.\n                    yield response.readBody();\n                    // strip authorization header if redirected to a different hostname\n                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                        for (const header in headers) {\n                            // header names are case insensitive\n                            if (header.toLowerCase() === 'authorization') {\n                                delete headers[header];\n                            }\n                        }\n                    }\n                    // let's make the request with the new redirectUrl\n                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                    response = yield this.requestRaw(info, data);\n                    redirectsRemaining--;\n                }\n                if (!response.message.statusCode ||\n                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {\n                    // If not a retry code, return immediately instead of retrying\n                    return response;\n                }\n                numTries += 1;\n                if (numTries < maxTries) {\n                    yield response.readBody();\n                    yield this._performExponentialBackoff(numTries);\n                }\n            } while (numTries < maxTries);\n            return response;\n        });\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                function callbackForResult(err, res) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else if (!res) {\n                        // If `err` is not passed, then `res` must be passed.\n                        reject(new Error('Unknown error'));\n                    }\n                    else {\n                        resolve(res);\n                    }\n                }\n                this.requestRawWithCallback(info, data, callbackForResult);\n            });\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        if (typeof data === 'string') {\n            if (!info.options.headers) {\n                info.options.headers = {};\n            }\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        function handleResult(err, res) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        }\n        const req = info.httpModule.request(info.options, (msg) => {\n            const res = new HttpClientResponse(msg);\n            handleResult(undefined, res);\n        });\n        let socket;\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error(`Request timeout: ${info.options.path}`));\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        const parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            for (const handler of this.handlers) {\n                handler.prepareRequest(info.options);\n            }\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        const proxyUrl = pm.getProxyUrl(parsedUrl);\n        const useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.\n        if (proxyUrl && proxyUrl.hostname) {\n            const agentOptions = {\n                maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                })), { host: proxyUrl.hostname, port: proxyUrl.port })\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        return __awaiter(this, void 0, void 0, function* () {\n            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n            return new Promise(resolve => setTimeout(() => resolve(), ms));\n        });\n    }\n    _processResponse(res, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                const statusCode = res.message.statusCode || 0;\n                const response = {\n                    statusCode,\n                    result: null,\n                    headers: {}\n                };\n                // not found leads to null obj returned\n                if (statusCode === HttpCodes.NotFound) {\n                    resolve(response);\n                }\n                // get the result from the body\n                function dateTimeDeserializer(key, value) {\n                    if (typeof value === 'string') {\n                        const a = new Date(value);\n                        if (!isNaN(a.valueOf())) {\n                            return a;\n                        }\n                    }\n                    return value;\n                }\n                let obj;\n                let contents;\n                try {\n                    contents = yield res.readBody();\n                    if (contents && contents.length > 0) {\n                        if (options && options.deserializeDates) {\n                            obj = JSON.parse(contents, dateTimeDeserializer);\n                        }\n                        else {\n                            obj = JSON.parse(contents);\n                        }\n                        response.result = obj;\n                    }\n                    response.headers = res.message.headers;\n                }\n                catch (err) {\n                    // Invalid resource (contents not json);  leaving result obj null\n                }\n                // note that 3xx redirects are handled by the http layer.\n                if (statusCode > 299) {\n                    let msg;\n                    // if exception/error in body, attempt to get better error\n                    if (obj && obj.message) {\n                        msg = obj.message;\n                    }\n                    else if (contents && contents.length > 0) {\n                        // it may be the case that the exception is in the body message as string\n                        msg = contents;\n                    }\n                    else {\n                        msg = `Failed request: (${statusCode})`;\n                    }\n                    const err = new HttpClientError(msg, statusCode);\n                    err.result = response.result;\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }));\n        });\n    }\n}\nexports.HttpClient = HttpClient;\nconst lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkBypass = exports.getProxyUrl = void 0;\nfunction getProxyUrl(reqUrl) {\n    const usingSsl = reqUrl.protocol === 'https:';\n    if (checkBypass(reqUrl)) {\n        return undefined;\n    }\n    const proxyVar = (() => {\n        if (usingSsl) {\n            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n        }\n        else {\n            return process.env['http_proxy'] || process.env['HTTP_PROXY'];\n        }\n    })();\n    if (proxyVar) {\n        return new URL(proxyVar);\n    }\n    else {\n        return undefined;\n    }\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    const upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (const upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n//# sourceMappingURL=proxy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nexports.FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    stat: fs.stat,\n    lstatSync: fs.lstatSync,\n    statSync: fs.statSync,\n    readdir: fs.readdir,\n    readdirSync: fs.readdirSync\n};\nfunction createFileSystemAdapter(fsMethods) {\n    if (fsMethods === undefined) {\n        return exports.FILE_SYSTEM_ADAPTER;\n    }\n    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n}\nexports.createFileSystemAdapter = createFileSystemAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;\nconst NODE_PROCESS_VERSION_PARTS = process.versions.node.split('.');\nif (NODE_PROCESS_VERSION_PARTS[0] === undefined || NODE_PROCESS_VERSION_PARTS[1] === undefined) {\n    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);\n}\nconst MAJOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[0], 10);\nconst MINOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[1], 10);\nconst SUPPORTED_MAJOR_VERSION = 10;\nconst SUPPORTED_MINOR_VERSION = 10;\nconst IS_MATCHED_BY_MAJOR = MAJOR_VERSION > SUPPORTED_MAJOR_VERSION;\nconst IS_MATCHED_BY_MAJOR_AND_MINOR = MAJOR_VERSION === SUPPORTED_MAJOR_VERSION && MINOR_VERSION >= SUPPORTED_MINOR_VERSION;\n/**\n * IS `true` for Node.js 10.10 and greater.\n */\nexports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = IS_MATCHED_BY_MAJOR || IS_MATCHED_BY_MAJOR_AND_MINOR;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Settings = exports.scandirSync = exports.scandir = void 0;\nconst async = require(\"./providers/async\");\nconst sync = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction scandir(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async.read(path, getSettings(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);\n}\nexports.scandir = scandir;\nfunction scandirSync(path, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    return sync.read(path, settings);\n}\nexports.scandirSync = scandirSync;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readdir = exports.readdirWithFileTypes = exports.read = void 0;\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst rpl = require(\"run-parallel\");\nconst constants_1 = require(\"../constants\");\nconst utils = require(\"../utils\");\nconst common = require(\"./common\");\nfunction read(directory, settings, callback) {\n    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        readdirWithFileTypes(directory, settings, callback);\n        return;\n    }\n    readdir(directory, settings, callback);\n}\nexports.read = read;\nfunction readdirWithFileTypes(directory, settings, callback) {\n    settings.fs.readdir(directory, { withFileTypes: true }, (readdirError, dirents) => {\n        if (readdirError !== null) {\n            callFailureCallback(callback, readdirError);\n            return;\n        }\n        const entries = dirents.map((dirent) => ({\n            dirent,\n            name: dirent.name,\n            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        }));\n        if (!settings.followSymbolicLinks) {\n            callSuccessCallback(callback, entries);\n            return;\n        }\n        const tasks = entries.map((entry) => makeRplTaskEntry(entry, settings));\n        rpl(tasks, (rplError, rplEntries) => {\n            if (rplError !== null) {\n                callFailureCallback(callback, rplError);\n                return;\n            }\n            callSuccessCallback(callback, rplEntries);\n        });\n    });\n}\nexports.readdirWithFileTypes = readdirWithFileTypes;\nfunction makeRplTaskEntry(entry, settings) {\n    return (done) => {\n        if (!entry.dirent.isSymbolicLink()) {\n            done(null, entry);\n            return;\n        }\n        settings.fs.stat(entry.path, (statError, stats) => {\n            if (statError !== null) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    done(statError);\n                    return;\n                }\n                done(null, entry);\n                return;\n            }\n            entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);\n            done(null, entry);\n        });\n    };\n}\nfunction readdir(directory, settings, callback) {\n    settings.fs.readdir(directory, (readdirError, names) => {\n        if (readdirError !== null) {\n            callFailureCallback(callback, readdirError);\n            return;\n        }\n        const tasks = names.map((name) => {\n            const path = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n            return (done) => {\n                fsStat.stat(path, settings.fsStatSettings, (error, stats) => {\n                    if (error !== null) {\n                        done(error);\n                        return;\n                    }\n                    const entry = {\n                        name,\n                        path,\n                        dirent: utils.fs.createDirentFromStats(name, stats)\n                    };\n                    if (settings.stats) {\n                        entry.stats = stats;\n                    }\n                    done(null, entry);\n                });\n            };\n        });\n        rpl(tasks, (rplError, entries) => {\n            if (rplError !== null) {\n                callFailureCallback(callback, rplError);\n                return;\n            }\n            callSuccessCallback(callback, entries);\n        });\n    });\n}\nexports.readdir = readdir;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, result) {\n    callback(null, result);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPathSegments = void 0;\nfunction joinPathSegments(a, b, separator) {\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\nexports.joinPathSegments = joinPathSegments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readdir = exports.readdirWithFileTypes = exports.read = void 0;\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst constants_1 = require(\"../constants\");\nconst utils = require(\"../utils\");\nconst common = require(\"./common\");\nfunction read(directory, settings) {\n    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        return readdirWithFileTypes(directory, settings);\n    }\n    return readdir(directory, settings);\n}\nexports.read = read;\nfunction readdirWithFileTypes(directory, settings) {\n    const dirents = settings.fs.readdirSync(directory, { withFileTypes: true });\n    return dirents.map((dirent) => {\n        const entry = {\n            dirent,\n            name: dirent.name,\n            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        };\n        if (entry.dirent.isSymbolicLink() && settings.followSymbolicLinks) {\n            try {\n                const stats = settings.fs.statSync(entry.path);\n                entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);\n            }\n            catch (error) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    throw error;\n                }\n            }\n        }\n        return entry;\n    });\n}\nexports.readdirWithFileTypes = readdirWithFileTypes;\nfunction readdir(directory, settings) {\n    const names = settings.fs.readdirSync(directory);\n    return names.map((name) => {\n        const entryPath = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n        const stats = fsStat.statSync(entryPath, settings.fsStatSettings);\n        const entry = {\n            name,\n            path: entryPath,\n            dirent: utils.fs.createDirentFromStats(name, stats)\n        };\n        if (settings.stats) {\n            entry.stats = stats;\n        }\n        return entry;\n    });\n}\nexports.readdir = readdir;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst fs = require(\"./adapters/fs\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, false);\n        this.fs = fs.createFileSystemAdapter(this._options.fs);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n        this.stats = this._getValue(this._options.stats, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n        this.fsStatSettings = new fsStat.Settings({\n            followSymbolicLink: this.followSymbolicLinks,\n            fs: this.fs,\n            throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDirentFromStats = void 0;\nclass DirentFromStats {\n    constructor(name, stats) {\n        this.name = name;\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\n        this.isDirectory = stats.isDirectory.bind(stats);\n        this.isFIFO = stats.isFIFO.bind(stats);\n        this.isFile = stats.isFile.bind(stats);\n        this.isSocket = stats.isSocket.bind(stats);\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\n    }\n}\nfunction createDirentFromStats(name, stats) {\n    return new DirentFromStats(name, stats);\n}\nexports.createDirentFromStats = createDirentFromStats;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fs = void 0;\nconst fs = require(\"./fs\");\nexports.fs = fs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nexports.FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    stat: fs.stat,\n    lstatSync: fs.lstatSync,\n    statSync: fs.statSync\n};\nfunction createFileSystemAdapter(fsMethods) {\n    if (fsMethods === undefined) {\n        return exports.FILE_SYSTEM_ADAPTER;\n    }\n    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n}\nexports.createFileSystemAdapter = createFileSystemAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.statSync = exports.stat = exports.Settings = void 0;\nconst async = require(\"./providers/async\");\nconst sync = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction stat(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async.read(path, getSettings(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);\n}\nexports.stat = stat;\nfunction statSync(path, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    return sync.read(path, settings);\n}\nexports.statSync = statSync;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nfunction read(path, settings, callback) {\n    settings.fs.lstat(path, (lstatError, lstat) => {\n        if (lstatError !== null) {\n            callFailureCallback(callback, lstatError);\n            return;\n        }\n        if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n            callSuccessCallback(callback, lstat);\n            return;\n        }\n        settings.fs.stat(path, (statError, stat) => {\n            if (statError !== null) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    callFailureCallback(callback, statError);\n                    return;\n                }\n                callSuccessCallback(callback, lstat);\n                return;\n            }\n            if (settings.markSymbolicLink) {\n                stat.isSymbolicLink = () => true;\n            }\n            callSuccessCallback(callback, stat);\n        });\n    });\n}\nexports.read = read;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, result) {\n    callback(null, result);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nfunction read(path, settings) {\n    const lstat = settings.fs.lstatSync(path);\n    if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n        return lstat;\n    }\n    try {\n        const stat = settings.fs.statSync(path);\n        if (settings.markSymbolicLink) {\n            stat.isSymbolicLink = () => true;\n        }\n        return stat;\n    }\n    catch (error) {\n        if (!settings.throwErrorOnBrokenSymbolicLink) {\n            return lstat;\n        }\n        throw error;\n    }\n}\nexports.read = read;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"./adapters/fs\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLink = this._getValue(this._options.followSymbolicLink, true);\n        this.fs = fs.createFileSystemAdapter(this._options.fs);\n        this.markSymbolicLink = this._getValue(this._options.markSymbolicLink, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Settings = exports.walkStream = exports.walkSync = exports.walk = void 0;\nconst async_1 = require(\"./providers/async\");\nconst stream_1 = require(\"./providers/stream\");\nconst sync_1 = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction walk(directory, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        new async_1.default(directory, getSettings()).read(optionsOrSettingsOrCallback);\n        return;\n    }\n    new async_1.default(directory, getSettings(optionsOrSettingsOrCallback)).read(callback);\n}\nexports.walk = walk;\nfunction walkSync(directory, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    const provider = new sync_1.default(directory, settings);\n    return provider.read();\n}\nexports.walkSync = walkSync;\nfunction walkStream(directory, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    const provider = new stream_1.default(directory, settings);\n    return provider.read();\n}\nexports.walkStream = walkStream;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst async_1 = require(\"../readers/async\");\nclass AsyncProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1.default(this._root, this._settings);\n        this._storage = [];\n    }\n    read(callback) {\n        this._reader.onError((error) => {\n            callFailureCallback(callback, error);\n        });\n        this._reader.onEntry((entry) => {\n            this._storage.push(entry);\n        });\n        this._reader.onEnd(() => {\n            callSuccessCallback(callback, this._storage);\n        });\n        this._reader.read();\n    }\n}\nexports.default = AsyncProvider;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, entries) {\n    callback(null, entries);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nconst async_1 = require(\"../readers/async\");\nclass StreamProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1.default(this._root, this._settings);\n        this._stream = new stream_1.Readable({\n            objectMode: true,\n            read: () => { },\n            destroy: () => {\n                if (!this._reader.isDestroyed) {\n                    this._reader.destroy();\n                }\n            }\n        });\n    }\n    read() {\n        this._reader.onError((error) => {\n            this._stream.emit('error', error);\n        });\n        this._reader.onEntry((entry) => {\n            this._stream.push(entry);\n        });\n        this._reader.onEnd(() => {\n            this._stream.push(null);\n        });\n        this._reader.read();\n        return this._stream;\n    }\n}\nexports.default = StreamProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sync_1 = require(\"../readers/sync\");\nclass SyncProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new sync_1.default(this._root, this._settings);\n    }\n    read() {\n        return this._reader.read();\n    }\n}\nexports.default = SyncProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nconst fastq = require(\"fastq\");\nconst common = require(\"./common\");\nconst reader_1 = require(\"./reader\");\nclass AsyncReader extends reader_1.default {\n    constructor(_root, _settings) {\n        super(_root, _settings);\n        this._settings = _settings;\n        this._scandir = fsScandir.scandir;\n        this._emitter = new events_1.EventEmitter();\n        this._queue = fastq(this._worker.bind(this), this._settings.concurrency);\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        this._queue.drain = () => {\n            if (!this._isFatalError) {\n                this._emitter.emit('end');\n            }\n        };\n    }\n    read() {\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        setImmediate(() => {\n            this._pushToQueue(this._root, this._settings.basePath);\n        });\n        return this._emitter;\n    }\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n    destroy() {\n        if (this._isDestroyed) {\n            throw new Error('The reader is already destroyed');\n        }\n        this._isDestroyed = true;\n        this._queue.killAndDrain();\n    }\n    onEntry(callback) {\n        this._emitter.on('entry', callback);\n    }\n    onError(callback) {\n        this._emitter.once('error', callback);\n    }\n    onEnd(callback) {\n        this._emitter.once('end', callback);\n    }\n    _pushToQueue(directory, base) {\n        const queueItem = { directory, base };\n        this._queue.push(queueItem, (error) => {\n            if (error !== null) {\n                this._handleError(error);\n            }\n        });\n    }\n    _worker(item, done) {\n        this._scandir(item.directory, this._settings.fsScandirSettings, (error, entries) => {\n            if (error !== null) {\n                done(error, undefined);\n                return;\n            }\n            for (const entry of entries) {\n                this._handleEntry(entry, item.base);\n            }\n            done(null, undefined);\n        });\n    }\n    _handleError(error) {\n        if (this._isDestroyed || !common.isFatalError(this._settings, error)) {\n            return;\n        }\n        this._isFatalError = true;\n        this._isDestroyed = true;\n        this._emitter.emit('error', error);\n    }\n    _handleEntry(entry, base) {\n        if (this._isDestroyed || this._isFatalError) {\n            return;\n        }\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._emitEntry(entry);\n        }\n        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _emitEntry(entry) {\n        this._emitter.emit('entry', entry);\n    }\n}\nexports.default = AsyncReader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPathSegments = exports.replacePathSegmentSeparator = exports.isAppliedFilter = exports.isFatalError = void 0;\nfunction isFatalError(settings, error) {\n    if (settings.errorFilter === null) {\n        return true;\n    }\n    return !settings.errorFilter(error);\n}\nexports.isFatalError = isFatalError;\nfunction isAppliedFilter(filter, value) {\n    return filter === null || filter(value);\n}\nexports.isAppliedFilter = isAppliedFilter;\nfunction replacePathSegmentSeparator(filepath, separator) {\n    return filepath.split(/[/\\\\]/).join(separator);\n}\nexports.replacePathSegmentSeparator = replacePathSegmentSeparator;\nfunction joinPathSegments(a, b, separator) {\n    if (a === '') {\n        return b;\n    }\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\nexports.joinPathSegments = joinPathSegments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common = require(\"./common\");\nclass Reader {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._root = common.replacePathSegmentSeparator(_root, _settings.pathSegmentSeparator);\n    }\n}\nexports.default = Reader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nconst common = require(\"./common\");\nconst reader_1 = require(\"./reader\");\nclass SyncReader extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._scandir = fsScandir.scandirSync;\n        this._storage = [];\n        this._queue = new Set();\n    }\n    read() {\n        this._pushToQueue(this._root, this._settings.basePath);\n        this._handleQueue();\n        return this._storage;\n    }\n    _pushToQueue(directory, base) {\n        this._queue.add({ directory, base });\n    }\n    _handleQueue() {\n        for (const item of this._queue.values()) {\n            this._handleDirectory(item.directory, item.base);\n        }\n    }\n    _handleDirectory(directory, base) {\n        try {\n            const entries = this._scandir(directory, this._settings.fsScandirSettings);\n            for (const entry of entries) {\n                this._handleEntry(entry, base);\n            }\n        }\n        catch (error) {\n            this._handleError(error);\n        }\n    }\n    _handleError(error) {\n        if (!common.isFatalError(this._settings, error)) {\n            return;\n        }\n        throw error;\n    }\n    _handleEntry(entry, base) {\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._pushToStorage(entry);\n        }\n        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _pushToStorage(entry) {\n        this._storage.push(entry);\n    }\n}\nexports.default = SyncReader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.basePath = this._getValue(this._options.basePath, undefined);\n        this.concurrency = this._getValue(this._options.concurrency, Number.POSITIVE_INFINITY);\n        this.deepFilter = this._getValue(this._options.deepFilter, null);\n        this.entryFilter = this._getValue(this._options.entryFilter, null);\n        this.errorFilter = this._getValue(this._options.errorFilter, null);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n        this.fsScandirSettings = new fsScandir.Settings({\n            followSymbolicLinks: this._options.followSymbolicLinks,\n            fs: this._options.fs,\n            pathSegmentSeparator: this._options.pathSegmentSeparator,\n            stats: this._options.stats,\n            throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","var acorn = require('acorn')\nvar xtend = require('xtend')\n\nvar CJSParser = acorn.Parser\n  .extend(require('./lib/bigint'))\n  .extend(require('./lib/class-fields'))\n  .extend(require('./lib/static-class-features'))\n  .extend(require('./lib/numeric-separator'))\n  .extend(require('./lib/dynamic-import').default)\nvar ESModulesParser = CJSParser\n  .extend(require('./lib/export-ns-from'))\n  .extend(require('./lib/import-meta'))\n\nfunction mapOptions (opts) {\n  if (!opts) opts = {}\n  return xtend({\n    ecmaVersion: 2020,\n    allowHashBang: true,\n    allowReturnOutsideFunction: true\n  }, opts)\n}\n\nfunction getParser (opts) {\n  if (!opts) opts = {}\n  return opts.sourceType === 'module' ? ESModulesParser : CJSParser\n}\n\nmodule.exports = exports = xtend(acorn, {\n  parse: function parse (src, opts) {\n    return getParser(opts).parse(src, mapOptions(opts))\n  },\n  parseExpressionAt: function parseExpressionAt (src, offset, opts) {\n    return getParser(opts).parseExpressionAt(src, offset, mapOptions(opts))\n  },\n  tokenizer: function tokenizer (src, opts) {\n    return getParser(opts).tokenizer(src, mapOptions(opts))\n  }\n})\n","/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar acorn = require(\"acorn\")\nvar tt = acorn.tokTypes\nvar isIdentifierStart = acorn.isIdentifierStart\n\nmodule.exports = function(Parser) {\n  return /*@__PURE__*/(function (Parser) {\n    function anonymous () {\n      Parser.apply(this, arguments);\n    }\n\n    if ( Parser ) anonymous.__proto__ = Parser;\n    anonymous.prototype = Object.create( Parser && Parser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseLiteral = function parseLiteral (value) {\n      var node = Parser.prototype.parseLiteral.call(this, value)\n      if (node.raw.charCodeAt(node.raw.length - 1) == 110) { node.bigint = this.getNumberInput(node.start, node.end) }\n      return node\n    };\n\n    anonymous.prototype.readRadixNumber = function readRadixNumber (radix) {\n      var start = this.pos\n      this.pos += 2 // 0x\n      var val = this.readInt(radix)\n      if (val === null) { this.raise(this.start + 2, (\"Expected number in radix \" + radix)) }\n      if (this.input.charCodeAt(this.pos) == 110) {\n        var str = this.getNumberInput(start, this.pos)\n        val = typeof BigInt !== \"undefined\" ? BigInt(str) : null\n        ++this.pos\n      } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\") }\n      return this.finishToken(tt.num, val)\n    };\n\n    anonymous.prototype.readNumber = function readNumber (startsWithDot) {\n      var start = this.pos\n\n      // Not an int\n      if (startsWithDot) { return Parser.prototype.readNumber.call(this, startsWithDot) }\n\n      // Legacy octal\n      if (this.input.charCodeAt(start) === 48 && this.input.charCodeAt(start + 1) !== 110) {\n        return Parser.prototype.readNumber.call(this, startsWithDot)\n      }\n\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\") }\n\n      // Not a BigInt, reset and parse again\n      if (this.input.charCodeAt(this.pos) != 110) {\n        this.pos = start\n        return Parser.prototype.readNumber.call(this, startsWithDot)\n      }\n\n      var str = this.getNumberInput(start, this.pos)\n      var val = typeof BigInt !== \"undefined\" ? BigInt(str) : null\n      ++this.pos\n      return this.finishToken(tt.num, val)\n    };\n\n    // This is basically a hook for acorn-numeric-separator\n    anonymous.prototype.getNumberInput = function getNumberInput (start, end) {\n      if (Parser.prototype.getNumberInput) { return Parser.prototype.getNumberInput.call(this, start, end) }\n      return this.input.slice(start, end)\n    };\n\n    return anonymous;\n  }(Parser))\n}\n","/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar acorn = require(\"acorn\")\nvar tt = acorn.tokTypes\nvar privateClassElements = require(\"../private-class-elements\")\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inFieldValue\n    this._inFieldValue = true\n    field.value = this.parseExpression()\n    this._inFieldValue = oldInFieldValue\n  } else { field.value = null }\n}\n\nmodule.exports = function(Parser) {\n  Parser = privateClassElements(Parser)\n  return /*@__PURE__*/(function (Parser) {\n    function anonymous () {\n      Parser.apply(this, arguments);\n    }\n\n    if ( Parser ) anonymous.__proto__ = Parser;\n    anonymous.prototype = Object.create( Parser && Parser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseClassElement = function parseClassElement (_constructorAllowsSuper) {\n      if (this.options.ecmaVersion >= 8 && (this.type == tt.name || this.type == this.privateNameToken || this.type == tt.bracketL || this.type == tt.string)) {\n        var branch = this._branch()\n        if (branch.type == tt.bracketL) {\n          var count = 0\n          do {\n            if (branch.eat(tt.bracketL)) { ++count }\n            else if (branch.eat(tt.bracketR)) { --count }\n            else { branch.next() }\n          } while (count > 0)\n        } else { branch.next() }\n        if (branch.type == tt.eq || branch.canInsertSemicolon() || branch.type == tt.semi) {\n          var node = this.startNode()\n          if (this.type == this.privateNameToken) {\n            this.parsePrivateClassElementName(node)\n          } else {\n            this.parsePropertyName(node)\n          }\n          if ((node.key.type === \"Identifier\" && node.key.name === \"constructor\") ||\n              (node.key.type === \"Literal\" && node.key.value === \"constructor\")) {\n            this.raise(node.key.start, \"Classes may not have a field called constructor\")\n          }\n          maybeParseFieldValue.call(this, node)\n          this.finishNode(node, \"FieldDefinition\")\n          this.semicolon()\n          return node\n        }\n      }\n\n      return Parser.prototype.parseClassElement.apply(this, arguments)\n    };\n\n    // Prohibit arguments in class field initializers\n    anonymous.prototype.parseIdent = function parseIdent (liberal, isBinding) {\n      var ident = Parser.prototype.parseIdent.call(this, liberal, isBinding)\n      if (this._inFieldValue && ident.name == \"arguments\") { this.raise(ident.start, \"A class field initializer may not contain arguments\") }\n      return ident\n    };\n\n    return anonymous;\n  }(Parser))\n}\n","/* Generated by `npm run build`, do not edit! */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DynamicImportKey = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) { descriptor.writable = true; } Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) { defineProperties(Constructor.prototype, protoProps); } if (staticProps) { defineProperties(Constructor, staticProps); } return Constructor; }; }();\n\nvar _get = function () {\n  function get(object, property, receiver) { if (object === null) { object = Function.prototype; } var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } }\n\n  return get;\n}();\n\nexports['default'] = dynamicImport;\n\nvar _acorn = require('acorn');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) { Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } } /* eslint-disable no-underscore-dangle */\n\n\nvar DynamicImportKey = exports.DynamicImportKey = 'Import';\n\n// NOTE: This allows `yield import()` to parse correctly.\n_acorn.tokTypes._import.startsExpr = true;\n\nfunction parseDynamicImport() {\n  var node = this.startNode();\n  this.next();\n  if (this.type !== _acorn.tokTypes.parenL) {\n    this.unexpected();\n  }\n  return this.finishNode(node, DynamicImportKey);\n}\n\nfunction parenAfter() {\n  return (/^(\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*\\(/.test(this.input.slice(this.pos))\n  );\n}\n\nfunction dynamicImport(Parser) {\n  return function (_Parser) {\n    _inherits(_class, _Parser);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: 'parseStatement',\n      value: function () {\n        function parseStatement(context, topLevel, exports) {\n          if (this.type === _acorn.tokTypes._import && parenAfter.call(this)) {\n            return this.parseExpressionStatement(this.startNode(), this.parseExpression());\n          }\n          return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'parseStatement', this).call(this, context, topLevel, exports);\n        }\n\n        return parseStatement;\n      }()\n    }, {\n      key: 'parseExprAtom',\n      value: function () {\n        function parseExprAtom(refDestructuringErrors) {\n          if (this.type === _acorn.tokTypes._import) {\n            return parseDynamicImport.call(this);\n          }\n          return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'parseExprAtom', this).call(this, refDestructuringErrors);\n        }\n\n        return parseExprAtom;\n      }()\n    }]);\n\n    return _class;\n  }(Parser);\n}","/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar tt = require(\"acorn\").tokTypes\n\nmodule.exports = function(Parser) {\n  return /*@__PURE__*/(function (Parser) {\n    function anonymous () {\n      Parser.apply(this, arguments);\n    }\n\n    if ( Parser ) anonymous.__proto__ = Parser;\n    anonymous.prototype = Object.create( Parser && Parser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseExport = function parseExport (node, exports) {\n      skipWhiteSpace.lastIndex = this.pos\n      var skip = skipWhiteSpace.exec(this.input)\n      var next = this.input.charAt(this.pos + skip[0].length)\n      if (next !== \"*\") { return Parser.prototype.parseExport.call(this, node, exports) }\n\n      this.next()\n      var specifier = this.startNode()\n      this.expect(tt.star)\n      if (this.eatContextual(\"as\")) {\n        node.declaration = null\n        specifier.exported = this.parseIdent(true)\n        this.checkExport(exports, specifier.exported.name, this.lastTokStart)\n        node.specifiers = [this.finishNode(specifier, \"ExportNamespaceSpecifier\")]\n      }\n      this.expectContextual(\"from\")\n      if (this.type !== tt.string) { this.unexpected() }\n      node.source = this.parseExprAtom()\n      this.semicolon()\n      return this.finishNode(node, node.specifiers ? \"ExportNamedDeclaration\" : \"ExportAllDeclaration\")\n    };\n\n    return anonymous;\n  }(Parser))\n}\n","/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar tt = require(\"acorn\").tokTypes\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar nextTokenIsDot = function (parser) {\n  skipWhiteSpace.lastIndex = parser.pos\n  var skip = skipWhiteSpace.exec(parser.input)\n  var next = parser.pos + skip[0].length\n  return parser.input.slice(next, next + 1) === \".\"\n}\n\nmodule.exports = function(Parser) {\n  return /*@__PURE__*/(function (Parser) {\n    function anonymous () {\n      Parser.apply(this, arguments);\n    }\n\n    if ( Parser ) anonymous.__proto__ = Parser;\n    anonymous.prototype = Object.create( Parser && Parser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseExprAtom = function parseExprAtom (refDestructuringErrors) {\n      if (this.type !== tt._import || !nextTokenIsDot(this)) { return Parser.prototype.parseExprAtom.call(this, refDestructuringErrors) }\n\n      if (!this.options.allowImportExportEverywhere && !this.inModule) {\n        this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\")\n      }\n\n      var node = this.startNode()\n      node.meta = this.parseIdent(true)\n      this.expect(tt.dot)\n      node.property = this.parseIdent(true)\n      if (node.property.name !== \"meta\") {\n        this.raiseRecoverable(node.property.start, \"The only valid meta property for import is import.meta\")\n      }\n      return this.finishNode(node, \"MetaProperty\")\n    };\n\n    anonymous.prototype.parseStatement = function parseStatement (context, topLevel, exports) {\n      if (this.type !== tt._import || !nextTokenIsDot(this)) {\n        return Parser.prototype.parseStatement.call(this, context, topLevel, exports)\n      }\n\n      var node = this.startNode()\n      var expr = this.parseExpression()\n      return this.parseExpressionStatement(node, expr)\n    };\n\n    return anonymous;\n  }(Parser))\n}\n","/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nmodule.exports = function(Parser) {\n  return /*@__PURE__*/(function (Parser) {\n    function anonymous () {\n      Parser.apply(this, arguments);\n    }\n\n    if ( Parser ) anonymous.__proto__ = Parser;\n    anonymous.prototype = Object.create( Parser && Parser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.readInt = function readInt (radix, len) {\n      // Hack: len is only != null for unicode escape sequences,\n      // where numeric separators are not allowed\n      if (len != null) { return Parser.prototype.readInt.call(this, radix, len) }\n\n      var start = this.pos, total = 0, acceptUnderscore = false\n      for (;;) {\n        var code = this.input.charCodeAt(this.pos), val = (void 0)\n        if (code >= 97) { val = code - 97 + 10 } // a\n        else if (code == 95) {\n          if (!acceptUnderscore) { this.raise(this.pos, \"Invalid numeric separator\") }\n          ++this.pos\n          acceptUnderscore = false\n          continue\n        } else if (code >= 65) { val = code - 65 + 10 } // A\n        else if (code >= 48 && code <= 57) { val = code - 48 } // 0-9\n        else { val = Infinity }\n        if (val >= radix) { break }\n        ++this.pos\n        total = total * radix + val\n        acceptUnderscore = true\n      }\n      if (this.pos === start) { return null }\n      if (!acceptUnderscore) { this.raise(this.pos - 1, \"Invalid numeric separator\") }\n\n      return total\n    };\n\n    anonymous.prototype.readNumber = function readNumber (startsWithDot) {\n      var token = Parser.prototype.readNumber.call(this, startsWithDot)\n      var octal = this.end - this.start >= 2 && this.input.charCodeAt(this.start) === 48\n      var stripped = this.getNumberInput(this.start, this.end)\n      if (stripped.length < this.end - this.start) {\n        if (octal) { this.raise(this.start, \"Invalid number\") }\n        this.value = parseFloat(stripped)\n      }\n      return token\n    };\n\n    // This is used by acorn-bigint\n    anonymous.prototype.getNumberInput = function getNumberInput (start, end) {\n      return this.input.slice(start, end).replace(/_/g, \"\")\n    };\n\n    return anonymous;\n  }(Parser))\n}\n","/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar acorn = require(\"acorn\")\nif (false) {\n  throw new Error((\"acorn-private-class-elements requires acorn@^6.1.0, not \" + (acorn.version)))\n}\nvar tt = acorn.tokTypes\nvar TokenType = acorn.TokenType\n\nmodule.exports = function(Parser) {\n  // Only load this plugin once.\n  if (Parser.prototype.parsePrivateName) {\n    return Parser\n  }\n\n  // Make sure `Parser` comes from the same acorn as our `tt`,\n  // otherwise the comparisons fail.\n  var cur = Parser\n  while (cur && cur !== acorn.Parser) {\n    cur = cur.__proto__\n  }\n  if (cur !== acorn.Parser) {\n    throw new Error(\"acorn-private-class-elements does not support mixing different acorn copies\")\n  }\n\n  Parser = /*@__PURE__*/(function (Parser) {\n    function Parser_ () {\n      Parser.apply(this, arguments);\n    }\n\n    if ( Parser ) Parser_.__proto__ = Parser;\n    Parser_.prototype = Object.create( Parser && Parser.prototype );\n    Parser_.prototype.constructor = Parser_;\n\n    Parser_.prototype._branch = function _branch () {\n      this.__branch = this.__branch || new Parser({ecmaVersion: this.options.ecmaVersion}, this.input)\n      this.__branch.end = this.end\n      this.__branch.pos = this.pos\n      this.__branch.type = this.type\n      this.__branch.value = this.value\n      this.__branch.containsEsc = this.containsEsc\n      return this.__branch\n    };\n\n    Parser_.prototype.parsePrivateClassElementName = function parsePrivateClassElementName (element) {\n      element.computed = false\n      element.key = this.parsePrivateName()\n      if (element.key.name == \"constructor\") { this.raise(element.key.start, \"Classes may not have a private element named constructor\") }\n      var accept = {get: \"set\", set: \"get\"}[element.kind]\n      var privateBoundNames = this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1]\n      if (Object.prototype.hasOwnProperty.call(privateBoundNames, element.key.name) && privateBoundNames[element.key.name] !== accept) {\n        this.raise(element.start, \"Duplicate private element\")\n      }\n      privateBoundNames[element.key.name] = element.kind || true\n      delete this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][element.key.name]\n      return element.key\n    };\n\n    Parser_.prototype.parsePrivateName = function parsePrivateName () {\n      var node = this.startNode()\n      node.name = this.value\n      this.next()\n      this.finishNode(node, \"PrivateName\")\n      if (this.options.allowReserved == \"never\") { this.checkUnreserved(node) }\n      return node\n    };\n\n    // Parse # token\n    Parser_.prototype.getTokenFromCode = function getTokenFromCode (code) {\n      if (code === 35) {\n        ++this.pos\n        var word = this.readWord1()\n        return this.finishToken(this.privateNameToken, word)\n      }\n      return Parser.prototype.getTokenFromCode.call(this, code)\n    };\n\n    // Manage stacks and check for undeclared private names\n    Parser_.prototype.parseClass = function parseClass (node, isStatement) {\n      this._privateBoundNamesStack = this._privateBoundNamesStack || []\n      var privateBoundNames = Object.create(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1] || null)\n      this._privateBoundNamesStack.push(privateBoundNames)\n      this._unresolvedPrivateNamesStack = this._unresolvedPrivateNamesStack || []\n      var unresolvedPrivateNames = Object.create(null)\n      this._unresolvedPrivateNamesStack.push(unresolvedPrivateNames)\n      var _return = Parser.prototype.parseClass.call(this, node, isStatement)\n      this._privateBoundNamesStack.pop()\n      this._unresolvedPrivateNamesStack.pop()\n      if (!this._unresolvedPrivateNamesStack.length) {\n        var names = Object.keys(unresolvedPrivateNames)\n        if (names.length) {\n          names.sort(function (n1, n2) { return unresolvedPrivateNames[n1] - unresolvedPrivateNames[n2]; })\n          this.raise(unresolvedPrivateNames[names[0]], \"Usage of undeclared private name\")\n        }\n      } else { Object.assign(this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1], unresolvedPrivateNames) }\n      return _return\n    };\n\n    // Parse private element access\n    Parser_.prototype.parseSubscript = function parseSubscript (base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n      if (!this.eat(tt.dot)) {\n        return Parser.prototype.parseSubscript.call(this, base, startPos, startLoc, noCalls, maybeAsyncArrow)\n      }\n      var node = this.startNodeAt(startPos, startLoc)\n      node.object = base\n      node.computed = false\n      if (this.type == this.privateNameToken) {\n        node.property = this.parsePrivateName()\n        if (!this._privateBoundNamesStack.length || !this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.property.name]) {\n          this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.property.name] = node.property.start\n        }\n      } else {\n        node.property = this.parseIdent(true)\n      }\n      return this.finishNode(node, \"MemberExpression\")\n    };\n\n    // Prohibit delete of private class elements\n    Parser_.prototype.parseMaybeUnary = function parseMaybeUnary (refDestructuringErrors, sawUnary) {\n      var _return = Parser.prototype.parseMaybeUnary.call(this, refDestructuringErrors, sawUnary)\n      if (_return.operator == \"delete\") {\n        if (_return.argument.type == \"MemberExpression\" && _return.argument.property.type == \"PrivateName\") {\n          this.raise(_return.start, \"Private elements may not be deleted\")\n        }\n      }\n      return _return\n    };\n\n    return Parser_;\n  }(Parser))\n  Parser.prototype.privateNameToken = new TokenType(\"privateName\")\n  return Parser\n}\n","/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar acorn = require(\"acorn\")\nvar tt = acorn.tokTypes\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue\n    this._inStaticFieldValue = true\n    field.value = this.parseExpression()\n    this._inStaticFieldValue = oldInFieldValue\n  } else { field.value = null }\n}\n\nvar privateClassElements = require(\"../private-class-elements\")\n\nmodule.exports = function(Parser) {\n  var ExtendedParser = privateClassElements(Parser)\n\n  return /*@__PURE__*/(function (ExtendedParser) {\n    function anonymous () {\n      ExtendedParser.apply(this, arguments);\n    }\n\n    if ( ExtendedParser ) anonymous.__proto__ = ExtendedParser;\n    anonymous.prototype = Object.create( ExtendedParser && ExtendedParser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseClassElement = function parseClassElement (_constructorAllowsSuper) {\n      var this$1 = this;\n\n      if (this.eat(tt.semi)) { return null }\n\n      var node = this.startNode()\n\n      var tryContextual = function (k, noLineBreak) {\n        if (typeof noLineBreak == \"undefined\") { noLineBreak = false }\n        var start = this$1.start, startLoc = this$1.startLoc\n        if (!this$1.eatContextual(k)) { return false }\n        if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n        if (node.key) { this$1.unexpected() }\n        node.computed = false\n        node.key = this$1.startNodeAt(start, startLoc)\n        node.key.name = k\n        this$1.finishNode(node.key, \"Identifier\")\n        return false\n      }\n\n      node.static = tryContextual(\"static\")\n      if (!node.static) { return ExtendedParser.prototype.parseClassElement.apply(this, arguments) }\n\n      var isGenerator = this.eat(tt.star)\n      var isAsync = false\n      if (!isGenerator) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos\n          var skip = skipWhiteSpace.exec(this.input)\n          var next = this.input.charAt(this.pos + skip[0].length)\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true)\n            node.computed = false\n            maybeParseFieldValue.call(this, node)\n            this.finishNode(node, \"FieldDefinition\")\n            this.semicolon()\n            return node\n          } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n            isAsync = true\n            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star)\n          }\n        } else if (tryContextual(\"get\")) {\n          node.kind = \"get\"\n        } else if (tryContextual(\"set\")) {\n          node.kind = \"set\"\n        }\n      }\n      if (this.type === this.privateNameToken) {\n        this.parsePrivateClassElementName(node)\n        if (this.type !== tt.parenL) {\n          if (node.key.name === \"prototype\") {\n            this.raise(node.key.start, \"Classes may not have a private static property named prototype\")\n          }\n          maybeParseFieldValue.call(this, node)\n          this.finishNode(node, \"FieldDefinition\")\n          this.semicolon()\n          return node\n        }\n      } else if (!node.key) {\n        this.parsePropertyName(node)\n        if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static property named prototype\")\n        }\n      }\n      if (!node.kind) { node.kind = \"method\" }\n      this.parseClassMethod(node, isGenerator, isAsync)\n      if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n        this.raise(node.key.start, \"Classes may not have a static field named constructor\")\n      }\n      if (node.kind === \"get\" && node.value.params.length !== 0) {\n        this.raiseRecoverable(node.value.start, \"getter should have no params\")\n      }\n      if (node.kind === \"set\" && node.value.params.length !== 1) {\n        this.raiseRecoverable(node.value.start, \"setter should have exactly one param\")\n      }\n      if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\")\n      }\n\n      return node\n\n    };\n\n    // Parse public static fields\n    anonymous.prototype.parseClassMethod = function parseClassMethod (method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return ExtendedParser.prototype.parseClassMethod.apply(this, arguments)\n      }\n      maybeParseFieldValue.call(this, method)\n      delete method.kind\n      method = this.finishNode(method, \"FieldDefinition\")\n      this.semicolon()\n      return method\n    };\n\n    // Prohibit arguments in class field initializers\n    anonymous.prototype.parseIdent = function parseIdent (liberal, isBinding) {\n      var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding)\n      if (this._inStaticFieldValue && ident.name == \"arguments\") { this.raise(ident.start, \"A static class field initializer may not contain arguments\") }\n      return ident\n    };\n\n    return anonymous;\n  }(ExtendedParser))\n}\n","var xtend = require('xtend')\nvar walk = require('acorn-walk')\n\nvar base = xtend(walk.base)\nbase.Import = function () {}\n\nfunction simple (node, visitors, baseVisitor, state, override) {\n  return walk.simple(node, visitors, baseVisitor || base, state, override)\n}\n\nfunction ancestor (node, visitors, baseVisitor, state) {\n  return walk.ancestor(node, visitors, baseVisitor || base, state)\n}\n\nfunction recursive (node, state, funcs, baseVisitor, override) {\n  return walk.recursive(node, state, funcs, baseVisitor || base, override)\n}\n\nfunction full (node, callback, baseVisitor, state, override) {\n  return walk.full(node, callback, baseVisitor || base, state, override)\n}\n\nfunction fullAncestor (node, callback, baseVisitor, state) {\n  return walk.fullAncestor(node, callback, baseVisitor || base, state)\n}\n\nfunction findNodeAt (node, start, end, test, baseVisitor, state) {\n  return walk.findNodeAt(node, start, end, test, baseVisitor || base, state)\n}\n\nfunction findNodeAround (node, pos, test, baseVisitor, state) {\n  return walk.findNodeAround(node, pos, test, baseVisitor || base, state)\n}\n\nfunction findNodeAfter (node, pos, test, baseVisitor, state) {\n  return walk.findNodeAfter(node, pos, test, baseVisitor || base, state)\n}\n\nfunction findNodeBefore (node, pos, test, baseVisitor, state) {\n  return walk.findNodeBefore(node, pos, test, baseVisitor || base, state)\n}\n\nfunction make (funcs, baseVisitor) {\n  return walk.make(funcs, baseVisitor || base)\n}\n\nexports.simple = simple\nexports.ancestor = ancestor\nexports.recursive = recursive\nexports.full = full\nexports.fullAncestor = fullAncestor\nexports.findNodeAt = findNodeAt\nexports.findNodeAround = findNodeAround\nexports.findNodeAfter = findNodeAfter\nexports.findNodeBefore = findNodeBefore\nexports.make = make\nexports.base = base\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory((global.acorn = global.acorn || {}, global.acorn.walk = {})));\n}(this, (function (exports) { 'use strict';\n\n  // AST walker module for Mozilla Parser API compatible trees\n\n  // A simple walk is one where you simply specify callbacks to be\n  // called on specific nodes. The last two arguments are optional. A\n  // simple use would be\n  //\n  //     walk.simple(myTree, {\n  //         Expression: function(node) { ... }\n  //     });\n  //\n  // to do something with all expressions. All Parser API node types\n  // can be used to identify node types, as well as Expression and\n  // Statement, which denote categories of nodes.\n  //\n  // The base argument can be used to pass a custom (recursive)\n  // walker, and state can be used to give this walked an initial\n  // state.\n\n  function simple(node, visitors, baseVisitor, state, override) {\n    if (!baseVisitor) { baseVisitor = base\n    ; }(function c(node, st, override) {\n      var type = override || node.type, found = visitors[type];\n      baseVisitor[type](node, st, c);\n      if (found) { found(node, st); }\n    })(node, state, override);\n  }\n\n  // An ancestor walk keeps an array of ancestor nodes (including the\n  // current node) and passes them to the callback as third parameter\n  // (and also as state parameter when no other state is present).\n  function ancestor(node, visitors, baseVisitor, state, override) {\n    var ancestors = [];\n    if (!baseVisitor) { baseVisitor = base\n    ; }(function c(node, st, override) {\n      var type = override || node.type, found = visitors[type];\n      var isNew = node !== ancestors[ancestors.length - 1];\n      if (isNew) { ancestors.push(node); }\n      baseVisitor[type](node, st, c);\n      if (found) { found(node, st || ancestors, ancestors); }\n      if (isNew) { ancestors.pop(); }\n    })(node, state, override);\n  }\n\n  // A recursive walk is one where your functions override the default\n  // walkers. They can modify and replace the state parameter that's\n  // threaded through the walk, and can opt how and whether to walk\n  // their child nodes (by calling their third argument on these\n  // nodes).\n  function recursive(node, state, funcs, baseVisitor, override) {\n    var visitor = funcs ? make(funcs, baseVisitor || undefined) : baseVisitor\n    ;(function c(node, st, override) {\n      visitor[override || node.type](node, st, c);\n    })(node, state, override);\n  }\n\n  function makeTest(test) {\n    if (typeof test === \"string\")\n      { return function (type) { return type === test; } }\n    else if (!test)\n      { return function () { return true; } }\n    else\n      { return test }\n  }\n\n  var Found = function Found(node, state) { this.node = node; this.state = state; };\n\n  // A full walk triggers the callback on each node\n  function full(node, callback, baseVisitor, state, override) {\n    if (!baseVisitor) { baseVisitor = base\n    ; }(function c(node, st, override) {\n      var type = override || node.type;\n      baseVisitor[type](node, st, c);\n      if (!override) { callback(node, st, type); }\n    })(node, state, override);\n  }\n\n  // An fullAncestor walk is like an ancestor walk, but triggers\n  // the callback on each node\n  function fullAncestor(node, callback, baseVisitor, state) {\n    if (!baseVisitor) { baseVisitor = base; }\n    var ancestors = []\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      var isNew = node !== ancestors[ancestors.length - 1];\n      if (isNew) { ancestors.push(node); }\n      baseVisitor[type](node, st, c);\n      if (!override) { callback(node, st || ancestors, ancestors, type); }\n      if (isNew) { ancestors.pop(); }\n    })(node, state);\n  }\n\n  // Find a node with a given start, end, and type (all are optional,\n  // null can be used as wildcard). Returns a {node, state} object, or\n  // undefined when it doesn't find a matching node.\n  function findNodeAt(node, start, end, test, baseVisitor, state) {\n    if (!baseVisitor) { baseVisitor = base; }\n    test = makeTest(test);\n    try {\n      (function c(node, st, override) {\n        var type = override || node.type;\n        if ((start == null || node.start <= start) &&\n            (end == null || node.end >= end))\n          { baseVisitor[type](node, st, c); }\n        if ((start == null || node.start === start) &&\n            (end == null || node.end === end) &&\n            test(type, node))\n          { throw new Found(node, st) }\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the innermost node of a given type that contains the given\n  // position. Interface similar to findNodeAt.\n  function findNodeAround(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    try {\n      (function c(node, st, override) {\n        var type = override || node.type;\n        if (node.start > pos || node.end < pos) { return }\n        baseVisitor[type](node, st, c);\n        if (test(type, node)) { throw new Found(node, st) }\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the outermost matching node after a given position.\n  function findNodeAfter(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    try {\n      (function c(node, st, override) {\n        if (node.end < pos) { return }\n        var type = override || node.type;\n        if (node.start >= pos && test(type, node)) { throw new Found(node, st) }\n        baseVisitor[type](node, st, c);\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the outermost matching node before a given position.\n  function findNodeBefore(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    var max\n    ;(function c(node, st, override) {\n      if (node.start > pos) { return }\n      var type = override || node.type;\n      if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))\n        { max = new Found(node, st); }\n      baseVisitor[type](node, st, c);\n    })(node, state);\n    return max\n  }\n\n  // Fallback to an Object.create polyfill for older environments.\n  var create = Object.create || function(proto) {\n    function Ctor() {}\n    Ctor.prototype = proto;\n    return new Ctor\n  };\n\n  // Used to create a custom walker. Will fill in all missing node\n  // type properties with the defaults.\n  function make(funcs, baseVisitor) {\n    var visitor = create(baseVisitor || base);\n    for (var type in funcs) { visitor[type] = funcs[type]; }\n    return visitor\n  }\n\n  function skipThrough(node, st, c) { c(node, st); }\n  function ignore(_node, _st, _c) {}\n\n  // Node walkers.\n\n  var base = {};\n\n  base.Program = base.BlockStatement = function (node, st, c) {\n    for (var i = 0, list = node.body; i < list.length; i += 1)\n      {\n      var stmt = list[i];\n\n      c(stmt, st, \"Statement\");\n    }\n  };\n  base.Statement = skipThrough;\n  base.EmptyStatement = ignore;\n  base.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression =\n    function (node, st, c) { return c(node.expression, st, \"Expression\"); };\n  base.IfStatement = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.consequent, st, \"Statement\");\n    if (node.alternate) { c(node.alternate, st, \"Statement\"); }\n  };\n  base.LabeledStatement = function (node, st, c) { return c(node.body, st, \"Statement\"); };\n  base.BreakStatement = base.ContinueStatement = ignore;\n  base.WithStatement = function (node, st, c) {\n    c(node.object, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.SwitchStatement = function (node, st, c) {\n    c(node.discriminant, st, \"Expression\");\n    for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {\n      var cs = list$1[i$1];\n\n      if (cs.test) { c(cs.test, st, \"Expression\"); }\n      for (var i = 0, list = cs.consequent; i < list.length; i += 1)\n        {\n        var cons = list[i];\n\n        c(cons, st, \"Statement\");\n      }\n    }\n  };\n  base.SwitchCase = function (node, st, c) {\n    if (node.test) { c(node.test, st, \"Expression\"); }\n    for (var i = 0, list = node.consequent; i < list.length; i += 1)\n      {\n      var cons = list[i];\n\n      c(cons, st, \"Statement\");\n    }\n  };\n  base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {\n    if (node.argument) { c(node.argument, st, \"Expression\"); }\n  };\n  base.ThrowStatement = base.SpreadElement =\n    function (node, st, c) { return c(node.argument, st, \"Expression\"); };\n  base.TryStatement = function (node, st, c) {\n    c(node.block, st, \"Statement\");\n    if (node.handler) { c(node.handler, st); }\n    if (node.finalizer) { c(node.finalizer, st, \"Statement\"); }\n  };\n  base.CatchClause = function (node, st, c) {\n    if (node.param) { c(node.param, st, \"Pattern\"); }\n    c(node.body, st, \"Statement\");\n  };\n  base.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.ForStatement = function (node, st, c) {\n    if (node.init) { c(node.init, st, \"ForInit\"); }\n    if (node.test) { c(node.test, st, \"Expression\"); }\n    if (node.update) { c(node.update, st, \"Expression\"); }\n    c(node.body, st, \"Statement\");\n  };\n  base.ForInStatement = base.ForOfStatement = function (node, st, c) {\n    c(node.left, st, \"ForInit\");\n    c(node.right, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.ForInit = function (node, st, c) {\n    if (node.type === \"VariableDeclaration\") { c(node, st); }\n    else { c(node, st, \"Expression\"); }\n  };\n  base.DebuggerStatement = ignore;\n\n  base.FunctionDeclaration = function (node, st, c) { return c(node, st, \"Function\"); };\n  base.VariableDeclaration = function (node, st, c) {\n    for (var i = 0, list = node.declarations; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      c(decl, st);\n    }\n  };\n  base.VariableDeclarator = function (node, st, c) {\n    c(node.id, st, \"Pattern\");\n    if (node.init) { c(node.init, st, \"Expression\"); }\n  };\n\n  base.Function = function (node, st, c) {\n    if (node.id) { c(node.id, st, \"Pattern\"); }\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      c(param, st, \"Pattern\");\n    }\n    c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n  };\n\n  base.Pattern = function (node, st, c) {\n    if (node.type === \"Identifier\")\n      { c(node, st, \"VariablePattern\"); }\n    else if (node.type === \"MemberExpression\")\n      { c(node, st, \"MemberPattern\"); }\n    else\n      { c(node, st); }\n  };\n  base.VariablePattern = ignore;\n  base.MemberPattern = skipThrough;\n  base.RestElement = function (node, st, c) { return c(node.argument, st, \"Pattern\"); };\n  base.ArrayPattern = function (node, st, c) {\n    for (var i = 0, list = node.elements; i < list.length; i += 1) {\n      var elt = list[i];\n\n      if (elt) { c(elt, st, \"Pattern\"); }\n    }\n  };\n  base.ObjectPattern = function (node, st, c) {\n    for (var i = 0, list = node.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n      if (prop.type === \"Property\") {\n        if (prop.computed) { c(prop.key, st, \"Expression\"); }\n        c(prop.value, st, \"Pattern\");\n      } else if (prop.type === \"RestElement\") {\n        c(prop.argument, st, \"Pattern\");\n      }\n    }\n  };\n\n  base.Expression = skipThrough;\n  base.ThisExpression = base.Super = base.MetaProperty = ignore;\n  base.ArrayExpression = function (node, st, c) {\n    for (var i = 0, list = node.elements; i < list.length; i += 1) {\n      var elt = list[i];\n\n      if (elt) { c(elt, st, \"Expression\"); }\n    }\n  };\n  base.ObjectExpression = function (node, st, c) {\n    for (var i = 0, list = node.properties; i < list.length; i += 1)\n      {\n      var prop = list[i];\n\n      c(prop, st);\n    }\n  };\n  base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\n  base.SequenceExpression = function (node, st, c) {\n    for (var i = 0, list = node.expressions; i < list.length; i += 1)\n      {\n      var expr = list[i];\n\n      c(expr, st, \"Expression\");\n    }\n  };\n  base.TemplateLiteral = function (node, st, c) {\n    for (var i = 0, list = node.quasis; i < list.length; i += 1)\n      {\n      var quasi = list[i];\n\n      c(quasi, st);\n    }\n\n    for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\n      {\n      var expr = list$1[i$1];\n\n      c(expr, st, \"Expression\");\n    }\n  };\n  base.TemplateElement = ignore;\n  base.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n    c(node.argument, st, \"Expression\");\n  };\n  base.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n    c(node.left, st, \"Expression\");\n    c(node.right, st, \"Expression\");\n  };\n  base.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n    c(node.left, st, \"Pattern\");\n    c(node.right, st, \"Expression\");\n  };\n  base.ConditionalExpression = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.consequent, st, \"Expression\");\n    c(node.alternate, st, \"Expression\");\n  };\n  base.NewExpression = base.CallExpression = function (node, st, c) {\n    c(node.callee, st, \"Expression\");\n    if (node.arguments)\n      { for (var i = 0, list = node.arguments; i < list.length; i += 1)\n        {\n          var arg = list[i];\n\n          c(arg, st, \"Expression\");\n        } }\n  };\n  base.MemberExpression = function (node, st, c) {\n    c(node.object, st, \"Expression\");\n    if (node.computed) { c(node.property, st, \"Expression\"); }\n  };\n  base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n    if (node.declaration)\n      { c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\"); }\n    if (node.source) { c(node.source, st, \"Expression\"); }\n  };\n  base.ExportAllDeclaration = function (node, st, c) {\n    if (node.exported)\n      { c(node.exported, st); }\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportDeclaration = function (node, st, c) {\n    for (var i = 0, list = node.specifiers; i < list.length; i += 1)\n      {\n      var spec = list[i];\n\n      c(spec, st);\n    }\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportExpression = function (node, st, c) {\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.Literal = ignore;\n\n  base.TaggedTemplateExpression = function (node, st, c) {\n    c(node.tag, st, \"Expression\");\n    c(node.quasi, st, \"Expression\");\n  };\n  base.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, \"Class\"); };\n  base.Class = function (node, st, c) {\n    if (node.id) { c(node.id, st, \"Pattern\"); }\n    if (node.superClass) { c(node.superClass, st, \"Expression\"); }\n    c(node.body, st);\n  };\n  base.ClassBody = function (node, st, c) {\n    for (var i = 0, list = node.body; i < list.length; i += 1)\n      {\n      var elt = list[i];\n\n      c(elt, st);\n    }\n  };\n  base.MethodDefinition = base.Property = function (node, st, c) {\n    if (node.computed) { c(node.key, st, \"Expression\"); }\n    c(node.value, st, \"Expression\");\n  };\n\n  exports.ancestor = ancestor;\n  exports.base = base;\n  exports.findNodeAfter = findNodeAfter;\n  exports.findNodeAround = findNodeAround;\n  exports.findNodeAt = findNodeAt;\n  exports.findNodeBefore = findNodeBefore;\n  exports.full = full;\n  exports.fullAncestor = fullAncestor;\n  exports.make = make;\n  exports.recursive = recursive;\n  exports.simple = simple;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, (function (exports) { 'use strict';\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  // Big ugly regular expressions that match characters in the\n  // whitespace, identifier, and identifier-start categories. These\n  // are only applied when a character is found to actually have a\n  // code point above 128.\n  // Generated by `bin/generate-identifier-regex.js`.\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n  // These are a run-length and offset encoded representation of the\n  // >0xffff code points that are a valid part of identifiers. The\n  // offset starts at 0x10000, and each pair of numbers represents an\n  // offset to the next range, and then a size of the range. They were\n  // generated by bin/generate-identifier-regex.js\n\n  // eslint-disable-next-line comma-spacing\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n\n  // eslint-disable-next-line comma-spacing\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords$1 = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  // Checks if an object has a property.\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n  // A second optional argument can be given to further configure\n  // the parser process. These options are recognized:\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n    // (2019). This influences support for strict mode, the set of\n    // reserved words, and support for new syntax features. The default\n    // is 10.\n    ecmaVersion: 10,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called\n    // when a semicolon is automatically inserted. It will be passed\n    // the position of the comma as an offset, and if `locations` is\n    // enabled, it is given the location as a `{line, column}` object\n    // as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program.\n    allowImportExportEverywhere: false,\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: false,\n    // When enabled, hashbang directive in the beginning of file\n    // is allowed and treated as a line comment.\n    allowHashBang: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = {};\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  // Switch to a getter for 7.0.0.\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91) { return true } // '['\n    if (context) { return false }\n\n    if (nextCh === 123) { return true } // '{'\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$1.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (this.type !== types.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n  // Parses module export declaration.\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types.star)) {\n      if (this.options.ecmaVersion >= 11) {\n        if (this.eatContextual(\"as\")) {\n          node.exported = this.parseIdent(true);\n          this.checkExport(exports, node.exported.name, this.lastTokStart);\n        } else {\n          node.exported = null;\n        }\n      }\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    // import '...'\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      // import defaultObj, { x, y as z } from '...'\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        // falls through to AssignmentPattern\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // Verify that a node is an lval — something that can be assigned\n  // to.\n  // bindingType can be either:\n  // 'var' indicating that the lval creates a 'var' binding\n  // 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n  // 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  // A recursive descent parser operates by defining functions for all\n\n  var pp$3 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n            // Backwards-compat kludge. Can be removed in version 6.0\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var coalesce = this.type === types.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types.coalesce) || (coalesce && (this.type === types.logicalOR || this.type === types.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types.bracketL);\n    if (computed || (optional && this.type !== types.parenL && this.type !== types.backQuote) || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    var meta = this.parseIdent(true);\n\n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    case types.dot:\n      node.meta = meta;\n      return this.parseImportMeta(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    // Verify ending.\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\")\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // To disallow parenthesized identifier via `this.toAssignable()`.\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR && this.type !== types.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Token-specific context update code\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // This file contains Unicode properties extracted from the ECMAScript\n  // specification. The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      this.regexp_alternative(state);\n    }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */)) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D /* } */)\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      state.eat(0x5E /* ^ */);\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D /* ] */)) {\n        return true\n      }\n      // Unreachable since it threw \"unterminated regular expression\" error before.\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp$9 = Parser.prototype;\n\n  // Move to the next token\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types.assign, 3) }\n        }\n        return this.finishOp(types.coalesce, 2)\n      }\n    }\n    return this.finishOp(types.question, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp$9.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n      // falls through\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      // no default\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString$1(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\n  var version = \"7.4.1\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api].\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","let unpack = require('caniuse-lite').feature\n\nfunction browsersSort(a, b) {\n  a = a.split(' ')\n  b = b.split(' ')\n  if (a[0] > b[0]) {\n    return 1\n  } else if (a[0] < b[0]) {\n    return -1\n  } else {\n    return Math.sign(parseFloat(a[1]) - parseFloat(b[1]))\n  }\n}\n\n// Convert Can I Use data\nfunction f(data, opts, callback) {\n  data = unpack(data)\n\n  if (!callback) {\n    ;[callback, opts] = [opts, {}]\n  }\n\n  let match = opts.match || /\\sx($|\\s)/\n  let need = []\n\n  for (let browser in data.stats) {\n    let versions = data.stats[browser]\n    for (let version in versions) {\n      let support = versions[version]\n      if (support.match(match)) {\n        need.push(browser + ' ' + version)\n      }\n    }\n  }\n\n  callback(need.sort(browsersSort))\n}\n\n// Add data for all properties\nlet result = {}\n\nfunction prefix(names, data) {\n  for (let name of names) {\n    result[name] = Object.assign({}, data)\n  }\n}\n\nfunction add(names, data) {\n  for (let name of names) {\n    result[name].browsers = result[name].browsers\n      .concat(data.browsers)\n      .sort(browsersSort)\n  }\n}\n\nmodule.exports = result\n\n// Border Radius\nlet prefixBorderRadius = require('caniuse-lite/data/features/border-radius')\n\nf(prefixBorderRadius, browsers =>\n  prefix(\n    [\n      'border-radius',\n      'border-top-left-radius',\n      'border-top-right-radius',\n      'border-bottom-right-radius',\n      'border-bottom-left-radius'\n    ],\n    {\n      mistakes: ['-khtml-', '-ms-', '-o-'],\n      feature: 'border-radius',\n      browsers\n    }\n  )\n)\n\n// Box Shadow\nlet prefixBoxshadow = require('caniuse-lite/data/features/css-boxshadow')\n\nf(prefixBoxshadow, browsers =>\n  prefix(['box-shadow'], {\n    mistakes: ['-khtml-'],\n    feature: 'css-boxshadow',\n    browsers\n  })\n)\n\n// Animation\nlet prefixAnimation = require('caniuse-lite/data/features/css-animation')\n\nf(prefixAnimation, browsers =>\n  prefix(\n    [\n      'animation',\n      'animation-name',\n      'animation-duration',\n      'animation-delay',\n      'animation-direction',\n      'animation-fill-mode',\n      'animation-iteration-count',\n      'animation-play-state',\n      'animation-timing-function',\n      '@keyframes'\n    ],\n    {\n      mistakes: ['-khtml-', '-ms-'],\n      feature: 'css-animation',\n      browsers\n    }\n  )\n)\n\n// Transition\nlet prefixTransition = require('caniuse-lite/data/features/css-transitions')\n\nf(prefixTransition, browsers =>\n  prefix(\n    [\n      'transition',\n      'transition-property',\n      'transition-duration',\n      'transition-delay',\n      'transition-timing-function'\n    ],\n    {\n      mistakes: ['-khtml-', '-ms-'],\n      browsers,\n      feature: 'css-transitions'\n    }\n  )\n)\n\n// Transform 2D\nlet prefixTransform2d = require('caniuse-lite/data/features/transforms2d')\n\nf(prefixTransform2d, browsers =>\n  prefix(['transform', 'transform-origin'], {\n    feature: 'transforms2d',\n    browsers\n  })\n)\n\n// Transform 3D\nlet prefixTransforms3d = require('caniuse-lite/data/features/transforms3d')\n\nf(prefixTransforms3d, browsers => {\n  prefix(['perspective', 'perspective-origin'], {\n    feature: 'transforms3d',\n    browsers\n  })\n  return prefix(['transform-style'], {\n    mistakes: ['-ms-', '-o-'],\n    browsers,\n    feature: 'transforms3d'\n  })\n})\n\nf(prefixTransforms3d, { match: /y\\sx|y\\s#2/ }, browsers =>\n  prefix(['backface-visibility'], {\n    mistakes: ['-ms-', '-o-'],\n    feature: 'transforms3d',\n    browsers\n  })\n)\n\n// Gradients\nlet prefixGradients = require('caniuse-lite/data/features/css-gradients')\n\nf(prefixGradients, { match: /y\\sx/ }, browsers =>\n  prefix(\n    [\n      'linear-gradient',\n      'repeating-linear-gradient',\n      'radial-gradient',\n      'repeating-radial-gradient'\n    ],\n    {\n      props: [\n        'background',\n        'background-image',\n        'border-image',\n        'mask',\n        'list-style',\n        'list-style-image',\n        'content',\n        'mask-image'\n      ],\n      mistakes: ['-ms-'],\n      feature: 'css-gradients',\n      browsers\n    }\n  )\n)\n\nf(prefixGradients, { match: /a\\sx/ }, browsers => {\n  browsers = browsers.map(i => {\n    if (/firefox|op/.test(i)) {\n      return i\n    } else {\n      return `${i} old`\n    }\n  })\n  return add(\n    [\n      'linear-gradient',\n      'repeating-linear-gradient',\n      'radial-gradient',\n      'repeating-radial-gradient'\n    ],\n    {\n      feature: 'css-gradients',\n      browsers\n    }\n  )\n})\n\n// Box sizing\nlet prefixBoxsizing = require('caniuse-lite/data/features/css3-boxsizing')\n\nf(prefixBoxsizing, browsers =>\n  prefix(['box-sizing'], {\n    feature: 'css3-boxsizing',\n    browsers\n  })\n)\n\n// Filter Effects\nlet prefixFilters = require('caniuse-lite/data/features/css-filters')\n\nf(prefixFilters, browsers =>\n  prefix(['filter'], {\n    feature: 'css-filters',\n    browsers\n  })\n)\n\n// filter() function\nlet prefixFilterFunction = require('caniuse-lite/data/features/css-filter-function')\n\nf(prefixFilterFunction, browsers =>\n  prefix(['filter-function'], {\n    props: [\n      'background',\n      'background-image',\n      'border-image',\n      'mask',\n      'list-style',\n      'list-style-image',\n      'content',\n      'mask-image'\n    ],\n    feature: 'css-filter-function',\n    browsers\n  })\n)\n\n// Backdrop-filter\nlet prefixBackdrop = require('caniuse-lite/data/features/css-backdrop-filter')\n\nf(prefixBackdrop, { match: /y\\sx|y\\s#2/ }, browsers =>\n  prefix(['backdrop-filter'], {\n    feature: 'css-backdrop-filter',\n    browsers\n  })\n)\n\n// element() function\nlet prefixElementFunction = require('caniuse-lite/data/features/css-element-function')\n\nf(prefixElementFunction, browsers =>\n  prefix(['element'], {\n    props: [\n      'background',\n      'background-image',\n      'border-image',\n      'mask',\n      'list-style',\n      'list-style-image',\n      'content',\n      'mask-image'\n    ],\n    feature: 'css-element-function',\n    browsers\n  })\n)\n\n// Multicolumns\nlet prefixMulticolumns = require('caniuse-lite/data/features/multicolumn')\n\nf(prefixMulticolumns, browsers => {\n  prefix(\n    [\n      'columns',\n      'column-width',\n      'column-gap',\n      'column-rule',\n      'column-rule-color',\n      'column-rule-width',\n      'column-count',\n      'column-rule-style',\n      'column-span',\n      'column-fill'\n    ],\n    {\n      feature: 'multicolumn',\n      browsers\n    }\n  )\n\n  let noff = browsers.filter(i => !/firefox/.test(i))\n  prefix(['break-before', 'break-after', 'break-inside'], {\n    feature: 'multicolumn',\n    browsers: noff\n  })\n})\n\n// User select\nlet prefixUserSelect = require('caniuse-lite/data/features/user-select-none')\n\nf(prefixUserSelect, browsers =>\n  prefix(['user-select'], {\n    mistakes: ['-khtml-'],\n    feature: 'user-select-none',\n    browsers\n  })\n)\n\n// Flexible Box Layout\nlet prefixFlexbox = require('caniuse-lite/data/features/flexbox')\n\nf(prefixFlexbox, { match: /a\\sx/ }, browsers => {\n  browsers = browsers.map(i => {\n    if (/ie|firefox/.test(i)) {\n      return i\n    } else {\n      return `${i} 2009`\n    }\n  })\n  prefix(['display-flex', 'inline-flex'], {\n    props: ['display'],\n    feature: 'flexbox',\n    browsers\n  })\n  prefix(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {\n    feature: 'flexbox',\n    browsers\n  })\n  prefix(\n    [\n      'flex-direction',\n      'flex-wrap',\n      'flex-flow',\n      'justify-content',\n      'order',\n      'align-items',\n      'align-self',\n      'align-content'\n    ],\n    {\n      feature: 'flexbox',\n      browsers\n    }\n  )\n})\n\nf(prefixFlexbox, { match: /y\\sx/ }, browsers => {\n  add(['display-flex', 'inline-flex'], {\n    feature: 'flexbox',\n    browsers\n  })\n  add(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {\n    feature: 'flexbox',\n    browsers\n  })\n  add(\n    [\n      'flex-direction',\n      'flex-wrap',\n      'flex-flow',\n      'justify-content',\n      'order',\n      'align-items',\n      'align-self',\n      'align-content'\n    ],\n    {\n      feature: 'flexbox',\n      browsers\n    }\n  )\n})\n\n// calc() unit\nlet prefixCalc = require('caniuse-lite/data/features/calc')\n\nf(prefixCalc, browsers =>\n  prefix(['calc'], {\n    props: ['*'],\n    feature: 'calc',\n    browsers\n  })\n)\n\n// Background options\nlet prefixBackgroundOptions = require('caniuse-lite/data/features/background-img-opts')\n\nf(prefixBackgroundOptions, browsers =>\n  prefix(['background-origin', 'background-size'], {\n    feature: 'background-img-opts',\n    browsers\n  })\n)\n\n// background-clip: text\nlet prefixBackgroundClipText = require('caniuse-lite/data/features/background-clip-text')\n\nf(prefixBackgroundClipText, browsers =>\n  prefix(['background-clip'], {\n    feature: 'background-clip-text',\n    browsers\n  })\n)\n\n// Font feature settings\nlet prefixFontFeature = require('caniuse-lite/data/features/font-feature')\n\nf(prefixFontFeature, browsers =>\n  prefix(\n    [\n      'font-feature-settings',\n      'font-variant-ligatures',\n      'font-language-override'\n    ],\n    {\n      feature: 'font-feature',\n      browsers\n    }\n  )\n)\n\n// CSS font-kerning property\nlet prefixFontKerning = require('caniuse-lite/data/features/font-kerning')\n\nf(prefixFontKerning, browsers =>\n  prefix(['font-kerning'], {\n    feature: 'font-kerning',\n    browsers\n  })\n)\n\n// Border image\nlet prefixBorderImage = require('caniuse-lite/data/features/border-image')\n\nf(prefixBorderImage, browsers =>\n  prefix(['border-image'], {\n    feature: 'border-image',\n    browsers\n  })\n)\n\n// Selection selector\nlet prefixSelection = require('caniuse-lite/data/features/css-selection')\n\nf(prefixSelection, browsers =>\n  prefix(['::selection'], {\n    selector: true,\n    feature: 'css-selection',\n    browsers\n  })\n)\n\n// Placeholder selector\nlet prefixPlaceholder = require('caniuse-lite/data/features/css-placeholder')\n\nf(prefixPlaceholder, browsers => {\n  prefix(['::placeholder'], {\n    selector: true,\n    feature: 'css-placeholder',\n    browsers: browsers.concat(['ie 10 old', 'ie 11 old', 'firefox 18 old'])\n  })\n})\n\n// Placeholder-shown selector\nlet prefixPlaceholderShown = require('caniuse-lite/data/features/css-placeholder-shown')\n\nf(prefixPlaceholderShown, browsers => {\n  prefix([':placeholder-shown'], {\n    selector: true,\n    feature: 'css-placeholder-shown',\n    browsers\n  })\n})\n\n// Hyphenation\nlet prefixHyphens = require('caniuse-lite/data/features/css-hyphens')\n\nf(prefixHyphens, browsers =>\n  prefix(['hyphens'], {\n    feature: 'css-hyphens',\n    browsers\n  })\n)\n\n// Fullscreen selector\nlet prefixFullscreen = require('caniuse-lite/data/features/fullscreen')\n\nf(prefixFullscreen, browsers =>\n  prefix([':fullscreen'], {\n    selector: true,\n    feature: 'fullscreen',\n    browsers\n  })\n)\n\nf(prefixFullscreen, { match: /x(\\s#2|$)/ }, browsers =>\n  prefix(['::backdrop'], {\n    selector: true,\n    feature: 'fullscreen',\n    browsers\n  })\n)\n\n// File selector button\nlet prefixFileSelectorButton = require('caniuse-lite/data/features/css-file-selector-button')\n\nf(prefixFileSelectorButton, browsers =>\n  prefix(['::file-selector-button'], {\n    selector: true,\n    feature: 'file-selector-button',\n    browsers\n  })\n)\n\n// :autofill\nlet prefixAutofill = require('caniuse-lite/data/features/css-autofill')\n\nf(prefixAutofill, browsers =>\n  prefix([':autofill'], {\n    selector: true,\n    feature: 'css-autofill',\n    browsers\n  })\n)\n\n// Tab size\nlet prefixTabsize = require('caniuse-lite/data/features/css3-tabsize')\n\nf(prefixTabsize, browsers =>\n  prefix(['tab-size'], {\n    feature: 'css3-tabsize',\n    browsers\n  })\n)\n\n// Intrinsic & extrinsic sizing\nlet prefixIntrinsic = require('caniuse-lite/data/features/intrinsic-width')\n\nlet sizeProps = [\n  'width',\n  'min-width',\n  'max-width',\n  'height',\n  'min-height',\n  'max-height',\n  'inline-size',\n  'min-inline-size',\n  'max-inline-size',\n  'block-size',\n  'min-block-size',\n  'max-block-size',\n  'grid',\n  'grid-template',\n  'grid-template-rows',\n  'grid-template-columns',\n  'grid-auto-columns',\n  'grid-auto-rows'\n]\n\nf(prefixIntrinsic, browsers =>\n  prefix(['max-content', 'min-content'], {\n    props: sizeProps,\n    feature: 'intrinsic-width',\n    browsers\n  })\n)\n\nf(prefixIntrinsic, { match: /x|\\s#4/ }, browsers =>\n  prefix(['fill', 'fill-available'], {\n    props: sizeProps,\n    feature: 'intrinsic-width',\n    browsers\n  })\n)\n\nf(prefixIntrinsic, { match: /x|\\s#5/ }, browsers =>\n  prefix(['fit-content'], {\n    props: sizeProps,\n    feature: 'intrinsic-width',\n    browsers\n  })\n)\n\n// Stretch value\n\nlet prefixStretch = require('caniuse-lite/data/features/css-width-stretch')\n\nf(prefixStretch, browsers =>\n  prefix(['stretch'], {\n    props: sizeProps,\n    feature: 'css-width-stretch',\n    browsers\n  })\n)\n\n// Zoom cursors\nlet prefixCursorsNewer = require('caniuse-lite/data/features/css3-cursors-newer')\n\nf(prefixCursorsNewer, browsers =>\n  prefix(['zoom-in', 'zoom-out'], {\n    props: ['cursor'],\n    feature: 'css3-cursors-newer',\n    browsers\n  })\n)\n\n// Grab cursors\nlet prefixCursorsGrab = require('caniuse-lite/data/features/css3-cursors-grab')\n\nf(prefixCursorsGrab, browsers =>\n  prefix(['grab', 'grabbing'], {\n    props: ['cursor'],\n    feature: 'css3-cursors-grab',\n    browsers\n  })\n)\n\n// Sticky position\nlet prefixSticky = require('caniuse-lite/data/features/css-sticky')\n\nf(prefixSticky, browsers =>\n  prefix(['sticky'], {\n    props: ['position'],\n    feature: 'css-sticky',\n    browsers\n  })\n)\n\n// Pointer Events\nlet prefixPointer = require('caniuse-lite/data/features/pointer')\n\nf(prefixPointer, browsers =>\n  prefix(['touch-action'], {\n    feature: 'pointer',\n    browsers\n  })\n)\n\n// Text decoration\nlet prefixDecoration = require('caniuse-lite/data/features/text-decoration')\n\nf(prefixDecoration, { match: /x.*#[235]/ }, browsers =>\n  prefix(['text-decoration-skip', 'text-decoration-skip-ink'], {\n    feature: 'text-decoration',\n    browsers\n  })\n)\n\nlet prefixDecorationShorthand = require('caniuse-lite/data/features/mdn-text-decoration-shorthand')\n\nf(prefixDecorationShorthand, browsers =>\n  prefix(['text-decoration'], {\n    feature: 'text-decoration',\n    browsers\n  })\n)\n\nlet prefixDecorationColor = require('caniuse-lite/data/features/mdn-text-decoration-color')\n\nf(prefixDecorationColor, browsers =>\n  prefix(['text-decoration-color'], {\n    feature: 'text-decoration',\n    browsers\n  })\n)\n\nlet prefixDecorationLine = require('caniuse-lite/data/features/mdn-text-decoration-line')\n\nf(prefixDecorationLine, browsers =>\n  prefix(['text-decoration-line'], {\n    feature: 'text-decoration',\n    browsers\n  })\n)\n\nlet prefixDecorationStyle = require('caniuse-lite/data/features/mdn-text-decoration-style')\n\nf(prefixDecorationStyle, browsers =>\n  prefix(['text-decoration-style'], {\n    feature: 'text-decoration',\n    browsers\n  })\n)\n\n// Text Size Adjust\nlet prefixTextSizeAdjust = require('caniuse-lite/data/features/text-size-adjust')\n\nf(prefixTextSizeAdjust, browsers =>\n  prefix(['text-size-adjust'], {\n    feature: 'text-size-adjust',\n    browsers\n  })\n)\n\n// CSS Masks\nlet prefixCssMasks = require('caniuse-lite/data/features/css-masks')\n\nf(prefixCssMasks, browsers => {\n  prefix(\n    [\n      'mask-clip',\n      'mask-composite',\n      'mask-image',\n      'mask-origin',\n      'mask-repeat',\n      'mask-border-repeat',\n      'mask-border-source'\n    ],\n    {\n      feature: 'css-masks',\n      browsers\n    }\n  )\n  prefix(\n    [\n      'mask',\n      'mask-position',\n      'mask-size',\n      'mask-border',\n      'mask-border-outset',\n      'mask-border-width',\n      'mask-border-slice'\n    ],\n    {\n      feature: 'css-masks',\n      browsers\n    }\n  )\n})\n\n// CSS clip-path property\nlet prefixClipPath = require('caniuse-lite/data/features/css-clip-path')\n\nf(prefixClipPath, browsers =>\n  prefix(['clip-path'], {\n    feature: 'css-clip-path',\n    browsers\n  })\n)\n\n// Fragmented Borders and Backgrounds\nlet prefixBoxdecoration = require('caniuse-lite/data/features/css-boxdecorationbreak')\n\nf(prefixBoxdecoration, browsers =>\n  prefix(['box-decoration-break'], {\n    feature: 'css-boxdecorationbreak',\n    browsers\n  })\n)\n\n// CSS3 object-fit/object-position\nlet prefixObjectFit = require('caniuse-lite/data/features/object-fit')\n\nf(prefixObjectFit, browsers =>\n  prefix(['object-fit', 'object-position'], {\n    feature: 'object-fit',\n    browsers\n  })\n)\n\n// CSS Shapes\nlet prefixShapes = require('caniuse-lite/data/features/css-shapes')\n\nf(prefixShapes, browsers =>\n  prefix(['shape-margin', 'shape-outside', 'shape-image-threshold'], {\n    feature: 'css-shapes',\n    browsers\n  })\n)\n\n// CSS3 text-overflow\nlet prefixTextOverflow = require('caniuse-lite/data/features/text-overflow')\n\nf(prefixTextOverflow, browsers =>\n  prefix(['text-overflow'], {\n    feature: 'text-overflow',\n    browsers\n  })\n)\n\n// Viewport at-rule\nlet prefixDeviceadaptation = require('caniuse-lite/data/features/css-deviceadaptation')\n\nf(prefixDeviceadaptation, browsers =>\n  prefix(['@viewport'], {\n    feature: 'css-deviceadaptation',\n    browsers\n  })\n)\n\n// Resolution Media Queries\nlet prefixResolut = require('caniuse-lite/data/features/css-media-resolution')\n\nf(prefixResolut, { match: /( x($| )|a #2)/ }, browsers =>\n  prefix(['@resolution'], {\n    feature: 'css-media-resolution',\n    browsers\n  })\n)\n\n// CSS text-align-last\nlet prefixTextAlignLast = require('caniuse-lite/data/features/css-text-align-last')\n\nf(prefixTextAlignLast, browsers =>\n  prefix(['text-align-last'], {\n    feature: 'css-text-align-last',\n    browsers\n  })\n)\n\n// Crisp Edges Image Rendering Algorithm\nlet prefixCrispedges = require('caniuse-lite/data/features/css-crisp-edges')\n\nf(prefixCrispedges, { match: /y x|a x #1/ }, browsers =>\n  prefix(['pixelated'], {\n    props: ['image-rendering'],\n    feature: 'css-crisp-edges',\n    browsers\n  })\n)\n\nf(prefixCrispedges, { match: /a x #2/ }, browsers =>\n  prefix(['image-rendering'], {\n    feature: 'css-crisp-edges',\n    browsers\n  })\n)\n\n// Logical Properties\nlet prefixLogicalProps = require('caniuse-lite/data/features/css-logical-props')\n\nf(prefixLogicalProps, browsers =>\n  prefix(\n    [\n      'border-inline-start',\n      'border-inline-end',\n      'margin-inline-start',\n      'margin-inline-end',\n      'padding-inline-start',\n      'padding-inline-end'\n    ],\n    {\n      feature: 'css-logical-props',\n      browsers\n    }\n  )\n)\n\nf(prefixLogicalProps, { match: /x\\s#2/ }, browsers =>\n  prefix(\n    [\n      'border-block-start',\n      'border-block-end',\n      'margin-block-start',\n      'margin-block-end',\n      'padding-block-start',\n      'padding-block-end'\n    ],\n    {\n      feature: 'css-logical-props',\n      browsers\n    }\n  )\n)\n\n// CSS appearance\nlet prefixAppearance = require('caniuse-lite/data/features/css-appearance')\n\nf(prefixAppearance, { match: /#2|x/ }, browsers =>\n  prefix(['appearance'], {\n    feature: 'css-appearance',\n    browsers\n  })\n)\n\n// CSS Scroll snap points\nlet prefixSnappoints = require('caniuse-lite/data/features/css-snappoints')\n\nf(prefixSnappoints, browsers =>\n  prefix(\n    [\n      'scroll-snap-type',\n      'scroll-snap-coordinate',\n      'scroll-snap-destination',\n      'scroll-snap-points-x',\n      'scroll-snap-points-y'\n    ],\n    {\n      feature: 'css-snappoints',\n      browsers\n    }\n  )\n)\n\n// CSS Regions\nlet prefixRegions = require('caniuse-lite/data/features/css-regions')\n\nf(prefixRegions, browsers =>\n  prefix(['flow-into', 'flow-from', 'region-fragment'], {\n    feature: 'css-regions',\n    browsers\n  })\n)\n\n// CSS image-set\nlet prefixImageSet = require('caniuse-lite/data/features/css-image-set')\n\nf(prefixImageSet, browsers =>\n  prefix(['image-set'], {\n    props: [\n      'background',\n      'background-image',\n      'border-image',\n      'cursor',\n      'mask',\n      'mask-image',\n      'list-style',\n      'list-style-image',\n      'content'\n    ],\n    feature: 'css-image-set',\n    browsers\n  })\n)\n\n// Writing Mode\nlet prefixWritingMode = require('caniuse-lite/data/features/css-writing-mode')\n\nf(prefixWritingMode, { match: /a|x/ }, browsers =>\n  prefix(['writing-mode'], {\n    feature: 'css-writing-mode',\n    browsers\n  })\n)\n\n// Cross-Fade Function\nlet prefixCrossFade = require('caniuse-lite/data/features/css-cross-fade')\n\nf(prefixCrossFade, browsers =>\n  prefix(['cross-fade'], {\n    props: [\n      'background',\n      'background-image',\n      'border-image',\n      'mask',\n      'list-style',\n      'list-style-image',\n      'content',\n      'mask-image'\n    ],\n    feature: 'css-cross-fade',\n    browsers\n  })\n)\n\n// Read Only selector\nlet prefixReadOnly = require('caniuse-lite/data/features/css-read-only-write')\n\nf(prefixReadOnly, browsers =>\n  prefix([':read-only', ':read-write'], {\n    selector: true,\n    feature: 'css-read-only-write',\n    browsers\n  })\n)\n\n// Text Emphasize\nlet prefixTextEmphasis = require('caniuse-lite/data/features/text-emphasis')\n\nf(prefixTextEmphasis, browsers =>\n  prefix(\n    [\n      'text-emphasis',\n      'text-emphasis-position',\n      'text-emphasis-style',\n      'text-emphasis-color'\n    ],\n    {\n      feature: 'text-emphasis',\n      browsers\n    }\n  )\n)\n\n// CSS Grid Layout\nlet prefixGrid = require('caniuse-lite/data/features/css-grid')\n\nf(prefixGrid, browsers => {\n  prefix(['display-grid', 'inline-grid'], {\n    props: ['display'],\n    feature: 'css-grid',\n    browsers\n  })\n  prefix(\n    [\n      'grid-template-columns',\n      'grid-template-rows',\n      'grid-row-start',\n      'grid-column-start',\n      'grid-row-end',\n      'grid-column-end',\n      'grid-row',\n      'grid-column',\n      'grid-area',\n      'grid-template',\n      'grid-template-areas',\n      'place-self'\n    ],\n    {\n      feature: 'css-grid',\n      browsers\n    }\n  )\n})\n\nf(prefixGrid, { match: /a x/ }, browsers =>\n  prefix(['grid-column-align', 'grid-row-align'], {\n    feature: 'css-grid',\n    browsers\n  })\n)\n\n// CSS text-spacing\nlet prefixTextSpacing = require('caniuse-lite/data/features/css-text-spacing')\n\nf(prefixTextSpacing, browsers =>\n  prefix(['text-spacing'], {\n    feature: 'css-text-spacing',\n    browsers\n  })\n)\n\n// :any-link selector\nlet prefixAnyLink = require('caniuse-lite/data/features/css-any-link')\n\nf(prefixAnyLink, browsers =>\n  prefix([':any-link'], {\n    selector: true,\n    feature: 'css-any-link',\n    browsers\n  })\n)\n\n// unicode-bidi\n\nlet bidiIsolate = require('caniuse-lite/data/features/mdn-css-unicode-bidi-isolate')\n\nf(bidiIsolate, browsers =>\n  prefix(['isolate'], {\n    props: ['unicode-bidi'],\n    feature: 'css-unicode-bidi',\n    browsers\n  })\n)\n\nlet bidiPlaintext = require('caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext')\n\nf(bidiPlaintext, browsers =>\n  prefix(['plaintext'], {\n    props: ['unicode-bidi'],\n    feature: 'css-unicode-bidi',\n    browsers\n  })\n)\n\nlet bidiOverride = require('caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override')\n\nf(bidiOverride, { match: /y x/ }, browsers =>\n  prefix(['isolate-override'], {\n    props: ['unicode-bidi'],\n    feature: 'css-unicode-bidi',\n    browsers\n  })\n)\n\n// overscroll-behavior selector\nlet prefixOverscroll = require('caniuse-lite/data/features/css-overscroll-behavior')\n\nf(prefixOverscroll, { match: /a #1/ }, browsers =>\n  prefix(['overscroll-behavior'], {\n    feature: 'css-overscroll-behavior',\n    browsers\n  })\n)\n\n// text-orientation\nlet prefixTextOrientation = require('caniuse-lite/data/features/css-text-orientation')\n\nf(prefixTextOrientation, browsers =>\n  prefix(['text-orientation'], {\n    feature: 'css-text-orientation',\n    browsers\n  })\n)\n\n// print-color-adjust\nlet prefixPrintAdjust = require('caniuse-lite/data/features/css-print-color-adjust')\n\nf(prefixPrintAdjust, browsers =>\n  prefix(['print-color-adjust', 'color-adjust'], {\n    feature: 'css-print-color-adjust',\n    browsers\n  })\n)\n","let Prefixer = require('./prefixer')\n\nclass AtRule extends Prefixer {\n  /**\n   * Clone and add prefixes for at-rule\n   */\n  add(rule, prefix) {\n    let prefixed = prefix + rule.name\n\n    let already = rule.parent.some(\n      i => i.name === prefixed && i.params === rule.params\n    )\n    if (already) {\n      return undefined\n    }\n\n    let cloned = this.clone(rule, { name: prefixed })\n    return rule.parent.insertBefore(rule, cloned)\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node) {\n    let parent = this.parentPrefix(node)\n\n    for (let prefix of this.prefixes) {\n      if (!parent || parent === prefix) {\n        this.add(node, prefix)\n      }\n    }\n  }\n}\n\nmodule.exports = AtRule\n","let browserslist = require('browserslist')\nlet { agents } = require('caniuse-lite')\nlet pico = require('picocolors')\n\nlet Browsers = require('./browsers')\nlet Prefixes = require('./prefixes')\nlet dataPrefixes = require('../data/prefixes')\nlet getInfo = require('./info')\n\nlet autoprefixerData = { browsers: agents, prefixes: dataPrefixes }\n\nconst WARNING =\n  '\\n' +\n  '  Replace Autoprefixer `browsers` option to Browserslist config.\\n' +\n  '  Use `browserslist` key in `package.json` or `.browserslistrc` file.\\n' +\n  '\\n' +\n  '  Using `browsers` option can cause errors. Browserslist config can\\n' +\n  '  be used for Babel, Autoprefixer, postcss-normalize and other tools.\\n' +\n  '\\n' +\n  '  If you really need to use option, rename it to `overrideBrowserslist`.\\n' +\n  '\\n' +\n  '  Learn more at:\\n' +\n  '  https://github.com/browserslist/browserslist#readme\\n' +\n  '  https://twitter.com/browserslist\\n' +\n  '\\n'\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.apply(obj) === '[object Object]'\n}\n\nlet cache = new Map()\n\nfunction timeCapsule(result, prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return\n  }\n  if (prefixes.add.selectors.length > 0) {\n    return\n  }\n  if (Object.keys(prefixes.add).length > 2) {\n    return\n  }\n  /* c8 ignore next 11 */\n  result.warn(\n    'Autoprefixer target browsers do not need any prefixes.' +\n      'You do not need Autoprefixer anymore.\\n' +\n      'Check your Browserslist config to be sure that your targets ' +\n      'are set up correctly.\\n' +\n      '\\n' +\n      '  Learn more at:\\n' +\n      '  https://github.com/postcss/autoprefixer#readme\\n' +\n      '  https://github.com/browserslist/browserslist#readme\\n' +\n      '\\n'\n  )\n}\n\nmodule.exports = plugin\n\nfunction plugin(...reqs) {\n  let options\n  if (reqs.length === 1 && isPlainObject(reqs[0])) {\n    options = reqs[0]\n    reqs = undefined\n  } else if (reqs.length === 0 || (reqs.length === 1 && !reqs[0])) {\n    reqs = undefined\n  } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {\n    options = reqs[1]\n    reqs = reqs[0]\n  } else if (typeof reqs[reqs.length - 1] === 'object') {\n    options = reqs.pop()\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  if (options.browser) {\n    throw new Error(\n      'Change `browser` option to `overrideBrowserslist` in Autoprefixer'\n    )\n  } else if (options.browserslist) {\n    throw new Error(\n      'Change `browserslist` option to `overrideBrowserslist` in Autoprefixer'\n    )\n  }\n\n  if (options.overrideBrowserslist) {\n    reqs = options.overrideBrowserslist\n  } else if (options.browsers) {\n    if (typeof console !== 'undefined' && console.warn) {\n      console.warn(\n        pico.red(WARNING.replace(/`[^`]+`/g, i => pico.yellow(i.slice(1, -1))))\n      )\n    }\n    reqs = options.browsers\n  }\n\n  let brwlstOpts = {\n    ignoreUnknownVersions: options.ignoreUnknownVersions,\n    stats: options.stats,\n    env: options.env\n  }\n\n  function loadPrefixes(opts) {\n    let d = autoprefixerData\n    let browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts)\n    let key = browsers.selected.join(', ') + JSON.stringify(options)\n\n    if (!cache.has(key)) {\n      cache.set(key, new Prefixes(d.prefixes, browsers, options))\n    }\n\n    return cache.get(key)\n  }\n\n  return {\n    postcssPlugin: 'autoprefixer',\n\n    prepare(result) {\n      let prefixes = loadPrefixes({\n        from: result.opts.from,\n        env: options.env\n      })\n\n      return {\n        OnceExit(root) {\n          timeCapsule(result, prefixes)\n          if (options.remove !== false) {\n            prefixes.processor.remove(root, result)\n          }\n          if (options.add !== false) {\n            prefixes.processor.add(root, result)\n          }\n        }\n      }\n    },\n\n    info(opts) {\n      opts = opts || {}\n      opts.from = opts.from || process.cwd()\n      return getInfo(loadPrefixes(opts))\n    },\n\n    options,\n    browsers: reqs\n  }\n}\n\nplugin.postcss = true\n\n/**\n * Autoprefixer data\n */\nplugin.data = autoprefixerData\n\n/**\n * Autoprefixer default browsers\n */\nplugin.defaults = browserslist.defaults\n\n/**\n * Inspect with default Autoprefixer\n */\nplugin.info = () => plugin().info()\n","function last(array) {\n  return array[array.length - 1]\n}\n\nlet brackets = {\n  /**\n   * Parse string to nodes tree\n   */\n  parse(str) {\n    let current = ['']\n    let stack = [current]\n\n    for (let sym of str) {\n      if (sym === '(') {\n        current = ['']\n        last(stack).push(current)\n        stack.push(current)\n        continue\n      }\n\n      if (sym === ')') {\n        stack.pop()\n        current = last(stack)\n        current.push('')\n        continue\n      }\n\n      current[current.length - 1] += sym\n    }\n\n    return stack[0]\n  },\n\n  /**\n   * Generate output string by nodes tree\n   */\n  stringify(ast) {\n    let result = ''\n    for (let i of ast) {\n      if (typeof i === 'object') {\n        result += `(${brackets.stringify(i)})`\n        continue\n      }\n\n      result += i\n    }\n    return result\n  }\n}\n\nmodule.exports = brackets\n","let browserslist = require('browserslist')\nlet agents = require('caniuse-lite').agents\n\nlet utils = require('./utils')\n\nclass Browsers {\n  /**\n   * Return all prefixes for default browser data\n   */\n  static prefixes() {\n    if (this.prefixesCache) {\n      return this.prefixesCache\n    }\n\n    this.prefixesCache = []\n    for (let name in agents) {\n      this.prefixesCache.push(`-${agents[name].prefix}-`)\n    }\n\n    this.prefixesCache = utils\n      .uniq(this.prefixesCache)\n      .sort((a, b) => b.length - a.length)\n\n    return this.prefixesCache\n  }\n\n  /**\n   * Check is value contain any possible prefix\n   */\n  static withPrefix(value) {\n    if (!this.prefixesRegexp) {\n      this.prefixesRegexp = new RegExp(this.prefixes().join('|'))\n    }\n\n    return this.prefixesRegexp.test(value)\n  }\n\n  constructor(data, requirements, options, browserslistOpts) {\n    this.data = data\n    this.options = options || {}\n    this.browserslistOpts = browserslistOpts || {}\n    this.selected = this.parse(requirements)\n  }\n\n  /**\n   * Return browsers selected by requirements\n   */\n  parse(requirements) {\n    let opts = {}\n    for (let i in this.browserslistOpts) {\n      opts[i] = this.browserslistOpts[i]\n    }\n    opts.path = this.options.from\n    return browserslist(requirements, opts)\n  }\n\n  /**\n   * Return prefix for selected browser\n   */\n  prefix(browser) {\n    let [name, version] = browser.split(' ')\n    let data = this.data[name]\n\n    let prefix = data.prefix_exceptions && data.prefix_exceptions[version]\n    if (!prefix) {\n      prefix = data.prefix\n    }\n    return `-${prefix}-`\n  }\n\n  /**\n   * Is browser is selected by requirements\n   */\n  isSelected(browser) {\n    return this.selected.includes(browser)\n  }\n}\n\nmodule.exports = Browsers\n","let Prefixer = require('./prefixer')\nlet Browsers = require('./browsers')\nlet utils = require('./utils')\n\nclass Declaration extends Prefixer {\n  /**\n   * Always true, because we already get prefixer by property name\n   */\n  check(/* decl */) {\n    return true\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    return prefix + prop\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  normalize(prop) {\n    return prop\n  }\n\n  /**\n   * Check `value`, that it contain other prefixes, rather than `prefix`\n   */\n  otherPrefixes(value, prefix) {\n    for (let other of Browsers.prefixes()) {\n      if (other === prefix) {\n        continue\n      }\n      if (value.includes(other)) {\n        return value.replace(/var\\([^)]+\\)/, '').includes(other)\n      }\n    }\n    return false\n  }\n\n  /**\n   * Set prefix to declaration\n   */\n  set(decl, prefix) {\n    decl.prop = this.prefixed(decl.prop, prefix)\n    return decl\n  }\n\n  /**\n   * Should we use visual cascade for prefixes\n   */\n  needCascade(decl) {\n    if (!decl._autoprefixerCascade) {\n      decl._autoprefixerCascade =\n        this.all.options.cascade !== false && decl.raw('before').includes('\\n')\n    }\n    return decl._autoprefixerCascade\n  }\n\n  /**\n   * Return maximum length of possible prefixed property\n   */\n  maxPrefixed(prefixes, decl) {\n    if (decl._autoprefixerMax) {\n      return decl._autoprefixerMax\n    }\n\n    let max = 0\n    for (let prefix of prefixes) {\n      prefix = utils.removeNote(prefix)\n      if (prefix.length > max) {\n        max = prefix.length\n      }\n    }\n    decl._autoprefixerMax = max\n\n    return decl._autoprefixerMax\n  }\n\n  /**\n   * Calculate indentation to create visual cascade\n   */\n  calcBefore(prefixes, decl, prefix = '') {\n    let max = this.maxPrefixed(prefixes, decl)\n    let diff = max - utils.removeNote(prefix).length\n\n    let before = decl.raw('before')\n    if (diff > 0) {\n      before += Array(diff).fill(' ').join('')\n    }\n\n    return before\n  }\n\n  /**\n   * Remove visual cascade\n   */\n  restoreBefore(decl) {\n    let lines = decl.raw('before').split('\\n')\n    let min = lines[lines.length - 1]\n\n    this.all.group(decl).up(prefixed => {\n      let array = prefixed.raw('before').split('\\n')\n      let last = array[array.length - 1]\n      if (last.length < min.length) {\n        min = last\n      }\n    })\n\n    lines[lines.length - 1] = min\n    decl.raws.before = lines.join('\\n')\n  }\n\n  /**\n   * Clone and insert new declaration\n   */\n  insert(decl, prefix, prefixes) {\n    let cloned = this.set(this.clone(decl), prefix)\n    if (!cloned) return undefined\n\n    let already = decl.parent.some(\n      i => i.prop === cloned.prop && i.value === cloned.value\n    )\n    if (already) {\n      return undefined\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n\n  /**\n   * Did this declaration has this prefix above\n   */\n  isAlready(decl, prefixed) {\n    let already = this.all.group(decl).up(i => i.prop === prefixed)\n    if (!already) {\n      already = this.all.group(decl).down(i => i.prop === prefixed)\n    }\n    return already\n  }\n\n  /**\n   * Clone and add prefixes for declaration\n   */\n  add(decl, prefix, prefixes, result) {\n    let prefixed = this.prefixed(decl.prop, prefix)\n    if (\n      this.isAlready(decl, prefixed) ||\n      this.otherPrefixes(decl.value, prefix)\n    ) {\n      return undefined\n    }\n    return this.insert(decl, prefix, prefixes, result)\n  }\n\n  /**\n   * Add spaces for visual cascade\n   */\n  process(decl, result) {\n    if (!this.needCascade(decl)) {\n      super.process(decl, result)\n      return\n    }\n\n    let prefixes = super.process(decl, result)\n\n    if (!prefixes || !prefixes.length) {\n      return\n    }\n\n    this.restoreBefore(decl)\n    decl.raws.before = this.calcBefore(prefixes, decl)\n  }\n\n  /**\n   * Return list of prefixed properties to clean old prefixes\n   */\n  old(prop, prefix) {\n    return [this.prefixed(prop, prefix)]\n  }\n}\n\nmodule.exports = Declaration\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignContent extends Declaration {\n  /**\n   * Change property name for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-line-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-content'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignContent.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignContent.names = ['align-content', 'flex-line-pack']\n\nAlignContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n}\n\nmodule.exports = AlignContent\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignItems extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-align'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-align'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-items'\n  }\n\n  /**\n   * Change value for 2009 and 2012 specs\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 || spec === 2012) {\n      decl.value = AlignItems.oldValues[decl.value] || decl.value\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nAlignItems.names = ['align-items', 'flex-align', 'box-align']\n\nAlignItems.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n}\n\nmodule.exports = AlignItems\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignSelf extends Declaration {\n  check(decl) {\n    return (\n      decl.parent &&\n      !decl.parent.some(i => {\n        return i.prop && i.prop.startsWith('grid-')\n      })\n    )\n  }\n\n  /**\n   * Change property name for 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-item-align'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-self'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignSelf.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignSelf.names = ['align-self', 'flex-item-align']\n\nAlignSelf.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n}\n\nmodule.exports = AlignSelf\n","let Declaration = require('../declaration')\n\nclass Animation extends Declaration {\n  /**\n   * Don’t add prefixes for modern values.\n   */\n  check(decl) {\n    return !decl.value.split(/\\s+/).some(i => {\n      let lower = i.toLowerCase()\n      return lower === 'reverse' || lower === 'alternate-reverse'\n    })\n  }\n}\n\nAnimation.names = ['animation', 'animation-direction']\n\nmodule.exports = Animation\n","let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass Appearance extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          if (i === '-ms-') {\n            return '-webkit-'\n          }\n          return i\n        })\n      )\n    }\n  }\n}\n\nAppearance.names = ['appearance']\n\nmodule.exports = Appearance\n","let Selector = require('../selector')\nlet utils = require('../utils')\n\nclass Autofill extends Selector {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(this.prefixes.map(() => '-webkit-'))\n    }\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return ':-webkit-autofill'\n    }\n    return `:${prefix}autofill`\n  }\n}\n\nAutofill.names = [':autofill']\n\nmodule.exports = Autofill\n","let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass BackdropFilter extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          return i === '-ms-' ? '-webkit-' : i\n        })\n      )\n    }\n  }\n}\n\nBackdropFilter.names = ['backdrop-filter']\n\nmodule.exports = BackdropFilter\n","let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass BackgroundClip extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          return i === '-ms-' ? '-webkit-' : i\n        })\n      )\n    }\n  }\n\n  check(decl) {\n    return decl.value.toLowerCase() === 'text'\n  }\n}\n\nBackgroundClip.names = ['background-clip']\n\nmodule.exports = BackgroundClip\n","let Declaration = require('../declaration')\n\nclass BackgroundSize extends Declaration {\n  /**\n   * Duplication parameter for -webkit- browsers\n   */\n  set(decl, prefix) {\n    let value = decl.value.toLowerCase()\n    if (\n      prefix === '-webkit-' &&\n      !value.includes(' ') &&\n      value !== 'contain' &&\n      value !== 'cover'\n    ) {\n      decl.value = decl.value + ' ' + decl.value\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nBackgroundSize.names = ['background-size']\n\nmodule.exports = BackgroundSize\n","let Declaration = require('../declaration')\n\nclass BlockLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before')\n    }\n    return prefix + prop.replace('-block-end', '-after')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start')\n    }\n    return prop.replace('-after', '-block-end')\n  }\n}\n\nBlockLogical.names = [\n  'border-block-start',\n  'border-block-end',\n  'margin-block-start',\n  'margin-block-end',\n  'padding-block-start',\n  'padding-block-end',\n  'border-before',\n  'border-after',\n  'margin-before',\n  'margin-after',\n  'padding-before',\n  'padding-after'\n]\n\nmodule.exports = BlockLogical\n","let Declaration = require('../declaration')\n\nclass BorderImage extends Declaration {\n  /**\n   * Remove fill parameter for prefixed declarations\n   */\n  set(decl, prefix) {\n    decl.value = decl.value.replace(/\\s+fill(\\s)/, '$1')\n    return super.set(decl, prefix)\n  }\n}\n\nBorderImage.names = ['border-image']\n\nmodule.exports = BorderImage\n","let Declaration = require('../declaration')\n\nclass BorderRadius extends Declaration {\n  /**\n   * Change syntax, when add Mozilla prefix\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-moz-') {\n      return prefix + (BorderRadius.toMozilla[prop] || prop)\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  normalize(prop) {\n    return BorderRadius.toNormal[prop] || prop\n  }\n}\n\nBorderRadius.names = ['border-radius']\n\nBorderRadius.toMozilla = {}\nBorderRadius.toNormal = {}\n\nfor (let ver of ['top', 'bottom']) {\n  for (let hor of ['left', 'right']) {\n    let normal = `border-${ver}-${hor}-radius`\n    let mozilla = `border-radius-${ver}${hor}`\n\n    BorderRadius.names.push(normal)\n    BorderRadius.names.push(mozilla)\n\n    BorderRadius.toMozilla[normal] = mozilla\n    BorderRadius.toNormal[mozilla] = normal\n  }\n}\n\nmodule.exports = BorderRadius\n","let Declaration = require('../declaration')\n\nclass BreakProps extends Declaration {\n  /**\n   * Change name for -webkit- and -moz- prefix\n   */\n  prefixed(prop, prefix) {\n    return `${prefix}column-${prop}`\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize(prop) {\n    if (prop.includes('inside')) {\n      return 'break-inside'\n    }\n    if (prop.includes('before')) {\n      return 'break-before'\n    }\n    return 'break-after'\n  }\n\n  /**\n   * Change prefixed value for avoid-column and avoid-page\n   */\n  set(decl, prefix) {\n    if (\n      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||\n      decl.value === 'avoid-page'\n    ) {\n      decl.value = 'avoid'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Don’t prefix some values\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.prop !== 'break-inside') {\n      return super.insert(decl, prefix, prefixes)\n    }\n    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n      return undefined\n    }\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nBreakProps.names = [\n  'break-inside',\n  'page-break-inside',\n  'column-break-inside',\n  'break-before',\n  'page-break-before',\n  'column-break-before',\n  'break-after',\n  'page-break-after',\n  'column-break-after'\n]\n\nmodule.exports = BreakProps\n","let list = require('postcss').list\n\nlet Value = require('../value')\n\nclass CrossFade extends Value {\n  replace(string, prefix) {\n    return list\n      .space(string)\n      .map(value => {\n        if (value.slice(0, +this.name.length + 1) !== this.name + '(') {\n          return value\n        }\n\n        let close = value.lastIndexOf(')')\n        let after = value.slice(close + 1)\n        let args = value.slice(this.name.length + 1, close)\n\n        if (prefix === '-webkit-') {\n          let match = args.match(/\\d*.?\\d+%?/)\n          if (match) {\n            args = args.slice(match[0].length).trim()\n            args += `, ${match[0]}`\n          } else {\n            args += ', 0.5'\n          }\n        }\n        return prefix + this.name + '(' + args + ')' + after\n      })\n      .join(' ')\n  }\n}\n\nCrossFade.names = ['cross-fade']\n\nmodule.exports = CrossFade\n","let flexSpec = require('./flex-spec')\nlet OldValue = require('../old-value')\nlet Value = require('../value')\n\nclass DisplayFlex extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'display-flex') {\n      this.name = 'flex'\n    }\n  }\n\n  /**\n   * Faster check for flex value\n   */\n  check(decl) {\n    return decl.prop === 'display' && decl.value === this.name\n  }\n\n  /**\n   * Return value by spec\n   */\n  prefixed(prefix) {\n    let spec, value\n    ;[spec, prefix] = flexSpec(prefix)\n\n    if (spec === 2009) {\n      if (this.name === 'flex') {\n        value = 'box'\n      } else {\n        value = 'inline-box'\n      }\n    } else if (spec === 2012) {\n      if (this.name === 'flex') {\n        value = 'flexbox'\n      } else {\n        value = 'inline-flexbox'\n      }\n    } else if (spec === 'final') {\n      value = this.name\n    }\n\n    return prefix + value\n  }\n\n  /**\n   * Add prefix to value depend on flebox spec version\n   */\n  replace(string, prefix) {\n    return this.prefixed(prefix)\n  }\n\n  /**\n   * Change value for old specs\n   */\n  old(prefix) {\n    let prefixed = this.prefixed(prefix)\n    if (!prefixed) return undefined\n    return new OldValue(this.name, prefixed)\n  }\n}\n\nDisplayFlex.names = ['display-flex', 'inline-flex']\n\nmodule.exports = DisplayFlex\n","let Value = require('../value')\n\nclass DisplayGrid extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'display-grid') {\n      this.name = 'grid'\n    }\n  }\n\n  /**\n   * Faster check for flex value\n   */\n  check(decl) {\n    return decl.prop === 'display' && decl.value === this.name\n  }\n}\n\nDisplayGrid.names = ['display-grid', 'inline-grid']\n\nmodule.exports = DisplayGrid\n","let Selector = require('../selector')\nlet utils = require('../utils')\n\nclass FileSelectorButton extends Selector {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(this.prefixes.map(() => '-webkit-'))\n    }\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return '::-webkit-file-upload-button'\n    }\n    return `::${prefix}file-selector-button`\n  }\n}\n\nFileSelectorButton.names = ['::file-selector-button']\n\nmodule.exports = FileSelectorButton\n","let Value = require('../value')\n\nclass FilterValue extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'filter-function') {\n      this.name = 'filter'\n    }\n  }\n}\n\nFilterValue.names = ['filter', 'filter-function']\n\nmodule.exports = FilterValue\n","let Declaration = require('../declaration')\n\nclass Filter extends Declaration {\n  /**\n   * Check is it Internet Explorer filter\n   */\n  check(decl) {\n    let v = decl.value\n    return (\n      !v.toLowerCase().includes('alpha(') &&\n      !v.includes('DXImageTransform.Microsoft') &&\n      !v.includes('data:image/svg+xml')\n    )\n  }\n}\n\nFilter.names = ['filter']\n\nmodule.exports = Filter\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexBasis extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-basis'\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-preferred-size'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n  set(decl, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexBasis.names = ['flex-basis', 'flex-preferred-size']\n\nmodule.exports = FlexBasis\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexDirection extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-direction'\n  }\n\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let v = decl.value\n    let orient, dir\n    if (v === 'inherit' || v === 'initial' || v === 'unset') {\n      orient = v\n      dir = v\n    } else {\n      orient = v.includes('row') ? 'horizontal' : 'vertical'\n      dir = v.includes('reverse') ? 'reverse' : 'normal'\n    }\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n\n  /**\n   * Clean two properties for 2009 spec\n   */\n  old(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return [prefix + 'box-orient', prefix + 'box-direction']\n    } else {\n      return super.old(prop, prefix)\n    }\n  }\n}\n\nFlexDirection.names = ['flex-direction', 'box-direction', 'box-orient']\n\nmodule.exports = FlexDirection\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexFlow extends Declaration {\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let values = decl.value\n      .split(/\\s+/)\n      .filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse')\n    if (values.length === 0) {\n      return undefined\n    }\n\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let value = values[0]\n    let orient = value.includes('row') ? 'horizontal' : 'vertical'\n    let dir = value.includes('reverse') ? 'reverse' : 'normal'\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n}\n\nFlexFlow.names = ['flex-flow', 'box-direction', 'box-orient']\n\nmodule.exports = FlexFlow\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Return flex property for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-positive'\n    }\n    return super.prefixed(prop, prefix)\n  }\n}\n\nFlex.names = ['flex-grow', 'flex-positive']\n\nmodule.exports = Flex\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexShrink extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-shrink'\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-negative'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n  set(decl, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexShrink.names = ['flex-shrink', 'flex-negative']\n\nmodule.exports = FlexShrink\n","/**\n * Return flexbox spec versions by prefix\n */\nmodule.exports = function (prefix) {\n  let spec\n  if (prefix === '-webkit- 2009' || prefix === '-moz-') {\n    spec = 2009\n  } else if (prefix === '-ms-') {\n    spec = 2012\n  } else if (prefix === '-webkit-') {\n    spec = 'final'\n  }\n\n  if (prefix === '-webkit- 2009') {\n    prefix = '-webkit-'\n  }\n\n  return [spec, prefix]\n}\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexWrap extends Declaration {\n  /**\n   * Don't add prefix for 2009 spec\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec !== 2009) {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexWrap.names = ['flex-wrap']\n\nmodule.exports = FlexWrap\n","let list = require('postcss').list\n\nlet flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Change property name for 2009 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009) {\n      decl.value = list.space(decl.value)[0]\n      decl.value = Flex.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 2012) {\n      let components = list.space(decl.value)\n      if (components.length === 3 && components[2] === '0') {\n        decl.value = components.slice(0, 2).concat('0px').join(' ')\n      }\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nFlex.names = ['flex', 'box-flex']\n\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n}\n\nmodule.exports = Flex\n","let Selector = require('../selector')\n\nclass Fullscreen extends Selector {\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return ':-webkit-full-screen'\n    }\n    if (prefix === '-moz-') {\n      return ':-moz-full-screen'\n    }\n    return `:${prefix}fullscreen`\n  }\n}\n\nFullscreen.names = [':fullscreen']\n\nmodule.exports = Fullscreen\n","let parser = require('postcss-value-parser')\nlet range = require('normalize-range')\n\nlet OldValue = require('../old-value')\nlet Value = require('../value')\nlet utils = require('../utils')\n\nlet IS_DIRECTION = /top|left|right|bottom/gi\n\nclass Gradient extends Value {\n  /**\n   * Change degrees for webkit prefix\n   */\n  replace(string, prefix) {\n    let ast = parser(string)\n    for (let node of ast.nodes) {\n      let gradientName = this.name // gradient name\n      if (node.type === 'function' && node.value === gradientName) {\n        node.nodes = this.newDirection(node.nodes)\n        node.nodes = this.normalize(node.nodes, gradientName)\n        if (prefix === '-webkit- old') {\n          let changes = this.oldWebkit(node)\n          if (!changes) {\n            return false\n          }\n        } else {\n          node.nodes = this.convertDirection(node.nodes)\n          node.value = prefix + node.value\n        }\n      }\n    }\n    return ast.toString()\n  }\n\n  /**\n   * Replace first token\n   */\n  replaceFirst(params, ...words) {\n    let prefix = words.map(i => {\n      if (i === ' ') {\n        return { type: 'space', value: i }\n      }\n      return { type: 'word', value: i }\n    })\n    return prefix.concat(params.slice(1))\n  }\n\n  /**\n   * Convert angle unit to deg\n   */\n  normalizeUnit(str, full) {\n    let num = parseFloat(str)\n    let deg = (num / full) * 360\n    return `${deg}deg`\n  }\n\n  /**\n   * Normalize angle\n   */\n  normalize(nodes, gradientName) {\n    if (!nodes[0]) return nodes\n\n    if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 400)\n    } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI)\n    } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 1)\n    } else if (nodes[0].value.includes('deg')) {\n      let num = parseFloat(nodes[0].value)\n      num = range.wrap(0, 360, num)\n      nodes[0].value = `${num}deg`\n    }\n\n    if (\n      gradientName === 'linear-gradient' ||\n      gradientName === 'repeating-linear-gradient'\n    ) {\n      let direction = nodes[0].value\n\n      // Unitless zero for `<angle>` values are allowed in CSS gradients and transforms.\n      // Spec: https://github.com/w3c/csswg-drafts/commit/602789171429b2231223ab1e5acf8f7f11652eb3\n      if (direction === '0deg' || direction === '0') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'top')\n      } else if (direction === '90deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'right')\n      } else if (direction === '180deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom') // default value\n      } else if (direction === '270deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'left')\n      }\n    }\n\n    return nodes\n  }\n\n  /**\n   * Replace old direction to new\n   */\n  newDirection(params) {\n    if (params[0].value === 'to') {\n      return params\n    }\n    IS_DIRECTION.lastIndex = 0 // reset search index of global regexp\n    if (!IS_DIRECTION.test(params[0].value)) {\n      return params\n    }\n\n    params.unshift(\n      {\n        type: 'word',\n        value: 'to'\n      },\n      {\n        type: 'space',\n        value: ' '\n      }\n    )\n\n    for (let i = 2; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        break\n      }\n      if (params[i].type === 'word') {\n        params[i].value = this.revertDirection(params[i].value)\n      }\n    }\n\n    return params\n  }\n\n  /**\n   * Look for at word\n   */\n  isRadial(params) {\n    let state = 'before'\n    for (let param of params) {\n      if (state === 'before' && param.type === 'space') {\n        state = 'at'\n      } else if (state === 'at' && param.value === 'at') {\n        state = 'after'\n      } else if (state === 'after' && param.type === 'space') {\n        return true\n      } else if (param.type === 'div') {\n        break\n      } else {\n        state = 'before'\n      }\n    }\n    return false\n  }\n\n  /**\n   * Change new direction to old\n   */\n  convertDirection(params) {\n    if (params.length > 0) {\n      if (params[0].value === 'to') {\n        this.fixDirection(params)\n      } else if (params[0].value.includes('deg')) {\n        this.fixAngle(params)\n      } else if (this.isRadial(params)) {\n        this.fixRadial(params)\n      }\n    }\n    return params\n  }\n\n  /**\n   * Replace `to top left` to `bottom right`\n   */\n  fixDirection(params) {\n    params.splice(0, 2)\n\n    for (let param of params) {\n      if (param.type === 'div') {\n        break\n      }\n      if (param.type === 'word') {\n        param.value = this.revertDirection(param.value)\n      }\n    }\n  }\n\n  /**\n   * Add 90 degrees\n   */\n  fixAngle(params) {\n    let first = params[0].value\n    first = parseFloat(first)\n    first = Math.abs(450 - first) % 360\n    first = this.roundFloat(first, 3)\n    params[0].value = `${first}deg`\n  }\n\n  /**\n   * Fix radial direction syntax\n   */\n  fixRadial(params) {\n    let first = []\n    let second = []\n    let a, b, c, i, next\n\n    for (i = 0; i < params.length - 2; i++) {\n      a = params[i]\n      b = params[i + 1]\n      c = params[i + 2]\n      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {\n        next = i + 3\n        break\n      } else {\n        first.push(a)\n      }\n    }\n\n    let div\n    for (i = next; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        div = params[i]\n        break\n      } else {\n        second.push(params[i])\n      }\n    }\n\n    params.splice(0, i, ...second, div, ...first)\n  }\n\n  revertDirection(word) {\n    return Gradient.directions[word.toLowerCase()] || word\n  }\n\n  /**\n   * Round float and save digits under dot\n   */\n  roundFloat(float, digits) {\n    return parseFloat(float.toFixed(digits))\n  }\n\n  /**\n   * Convert to old webkit syntax\n   */\n  oldWebkit(node) {\n    let { nodes } = node\n    let string = parser.stringify(node.nodes)\n\n    if (this.name !== 'linear-gradient') {\n      return false\n    }\n    if (nodes[0] && nodes[0].value.includes('deg')) {\n      return false\n    }\n    if (\n      string.includes('px') ||\n      string.includes('-corner') ||\n      string.includes('-side')\n    ) {\n      return false\n    }\n\n    let params = [[]]\n    for (let i of nodes) {\n      params[params.length - 1].push(i)\n      if (i.type === 'div' && i.value === ',') {\n        params.push([])\n      }\n    }\n\n    this.oldDirection(params)\n    this.colorStops(params)\n\n    node.nodes = []\n    for (let param of params) {\n      node.nodes = node.nodes.concat(param)\n    }\n\n    node.nodes.unshift(\n      { type: 'word', value: 'linear' },\n      this.cloneDiv(node.nodes)\n    )\n    node.value = '-webkit-gradient'\n\n    return true\n  }\n\n  /**\n   * Change direction syntax to old webkit\n   */\n  oldDirection(params) {\n    let div = this.cloneDiv(params[0])\n\n    if (params[0][0].value !== 'to') {\n      return params.unshift([\n        { type: 'word', value: Gradient.oldDirections.bottom },\n        div\n      ])\n    } else {\n      let words = []\n      for (let node of params[0].slice(2)) {\n        if (node.type === 'word') {\n          words.push(node.value.toLowerCase())\n        }\n      }\n\n      words = words.join(' ')\n      let old = Gradient.oldDirections[words] || words\n\n      params[0] = [{ type: 'word', value: old }, div]\n      return params[0]\n    }\n  }\n\n  /**\n   * Get div token from exists parameters\n   */\n  cloneDiv(params) {\n    for (let i of params) {\n      if (i.type === 'div' && i.value === ',') {\n        return i\n      }\n    }\n    return { type: 'div', value: ',', after: ' ' }\n  }\n\n  /**\n   * Change colors syntax to old webkit\n   */\n  colorStops(params) {\n    let result = []\n    for (let i = 0; i < params.length; i++) {\n      let pos\n      let param = params[i]\n      let item\n      if (i === 0) {\n        continue\n      }\n\n      let color = parser.stringify(param[0])\n      if (param[1] && param[1].type === 'word') {\n        pos = param[1].value\n      } else if (param[2] && param[2].type === 'word') {\n        pos = param[2].value\n      }\n\n      let stop\n      if (i === 1 && (!pos || pos === '0%')) {\n        stop = `from(${color})`\n      } else if (i === params.length - 1 && (!pos || pos === '100%')) {\n        stop = `to(${color})`\n      } else if (pos) {\n        stop = `color-stop(${pos}, ${color})`\n      } else {\n        stop = `color-stop(${color})`\n      }\n\n      let div = param[param.length - 1]\n      params[i] = [{ type: 'word', value: stop }]\n      if (div.type === 'div' && div.value === ',') {\n        item = params[i].push(div)\n      }\n      result.push(item)\n    }\n    return result\n  }\n\n  /**\n   * Remove old WebKit gradient too\n   */\n  old(prefix) {\n    if (prefix === '-webkit-') {\n      let type\n      if (this.name === 'linear-gradient') {\n        type = 'linear'\n      } else if (this.name === 'repeating-linear-gradient') {\n        type = 'repeating-linear'\n      } else if (this.name === 'repeating-radial-gradient') {\n        type = 'repeating-radial'\n      } else {\n        type = 'radial'\n      }\n      let string = '-gradient'\n      let regexp = utils.regexp(\n        `-webkit-(${type}-gradient|gradient\\\\(\\\\s*${type})`,\n        false\n      )\n\n      return new OldValue(this.name, prefix + this.name, string, regexp)\n    } else {\n      return super.old(prefix)\n    }\n  }\n\n  /**\n   * Do not add non-webkit prefixes for list-style and object\n   */\n  add(decl, prefix) {\n    let p = decl.prop\n    if (p.includes('mask')) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return super.add(decl, prefix)\n      }\n    } else if (\n      p === 'list-style' ||\n      p === 'list-style-image' ||\n      p === 'content'\n    ) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return super.add(decl, prefix)\n      }\n    } else {\n      return super.add(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nGradient.names = [\n  'linear-gradient',\n  'repeating-linear-gradient',\n  'radial-gradient',\n  'repeating-radial-gradient'\n]\n\nGradient.directions = {\n  top: 'bottom', // default value\n  left: 'right',\n  bottom: 'top',\n  right: 'left'\n}\n\n// Direction to replace\nGradient.oldDirections = {\n  'top': 'left bottom, left top',\n  'left': 'right top, left top',\n  'bottom': 'left top, left bottom',\n  'right': 'left top, right top',\n\n  'top right': 'left bottom, right top',\n  'top left': 'right bottom, left top',\n  'right top': 'left bottom, right top',\n  'right bottom': 'left top, right bottom',\n  'bottom right': 'left top, right bottom',\n  'bottom left': 'right top, left bottom',\n  'left top': 'right bottom, left top',\n  'left bottom': 'right top, left bottom'\n}\n\nmodule.exports = Gradient\n","let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridArea extends Declaration {\n  /**\n   * Translate grid-area to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n\n    let [rowStart, rowSpan] = utils.translate(values, 0, 2)\n    let [columnStart, columnSpan] = utils.translate(values, 1, 3)\n\n    ;[\n      ['grid-row', rowStart],\n      ['grid-row-span', rowSpan],\n      ['grid-column', columnStart],\n      ['grid-column-span', columnSpan]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    utils.warnTemplateSelectorNotFound(decl, result)\n    utils.warnIfGridRowColumnExists(decl, result)\n\n    return undefined\n  }\n}\n\nGridArea.names = ['grid-area']\n\nmodule.exports = GridArea\n","let Declaration = require('../declaration')\n\nclass GridColumnAlign extends Declaration {\n  /**\n   * Do not prefix flexbox values\n   */\n  check(decl) {\n    return !decl.value.includes('flex-') && decl.value !== 'baseline'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'grid-column-align'\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize() {\n    return 'justify-self'\n  }\n}\n\nGridColumnAlign.names = ['grid-column-align']\n\nmodule.exports = GridColumnAlign\n","let Declaration = require('../declaration')\nlet { isPureNumber } = require('../utils')\n\nclass GridEnd extends Declaration {\n  /**\n   * Change repeating syntax for IE\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let clonedDecl = this.clone(decl)\n\n    let startProp = decl.prop.replace(/end$/, 'start')\n    let spanProp = prefix + decl.prop.replace(/end$/, 'span')\n\n    if (decl.parent.some(i => i.prop === spanProp)) {\n      return undefined\n    }\n\n    clonedDecl.prop = spanProp\n\n    if (decl.value.includes('span')) {\n      clonedDecl.value = decl.value.replace(/span\\s/i, '')\n    } else {\n      let startDecl\n      decl.parent.walkDecls(startProp, d => {\n        startDecl = d\n      })\n      if (startDecl) {\n        if (isPureNumber(startDecl.value)) {\n          let value = Number(decl.value) - Number(startDecl.value) + ''\n          clonedDecl.value = value\n        } else {\n          return undefined\n        }\n      } else {\n        decl.warn(\n          result,\n          `Can not prefix ${decl.prop} (${startProp} is not found)`\n        )\n      }\n    }\n\n    decl.cloneBefore(clonedDecl)\n\n    return undefined\n  }\n}\n\nGridEnd.names = ['grid-row-end', 'grid-column-end']\n\nmodule.exports = GridEnd\n","let Declaration = require('../declaration')\n\nclass GridRowAlign extends Declaration {\n  /**\n   * Do not prefix flexbox values\n   */\n  check(decl) {\n    return !decl.value.includes('flex-') && decl.value !== 'baseline'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'grid-row-align'\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize() {\n    return 'align-self'\n  }\n}\n\nGridRowAlign.names = ['grid-row-align']\n\nmodule.exports = GridRowAlign\n","let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n    let [start, span] = utils.translate(values, 0, 1)\n\n    let hasStartValueSpan = values[0] && values[0].includes('span')\n\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '')\n    }\n\n    ;[\n      [decl.prop, start],\n      [`${decl.prop}-span`, span]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    return undefined\n  }\n}\n\nGridRowColumn.names = ['grid-row', 'grid-column']\n\nmodule.exports = GridRowColumn\n","let Declaration = require('../declaration')\nlet {\n  prefixTrackProp,\n  prefixTrackValue,\n  autoplaceGridItems,\n  getGridGap,\n  inheritGridGap\n} = require('./grid-utils')\nlet Processor = require('../processor')\n\nclass GridRowsColumns extends Declaration {\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return prefixTrackProp({ prop, prefix })\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize(prop) {\n    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1')\n  }\n\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let { parent, prop, value } = decl\n    let isRowProp = prop.includes('rows')\n    let isColumnProp = prop.includes('columns')\n\n    let hasGridTemplate = parent.some(\n      i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n    )\n\n    /**\n     * Not to prefix rows declaration if grid-template(-areas) is present\n     */\n    if (hasGridTemplate && isRowProp) {\n      return false\n    }\n\n    let processor = new Processor({ options: {} })\n    let status = processor.gridStatus(parent, result)\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    let gapValue = isRowProp ? gap.row : gap.column\n\n    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {\n      gapValue = null\n    }\n\n    let prefixValue = prefixTrackValue({\n      value,\n      gap: gapValue\n    })\n\n    /**\n     * Insert prefixes\n     */\n    decl.cloneBefore({\n      prop: prefixTrackProp({ prop, prefix }),\n      value: prefixValue\n    })\n\n    let autoflow = parent.nodes.find(i => i.prop === 'grid-auto-flow')\n    let autoflowValue = 'row'\n\n    if (autoflow && !processor.disabled(autoflow, result)) {\n      autoflowValue = autoflow.value.trim()\n    }\n    if (status === 'autoplace') {\n      /**\n       * Show warning if grid-template-rows decl is not found\n       */\n      let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')\n\n      if (!rowDecl && hasGridTemplate) {\n        return undefined\n      } else if (!rowDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-rows property'\n        )\n        return undefined\n      }\n\n      /**\n       * Show warning if grid-template-columns decl is not found\n       */\n      let columnDecl = parent.nodes.find(i => {\n        return i.prop === 'grid-template-columns'\n      })\n      if (!columnDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-columns property'\n        )\n      }\n\n      /**\n       * Autoplace grid items\n       */\n      if (isColumnProp && !hasGridTemplate) {\n        autoplaceGridItems(decl, result, gap, autoflowValue)\n      }\n    }\n\n    return undefined\n  }\n}\n\nGridRowsColumns.names = [\n  'grid-template-rows',\n  'grid-template-columns',\n  'grid-rows',\n  'grid-columns'\n]\n\nmodule.exports = GridRowsColumns\n","let Declaration = require('../declaration')\n\nclass GridStart extends Declaration {\n  /**\n   * Do not add prefix for unsupported value in IE\n   */\n  check(decl) {\n    let value = decl.value\n    return !value.includes('/') && !value.includes('span')\n  }\n\n  /**\n   * Return a final spec property\n   */\n  normalize(prop) {\n    return prop.replace('-start', '')\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    let result = super.prefixed(prop, prefix)\n    if (prefix === '-ms-') {\n      result = result.replace('-start', '')\n    }\n    return result\n  }\n}\n\nGridStart.names = ['grid-row-start', 'grid-column-start']\n\nmodule.exports = GridStart\n","let Declaration = require('../declaration')\nlet {\n  parseGridAreas,\n  warnMissedAreas,\n  prefixTrackProp,\n  prefixTrackValue,\n  getGridGap,\n  warnGridGap,\n  inheritGridGap\n} = require('./grid-utils')\n\nfunction getGridRows(tpl) {\n  return tpl\n    .trim()\n    .slice(1, -1)\n    .split(/[\"']\\s*[\"']?/g)\n}\n\nclass GridTemplateAreas extends Declaration {\n  /**\n   * Translate grid-template-areas to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let hasColumns = false\n    let hasRows = false\n    let parent = decl.parent\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    // remove already prefixed rows\n    // to prevent doubling prefixes\n    parent.walkDecls(/-ms-grid-rows/, i => i.remove())\n\n    // add empty tracks to rows\n    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {\n      if (trackDecl.prop === 'grid-template-rows') {\n        hasRows = true\n        let { prop, value } = trackDecl\n        trackDecl.cloneBefore({\n          prop: prefixTrackProp({ prop, prefix }),\n          value: prefixTrackValue({ value, gap: gap.row })\n        })\n      } else {\n        hasColumns = true\n      }\n    })\n\n    let gridRows = getGridRows(decl.value)\n\n    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: prefixTrackValue({\n          value: `repeat(${gridRows.length}, auto)`,\n          gap: gap.row\n        }),\n        raws: {}\n      })\n    }\n\n    // warnings\n    warnGridGap({\n      gap,\n      hasColumns,\n      decl,\n      result\n    })\n\n    let areas = parseGridAreas({\n      rows: gridRows,\n      gap\n    })\n\n    warnMissedAreas(areas, decl, result)\n\n    return decl\n  }\n}\n\nGridTemplateAreas.names = ['grid-template-areas']\n\nmodule.exports = GridTemplateAreas\n","let Declaration = require('../declaration')\nlet {\n  parseTemplate,\n  warnMissedAreas,\n  getGridGap,\n  warnGridGap,\n  inheritGridGap\n} = require('./grid-utils')\n\nclass GridTemplate extends Declaration {\n  /**\n   * Translate grid-template to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    if (decl.parent.some(i => i.prop === '-ms-grid-rows')) {\n      return undefined\n    }\n\n    let gap = getGridGap(decl)\n\n    /**\n     * we must insert inherited gap values in some cases:\n     * if we are inside media query && if we have no grid-gap value\n     */\n    let inheritedGap = inheritGridGap(decl, gap)\n\n    let { rows, columns, areas } = parseTemplate({\n      decl,\n      gap: inheritedGap || gap\n    })\n\n    let hasAreas = Object.keys(areas).length > 0\n    let hasRows = Boolean(rows)\n    let hasColumns = Boolean(columns)\n\n    warnGridGap({\n      gap,\n      hasColumns,\n      decl,\n      result\n    })\n\n    warnMissedAreas(areas, decl, result)\n\n    if ((hasRows && hasColumns) || hasAreas) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: rows,\n        raws: {}\n      })\n    }\n\n    if (hasColumns) {\n      decl.cloneBefore({\n        prop: '-ms-grid-columns',\n        value: columns,\n        raws: {}\n      })\n    }\n\n    return decl\n  }\n}\n\nGridTemplate.names = ['grid-template']\n\nmodule.exports = GridTemplate\n","let parser = require('postcss-value-parser')\nlet list = require('postcss').list\n\nlet uniq = require('../utils').uniq\nlet escapeRegexp = require('../utils').escapeRegexp\nlet splitSelector = require('../utils').splitSelector\n\nfunction convert(value) {\n  if (\n    value &&\n    value.length === 2 &&\n    value[0] === 'span' &&\n    parseInt(value[1], 10) > 0\n  ) {\n    return [false, parseInt(value[1], 10)]\n  }\n\n  if (value && value.length === 1 && parseInt(value[0], 10) > 0) {\n    return [parseInt(value[0], 10), false]\n  }\n\n  return [false, false]\n}\n\nexports.translate = translate\n\nfunction translate(values, startIndex, endIndex) {\n  let startValue = values[startIndex]\n  let endValue = values[endIndex]\n\n  if (!startValue) {\n    return [false, false]\n  }\n\n  let [start, spanStart] = convert(startValue)\n  let [end, spanEnd] = convert(endValue)\n\n  if (start && !endValue) {\n    return [start, false]\n  }\n\n  if (spanStart && end) {\n    return [end - spanStart, spanStart]\n  }\n\n  if (start && spanEnd) {\n    return [start, spanEnd]\n  }\n\n  if (start && end) {\n    return [start, end - start]\n  }\n\n  return [false, false]\n}\n\nexports.parse = parse\n\nfunction parse(decl) {\n  let node = parser(decl.value)\n\n  let values = []\n  let current = 0\n  values[current] = []\n\n  for (let i of node.nodes) {\n    if (i.type === 'div') {\n      current += 1\n      values[current] = []\n    } else if (i.type === 'word') {\n      values[current].push(i.value)\n    }\n  }\n\n  return values\n}\n\nexports.insertDecl = insertDecl\n\nfunction insertDecl(decl, prop, value) {\n  if (value && !decl.parent.some(i => i.prop === `-ms-${prop}`)) {\n    decl.cloneBefore({\n      prop: `-ms-${prop}`,\n      value: value.toString()\n    })\n  }\n}\n\n// Track transforms\n\nexports.prefixTrackProp = prefixTrackProp\n\nfunction prefixTrackProp({ prop, prefix }) {\n  return prefix + prop.replace('template-', '')\n}\n\nfunction transformRepeat({ nodes }, { gap }) {\n  let { count, size } = nodes.reduce(\n    (result, node) => {\n      if (node.type === 'div' && node.value === ',') {\n        result.key = 'size'\n      } else {\n        result[result.key].push(parser.stringify(node))\n      }\n      return result\n    },\n    {\n      key: 'count',\n      size: [],\n      count: []\n    }\n  )\n\n  // insert gap values\n  if (gap) {\n    size = size.filter(i => i.trim())\n    let val = []\n    for (let i = 1; i <= count; i++) {\n      size.forEach((item, index) => {\n        if (index > 0 || i > 1) {\n          val.push(gap)\n        }\n        val.push(item)\n      })\n    }\n\n    return val.join(' ')\n  }\n\n  return `(${size.join('')})[${count.join('')}]`\n}\n\nexports.prefixTrackValue = prefixTrackValue\n\nfunction prefixTrackValue({ value, gap }) {\n  let result = parser(value).nodes.reduce((nodes, node) => {\n    if (node.type === 'function' && node.value === 'repeat') {\n      return nodes.concat({\n        type: 'word',\n        value: transformRepeat(node, { gap })\n      })\n    }\n    if (gap && node.type === 'space') {\n      return nodes.concat(\n        {\n          type: 'space',\n          value: ' '\n        },\n        {\n          type: 'word',\n          value: gap\n        },\n        node\n      )\n    }\n    return nodes.concat(node)\n  }, [])\n\n  return parser.stringify(result)\n}\n\n// Parse grid-template-areas\n\nlet DOTS = /^\\.+$/\n\nfunction track(start, end) {\n  return { start, end, span: end - start }\n}\n\nfunction getColumns(line) {\n  return line.trim().split(/\\s+/g)\n}\n\nexports.parseGridAreas = parseGridAreas\n\nfunction parseGridAreas({ rows, gap }) {\n  return rows.reduce((areas, line, rowIndex) => {\n    if (gap.row) rowIndex *= 2\n\n    if (line.trim() === '') return areas\n\n    getColumns(line).forEach((area, columnIndex) => {\n      if (DOTS.test(area)) return\n\n      if (gap.column) columnIndex *= 2\n\n      if (typeof areas[area] === 'undefined') {\n        areas[area] = {\n          column: track(columnIndex + 1, columnIndex + 2),\n          row: track(rowIndex + 1, rowIndex + 2)\n        }\n      } else {\n        let { column, row } = areas[area]\n\n        column.start = Math.min(column.start, columnIndex + 1)\n        column.end = Math.max(column.end, columnIndex + 2)\n        column.span = column.end - column.start\n\n        row.start = Math.min(row.start, rowIndex + 1)\n        row.end = Math.max(row.end, rowIndex + 2)\n        row.span = row.end - row.start\n      }\n    })\n\n    return areas\n  }, {})\n}\n\n// Parse grid-template\n\nfunction testTrack(node) {\n  return node.type === 'word' && /^\\[.+]$/.test(node.value)\n}\n\nfunction verifyRowSize(result) {\n  if (result.areas.length > result.rows.length) {\n    result.rows.push('auto')\n  }\n  return result\n}\n\nexports.parseTemplate = parseTemplate\n\nfunction parseTemplate({ decl, gap }) {\n  let gridTemplate = parser(decl.value).nodes.reduce(\n    (result, node) => {\n      let { type, value } = node\n\n      if (testTrack(node) || type === 'space') return result\n\n      // area\n      if (type === 'string') {\n        result = verifyRowSize(result)\n        result.areas.push(value)\n      }\n\n      // values and function\n      if (type === 'word' || type === 'function') {\n        result[result.key].push(parser.stringify(node))\n      }\n\n      // divider(/)\n      if (type === 'div' && value === '/') {\n        result.key = 'columns'\n        result = verifyRowSize(result)\n      }\n\n      return result\n    },\n    {\n      key: 'rows',\n      columns: [],\n      rows: [],\n      areas: []\n    }\n  )\n\n  return {\n    areas: parseGridAreas({\n      rows: gridTemplate.areas,\n      gap\n    }),\n    columns: prefixTrackValue({\n      value: gridTemplate.columns.join(' '),\n      gap: gap.column\n    }),\n    rows: prefixTrackValue({\n      value: gridTemplate.rows.join(' '),\n      gap: gap.row\n    })\n  }\n}\n\n// Insert parsed grid areas\n\n/**\n * Get an array of -ms- prefixed props and values\n * @param  {Object} [area] area object with column and row data\n * @param  {Boolean} [addRowSpan] should we add grid-column-row value?\n * @param  {Boolean} [addColumnSpan] should we add grid-column-span value?\n * @return {Array<Object>}\n */\nfunction getMSDecls(area, addRowSpan = false, addColumnSpan = false) {\n  let result = [\n    {\n      prop: '-ms-grid-row',\n      value: String(area.row.start)\n    }\n  ]\n  if (area.row.span > 1 || addRowSpan) {\n    result.push({\n      prop: '-ms-grid-row-span',\n      value: String(area.row.span)\n    })\n  }\n  result.push({\n    prop: '-ms-grid-column',\n    value: String(area.column.start)\n  })\n  if (area.column.span > 1 || addColumnSpan) {\n    result.push({\n      prop: '-ms-grid-column-span',\n      value: String(area.column.span)\n    })\n  }\n  return result\n}\n\nfunction getParentMedia(parent) {\n  if (parent.type === 'atrule' && parent.name === 'media') {\n    return parent\n  }\n  if (!parent.parent) {\n    return false\n  }\n  return getParentMedia(parent.parent)\n}\n\n/**\n * change selectors for rules with duplicate grid-areas.\n * @param  {Array<Rule>} rules\n * @param  {Array<String>} templateSelectors\n * @return {Array<Rule>} rules with changed selectors\n */\nfunction changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {\n  ruleSelectors = ruleSelectors.map(selector => {\n    let selectorBySpace = list.space(selector)\n    let selectorByComma = list.comma(selector)\n\n    if (selectorBySpace.length > selectorByComma.length) {\n      selector = selectorBySpace.slice(-1).join('')\n    }\n    return selector\n  })\n\n  return ruleSelectors.map(ruleSelector => {\n    let newSelector = templateSelectors.map((tplSelector, index) => {\n      let space = index === 0 ? '' : ' '\n      return `${space}${tplSelector} > ${ruleSelector}`\n    })\n\n    return newSelector\n  })\n}\n\n/**\n * check if selector of rules are equal\n * @param  {Rule} ruleA\n * @param  {Rule} ruleB\n * @return {Boolean}\n */\nfunction selectorsEqual(ruleA, ruleB) {\n  return ruleA.selectors.some(sel => {\n    return ruleB.selectors.includes(sel)\n  })\n}\n\n/**\n * Parse data from all grid-template(-areas) declarations\n * @param  {Root} css css root\n * @return {Object} parsed data\n */\nfunction parseGridTemplatesData(css) {\n  let parsed = []\n\n  // we walk through every grid-template(-areas) declaration and store\n  // data with the same area names inside the item\n  css.walkDecls(/grid-template(-areas)?$/, d => {\n    let rule = d.parent\n    let media = getParentMedia(rule)\n    let gap = getGridGap(d)\n    let inheritedGap = inheritGridGap(d, gap)\n    let { areas } = parseTemplate({ decl: d, gap: inheritedGap || gap })\n    let areaNames = Object.keys(areas)\n\n    // skip node if it doesn't have areas\n    if (areaNames.length === 0) {\n      return true\n    }\n\n    // check parsed array for item that include the same area names\n    // return index of that item\n    let index = parsed.reduce((acc, { allAreas }, idx) => {\n      let hasAreas = allAreas && areaNames.some(area => allAreas.includes(area))\n      return hasAreas ? idx : acc\n    }, null)\n\n    if (index !== null) {\n      // index is found, add the grid-template data to that item\n      let { allAreas, rules } = parsed[index]\n\n      // check if rule has no duplicate area names\n      let hasNoDuplicates = rules.some(r => {\n        return r.hasDuplicates === false && selectorsEqual(r, rule)\n      })\n\n      let duplicatesFound = false\n\n      // check need to gather all duplicate area names\n      let duplicateAreaNames = rules.reduce((acc, r) => {\n        if (!r.params && selectorsEqual(r, rule)) {\n          duplicatesFound = true\n          return r.duplicateAreaNames\n        }\n        if (!duplicatesFound) {\n          areaNames.forEach(name => {\n            if (r.areas[name]) {\n              acc.push(name)\n            }\n          })\n        }\n        return uniq(acc)\n      }, [])\n\n      // update grid-row/column-span values for areas with duplicate\n      // area names. @see #1084 and #1146\n      rules.forEach(r => {\n        areaNames.forEach(name => {\n          let area = r.areas[name]\n          if (area && area.row.span !== areas[name].row.span) {\n            areas[name].row.updateSpan = true\n          }\n\n          if (area && area.column.span !== areas[name].column.span) {\n            areas[name].column.updateSpan = true\n          }\n        })\n      })\n\n      parsed[index].allAreas = uniq([...allAreas, ...areaNames])\n      parsed[index].rules.push({\n        hasDuplicates: !hasNoDuplicates,\n        params: media.params,\n        selectors: rule.selectors,\n        node: rule,\n        duplicateAreaNames,\n        areas\n      })\n    } else {\n      // index is NOT found, push the new item to the parsed array\n      parsed.push({\n        allAreas: areaNames,\n        areasCount: 0,\n        rules: [\n          {\n            hasDuplicates: false,\n            duplicateRules: [],\n            params: media.params,\n            selectors: rule.selectors,\n            node: rule,\n            duplicateAreaNames: [],\n            areas\n          }\n        ]\n      })\n    }\n\n    return undefined\n  })\n\n  return parsed\n}\n\n/**\n * insert prefixed grid-area declarations\n * @param  {Root}  css css root\n * @param  {Function} isDisabled check if the rule is disabled\n * @return {void}\n */\nexports.insertAreas = insertAreas\n\nfunction insertAreas(css, isDisabled) {\n  // parse grid-template declarations\n  let gridTemplatesData = parseGridTemplatesData(css)\n\n  // return undefined if no declarations found\n  if (gridTemplatesData.length === 0) {\n    return undefined\n  }\n\n  // we need to store the rules that we will insert later\n  let rulesToInsert = {}\n\n  css.walkDecls('grid-area', gridArea => {\n    let gridAreaRule = gridArea.parent\n    let hasPrefixedRow = gridAreaRule.first.prop === '-ms-grid-row'\n    let gridAreaMedia = getParentMedia(gridAreaRule)\n\n    if (isDisabled(gridArea)) {\n      return undefined\n    }\n\n    let gridAreaRuleIndex = css.index(gridAreaMedia || gridAreaRule)\n\n    let value = gridArea.value\n    // found the data that matches grid-area identifier\n    let data = gridTemplatesData.filter(d => d.allAreas.includes(value))[0]\n\n    if (!data) {\n      return true\n    }\n\n    let lastArea = data.allAreas[data.allAreas.length - 1]\n    let selectorBySpace = list.space(gridAreaRule.selector)\n    let selectorByComma = list.comma(gridAreaRule.selector)\n    let selectorIsComplex =\n      selectorBySpace.length > 1 &&\n      selectorBySpace.length > selectorByComma.length\n\n    // prevent doubling of prefixes\n    if (hasPrefixedRow) {\n      return false\n    }\n\n    // create the empty object with the key as the last area name\n    // e.g if we have templates with \"a b c\" values, \"c\" will be the last area\n    if (!rulesToInsert[lastArea]) {\n      rulesToInsert[lastArea] = {}\n    }\n\n    let lastRuleIsSet = false\n\n    // walk through every grid-template rule data\n    for (let rule of data.rules) {\n      let area = rule.areas[value]\n      let hasDuplicateName = rule.duplicateAreaNames.includes(value)\n\n      // if we can't find the area name, update lastRule and continue\n      if (!area) {\n        let lastRule = rulesToInsert[lastArea].lastRule\n        let lastRuleIndex\n        if (lastRule) {\n          lastRuleIndex = css.index(lastRule)\n        } else {\n          /* c8 ignore next 2 */\n          lastRuleIndex = -1\n        }\n\n        if (gridAreaRuleIndex > lastRuleIndex) {\n          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule\n        }\n        continue\n      }\n\n      // for grid-templates inside media rule we need to create empty\n      // array to push prefixed grid-area rules later\n      if (rule.params && !rulesToInsert[lastArea][rule.params]) {\n        rulesToInsert[lastArea][rule.params] = []\n      }\n\n      if ((!rule.hasDuplicates || !hasDuplicateName) && !rule.params) {\n        // grid-template has no duplicates and not inside media rule\n\n        getMSDecls(area, false, false)\n          .reverse()\n          .forEach(i =>\n            gridAreaRule.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        rulesToInsert[lastArea].lastRule = gridAreaRule\n        lastRuleIsSet = true\n      } else if (rule.hasDuplicates && !rule.params && !selectorIsComplex) {\n        // grid-template has duplicates and not inside media rule\n        let cloned = gridAreaRule.clone()\n        cloned.removeAll()\n\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            cloned.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        cloned.selectors = changeDuplicateAreaSelectors(\n          cloned.selectors,\n          rule.selectors\n        )\n\n        if (rulesToInsert[lastArea].lastRule) {\n          rulesToInsert[lastArea].lastRule.after(cloned)\n        }\n        rulesToInsert[lastArea].lastRule = cloned\n        lastRuleIsSet = true\n      } else if (\n        rule.hasDuplicates &&\n        !rule.params &&\n        selectorIsComplex &&\n        gridAreaRule.selector.includes(rule.selectors[0])\n      ) {\n        // grid-template has duplicates and not inside media rule\n        // and the selector is complex\n        gridAreaRule.walkDecls(/-ms-grid-(row|column)/, d => d.remove())\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            gridAreaRule.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n      } else if (rule.params) {\n        // grid-template is inside media rule\n        // if we're inside media rule, we need to store prefixed rules\n        // inside rulesToInsert object to be able to preserve the order of media\n        // rules and merge them easily\n        let cloned = gridAreaRule.clone()\n        cloned.removeAll()\n\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            cloned.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        if (rule.hasDuplicates && hasDuplicateName) {\n          cloned.selectors = changeDuplicateAreaSelectors(\n            cloned.selectors,\n            rule.selectors\n          )\n        }\n\n        cloned.raws = rule.node.raws\n\n        if (css.index(rule.node.parent) > gridAreaRuleIndex) {\n          // append the prefixed rules right inside media rule\n          // with grid-template\n          rule.node.parent.append(cloned)\n        } else {\n          // store the rule to insert later\n          rulesToInsert[lastArea][rule.params].push(cloned)\n        }\n\n        // set new rule as last rule ONLY if we didn't set lastRule for\n        // this grid-area before\n        if (!lastRuleIsSet) {\n          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule\n        }\n      }\n    }\n\n    return undefined\n  })\n\n  // append stored rules inside the media rules\n  Object.keys(rulesToInsert).forEach(area => {\n    let data = rulesToInsert[area]\n    let lastRule = data.lastRule\n    Object.keys(data)\n      .reverse()\n      .filter(p => p !== 'lastRule')\n      .forEach(params => {\n        if (data[params].length > 0 && lastRule) {\n          lastRule.after({ name: 'media', params })\n          lastRule.next().append(data[params])\n        }\n      })\n  })\n\n  return undefined\n}\n\n/**\n * Warn user if grid area identifiers are not found\n * @param  {Object} areas\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnMissedAreas = warnMissedAreas\n\nfunction warnMissedAreas(areas, decl, result) {\n  let missed = Object.keys(areas)\n\n  decl.root().walkDecls('grid-area', gridArea => {\n    missed = missed.filter(e => e !== gridArea.value)\n  })\n\n  if (missed.length > 0) {\n    decl.warn(result, 'Can not find grid areas: ' + missed.join(', '))\n  }\n\n  return undefined\n}\n\n/**\n * compare selectors with grid-area rule and grid-template rule\n * show warning if grid-template selector is not found\n * (this function used for grid-area rule)\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnTemplateSelectorNotFound = warnTemplateSelectorNotFound\n\nfunction warnTemplateSelectorNotFound(decl, result) {\n  let rule = decl.parent\n  let root = decl.root()\n  let duplicatesFound = false\n\n  // slice selector array. Remove the last part (for comparison)\n  let slicedSelectorArr = list\n    .space(rule.selector)\n    .filter(str => str !== '>')\n    .slice(0, -1)\n\n  // we need to compare only if selector is complex.\n  // e.g '.grid-cell' is simple, but '.parent > .grid-cell' is complex\n  if (slicedSelectorArr.length > 0) {\n    let gridTemplateFound = false\n    let foundAreaSelector = null\n\n    root.walkDecls(/grid-template(-areas)?$/, d => {\n      let parent = d.parent\n      let templateSelectors = parent.selectors\n\n      let { areas } = parseTemplate({ decl: d, gap: getGridGap(d) })\n      let hasArea = areas[decl.value]\n\n      // find the the matching selectors\n      for (let tplSelector of templateSelectors) {\n        if (gridTemplateFound) {\n          break\n        }\n        let tplSelectorArr = list.space(tplSelector).filter(str => str !== '>')\n\n        gridTemplateFound = tplSelectorArr.every(\n          (item, idx) => item === slicedSelectorArr[idx]\n        )\n      }\n\n      if (gridTemplateFound || !hasArea) {\n        return true\n      }\n\n      if (!foundAreaSelector) {\n        foundAreaSelector = parent.selector\n      }\n\n      // if we found the duplicate area with different selector\n      if (foundAreaSelector && foundAreaSelector !== parent.selector) {\n        duplicatesFound = true\n      }\n\n      return undefined\n    })\n\n    // warn user if we didn't find template\n    if (!gridTemplateFound && duplicatesFound) {\n      decl.warn(\n        result,\n        'Autoprefixer cannot find a grid-template ' +\n          `containing the duplicate grid-area \"${decl.value}\" ` +\n          `with full selector matching: ${slicedSelectorArr.join(' ')}`\n      )\n    }\n  }\n}\n\n/**\n * warn user if both grid-area and grid-(row|column)\n * declarations are present in the same rule\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnIfGridRowColumnExists = warnIfGridRowColumnExists\n\nfunction warnIfGridRowColumnExists(decl, result) {\n  let rule = decl.parent\n  let decls = []\n  rule.walkDecls(/^grid-(row|column)/, d => {\n    if (\n      !d.prop.endsWith('-end') &&\n      !d.value.startsWith('span') &&\n      !d.prop.endsWith('-gap')\n    ) {\n      decls.push(d)\n    }\n  })\n  if (decls.length > 0) {\n    decls.forEach(d => {\n      d.warn(\n        result,\n        'You already have a grid-area declaration present in the rule. ' +\n          `You should use either grid-area or ${d.prop}, not both`\n      )\n    })\n  }\n\n  return undefined\n}\n\n// Gap utils\n\nexports.getGridGap = getGridGap\n\nfunction getGridGap(decl) {\n  let gap = {}\n\n  // try to find gap\n  let testGap = /^(grid-)?((row|column)-)?gap$/\n  decl.parent.walkDecls(testGap, ({ prop, value }) => {\n    if (/^(grid-)?gap$/.test(prop)) {\n      let [row, , column] = parser(value).nodes\n\n      gap.row = row && parser.stringify(row)\n      gap.column = column ? parser.stringify(column) : gap.row\n    }\n    if (/^(grid-)?row-gap$/.test(prop)) gap.row = value\n    if (/^(grid-)?column-gap$/.test(prop)) gap.column = value\n  })\n\n  return gap\n}\n\n/**\n * parse media parameters (for example 'min-width: 500px')\n * @param  {String} params parameter to parse\n * @return {}\n */\nfunction parseMediaParams(params) {\n  if (!params) {\n    return []\n  }\n  let parsed = parser(params)\n  let prop\n  let value\n\n  parsed.walk(node => {\n    if (node.type === 'word' && /min|max/g.test(node.value)) {\n      prop = node.value\n    } else if (node.value.includes('px')) {\n      value = parseInt(node.value.replace(/\\D/g, ''))\n    }\n  })\n\n  return [prop, value]\n}\n\n/**\n * Compare the selectors and decide if we\n * need to inherit gap from compared selector or not.\n * @type {String} selA\n * @type {String} selB\n * @return {Boolean}\n */\nfunction shouldInheritGap(selA, selB) {\n  let result\n\n  // get arrays of selector split in 3-deep array\n  let splitSelectorArrA = splitSelector(selA)\n  let splitSelectorArrB = splitSelector(selB)\n\n  if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {\n    // abort if selectorA has lower descendant specificity then selectorB\n    // (e.g '.grid' and '.hello .world .grid')\n    return false\n  } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {\n    // if selectorA has higher descendant specificity then selectorB\n    // (e.g '.foo .bar .grid' and '.grid')\n\n    let idx = splitSelectorArrA[0].reduce((res, [item], index) => {\n      let firstSelectorPart = splitSelectorArrB[0][0][0]\n      if (item === firstSelectorPart) {\n        return index\n      }\n      return false\n    }, false)\n\n    if (idx) {\n      result = splitSelectorArrB[0].every((arr, index) => {\n        return arr.every(\n          (part, innerIndex) =>\n            // because selectorA has more space elements, we need to slice\n            // selectorA array by 'idx' number to compare them\n            splitSelectorArrA[0].slice(idx)[index][innerIndex] === part\n        )\n      })\n    }\n  } else {\n    // if selectorA has the same descendant specificity as selectorB\n    // this condition covers cases such as: '.grid.foo.bar' and '.grid'\n    result = splitSelectorArrB.some(byCommaArr => {\n      return byCommaArr.every((bySpaceArr, index) => {\n        return bySpaceArr.every(\n          (part, innerIndex) => splitSelectorArrA[0][index][innerIndex] === part\n        )\n      })\n    })\n  }\n\n  return result\n}\n/**\n * inherit grid gap values from the closest rule above\n * with the same selector\n * @param  {Declaration} decl\n * @param  {Object} gap gap values\n * @return {Object | Boolean} return gap values or false (if not found)\n */\nexports.inheritGridGap = inheritGridGap\n\nfunction inheritGridGap(decl, gap) {\n  let rule = decl.parent\n  let mediaRule = getParentMedia(rule)\n  let root = rule.root()\n\n  // get an array of selector split in 3-deep array\n  let splitSelectorArr = splitSelector(rule.selector)\n\n  // abort if the rule already has gaps\n  if (Object.keys(gap).length > 0) {\n    return false\n  }\n\n  // e.g ['min-width']\n  let [prop] = parseMediaParams(mediaRule.params)\n\n  let lastBySpace = splitSelectorArr[0]\n\n  // get escaped value from the selector\n  // if we have '.grid-2.foo.bar' selector, will be '\\.grid\\-2'\n  let escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0])\n\n  let regexp = new RegExp(`(${escaped}$)|(${escaped}[,.])`)\n\n  // find the closest rule with the same selector\n  let closestRuleGap\n  root.walkRules(regexp, r => {\n    let gridGap\n\n    // abort if are checking the same rule\n    if (rule.toString() === r.toString()) {\n      return false\n    }\n\n    // find grid-gap values\n    r.walkDecls('grid-gap', d => (gridGap = getGridGap(d)))\n\n    // skip rule without gaps\n    if (!gridGap || Object.keys(gridGap).length === 0) {\n      return true\n    }\n\n    // skip rules that should not be inherited from\n    if (!shouldInheritGap(rule.selector, r.selector)) {\n      return true\n    }\n\n    let media = getParentMedia(r)\n    if (media) {\n      // if we are inside media, we need to check that media props match\n      // e.g ('min-width' === 'min-width')\n      let propToCompare = parseMediaParams(media.params)[0]\n      if (propToCompare === prop) {\n        closestRuleGap = gridGap\n        return true\n      }\n    } else {\n      closestRuleGap = gridGap\n      return true\n    }\n\n    return undefined\n  })\n\n  // if we find the closest gap object\n  if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {\n    return closestRuleGap\n  }\n  return false\n}\n\nexports.warnGridGap = warnGridGap\n\nfunction warnGridGap({ gap, hasColumns, decl, result }) {\n  let hasBothGaps = gap.row && gap.column\n  if (!hasColumns && (hasBothGaps || (gap.column && !gap.row))) {\n    delete gap.column\n    decl.warn(\n      result,\n      'Can not implement grid-gap without grid-template-columns'\n    )\n  }\n}\n\n/**\n * normalize the grid-template-rows/columns values\n * @param  {String} str grid-template-rows/columns value\n * @return {Array} normalized array with values\n * @example\n * let normalized = normalizeRowColumn('1fr repeat(2, 20px 50px) 1fr')\n * normalized // <= ['1fr', '20px', '50px', '20px', '50px', '1fr']\n */\nfunction normalizeRowColumn(str) {\n  let normalized = parser(str).nodes.reduce((result, node) => {\n    if (node.type === 'function' && node.value === 'repeat') {\n      let key = 'count'\n\n      let [count, value] = node.nodes.reduce(\n        (acc, n) => {\n          if (n.type === 'word' && key === 'count') {\n            acc[0] = Math.abs(parseInt(n.value))\n            return acc\n          }\n          if (n.type === 'div' && n.value === ',') {\n            key = 'value'\n            return acc\n          }\n          if (key === 'value') {\n            acc[1] += parser.stringify(n)\n          }\n          return acc\n        },\n        [0, '']\n      )\n\n      if (count) {\n        for (let i = 0; i < count; i++) {\n          result.push(value)\n        }\n      }\n\n      return result\n    }\n    if (node.type === 'space') {\n      return result\n    }\n    return result.concat(parser.stringify(node))\n  }, [])\n\n  return normalized\n}\n\nexports.autoplaceGridItems = autoplaceGridItems\n\n/**\n * Autoplace grid items\n * @param {Declaration} decl\n * @param {Result} result\n * @param {Object} gap gap values\n * @param {String} autoflowValue grid-auto-flow value\n * @return {void}\n * @see https://github.com/postcss/autoprefixer/issues/1148\n */\nfunction autoplaceGridItems(decl, result, gap, autoflowValue = 'row') {\n  let { parent } = decl\n\n  let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')\n  let rows = normalizeRowColumn(rowDecl.value)\n  let columns = normalizeRowColumn(decl.value)\n\n  // Build array of area names with dummy values. If we have 3 columns and\n  // 2 rows, filledRows will be equal to ['1 2 3', '4 5 6']\n  let filledRows = rows.map((_, rowIndex) => {\n    return Array.from(\n      { length: columns.length },\n      (v, k) => k + rowIndex * columns.length + 1\n    ).join(' ')\n  })\n\n  let areas = parseGridAreas({ rows: filledRows, gap })\n  let keys = Object.keys(areas)\n  let items = keys.map(i => areas[i])\n\n  // Change the order of cells if grid-auto-flow value is 'column'\n  if (autoflowValue.includes('column')) {\n    items = items.sort((a, b) => a.column.start - b.column.start)\n  }\n\n  // Insert new rules\n  items.reverse().forEach((item, index) => {\n    let { column, row } = item\n    let nodeSelector = parent.selectors\n      .map(sel => sel + ` > *:nth-child(${keys.length - index})`)\n      .join(', ')\n\n    // create new rule\n    let node = parent.clone().removeAll()\n\n    // change rule selector\n    node.selector = nodeSelector\n\n    // insert prefixed row/column values\n    node.append({ prop: '-ms-grid-row', value: row.start })\n    node.append({ prop: '-ms-grid-column', value: column.start })\n\n    // insert rule\n    parent.after(node)\n  })\n\n  return undefined\n}\n","let Declaration = require('../declaration')\n\nclass ImageRendering extends Declaration {\n  /**\n   * Add hack only for crisp-edges\n   */\n  check(decl) {\n    return decl.value === 'pixelated'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return '-ms-interpolation-mode'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change property and value for IE\n   */\n  set(decl, prefix) {\n    if (prefix !== '-ms-') return super.set(decl, prefix)\n    decl.prop = '-ms-interpolation-mode'\n    decl.value = 'nearest-neighbor'\n    return decl\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'image-rendering'\n  }\n\n  /**\n   * Warn on old value\n   */\n  process(node, result) {\n    return super.process(node, result)\n  }\n}\n\nImageRendering.names = ['image-rendering', 'interpolation-mode']\n\nmodule.exports = ImageRendering\n","let Value = require('../value')\n\nclass ImageSet extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    let fixed = super.replace(string, prefix)\n    if (prefix === '-webkit-') {\n      fixed = fixed.replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, 'url($1)$2')\n    }\n    return fixed\n  }\n}\n\nImageSet.names = ['image-set']\n\nmodule.exports = ImageSet\n","let Declaration = require('../declaration')\n\nclass InlineLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    return prefix + prop.replace('-inline', '')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2')\n  }\n}\n\nInlineLogical.names = [\n  'border-inline-start',\n  'border-inline-end',\n  'margin-inline-start',\n  'margin-inline-end',\n  'padding-inline-start',\n  'padding-inline-end',\n  'border-start',\n  'border-end',\n  'margin-start',\n  'margin-end',\n  'padding-start',\n  'padding-end'\n]\n\nmodule.exports = InlineLogical\n","let OldValue = require('../old-value')\nlet Value = require('../value')\n\nfunction regexp(name) {\n  return new RegExp(`(^|[\\\\s,(])(${name}($|[\\\\s),]))`, 'gi')\n}\n\nclass Intrinsic extends Value {\n  regexp() {\n    if (!this.regexpCache) this.regexpCache = regexp(this.name)\n    return this.regexpCache\n  }\n\n  isStretch() {\n    return (\n      this.name === 'stretch' ||\n      this.name === 'fill' ||\n      this.name === 'fill-available'\n    )\n  }\n\n  replace(string, prefix) {\n    if (prefix === '-moz-' && this.isStretch()) {\n      return string.replace(this.regexp(), '$1-moz-available$3')\n    }\n    if (prefix === '-webkit-' && this.isStretch()) {\n      return string.replace(this.regexp(), '$1-webkit-fill-available$3')\n    }\n    return super.replace(string, prefix)\n  }\n\n  old(prefix) {\n    let prefixed = prefix + this.name\n    if (this.isStretch()) {\n      if (prefix === '-moz-') {\n        prefixed = '-moz-available'\n      } else if (prefix === '-webkit-') {\n        prefixed = '-webkit-fill-available'\n      }\n    }\n    return new OldValue(this.name, prefixed, prefixed, regexp(prefixed))\n  }\n\n  add(decl, prefix) {\n    if (decl.prop.includes('grid') && prefix !== '-webkit-') {\n      return undefined\n    }\n    return super.add(decl, prefix)\n  }\n}\n\nIntrinsic.names = [\n  'max-content',\n  'min-content',\n  'fit-content',\n  'fill',\n  'fill-available',\n  'stretch'\n]\n\nmodule.exports = Intrinsic\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass JustifyContent extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-pack'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'justify-content'\n  }\n\n  /**\n   * Change value for 2009 and 2012 specs\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 || spec === 2012) {\n      let value = JustifyContent.oldValues[decl.value] || decl.value\n      decl.value = value\n      if (spec !== 2009 || value !== 'distribute') {\n        return super.set(decl, prefix)\n      }\n    } else if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nJustifyContent.names = ['justify-content', 'flex-pack', 'box-pack']\n\nJustifyContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n}\n\nmodule.exports = JustifyContent\n","let Declaration = require('../declaration')\n\nclass MaskBorder extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return this.name.replace('box-image', 'border')\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let result = super.prefixed(prop, prefix)\n    if (prefix === '-webkit-') {\n      result = result.replace('border', 'box-image')\n    }\n    return result\n  }\n}\n\nMaskBorder.names = [\n  'mask-border',\n  'mask-border-source',\n  'mask-border-slice',\n  'mask-border-width',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-box-image',\n  'mask-box-image-source',\n  'mask-box-image-slice',\n  'mask-box-image-width',\n  'mask-box-image-outset',\n  'mask-box-image-repeat'\n]\n\nmodule.exports = MaskBorder\n","let Declaration = require('../declaration')\n\nclass MaskComposite extends Declaration {\n  /**\n   * Prefix mask-composite for webkit\n   */\n  insert(decl, prefix, prefixes) {\n    let isCompositeProp = decl.prop === 'mask-composite'\n\n    let compositeValues\n\n    if (isCompositeProp) {\n      compositeValues = decl.value.split(',')\n    } else {\n      compositeValues = decl.value.match(MaskComposite.regexp) || []\n    }\n\n    compositeValues = compositeValues.map(el => el.trim()).filter(el => el)\n    let hasCompositeValues = compositeValues.length\n\n    let compositeDecl\n\n    if (hasCompositeValues) {\n      compositeDecl = this.clone(decl)\n      compositeDecl.value = compositeValues\n        .map(value => MaskComposite.oldValues[value] || value)\n        .join(', ')\n\n      if (compositeValues.includes('intersect')) {\n        compositeDecl.value += ', xor'\n      }\n\n      compositeDecl.prop = prefix + 'mask-composite'\n    }\n\n    if (isCompositeProp) {\n      if (!hasCompositeValues) {\n        return undefined\n      }\n\n      if (this.needCascade(decl)) {\n        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)\n      }\n\n      return decl.parent.insertBefore(decl, compositeDecl)\n    }\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + cloned.prop\n\n    if (hasCompositeValues) {\n      cloned.value = cloned.value.replace(MaskComposite.regexp, '')\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n\n    decl.parent.insertBefore(decl, cloned)\n\n    if (!hasCompositeValues) {\n      return decl\n    }\n\n    if (this.needCascade(decl)) {\n      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, compositeDecl)\n  }\n}\n\nMaskComposite.names = ['mask', 'mask-composite']\n\nMaskComposite.oldValues = {\n  add: 'source-over',\n  subtract: 'source-out',\n  intersect: 'source-in',\n  exclude: 'xor'\n}\n\nMaskComposite.regexp = new RegExp(\n  `\\\\s+(${Object.keys(MaskComposite.oldValues).join(\n    '|'\n  )})\\\\b(?!\\\\))\\\\s*(?=[,])`,\n  'ig'\n)\n\nmodule.exports = MaskComposite\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Order extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-ordinal-group'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-order'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'order'\n  }\n\n  /**\n   * Fix value for 2009 spec\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 && /\\d/.test(decl.value)) {\n      decl.value = (parseInt(decl.value) + 1).toString()\n      return super.set(decl, prefix)\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nOrder.names = ['order', 'flex-order', 'box-ordinal-group']\n\nmodule.exports = Order\n","let Declaration = require('../declaration')\n\nclass OverscrollBehavior extends Declaration {\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'scroll-chaining'\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'overscroll-behavior'\n  }\n\n  /**\n   * Change value for IE\n   */\n  set(decl, prefix) {\n    if (decl.value === 'auto') {\n      decl.value = 'chained'\n    } else if (decl.value === 'none' || decl.value === 'contain') {\n      decl.value = 'none'\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nOverscrollBehavior.names = ['overscroll-behavior', 'scroll-chaining']\n\nmodule.exports = OverscrollBehavior\n","let OldValue = require('../old-value')\nlet Value = require('../value')\n\nclass Pixelated extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    if (prefix === '-webkit-') {\n      return string.replace(this.regexp(), '$1-webkit-optimize-contrast')\n    }\n    if (prefix === '-moz-') {\n      return string.replace(this.regexp(), '$1-moz-crisp-edges')\n    }\n    return super.replace(string, prefix)\n  }\n\n  /**\n   * Different name for WebKit and Firefox\n   */\n  old(prefix) {\n    if (prefix === '-webkit-') {\n      return new OldValue(this.name, '-webkit-optimize-contrast')\n    }\n    if (prefix === '-moz-') {\n      return new OldValue(this.name, '-moz-crisp-edges')\n    }\n    return super.old(prefix)\n  }\n}\n\nPixelated.names = ['pixelated']\n\nmodule.exports = Pixelated\n","let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass PlaceSelf extends Declaration {\n  /**\n   * Translate place-self to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    // prevent doubling of prefixes\n    if (decl.parent.some(i => i.prop === '-ms-grid-row-align')) {\n      return undefined\n    }\n\n    let [[first, second]] = utils.parse(decl)\n\n    if (second) {\n      utils.insertDecl(decl, 'grid-row-align', first)\n      utils.insertDecl(decl, 'grid-column-align', second)\n    } else {\n      utils.insertDecl(decl, 'grid-row-align', first)\n      utils.insertDecl(decl, 'grid-column-align', first)\n    }\n\n    return undefined\n  }\n}\n\nPlaceSelf.names = ['place-self']\n\nmodule.exports = PlaceSelf\n","let Selector = require('../selector')\n\nclass PlaceholderShown extends Selector {\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-ms-') {\n      return ':-ms-input-placeholder'\n    }\n    return `:${prefix}placeholder-shown`\n  }\n}\n\nPlaceholderShown.names = [':placeholder-shown']\n\nmodule.exports = PlaceholderShown\n","let Selector = require('../selector')\n\nclass Placeholder extends Selector {\n  /**\n   * Add old mozilla to possible prefixes\n   */\n  possible() {\n    return super.possible().concat(['-moz- old', '-ms- old'])\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return '::-webkit-input-placeholder'\n    }\n    if (prefix === '-ms-') {\n      return '::-ms-input-placeholder'\n    }\n    if (prefix === '-ms- old') {\n      return ':-ms-input-placeholder'\n    }\n    if (prefix === '-moz- old') {\n      return ':-moz-placeholder'\n    }\n    return `::${prefix}placeholder`\n  }\n}\n\nPlaceholder.names = ['::placeholder']\n\nmodule.exports = Placeholder\n","let Declaration = require('../declaration')\n\nclass PrintColorAdjust extends Declaration {\n  /**\n   * Change property name for WebKit-based browsers\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-moz-') {\n      return 'color-adjust'\n    } else {\n      return prefix + 'print-color-adjust'\n    }\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'print-color-adjust'\n  }\n}\n\nPrintColorAdjust.names = ['print-color-adjust', 'color-adjust']\n\nmodule.exports = PrintColorAdjust\n","let Declaration = require('../declaration')\n\nclass TextDecorationSkipInk extends Declaration {\n  /**\n   * Change prefix for ink value\n   */\n  set(decl, prefix) {\n    if (decl.prop === 'text-decoration-skip-ink' && decl.value === 'auto') {\n      decl.prop = prefix + 'text-decoration-skip'\n      decl.value = 'ink'\n      return decl\n    } else {\n      return super.set(decl, prefix)\n    }\n  }\n}\n\nTextDecorationSkipInk.names = [\n  'text-decoration-skip-ink',\n  'text-decoration-skip'\n]\n\nmodule.exports = TextDecorationSkipInk\n","let Declaration = require('../declaration')\n\nconst BASIC = [\n  'none',\n  'underline',\n  'overline',\n  'line-through',\n  'blink',\n  'inherit',\n  'initial',\n  'unset'\n]\n\nclass TextDecoration extends Declaration {\n  /**\n   * Do not add prefixes for basic values.\n   */\n  check(decl) {\n    return decl.value.split(/\\s+/).some(i => !BASIC.includes(i))\n  }\n}\n\nTextDecoration.names = ['text-decoration']\n\nmodule.exports = TextDecoration\n","let Declaration = require('../declaration')\n\nclass TextEmphasisPosition extends Declaration {\n  set(decl, prefix) {\n    if (prefix === '-webkit-') {\n      decl.value = decl.value.replace(/\\s*(right|left)\\s*/i, '')\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nTextEmphasisPosition.names = ['text-emphasis-position']\n\nmodule.exports = TextEmphasisPosition\n","let Declaration = require('../declaration')\n\nclass TransformDecl extends Declaration {\n  /**\n   * Recursively check all parents for @keyframes\n   */\n  keyframeParents(decl) {\n    let { parent } = decl\n    while (parent) {\n      if (parent.type === 'atrule' && parent.name === 'keyframes') {\n        return true\n      }\n      ;({ parent } = parent)\n    }\n    return false\n  }\n\n  /**\n   * Is transform contain 3D commands\n   */\n  contain3d(decl) {\n    if (decl.prop === 'transform-origin') {\n      return false\n    }\n\n    for (let func of TransformDecl.functions3d) {\n      if (decl.value.includes(`${func}(`)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Replace rotateZ to rotate for IE 9\n   */\n  set(decl, prefix) {\n    decl = super.set(decl, prefix)\n    if (prefix === '-ms-') {\n      decl.value = decl.value.replace(/rotatez/gi, 'rotate')\n    }\n    return decl\n  }\n\n  /**\n   * Don't add prefix for IE in keyframes\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix === '-ms-') {\n      if (!this.contain3d(decl) && !this.keyframeParents(decl)) {\n        return super.insert(decl, prefix, prefixes)\n      }\n    } else if (prefix === '-o-') {\n      if (!this.contain3d(decl)) {\n        return super.insert(decl, prefix, prefixes)\n      }\n    } else {\n      return super.insert(decl, prefix, prefixes)\n    }\n    return undefined\n  }\n}\n\nTransformDecl.names = ['transform', 'transform-origin']\n\nTransformDecl.functions3d = [\n  'matrix3d',\n  'translate3d',\n  'translateZ',\n  'scale3d',\n  'scaleZ',\n  'rotate3d',\n  'rotateX',\n  'rotateY',\n  'perspective'\n]\n\nmodule.exports = TransformDecl\n","let Declaration = require('../declaration')\n\nclass UserSelect extends Declaration {\n  /**\n   * Change prefixed value for IE\n   */\n  set(decl, prefix) {\n    if (prefix === '-ms-' && decl.value === 'contain') {\n      decl.value = 'element'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Avoid prefixing all in IE\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.value === 'all' && prefix === '-ms-') {\n      return undefined\n    } else {\n      return super.insert(decl, prefix, prefixes)\n    }\n  }\n}\n\nUserSelect.names = ['user-select']\n\nmodule.exports = UserSelect\n","let Declaration = require('../declaration')\n\nclass WritingMode extends Declaration {\n  insert(decl, prefix, prefixes) {\n    if (prefix === '-ms-') {\n      let cloned = this.set(this.clone(decl), prefix)\n\n      if (this.needCascade(decl)) {\n        cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n      }\n      let direction = 'ltr'\n\n      decl.parent.nodes.forEach(i => {\n        if (i.prop === 'direction') {\n          if (i.value === 'rtl' || i.value === 'ltr') direction = i.value\n        }\n      })\n\n      cloned.value = WritingMode.msValues[direction][decl.value] || decl.value\n      return decl.parent.insertBefore(decl, cloned)\n    }\n\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nWritingMode.names = ['writing-mode']\n\nWritingMode.msValues = {\n  ltr: {\n    'horizontal-tb': 'lr-tb',\n    'vertical-rl': 'tb-rl',\n    'vertical-lr': 'tb-lr'\n  },\n  rtl: {\n    'horizontal-tb': 'rl-tb',\n    'vertical-rl': 'bt-rl',\n    'vertical-lr': 'bt-lr'\n  }\n}\n\nmodule.exports = WritingMode\n","let browserslist = require('browserslist')\n\nfunction capitalize(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1)\n}\n\nconst NAMES = {\n  ie: 'IE',\n  ie_mob: 'IE Mobile',\n  ios_saf: 'iOS Safari',\n  op_mini: 'Opera Mini',\n  op_mob: 'Opera Mobile',\n  and_chr: 'Chrome for Android',\n  and_ff: 'Firefox for Android',\n  and_uc: 'UC for Android',\n  and_qq: 'QQ Browser',\n  kaios: 'KaiOS Browser',\n  baidu: 'Baidu Browser',\n  samsung: 'Samsung Internet'\n}\n\nfunction prefix(name, prefixes, note) {\n  let out = `  ${name}`\n  if (note) out += ' *'\n  out += ': '\n  out += prefixes.map(i => i.replace(/^-(.*)-$/g, '$1')).join(', ')\n  out += '\\n'\n  return out\n}\n\nmodule.exports = function (prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return 'No browsers selected'\n  }\n\n  let versions = {}\n  for (let browser of prefixes.browsers.selected) {\n    let parts = browser.split(' ')\n    let name = parts[0]\n    let version = parts[1]\n\n    name = NAMES[name] || capitalize(name)\n    if (versions[name]) {\n      versions[name].push(version)\n    } else {\n      versions[name] = [version]\n    }\n  }\n\n  let out = 'Browsers:\\n'\n  for (let browser in versions) {\n    let list = versions[browser]\n    list = list.sort((a, b) => parseFloat(b) - parseFloat(a))\n    out += `  ${browser}: ${list.join(', ')}\\n`\n  }\n\n  let coverage = browserslist.coverage(prefixes.browsers.selected)\n  let round = Math.round(coverage * 100) / 100.0\n  out += `\\nThese browsers account for ${round}% of all users globally\\n`\n\n  let atrules = []\n  for (let name in prefixes.add) {\n    let data = prefixes.add[name]\n    if (name[0] === '@' && data.prefixes) {\n      atrules.push(prefix(name, data.prefixes))\n    }\n  }\n  if (atrules.length > 0) {\n    out += `\\nAt-Rules:\\n${atrules.sort().join('')}`\n  }\n\n  let selectors = []\n  for (let selector of prefixes.add.selectors) {\n    if (selector.prefixes) {\n      selectors.push(prefix(selector.name, selector.prefixes))\n    }\n  }\n  if (selectors.length > 0) {\n    out += `\\nSelectors:\\n${selectors.sort().join('')}`\n  }\n\n  let values = []\n  let props = []\n  let hadGrid = false\n  for (let name in prefixes.add) {\n    let data = prefixes.add[name]\n    if (name[0] !== '@' && data.prefixes) {\n      let grid = name.indexOf('grid-') === 0\n      if (grid) hadGrid = true\n      props.push(prefix(name, data.prefixes, grid))\n    }\n\n    if (!Array.isArray(data.values)) {\n      continue\n    }\n    for (let value of data.values) {\n      let grid = value.name.includes('grid')\n      if (grid) hadGrid = true\n      let string = prefix(value.name, value.prefixes, grid)\n      if (!values.includes(string)) {\n        values.push(string)\n      }\n    }\n  }\n\n  if (props.length > 0) {\n    out += `\\nProperties:\\n${props.sort().join('')}`\n  }\n  if (values.length > 0) {\n    out += `\\nValues:\\n${values.sort().join('')}`\n  }\n  if (hadGrid) {\n    out += '\\n* - Prefixes will be added only on grid: true option.\\n'\n  }\n\n  if (!atrules.length && !selectors.length && !props.length && !values.length) {\n    out +=\n      \"\\nAwesome! Your browsers don't require any vendor prefixes.\" +\n      '\\nNow you can remove Autoprefixer from build steps.'\n  }\n\n  return out\n}\n","class OldSelector {\n  constructor(selector, prefix) {\n    this.prefix = prefix\n    this.prefixed = selector.prefixed(this.prefix)\n    this.regexp = selector.regexp(this.prefix)\n\n    this.prefixeds = selector\n      .possible()\n      .map(x => [selector.prefixed(x), selector.regexp(x)])\n\n    this.unprefixed = selector.name\n    this.nameRegexp = selector.regexp()\n  }\n\n  /**\n   * Is rule a hack without unprefixed version bottom\n   */\n  isHack(rule) {\n    let index = rule.parent.index(rule) + 1\n    let rules = rule.parent.nodes\n\n    while (index < rules.length) {\n      let before = rules[index].selector\n      if (!before) {\n        return true\n      }\n\n      if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {\n        return false\n      }\n\n      let some = false\n      for (let [string, regexp] of this.prefixeds) {\n        if (before.includes(string) && before.match(regexp)) {\n          some = true\n          break\n        }\n      }\n\n      if (!some) {\n        return true\n      }\n\n      index += 1\n    }\n\n    return true\n  }\n\n  /**\n   * Does rule contain an unnecessary prefixed selector\n   */\n  check(rule) {\n    if (!rule.selector.includes(this.prefixed)) {\n      return false\n    }\n    if (!rule.selector.match(this.regexp)) {\n      return false\n    }\n    if (this.isHack(rule)) {\n      return false\n    }\n    return true\n  }\n}\n\nmodule.exports = OldSelector\n","let utils = require('./utils')\n\nclass OldValue {\n  constructor(unprefixed, prefixed, string, regexp) {\n    this.unprefixed = unprefixed\n    this.prefixed = prefixed\n    this.string = string || prefixed\n    this.regexp = regexp || utils.regexp(prefixed)\n  }\n\n  /**\n   * Check, that value contain old value\n   */\n  check(value) {\n    if (value.includes(this.string)) {\n      return !!value.match(this.regexp)\n    }\n    return false\n  }\n}\n\nmodule.exports = OldValue\n","let Browsers = require('./browsers')\nlet vendor = require('./vendor')\nlet utils = require('./utils')\n\n/**\n * Recursively clone objects\n */\nfunction clone(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i of Object.keys(obj || {})) {\n    let value = obj[i]\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(x => clone(x, cloned))\n    } else if (\n      i !== '_autoprefixerPrefix' &&\n      i !== '_autoprefixerValues' &&\n      i !== 'proxyCache'\n    ) {\n      if (typeof value === 'object' && value !== null) {\n        value = clone(value, cloned)\n      }\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Prefixer {\n  /**\n   * Add hack to selected names\n   */\n  static hack(klass) {\n    if (!this.hacks) {\n      this.hacks = {}\n    }\n    return klass.names.map(name => {\n      this.hacks[name] = klass\n      return this.hacks[name]\n    })\n  }\n\n  /**\n   * Load hacks for some names\n   */\n  static load(name, prefixes, all) {\n    let Klass = this.hacks && this.hacks[name]\n    if (Klass) {\n      return new Klass(name, prefixes, all)\n    } else {\n      return new this(name, prefixes, all)\n    }\n  }\n\n  /**\n   * Clone node and clean autprefixer custom caches\n   */\n  static clone(node, overrides) {\n    let cloned = clone(node)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  constructor(name, prefixes, all) {\n    this.prefixes = prefixes\n    this.name = name\n    this.all = all\n  }\n\n  /**\n   * Find prefix in node parents\n   */\n  parentPrefix(node) {\n    let prefix\n\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop)\n    } else if (node.type === 'root') {\n      prefix = false\n    } else if (\n      node.type === 'rule' &&\n      node.selector.includes(':-') &&\n      /:(-\\w+-)/.test(node.selector)\n    ) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1]\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name)\n    } else {\n      prefix = this.parentPrefix(node.parent)\n    }\n\n    if (!Browsers.prefixes().includes(prefix)) {\n      prefix = false\n    }\n\n    node._autoprefixerPrefix = prefix\n\n    return node._autoprefixerPrefix\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node, result) {\n    if (!this.check(node)) {\n      return undefined\n    }\n\n    let parent = this.parentPrefix(node)\n\n    let prefixes = this.prefixes.filter(\n      prefix => !parent || parent === utils.removeNote(prefix)\n    )\n\n    let added = []\n    for (let prefix of prefixes) {\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix)\n      }\n    }\n\n    return added\n  }\n\n  /**\n   * Shortcut for Prefixer.clone\n   */\n  clone(node, overrides) {\n    return Prefixer.clone(node, overrides)\n  }\n}\n\nmodule.exports = Prefixer\n","let vendor = require('./vendor')\nlet Declaration = require('./declaration')\nlet Resolution = require('./resolution')\nlet Transition = require('./transition')\nlet Processor = require('./processor')\nlet Supports = require('./supports')\nlet Browsers = require('./browsers')\nlet Selector = require('./selector')\nlet AtRule = require('./at-rule')\nlet Value = require('./value')\nlet utils = require('./utils')\nlet hackFullscreen = require('./hacks/fullscreen')\nlet hackPlaceholder = require('./hacks/placeholder')\nlet hackPlaceholderShown = require('./hacks/placeholder-shown')\nlet hackFileSelectorButton = require('./hacks/file-selector-button')\nlet hackFlex = require('./hacks/flex')\nlet hackOrder = require('./hacks/order')\nlet hackFilter = require('./hacks/filter')\nlet hackGridEnd = require('./hacks/grid-end')\nlet hackAnimation = require('./hacks/animation')\nlet hackFlexFlow = require('./hacks/flex-flow')\nlet hackFlexGrow = require('./hacks/flex-grow')\nlet hackFlexWrap = require('./hacks/flex-wrap')\nlet hackGridArea = require('./hacks/grid-area')\nlet hackPlaceSelf = require('./hacks/place-self')\nlet hackGridStart = require('./hacks/grid-start')\nlet hackAlignSelf = require('./hacks/align-self')\nlet hackAppearance = require('./hacks/appearance')\nlet hackFlexBasis = require('./hacks/flex-basis')\nlet hackMaskBorder = require('./hacks/mask-border')\nlet hackMaskComposite = require('./hacks/mask-composite')\nlet hackAlignItems = require('./hacks/align-items')\nlet hackUserSelect = require('./hacks/user-select')\nlet hackFlexShrink = require('./hacks/flex-shrink')\nlet hackBreakProps = require('./hacks/break-props')\nlet hackWritingMode = require('./hacks/writing-mode')\nlet hackBorderImage = require('./hacks/border-image')\nlet hackAlignContent = require('./hacks/align-content')\nlet hackBorderRadius = require('./hacks/border-radius')\nlet hackBlockLogical = require('./hacks/block-logical')\nlet hackGridTemplate = require('./hacks/grid-template')\nlet hackInlineLogical = require('./hacks/inline-logical')\nlet hackGridRowAlign = require('./hacks/grid-row-align')\nlet hackTransformDecl = require('./hacks/transform-decl')\nlet hackFlexDirection = require('./hacks/flex-direction')\nlet hackImageRendering = require('./hacks/image-rendering')\nlet hackBackdropFilter = require('./hacks/backdrop-filter')\nlet hackBackgroundClip = require('./hacks/background-clip')\nlet hackTextDecoration = require('./hacks/text-decoration')\nlet hackJustifyContent = require('./hacks/justify-content')\nlet hackBackgroundSize = require('./hacks/background-size')\nlet hackGridRowColumn = require('./hacks/grid-row-column')\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns')\nlet hackGridColumnAlign = require('./hacks/grid-column-align')\nlet hackPrintColorAdjust = require('./hacks/print-color-adjust')\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior')\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas')\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position')\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink')\nlet hackGradient = require('./hacks/gradient')\nlet hackIntrinsic = require('./hacks/intrinsic')\nlet hackPixelated = require('./hacks/pixelated')\nlet hackImageSet = require('./hacks/image-set')\nlet hackCrossFade = require('./hacks/cross-fade')\nlet hackDisplayFlex = require('./hacks/display-flex')\nlet hackDisplayGrid = require('./hacks/display-grid')\nlet hackFilterValue = require('./hacks/filter-value')\nlet hackAutofill = require('./hacks/autofill')\n\nSelector.hack(hackAutofill)\nSelector.hack(hackFullscreen)\nSelector.hack(hackPlaceholder)\nSelector.hack(hackPlaceholderShown)\nSelector.hack(hackFileSelectorButton)\nDeclaration.hack(hackFlex)\nDeclaration.hack(hackOrder)\nDeclaration.hack(hackFilter)\nDeclaration.hack(hackGridEnd)\nDeclaration.hack(hackAnimation)\nDeclaration.hack(hackFlexFlow)\nDeclaration.hack(hackFlexGrow)\nDeclaration.hack(hackFlexWrap)\nDeclaration.hack(hackGridArea)\nDeclaration.hack(hackPlaceSelf)\nDeclaration.hack(hackGridStart)\nDeclaration.hack(hackAlignSelf)\nDeclaration.hack(hackAppearance)\nDeclaration.hack(hackFlexBasis)\nDeclaration.hack(hackMaskBorder)\nDeclaration.hack(hackMaskComposite)\nDeclaration.hack(hackAlignItems)\nDeclaration.hack(hackUserSelect)\nDeclaration.hack(hackFlexShrink)\nDeclaration.hack(hackBreakProps)\nDeclaration.hack(hackWritingMode)\nDeclaration.hack(hackBorderImage)\nDeclaration.hack(hackAlignContent)\nDeclaration.hack(hackBorderRadius)\nDeclaration.hack(hackBlockLogical)\nDeclaration.hack(hackGridTemplate)\nDeclaration.hack(hackInlineLogical)\nDeclaration.hack(hackGridRowAlign)\nDeclaration.hack(hackTransformDecl)\nDeclaration.hack(hackFlexDirection)\nDeclaration.hack(hackImageRendering)\nDeclaration.hack(hackBackdropFilter)\nDeclaration.hack(hackBackgroundClip)\nDeclaration.hack(hackTextDecoration)\nDeclaration.hack(hackJustifyContent)\nDeclaration.hack(hackBackgroundSize)\nDeclaration.hack(hackGridRowColumn)\nDeclaration.hack(hackGridRowsColumns)\nDeclaration.hack(hackGridColumnAlign)\nDeclaration.hack(hackOverscrollBehavior)\nDeclaration.hack(hackGridTemplateAreas)\nDeclaration.hack(hackPrintColorAdjust)\nDeclaration.hack(hackTextEmphasisPosition)\nDeclaration.hack(hackTextDecorationSkipInk)\nValue.hack(hackGradient)\nValue.hack(hackIntrinsic)\nValue.hack(hackPixelated)\nValue.hack(hackImageSet)\nValue.hack(hackCrossFade)\nValue.hack(hackDisplayFlex)\nValue.hack(hackDisplayGrid)\nValue.hack(hackFilterValue)\n\nlet declsCache = new Map()\n\nclass Prefixes {\n  constructor(data, browsers, options = {}) {\n    this.data = data\n    this.browsers = browsers\n    this.options = options\n    ;[this.add, this.remove] = this.preprocess(this.select(this.data))\n    this.transition = new Transition(this)\n    this.processor = new Processor(this)\n  }\n\n  /**\n   * Return clone instance to remove all prefixes\n   */\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache\n    }\n\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, [])\n      this.cleanerCache = new Prefixes(this.data, empty, this.options)\n    } else {\n      return this\n    }\n\n    return this.cleanerCache\n  }\n\n  /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */\n  select(list) {\n    let selected = { add: {}, remove: {} }\n\n    for (let name in list) {\n      let data = list[name]\n      let add = data.browsers.map(i => {\n        let params = i.split(' ')\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        }\n      })\n\n      let notes = add\n        .filter(i => i.note)\n        .map(i => `${this.browsers.prefix(i.browser)} ${i.note}`)\n      notes = utils.uniq(notes)\n\n      add = add\n        .filter(i => this.browsers.isSelected(i.browser))\n        .map(i => {\n          let prefix = this.browsers.prefix(i.browser)\n          if (i.note) {\n            return `${prefix} ${i.note}`\n          } else {\n            return prefix\n          }\n        })\n      add = this.sort(utils.uniq(add))\n\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'))\n      }\n\n      let all = data.browsers.map(i => this.browsers.prefix(i))\n      if (data.mistakes) {\n        all = all.concat(data.mistakes)\n      }\n      all = all.concat(notes)\n      all = utils.uniq(all)\n\n      if (add.length) {\n        selected.add[name] = add\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i))\n        }\n      } else {\n        selected.remove[name] = all\n      }\n    }\n\n    return selected\n  }\n\n  /**\n   * Sort vendor prefixes\n   */\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length\n      let bLength = utils.removeNote(b).length\n\n      if (aLength === bLength) {\n        return b.length - a.length\n      } else {\n        return bLength - aLength\n      }\n    })\n  }\n\n  /**\n   * Cache prefixes data to fast CSS processing\n   */\n  preprocess(selected) {\n    let add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    }\n    for (let name in selected.add) {\n      let prefixes = selected.add[name]\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this)\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this)\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this))\n      } else {\n        let props = this.data[name].props\n\n        if (props) {\n          let value = Value.load(name, prefixes, this)\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = { values: [] }\n            }\n            add[prop].values.push(value)\n          }\n        } else {\n          let values = (add[name] && add[name].values) || []\n          add[name] = Declaration.load(name, prefixes, this)\n          add[name].values = values\n        }\n      }\n    }\n\n    let remove = { selectors: [] }\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name]\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes)\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix))\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`\n          remove[prefixed] = { remove: true }\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this)\n      } else {\n        let props = this.data[name].props\n        if (props) {\n          let value = Value.load(name, [], this)\n          for (let prefix of prefixes) {\n            let old = value.old(prefix)\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {}\n                }\n                if (!remove[prop].values) {\n                  remove[prop].values = []\n                }\n                remove[prop].values.push(old)\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p)\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue\n                }\n              }\n            }\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {}\n              }\n              remove[prefixed].remove = true\n            }\n          }\n        }\n      }\n    }\n\n    return [add, remove]\n  }\n\n  /**\n   * Declaration loader with caching\n   */\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop))\n    }\n\n    return declsCache.get(prop)\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop))\n    if (value === 'flex-direction') {\n      value = 'flex-flow'\n    }\n    return value\n  }\n\n  /**\n   * Normalize prefix for remover\n   */\n  normalize(prop) {\n    return this.decl(prop).normalize(prop)\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop)\n    return this.decl(prop).prefixed(prop, prefix)\n  }\n\n  /**\n   * Return values, which must be prefixed in selected property\n   */\n  values(type, prop) {\n    let data = this[type]\n\n    let global = data['*'] && data['*'].values\n    let values = data[prop] && data[prop].values\n\n    if (global && values) {\n      return utils.uniq(global.concat(values))\n    } else {\n      return global || values || []\n    }\n  }\n\n  /**\n   * Group declaration by unprefixed property to check them\n   */\n  group(decl) {\n    let rule = decl.parent\n    let index = rule.index(decl)\n    let { length } = rule.nodes\n    let unprefixed = this.unprefixed(decl.prop)\n\n    let checker = (step, callback) => {\n      index += step\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index]\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break\n          } else if (callback(other) === true) {\n            return true\n          }\n\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n        }\n\n        index += step\n      }\n      return false\n    }\n\n    return {\n      up(callback) {\n        return checker(-1, callback)\n      },\n      down(callback) {\n        return checker(+1, callback)\n      }\n    }\n  }\n}\n\nmodule.exports = Prefixes\n","let parser = require('postcss-value-parser')\n\nlet Value = require('./value')\nlet insertAreas = require('./hacks/grid-utils').insertAreas\n\nconst OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i\nconst OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i\nconst IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i\nconst GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i\n\nconst SIZES = [\n  'width',\n  'height',\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height',\n  'inline-size',\n  'min-inline-size',\n  'max-inline-size',\n  'block-size',\n  'min-block-size',\n  'max-block-size'\n]\n\nfunction hasGridTemplate(decl) {\n  return decl.parent.some(\n    i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n  )\n}\n\nfunction hasRowsAndColumns(decl) {\n  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows')\n  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns')\n  return hasRows && hasColumns\n}\n\nclass Processor {\n  constructor(prefixes) {\n    this.prefixes = prefixes\n  }\n\n  /**\n   * Add necessary prefixes\n   */\n  add(css, result) {\n    // At-rules\n    let resolution = this.prefixes.add['@resolution']\n    let keyframes = this.prefixes.add['@keyframes']\n    let viewport = this.prefixes.add['@viewport']\n    let supports = this.prefixes.add['@supports']\n\n    css.walkAtRules(rule => {\n      if (rule.name === 'keyframes') {\n        if (!this.disabled(rule, result)) {\n          return keyframes && keyframes.process(rule)\n        }\n      } else if (rule.name === 'viewport') {\n        if (!this.disabled(rule, result)) {\n          return viewport && viewport.process(rule)\n        }\n      } else if (rule.name === 'supports') {\n        if (\n          this.prefixes.options.supports !== false &&\n          !this.disabled(rule, result)\n        ) {\n          return supports.process(rule)\n        }\n      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {\n        if (!this.disabled(rule, result)) {\n          return resolution && resolution.process(rule)\n        }\n      }\n\n      return undefined\n    })\n\n    // Selectors\n    css.walkRules(rule => {\n      if (this.disabled(rule, result)) return undefined\n\n      return this.prefixes.add.selectors.map(selector => {\n        return selector.process(rule, result)\n      })\n    })\n\n    function insideGrid(decl) {\n      return decl.parent.nodes.some(node => {\n        if (node.type !== 'decl') return false\n        let displayGrid =\n          node.prop === 'display' && /(inline-)?grid/.test(node.value)\n        let gridTemplate = node.prop.startsWith('grid-template')\n        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop)\n        return displayGrid || gridTemplate || gridGap\n      })\n    }\n    function insideFlex(decl) {\n      return decl.parent.some(node => {\n        return node.prop === 'display' && /(inline-)?flex/.test(node.value)\n      })\n    }\n\n    let gridPrefixes =\n      this.gridStatus(css, result) &&\n      this.prefixes.add['grid-area'] &&\n      this.prefixes.add['grid-area'].prefixes\n\n    css.walkDecls(decl => {\n      if (this.disabledDecl(decl, result)) return undefined\n\n      let parent = decl.parent\n      let prop = decl.prop\n      let value = decl.value\n\n      if (prop === 'color-adjust') {\n        if (parent.every(i => i.prop !== 'print-color-adjust')) {\n          result.warn(\n            'Replace color-adjust to print-color-adjust. ' +\n              'The color-adjust shorthand is currently deprecated.',\n            { node: decl }\n          )\n        }\n      } else if (prop === 'grid-row-span') {\n        result.warn(\n          'grid-row-span is not part of final Grid Layout. Use grid-row.',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'grid-column-span') {\n        result.warn(\n          'grid-column-span is not part of final Grid Layout. Use grid-column.',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'display' && value === 'box') {\n        result.warn(\n          'You should write display: flex by final spec ' +\n            'instead of display: box',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'text-emphasis-position') {\n        if (value === 'under' || value === 'over') {\n          result.warn(\n            'You should use 2 values for text-emphasis-position ' +\n              'For example, `under left` instead of just `under`.',\n            { node: decl }\n          )\n        }\n      } else if (\n        /^(align|justify|place)-(items|content)$/.test(prop) &&\n        insideFlex(decl)\n      ) {\n        if (value === 'start' || value === 'end') {\n          result.warn(\n            `${value} value has mixed support, consider using ` +\n              `flex-${value} instead`,\n            { node: decl }\n          )\n        }\n      } else if (prop === 'text-decoration-skip' && value === 'ink') {\n        result.warn(\n          'Replace text-decoration-skip: ink to ' +\n            'text-decoration-skip-ink: auto, because spec had been changed',\n          { node: decl }\n        )\n      } else {\n        if (gridPrefixes && this.gridStatus(decl, result)) {\n          if (decl.value === 'subgrid') {\n            result.warn('IE does not support subgrid', { node: decl })\n          }\n          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\n            let fixed = prop.replace('-items', '-self')\n            result.warn(\n              `IE does not support ${prop} on grid containers. ` +\n                `Try using ${fixed} on child elements instead: ` +\n                `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`,\n              { node: decl }\n            )\n          } else if (\n            /^(align|justify|place)-content$/.test(prop) &&\n            insideGrid(decl)\n          ) {\n            result.warn(`IE does not support ${decl.prop} on grid containers`, {\n              node: decl\n            })\n          } else if (prop === 'display' && decl.value === 'contents') {\n            result.warn(\n              'Please do not use display: contents; ' +\n                'if you have grid setting enabled',\n              { node: decl }\n            )\n            return undefined\n          } else if (decl.prop === 'grid-gap') {\n            let status = this.gridStatus(decl, result)\n            if (\n              status === 'autoplace' &&\n              !hasRowsAndColumns(decl) &&\n              !hasGridTemplate(decl)\n            ) {\n              result.warn(\n                'grid-gap only works if grid-template(-areas) is being ' +\n                  'used or both rows and columns have been declared ' +\n                  'and cells have not been manually ' +\n                  'placed inside the explicit grid',\n                { node: decl }\n              )\n            } else if (\n              (status === true || status === 'no-autoplace') &&\n              !hasGridTemplate(decl)\n            ) {\n              result.warn(\n                'grid-gap only works if grid-template(-areas) is being used',\n                { node: decl }\n              )\n            }\n          } else if (prop === 'grid-auto-columns') {\n            result.warn('grid-auto-columns is not supported by IE', {\n              node: decl\n            })\n            return undefined\n          } else if (prop === 'grid-auto-rows') {\n            result.warn('grid-auto-rows is not supported by IE', { node: decl })\n            return undefined\n          } else if (prop === 'grid-auto-flow') {\n            let hasRows = parent.some(i => i.prop === 'grid-template-rows')\n            let hasCols = parent.some(i => i.prop === 'grid-template-columns')\n\n            if (hasGridTemplate(decl)) {\n              result.warn('grid-auto-flow is not supported by IE', {\n                node: decl\n              })\n            } else if (value.includes('dense')) {\n              result.warn('grid-auto-flow: dense is not supported by IE', {\n                node: decl\n              })\n            } else if (!hasRows && !hasCols) {\n              result.warn(\n                'grid-auto-flow works only if grid-template-rows and ' +\n                  'grid-template-columns are present in the same rule',\n                { node: decl }\n              )\n            }\n            return undefined\n          } else if (value.includes('auto-fit')) {\n            result.warn('auto-fit value is not supported by IE', {\n              node: decl,\n              word: 'auto-fit'\n            })\n            return undefined\n          } else if (value.includes('auto-fill')) {\n            result.warn('auto-fill value is not supported by IE', {\n              node: decl,\n              word: 'auto-fill'\n            })\n            return undefined\n          } else if (prop.startsWith('grid-template') && value.includes('[')) {\n            result.warn(\n              'Autoprefixer currently does not support line names. ' +\n                'Try using grid-template-areas instead.',\n              { node: decl, word: '[' }\n            )\n          }\n        }\n        if (value.includes('radial-gradient')) {\n          if (OLD_RADIAL.test(decl.value)) {\n            result.warn(\n              'Gradient has outdated direction syntax. ' +\n                'New syntax is like `closest-side at 0 0` ' +\n                'instead of `0 0, closest-side`.',\n              { node: decl }\n            )\n          } else {\n            let ast = parser(value)\n\n            for (let i of ast.nodes) {\n              if (i.type === 'function' && i.value === 'radial-gradient') {\n                for (let word of i.nodes) {\n                  if (word.type === 'word') {\n                    if (word.value === 'cover') {\n                      result.warn(\n                        'Gradient has outdated direction syntax. ' +\n                          'Replace `cover` to `farthest-corner`.',\n                        { node: decl }\n                      )\n                    } else if (word.value === 'contain') {\n                      result.warn(\n                        'Gradient has outdated direction syntax. ' +\n                          'Replace `contain` to `closest-side`.',\n                        { node: decl }\n                      )\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (value.includes('linear-gradient')) {\n          if (OLD_LINEAR.test(value)) {\n            result.warn(\n              'Gradient has outdated direction syntax. ' +\n                'New syntax is like `to left` instead of `right`.',\n              { node: decl }\n            )\n          }\n        }\n      }\n\n      if (SIZES.includes(decl.prop)) {\n        if (!decl.value.includes('-fill-available')) {\n          if (decl.value.includes('fill-available')) {\n            result.warn(\n              'Replace fill-available to stretch, ' +\n                'because spec had been changed',\n              { node: decl }\n            )\n          } else if (decl.value.includes('fill')) {\n            let ast = parser(value)\n            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {\n              result.warn(\n                'Replace fill to stretch, because spec had been changed',\n                { node: decl }\n              )\n            }\n          }\n        }\n      }\n\n      let prefixer\n\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        // Transition\n        return this.prefixes.transition.add(decl, result)\n      } else if (decl.prop === 'align-self') {\n        // align-self flexbox or grid\n        let display = this.displayType(decl)\n        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {\n          prefixer = this.prefixes.add['align-self']\n          if (prefixer && prefixer.prefixes) {\n            prefixer.process(decl)\n          }\n        }\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-row-align']\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result)\n          }\n        }\n      } else if (decl.prop === 'justify-self') {\n        // justify-self flexbox or grid\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-column-align']\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result)\n          }\n        }\n      } else if (decl.prop === 'place-self') {\n        prefixer = this.prefixes.add['place-self']\n        if (\n          prefixer &&\n          prefixer.prefixes &&\n          this.gridStatus(decl, result) !== false\n        ) {\n          return prefixer.process(decl, result)\n        }\n      } else {\n        // Properties\n        prefixer = this.prefixes.add[decl.prop]\n        if (prefixer && prefixer.prefixes) {\n          return prefixer.process(decl, result)\n        }\n      }\n\n      return undefined\n    })\n\n    // Insert grid-area prefixes. We need to be able to store the different\n    // rules as a data and hack API is not enough for this\n    if (this.gridStatus(css, result)) {\n      insertAreas(css, this.disabled)\n    }\n\n    // Values\n    return css.walkDecls(decl => {\n      if (this.disabledValue(decl, result)) return\n\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\n      let list = this.prefixes.values('add', unprefixed)\n      if (Array.isArray(list)) {\n        for (let value of list) {\n          if (value.process) value.process(decl, result)\n        }\n      }\n      Value.save(this.prefixes, decl)\n    })\n  }\n\n  /**\n   * Remove unnecessary pefixes\n   */\n  remove(css, result) {\n    // At-rules\n    let resolution = this.prefixes.remove['@resolution']\n\n    css.walkAtRules((rule, i) => {\n      if (this.prefixes.remove[`@${rule.name}`]) {\n        if (!this.disabled(rule, result)) {\n          rule.parent.removeChild(i)\n        }\n      } else if (\n        rule.name === 'media' &&\n        rule.params.includes('-resolution') &&\n        resolution\n      ) {\n        resolution.clean(rule)\n      }\n    })\n\n    // Selectors\n    for (let checker of this.prefixes.remove.selectors) {\n      css.walkRules((rule, i) => {\n        if (checker.check(rule)) {\n          if (!this.disabled(rule, result)) {\n            rule.parent.removeChild(i)\n          }\n        }\n      })\n    }\n\n    return css.walkDecls((decl, i) => {\n      if (this.disabled(decl, result)) return\n\n      let rule = decl.parent\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\n\n      // Transition\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        this.prefixes.transition.remove(decl)\n      }\n\n      // Properties\n      if (\n        this.prefixes.remove[decl.prop] &&\n        this.prefixes.remove[decl.prop].remove\n      ) {\n        let notHack = this.prefixes.group(decl).down(other => {\n          return this.prefixes.normalize(other.prop) === unprefixed\n        })\n\n        if (unprefixed === 'flex-flow') {\n          notHack = true\n        }\n\n        if (decl.prop === '-webkit-box-orient') {\n          let hacks = { 'flex-direction': true, 'flex-flow': true }\n          if (!decl.parent.some(j => hacks[j.prop])) return\n        }\n\n        if (notHack && !this.withHackValue(decl)) {\n          if (decl.raw('before').includes('\\n')) {\n            this.reduceSpaces(decl)\n          }\n          rule.removeChild(i)\n          return\n        }\n      }\n\n      // Values\n      for (let checker of this.prefixes.values('remove', unprefixed)) {\n        if (!checker.check) continue\n        if (!checker.check(decl.value)) continue\n\n        unprefixed = checker.unprefixed\n        let notHack = this.prefixes.group(decl).down(other => {\n          return other.value.includes(unprefixed)\n        })\n\n        if (notHack) {\n          rule.removeChild(i)\n          return\n        }\n      }\n    })\n  }\n\n  /**\n   * Some rare old values, which is not in standard\n   */\n  withHackValue(decl) {\n    return decl.prop === '-webkit-background-clip' && decl.value === 'text'\n  }\n\n  /**\n   * Check for grid/flexbox options.\n   */\n  disabledValue(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true\n      }\n    }\n    if (node.type === 'decl' && node.prop === 'content') {\n      return true\n    }\n\n    return this.disabled(node, result)\n  }\n\n  /**\n   * Check for grid/flexbox options.\n   */\n  disabledDecl(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      let other = ['order', 'justify-content', 'align-items', 'align-content']\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true\n      }\n    }\n\n    return this.disabled(node, result)\n  }\n\n  /**\n   * Check for control comment and global options\n   */\n  disabled(node, result) {\n    if (!node) return false\n\n    if (node._autoprefixerDisabled !== undefined) {\n      return node._autoprefixerDisabled\n    }\n\n    if (node.parent) {\n      let p = node.prev()\n      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {\n        node._autoprefixerDisabled = true\n        node._autoprefixerSelfDisabled = true\n        return true\n      }\n    }\n\n    let value = null\n    if (node.nodes) {\n      let status\n      node.each(i => {\n        if (i.type !== 'comment') return\n        if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\n          if (typeof status !== 'undefined') {\n            result.warn(\n              'Second Autoprefixer control comment ' +\n                'was ignored. Autoprefixer applies control ' +\n                'comment to whole block, not to next rules.',\n              { node: i }\n            )\n          } else {\n            status = /on/i.test(i.text)\n          }\n        }\n      })\n\n      if (status !== undefined) {\n        value = !status\n      }\n    }\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentDisabled = this.disabled(node.parent, result)\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false\n        } else {\n          value = isParentDisabled\n        }\n      } else {\n        value = false\n      }\n    }\n    node._autoprefixerDisabled = value\n    return value\n  }\n\n  /**\n   * Normalize spaces in cascade declaration group\n   */\n  reduceSpaces(decl) {\n    let stop = false\n    this.prefixes.group(decl).up(() => {\n      stop = true\n      return true\n    })\n    if (stop) {\n      return\n    }\n\n    let parts = decl.raw('before').split('\\n')\n    let prevMin = parts[parts.length - 1].length\n    let diff = false\n\n    this.prefixes.group(decl).down(other => {\n      parts = other.raw('before').split('\\n')\n      let last = parts.length - 1\n\n      if (parts[last].length > prevMin) {\n        if (diff === false) {\n          diff = parts[last].length - prevMin\n        }\n\n        parts[last] = parts[last].slice(0, -diff)\n        other.raws.before = parts.join('\\n')\n      }\n    })\n  }\n\n  /**\n   * Is it flebox or grid rule\n   */\n  displayType(decl) {\n    for (let i of decl.parent.nodes) {\n      if (i.prop !== 'display') {\n        continue\n      }\n\n      if (i.value.includes('flex')) {\n        return 'flex'\n      }\n\n      if (i.value.includes('grid')) {\n        return 'grid'\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Set grid option via control comment\n   */\n  gridStatus(node, result) {\n    if (!node) return false\n\n    if (node._autoprefixerGridStatus !== undefined) {\n      return node._autoprefixerGridStatus\n    }\n\n    let value = null\n    if (node.nodes) {\n      let status\n      node.each(i => {\n        if (i.type !== 'comment') return\n        if (GRID_REGEX.test(i.text)) {\n          let hasAutoplace = /:\\s*autoplace/i.test(i.text)\n          let noAutoplace = /no-autoplace/i.test(i.text)\n          if (typeof status !== 'undefined') {\n            result.warn(\n              'Second Autoprefixer grid control comment was ' +\n                'ignored. Autoprefixer applies control comments to the whole ' +\n                'block, not to the next rules.',\n              { node: i }\n            )\n          } else if (hasAutoplace) {\n            status = 'autoplace'\n          } else if (noAutoplace) {\n            status = true\n          } else {\n            status = /on/i.test(i.text)\n          }\n        }\n      })\n\n      if (status !== undefined) {\n        value = status\n      }\n    }\n\n    if (node.type === 'atrule' && node.name === 'supports') {\n      let params = node.params\n      if (params.includes('grid') && params.includes('auto')) {\n        value = false\n      }\n    }\n\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentGrid = this.gridStatus(node.parent, result)\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false\n        } else {\n          value = isParentGrid\n        }\n      } else if (typeof this.prefixes.options.grid !== 'undefined') {\n        value = this.prefixes.options.grid\n      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {\n        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {\n          value = 'autoplace'\n        } else {\n          value = true\n        }\n      } else {\n        value = false\n      }\n    }\n\n    node._autoprefixerGridStatus = value\n    return value\n  }\n}\n\nmodule.exports = Processor\n","let FractionJs = require('fraction.js')\n\nlet Prefixer = require('./prefixer')\nlet utils = require('./utils')\n\nconst REGEXP = /(min|max)-resolution\\s*:\\s*\\d*\\.?\\d+(dppx|dpcm|dpi|x)/gi\nconst SPLIT = /(min|max)-resolution(\\s*:\\s*)(\\d*\\.?\\d+)(dppx|dpcm|dpi|x)/i\n\nclass Resolution extends Prefixer {\n  /**\n   * Return prefixed query name\n   */\n  prefixName(prefix, name) {\n    if (prefix === '-moz-') {\n      return name + '--moz-device-pixel-ratio'\n    } else {\n      return prefix + name + '-device-pixel-ratio'\n    }\n  }\n\n  /**\n   * Return prefixed query\n   */\n  prefixQuery(prefix, name, colon, value, units) {\n    value = new FractionJs(value)\n\n    // 1dpcm = 2.54dpi\n    // 1dppx = 96dpi\n    if (units === 'dpi') {\n      value = value.div(96)\n    } else if (units === 'dpcm') {\n      value = value.mul(2.54).div(96)\n    }\n    value = value.simplify()\n\n    if (prefix === '-o-') {\n      value = value.n + '/' + value.d\n    }\n    return this.prefixName(prefix, name) + colon + value\n  }\n\n  /**\n   * Remove prefixed queries\n   */\n  clean(rule) {\n    if (!this.bad) {\n      this.bad = []\n      for (let prefix of this.prefixes) {\n        this.bad.push(this.prefixName(prefix, 'min'))\n        this.bad.push(this.prefixName(prefix, 'max'))\n      }\n    }\n\n    rule.params = utils.editList(rule.params, queries => {\n      return queries.filter(query => this.bad.every(i => !query.includes(i)))\n    })\n  }\n\n  /**\n   * Add prefixed queries\n   */\n  process(rule) {\n    let parent = this.parentPrefix(rule)\n    let prefixes = parent ? [parent] : this.prefixes\n\n    rule.params = utils.editList(rule.params, (origin, prefixed) => {\n      for (let query of origin) {\n        if (\n          !query.includes('min-resolution') &&\n          !query.includes('max-resolution')\n        ) {\n          prefixed.push(query)\n          continue\n        }\n\n        for (let prefix of prefixes) {\n          let processed = query.replace(REGEXP, str => {\n            let parts = str.match(SPLIT)\n            return this.prefixQuery(\n              prefix,\n              parts[1],\n              parts[2],\n              parts[3],\n              parts[4]\n            )\n          })\n          prefixed.push(processed)\n        }\n        prefixed.push(query)\n      }\n\n      return utils.uniq(prefixed)\n    })\n  }\n}\n\nmodule.exports = Resolution\n","let { list } = require('postcss')\n\nlet OldSelector = require('./old-selector')\nlet Prefixer = require('./prefixer')\nlet Browsers = require('./browsers')\nlet utils = require('./utils')\n\nclass Selector extends Prefixer {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n    this.regexpCache = new Map()\n  }\n\n  /**\n   * Is rule selectors need to be prefixed\n   */\n  check(rule) {\n    if (rule.selector.includes(this.name)) {\n      return !!rule.selector.match(this.regexp())\n    }\n\n    return false\n  }\n\n  /**\n   * Return prefixed version of selector\n   */\n  prefixed(prefix) {\n    return this.name.replace(/^(\\W*)/, `$1${prefix}`)\n  }\n\n  /**\n   * Lazy loadRegExp for name\n   */\n  regexp(prefix) {\n    if (!this.regexpCache.has(prefix)) {\n      let name = prefix ? this.prefixed(prefix) : this.name\n      this.regexpCache.set(\n        prefix,\n        new RegExp(`(^|[^:\"'=])${utils.escapeRegexp(name)}`, 'gi')\n      )\n    }\n\n    return this.regexpCache.get(prefix)\n  }\n\n  /**\n   * All possible prefixes\n   */\n  possible() {\n    return Browsers.prefixes()\n  }\n\n  /**\n   * Return all possible selector prefixes\n   */\n  prefixeds(rule) {\n    if (rule._autoprefixerPrefixeds) {\n      if (rule._autoprefixerPrefixeds[this.name]) {\n        return rule._autoprefixerPrefixeds\n      }\n    } else {\n      rule._autoprefixerPrefixeds = {}\n    }\n\n    let prefixeds = {}\n    if (rule.selector.includes(',')) {\n      let ruleParts = list.comma(rule.selector)\n      let toProcess = ruleParts.filter(el => el.includes(this.name))\n\n      for (let prefix of this.possible()) {\n        prefixeds[prefix] = toProcess\n          .map(el => this.replace(el, prefix))\n          .join(', ')\n      }\n    } else {\n      for (let prefix of this.possible()) {\n        prefixeds[prefix] = this.replace(rule.selector, prefix)\n      }\n    }\n\n    rule._autoprefixerPrefixeds[this.name] = prefixeds\n    return rule._autoprefixerPrefixeds\n  }\n\n  /**\n   * Is rule already prefixed before\n   */\n  already(rule, prefixeds, prefix) {\n    let index = rule.parent.index(rule) - 1\n\n    while (index >= 0) {\n      let before = rule.parent.nodes[index]\n\n      if (before.type !== 'rule') {\n        return false\n      }\n\n      let some = false\n      for (let key in prefixeds[this.name]) {\n        let prefixed = prefixeds[this.name][key]\n        if (before.selector === prefixed) {\n          if (prefix === key) {\n            return true\n          } else {\n            some = true\n            break\n          }\n        }\n      }\n      if (!some) {\n        return false\n      }\n\n      index -= 1\n    }\n\n    return false\n  }\n\n  /**\n   * Replace selectors by prefixed one\n   */\n  replace(selector, prefix) {\n    return selector.replace(this.regexp(), `$1${this.prefixed(prefix)}`)\n  }\n\n  /**\n   * Clone and add prefixes for at-rule\n   */\n  add(rule, prefix) {\n    let prefixeds = this.prefixeds(rule)\n\n    if (this.already(rule, prefixeds, prefix)) {\n      return\n    }\n\n    let cloned = this.clone(rule, { selector: prefixeds[this.name][prefix] })\n    rule.parent.insertBefore(rule, cloned)\n  }\n\n  /**\n   * Return function to fast find prefixed selector\n   */\n  old(prefix) {\n    return new OldSelector(this, prefix)\n  }\n}\n\nmodule.exports = Selector\n","let featureQueries = require('caniuse-lite/data/features/css-featurequeries.js')\nlet { feature } = require('caniuse-lite')\nlet { parse } = require('postcss')\n\nlet Browsers = require('./browsers')\nlet brackets = require('./brackets')\nlet Value = require('./value')\nlet utils = require('./utils')\n\nlet data = feature(featureQueries)\n\nlet supported = []\nfor (let browser in data.stats) {\n  let versions = data.stats[browser]\n  for (let version in versions) {\n    let support = versions[version]\n    if (/y/.test(support)) {\n      supported.push(browser + ' ' + version)\n    }\n  }\n}\n\nclass Supports {\n  constructor(Prefixes, all) {\n    this.Prefixes = Prefixes\n    this.all = all\n  }\n\n  /**\n   * Return prefixer only with @supports supported browsers\n   */\n  prefixer() {\n    if (this.prefixerCache) {\n      return this.prefixerCache\n    }\n\n    let filtered = this.all.browsers.selected.filter(i => {\n      return supported.includes(i)\n    })\n\n    let browsers = new Browsers(\n      this.all.browsers.data,\n      filtered,\n      this.all.options\n    )\n    this.prefixerCache = new this.Prefixes(\n      this.all.data,\n      browsers,\n      this.all.options\n    )\n    return this.prefixerCache\n  }\n\n  /**\n   * Parse string into declaration property and value\n   */\n  parse(str) {\n    let parts = str.split(':')\n    let prop = parts[0]\n    let value = parts[1]\n    if (!value) value = ''\n    return [prop.trim(), value.trim()]\n  }\n\n  /**\n   * Create virtual rule to process it by prefixer\n   */\n  virtual(str) {\n    let [prop, value] = this.parse(str)\n    let rule = parse('a{}').first\n    rule.append({ prop, value, raws: { before: '' } })\n    return rule\n  }\n\n  /**\n   * Return array of Declaration with all necessary prefixes\n   */\n  prefixed(str) {\n    let rule = this.virtual(str)\n    if (this.disabled(rule.first)) {\n      return rule.nodes\n    }\n\n    let result = { warn: () => null }\n\n    let prefixer = this.prefixer().add[rule.first.prop]\n    prefixer && prefixer.process && prefixer.process(rule.first, result)\n\n    for (let decl of rule.nodes) {\n      for (let value of this.prefixer().values('add', rule.first.prop)) {\n        value.process(decl)\n      }\n      Value.save(this.all, decl)\n    }\n\n    return rule.nodes\n  }\n\n  /**\n   * Return true if brackets node is \"not\" word\n   */\n  isNot(node) {\n    return typeof node === 'string' && /not\\s*/i.test(node)\n  }\n\n  /**\n   * Return true if brackets node is \"or\" word\n   */\n  isOr(node) {\n    return typeof node === 'string' && /\\s*or\\s*/i.test(node)\n  }\n\n  /**\n   * Return true if brackets node is (prop: value)\n   */\n  isProp(node) {\n    return (\n      typeof node === 'object' &&\n      node.length === 1 &&\n      typeof node[0] === 'string'\n    )\n  }\n\n  /**\n   * Return true if prefixed property has no unprefixed\n   */\n  isHack(all, unprefixed) {\n    let check = new RegExp(`(\\\\(|\\\\s)${utils.escapeRegexp(unprefixed)}:`)\n    return !check.test(all)\n  }\n\n  /**\n   * Return true if we need to remove node\n   */\n  toRemove(str, all) {\n    let [prop, value] = this.parse(str)\n    let unprefixed = this.all.unprefixed(prop)\n\n    let cleaner = this.all.cleaner()\n\n    if (\n      cleaner.remove[prop] &&\n      cleaner.remove[prop].remove &&\n      !this.isHack(all, unprefixed)\n    ) {\n      return true\n    }\n\n    for (let checker of cleaner.values('remove', unprefixed)) {\n      if (checker.check(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Remove all unnecessary prefixes\n   */\n  remove(nodes, all) {\n    let i = 0\n    while (i < nodes.length) {\n      if (\n        !this.isNot(nodes[i - 1]) &&\n        this.isProp(nodes[i]) &&\n        this.isOr(nodes[i + 1])\n      ) {\n        if (this.toRemove(nodes[i][0], all)) {\n          nodes.splice(i, 2)\n          continue\n        }\n\n        i += 2\n        continue\n      }\n\n      if (typeof nodes[i] === 'object') {\n        nodes[i] = this.remove(nodes[i], all)\n      }\n\n      i += 1\n    }\n    return nodes\n  }\n\n  /**\n   * Clean brackets with one child\n   */\n  cleanBrackets(nodes) {\n    return nodes.map(i => {\n      if (typeof i !== 'object') {\n        return i\n      }\n\n      if (i.length === 1 && typeof i[0] === 'object') {\n        return this.cleanBrackets(i[0])\n      }\n\n      return this.cleanBrackets(i)\n    })\n  }\n\n  /**\n   * Add \" or \" between properties and convert it to brackets format\n   */\n  convert(progress) {\n    let result = ['']\n    for (let i of progress) {\n      result.push([`${i.prop}: ${i.value}`])\n      result.push(' or ')\n    }\n    result[result.length - 1] = ''\n    return result\n  }\n\n  /**\n   * Compress value functions into a string nodes\n   */\n  normalize(nodes) {\n    if (typeof nodes !== 'object') {\n      return nodes\n    }\n\n    nodes = nodes.filter(i => i !== '')\n\n    if (typeof nodes[0] === 'string') {\n      let firstNode = nodes[0].trim()\n\n      if (\n        firstNode.includes(':') ||\n        firstNode === 'selector' ||\n        firstNode === 'not selector'\n      ) {\n        return [brackets.stringify(nodes)]\n      }\n    }\n    return nodes.map(i => this.normalize(i))\n  }\n\n  /**\n   * Add prefixes\n   */\n  add(nodes, all) {\n    return nodes.map(i => {\n      if (this.isProp(i)) {\n        let prefixed = this.prefixed(i[0])\n        if (prefixed.length > 1) {\n          return this.convert(prefixed)\n        }\n\n        return i\n      }\n\n      if (typeof i === 'object') {\n        return this.add(i, all)\n      }\n\n      return i\n    })\n  }\n\n  /**\n   * Add prefixed declaration\n   */\n  process(rule) {\n    let ast = brackets.parse(rule.params)\n    ast = this.normalize(ast)\n    ast = this.remove(ast, rule.params)\n    ast = this.add(ast, rule.params)\n    ast = this.cleanBrackets(ast)\n    rule.params = brackets.stringify(ast)\n  }\n\n  /**\n   * Check global options\n   */\n  disabled(node) {\n    if (!this.all.options.grid) {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true\n      }\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true\n      }\n    }\n\n    if (this.all.options.flexbox === false) {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true\n      }\n      let other = ['order', 'justify-content', 'align-items', 'align-content']\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\nmodule.exports = Supports\n","let { list } = require('postcss')\nlet parser = require('postcss-value-parser')\n\nlet Browsers = require('./browsers')\nlet vendor = require('./vendor')\n\nclass Transition {\n  constructor(prefixes) {\n    this.props = ['transition', 'transition-property']\n    this.prefixes = prefixes\n  }\n\n  /**\n   * Process transition and add prefixes for all necessary properties\n   */\n  add(decl, result) {\n    let prefix, prop\n    let add = this.prefixes.add[decl.prop]\n    let vendorPrefixes = this.ruleVendorPrefixes(decl)\n    let declPrefixes = vendorPrefixes || (add && add.prefixes) || []\n\n    let params = this.parse(decl.value)\n    let names = params.map(i => this.findProp(i))\n    let added = []\n\n    if (names.some(i => i[0] === '-')) {\n      return\n    }\n\n    for (let param of params) {\n      prop = this.findProp(param)\n      if (prop[0] === '-') continue\n\n      let prefixer = this.prefixes.add[prop]\n      if (!prefixer || !prefixer.prefixes) continue\n\n      for (prefix of prefixer.prefixes) {\n        if (vendorPrefixes && !vendorPrefixes.some(p => prefix.includes(p))) {\n          continue\n        }\n\n        let prefixed = this.prefixes.prefixed(prop, prefix)\n        if (prefixed !== '-ms-transform' && !names.includes(prefixed)) {\n          if (!this.disabled(prop, prefix)) {\n            added.push(this.clone(prop, prefixed, param))\n          }\n        }\n      }\n    }\n\n    params = params.concat(added)\n    let value = this.stringify(params)\n\n    let webkitClean = this.stringify(\n      this.cleanFromUnprefixed(params, '-webkit-')\n    )\n    if (declPrefixes.includes('-webkit-')) {\n      this.cloneBefore(decl, `-webkit-${decl.prop}`, webkitClean)\n    }\n    this.cloneBefore(decl, decl.prop, webkitClean)\n    if (declPrefixes.includes('-o-')) {\n      let operaClean = this.stringify(this.cleanFromUnprefixed(params, '-o-'))\n      this.cloneBefore(decl, `-o-${decl.prop}`, operaClean)\n    }\n\n    for (prefix of declPrefixes) {\n      if (prefix !== '-webkit-' && prefix !== '-o-') {\n        let prefixValue = this.stringify(\n          this.cleanOtherPrefixes(params, prefix)\n        )\n        this.cloneBefore(decl, prefix + decl.prop, prefixValue)\n      }\n    }\n\n    if (value !== decl.value && !this.already(decl, decl.prop, value)) {\n      this.checkForWarning(result, decl)\n      decl.cloneBefore()\n      decl.value = value\n    }\n  }\n\n  /**\n   * Find property name\n   */\n  findProp(param) {\n    let prop = param[0].value\n    if (/^\\d/.test(prop)) {\n      for (let [i, token] of param.entries()) {\n        if (i !== 0 && token.type === 'word') {\n          return token.value\n        }\n      }\n    }\n    return prop\n  }\n\n  /**\n   * Does we already have this declaration\n   */\n  already(decl, prop, value) {\n    return decl.parent.some(i => i.prop === prop && i.value === value)\n  }\n\n  /**\n   * Add declaration if it is not exist\n   */\n  cloneBefore(decl, prop, value) {\n    if (!this.already(decl, prop, value)) {\n      decl.cloneBefore({ prop, value })\n    }\n  }\n\n  /**\n   * Show transition-property warning\n   */\n  checkForWarning(result, decl) {\n    if (decl.prop !== 'transition-property') {\n      return\n    }\n\n    let isPrefixed = false\n    let hasAssociatedProp = false\n\n    decl.parent.each(i => {\n      if (i.type !== 'decl') {\n        return undefined\n      }\n      if (i.prop.indexOf('transition-') !== 0) {\n        return undefined\n      }\n      let values = list.comma(i.value)\n      // check if current Rule's transition-property comma separated value list needs prefixes\n      if (i.prop === 'transition-property') {\n        values.forEach(value => {\n          let lookup = this.prefixes.add[value]\n          if (lookup && lookup.prefixes && lookup.prefixes.length > 0) {\n            isPrefixed = true\n          }\n        })\n        return undefined\n      }\n      // check if another transition-* prop in current Rule has comma separated value list\n      hasAssociatedProp = hasAssociatedProp || values.length > 1\n      return false\n    })\n\n    if (isPrefixed && hasAssociatedProp) {\n      decl.warn(\n        result,\n        'Replace transition-property to transition, ' +\n          'because Autoprefixer could not support ' +\n          'any cases of transition-property ' +\n          'and other transition-*'\n      )\n    }\n  }\n\n  /**\n   * Process transition and remove all unnecessary properties\n   */\n  remove(decl) {\n    let params = this.parse(decl.value)\n    params = params.filter(i => {\n      let prop = this.prefixes.remove[this.findProp(i)]\n      return !prop || !prop.remove\n    })\n    let value = this.stringify(params)\n\n    if (decl.value === value) {\n      return\n    }\n\n    if (params.length === 0) {\n      decl.remove()\n      return\n    }\n\n    let double = decl.parent.some(i => {\n      return i.prop === decl.prop && i.value === value\n    })\n    let smaller = decl.parent.some(i => {\n      return i !== decl && i.prop === decl.prop && i.value.length > value.length\n    })\n\n    if (double || smaller) {\n      decl.remove()\n      return\n    }\n\n    decl.value = value\n  }\n\n  /**\n   * Parse properties list to array\n   */\n  parse(value) {\n    let ast = parser(value)\n    let result = []\n    let param = []\n    for (let node of ast.nodes) {\n      param.push(node)\n      if (node.type === 'div' && node.value === ',') {\n        result.push(param)\n        param = []\n      }\n    }\n    result.push(param)\n    return result.filter(i => i.length > 0)\n  }\n\n  /**\n   * Return properties string from array\n   */\n  stringify(params) {\n    if (params.length === 0) {\n      return ''\n    }\n    let nodes = []\n    for (let param of params) {\n      if (param[param.length - 1].type !== 'div') {\n        param.push(this.div(params))\n      }\n      nodes = nodes.concat(param)\n    }\n    if (nodes[0].type === 'div') {\n      nodes = nodes.slice(1)\n    }\n    if (nodes[nodes.length - 1].type === 'div') {\n      nodes = nodes.slice(0, +-2 + 1 || undefined)\n    }\n    return parser.stringify({ nodes })\n  }\n\n  /**\n   * Return new param array with different name\n   */\n  clone(origin, name, param) {\n    let result = []\n    let changed = false\n    for (let i of param) {\n      if (!changed && i.type === 'word' && i.value === origin) {\n        result.push({ type: 'word', value: name })\n        changed = true\n      } else {\n        result.push(i)\n      }\n    }\n    return result\n  }\n\n  /**\n   * Find or create separator\n   */\n  div(params) {\n    for (let param of params) {\n      for (let node of param) {\n        if (node.type === 'div' && node.value === ',') {\n          return node\n        }\n      }\n    }\n    return { type: 'div', value: ',', after: ' ' }\n  }\n\n  cleanOtherPrefixes(params, prefix) {\n    return params.filter(param => {\n      let current = vendor.prefix(this.findProp(param))\n      return current === '' || current === prefix\n    })\n  }\n\n  /**\n   * Remove all non-webkit prefixes and unprefixed params if we have prefixed\n   */\n  cleanFromUnprefixed(params, prefix) {\n    let remove = params\n      .map(i => this.findProp(i))\n      .filter(i => i.slice(0, prefix.length) === prefix)\n      .map(i => this.prefixes.unprefixed(i))\n\n    let result = []\n    for (let param of params) {\n      let prop = this.findProp(param)\n      let p = vendor.prefix(prop)\n      if (!remove.includes(prop) && (p === prefix || p === '')) {\n        result.push(param)\n      }\n    }\n    return result\n  }\n\n  /**\n   * Check property for disabled by option\n   */\n  disabled(prop, prefix) {\n    let other = ['order', 'justify-content', 'align-self', 'align-content']\n    if (prop.includes('flex') || other.includes(prop)) {\n      if (this.prefixes.options.flexbox === false) {\n        return true\n      }\n\n      if (this.prefixes.options.flexbox === 'no-2009') {\n        return prefix.includes('2009')\n      }\n    }\n    return undefined\n  }\n\n  /**\n   * Check if transition prop is inside vendor specific rule\n   */\n  ruleVendorPrefixes(decl) {\n    let { parent } = decl\n\n    if (parent.type !== 'rule') {\n      return false\n    } else if (!parent.selector.includes(':-')) {\n      return false\n    }\n\n    let selectors = Browsers.prefixes().filter(s =>\n      parent.selector.includes(':' + s)\n    )\n\n    return selectors.length > 0 ? selectors : false\n  }\n}\n\nmodule.exports = Transition\n","let { list } = require('postcss')\n\n/**\n * Throw special error, to tell beniary,\n * that this error is from Autoprefixer.\n */\nmodule.exports.error = function (text) {\n  let err = new Error(text)\n  err.autoprefixer = true\n  throw err\n}\n\n/**\n * Return array, that doesn’t contain duplicates.\n */\nmodule.exports.uniq = function (array) {\n  return [...new Set(array)]\n}\n\n/**\n * Return \"-webkit-\" on \"-webkit- old\"\n */\nmodule.exports.removeNote = function (string) {\n  if (!string.includes(' ')) {\n    return string\n  }\n\n  return string.split(' ')[0]\n}\n\n/**\n * Escape RegExp symbols\n */\nmodule.exports.escapeRegexp = function (string) {\n  return string.replace(/[$()*+-.?[\\\\\\]^{|}]/g, '\\\\$&')\n}\n\n/**\n * Return regexp to check, that CSS string contain word\n */\nmodule.exports.regexp = function (word, escape = true) {\n  if (escape) {\n    word = this.escapeRegexp(word)\n  }\n  return new RegExp(`(^|[\\\\s,(])(${word}($|[\\\\s(,]))`, 'gi')\n}\n\n/**\n * Change comma list\n */\nmodule.exports.editList = function (value, callback) {\n  let origin = list.comma(value)\n  let changed = callback(origin, [])\n\n  if (origin === changed) {\n    return value\n  }\n\n  let join = value.match(/,\\s*/)\n  join = join ? join[0] : ', '\n  return changed.join(join)\n}\n\n/**\n * Split the selector into parts.\n * It returns 3 level deep array because selectors can be comma\n * separated (1), space separated (2), and combined (3)\n * @param {String} selector selector string\n * @return {Array<Array<Array>>} 3 level deep array of split selector\n * @see utils.test.js for examples\n */\nmodule.exports.splitSelector = function (selector) {\n  return list.comma(selector).map(i => {\n    return list.space(i).map(k => {\n      return k.split(/(?=\\.|#)/g)\n    })\n  })\n}\n\n/**\n * Return true if a given value only contains numbers.\n * @param {*} value\n * @returns {boolean}\n */\nmodule.exports.isPureNumber = function (value) {\n  if (typeof value === 'number') {\n    return true\n  }\n  if (typeof value === 'string') {\n    return /^[0-9]+$/.test(value)\n  }\n  return false\n}\n","let Prefixer = require('./prefixer')\nlet OldValue = require('./old-value')\nlet vendor = require('./vendor')\nlet utils = require('./utils')\n\nclass Value extends Prefixer {\n  /**\n   * Clone decl for each prefixed values\n   */\n  static save(prefixes, decl) {\n    let prop = decl.prop\n    let result = []\n\n    for (let prefix in decl._autoprefixerValues) {\n      let value = decl._autoprefixerValues[prefix]\n\n      if (value === decl.value) {\n        continue\n      }\n\n      let item\n      let propPrefix = vendor.prefix(prop)\n\n      if (propPrefix === '-pie-') {\n        continue\n      }\n\n      if (propPrefix === prefix) {\n        item = decl.value = value\n        result.push(item)\n        continue\n      }\n\n      let prefixed = prefixes.prefixed(prop, prefix)\n      let rule = decl.parent\n\n      if (!rule.every(i => i.prop !== prefixed)) {\n        result.push(item)\n        continue\n      }\n\n      let trimmed = value.replace(/\\s+/, ' ')\n      let already = rule.some(\n        i => i.prop === decl.prop && i.value.replace(/\\s+/, ' ') === trimmed\n      )\n\n      if (already) {\n        result.push(item)\n        continue\n      }\n\n      let cloned = this.clone(decl, { value })\n      item = decl.parent.insertBefore(decl, cloned)\n\n      result.push(item)\n    }\n\n    return result\n  }\n\n  /**\n   * Is declaration need to be prefixed\n   */\n  check(decl) {\n    let value = decl.value\n    if (!value.includes(this.name)) {\n      return false\n    }\n\n    return !!value.match(this.regexp())\n  }\n\n  /**\n   * Lazy regexp loading\n   */\n  regexp() {\n    return this.regexpCache || (this.regexpCache = utils.regexp(this.name))\n  }\n\n  /**\n   * Add prefix to values in string\n   */\n  replace(string, prefix) {\n    return string.replace(this.regexp(), `$1${prefix}$2`)\n  }\n\n  /**\n   * Get value with comments if it was not changed\n   */\n  value(decl) {\n    if (decl.raws.value && decl.raws.value.value === decl.value) {\n      return decl.raws.value.raw\n    } else {\n      return decl.value\n    }\n  }\n\n  /**\n   * Save values with next prefixed token\n   */\n  add(decl, prefix) {\n    if (!decl._autoprefixerValues) {\n      decl._autoprefixerValues = {}\n    }\n    let value = decl._autoprefixerValues[prefix] || this.value(decl)\n\n    let before\n    do {\n      before = value\n      value = this.replace(value, prefix)\n      if (value === false) return\n    } while (value !== before)\n\n    decl._autoprefixerValues[prefix] = value\n  }\n\n  /**\n   * Return function to fast find prefixed value\n   */\n  old(prefix) {\n    return new OldValue(this.name, prefix + this.name)\n  }\n}\n\nmodule.exports = Value\n","module.exports = {\n  prefix(prop) {\n    let match = prop.match(/^(-\\w+-)/)\n    if (match) {\n      return match[0]\n    }\n\n    return ''\n  },\n\n  unprefixed(prop) {\n    return prop.replace(/^-\\w+-/, '')\n  }\n}\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (let pattern of input) {\n      let result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  let opts = options || {};\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  let ast = { type: 'root', input, nodes: [] };\n  let stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  let length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n  let memo = {};\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let closed = true;\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      let open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      let brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      let type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        let open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      let siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        let before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      let parent = stack[stack.length - 1];\n      let index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  let node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let ele = arr[i];\n      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);\n    }\n    return result;\n  };\n  flat(args);\n  return result;\n};\n","function BrowserslistError(message) {\n  this.name = 'BrowserslistError'\n  this.message = message\n  this.browserslist = true\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, BrowserslistError)\n  }\n}\n\nBrowserslistError.prototype = Error.prototype\n\nmodule.exports = BrowserslistError\n","var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\nvar e2c = require('electron-to-chromium/versions')\n\nvar BrowserslistError = require('./error')\nvar parse = require('./parse')\nvar env = require('./node') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = 37\n\n// Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i\n  })\n  data.released = data.released.map(function (i) {\n    return map[i] || i\n  })\n  var fixedDate = {}\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i]\n  }\n  data.releaseDate = fixedDate\n  return data\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, { '10.0-10.1': '10' })\n      }\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST\n  var last = chromeVersions[chromeVersions.length - 1]\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(firstEvergreen - last - 1))\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list\n  var released = browserslist.data.android.released\n  var last = released[released.length - 1]\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions\n  if (diff > 0) {\n    return list.slice(-1)\n  } else {\n    return list.slice(diff - 1)\n  }\n}\n\nfunction resolve(queries, context) {\n  return parse(QUERIES, queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError(\n        'Write any browsers query (for instance, `defaults`) ' +\n          'before `' +\n          node.query +\n          '`'\n      )\n    }\n    var type = QUERIES[node.type]\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ')\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0]\n      } else {\n        return j\n      }\n    })\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1\n        })\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1\n        })\n      }\n    } else {\n      if (node.not) {\n        var filter = {}\n        array.forEach(function (j) {\n          filter[j] = true\n        })\n        return result.filter(function (j) {\n          return !filter[j]\n        })\n      }\n      return result.concat(array)\n    }\n  }, [])\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  return opts\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  return queries\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n}\n\nvar cache = {}\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n  return parse(QUERIES, queries)\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError(\n        'Unknown version ' + node.version + ' of Node.js'\n      )\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year)\n  var month = parseInt(node.month || '01') - 1\n  var day = parseInt(node.day || '01')\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage)\n  var usage = browserslist.usage.global\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase()\n      } else {\n        place = node.place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, node.versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-node.versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var validVersions = getMajorVersions(data.released, node.versions)\n      var list = validVersions.map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context)\n      }\n      return list\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c)\n        .slice(-node.versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .slice(-node.versions)\n        .map(function (version) {\n          return 'node ' + version\n        })\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context)\n      }\n      return list\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context)\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var stats = env.loadStat(context, node.config, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var place = node.place\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['feature'],\n    regexp: /^supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature)\n      var features = browserslist.cache[node.feature]\n      return Object.keys(features).reduce(function (result, version) {\n        var flags = features[version]\n        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from)\n      var toToUse = normalizeElectron(node.to)\n      var from = parseFloat(node.from)\n      var to = parseFloat(node.to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', node.from))\n        .filter(semverFilterLoose('<=', node.to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from)\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      return Object.keys(e2c)\n        .filter(generateFilter(node.sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(node.sign, node.version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version\n      var data = checkName(node.browser, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) version = alias\n      return data.released\n        .filter(generateFilter(node.sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 102']\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + node.version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(node.browser, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + node.browser\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context)\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 11',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + node.query\n        )\n      } else {\n        throw unknownQuery(node.query)\n      }\n    }\n  }\n}\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58'\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n",null,"var AND_REGEXP = /^\\s+and\\s+(.*)/i\nvar OR_REGEXP = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\nfunction find(string, predicate) {\n  for (var n = 1, max = string.length; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction matchQuery(all, query) {\n  var node = { query: query }\n  if (query.indexOf('not ') === 0) {\n    node.not = true\n    query = query.slice(4)\n  }\n\n  for (var name in all) {\n    var type = all[name]\n    var match = query.match(type.regexp)\n    if (match) {\n      node.type = name\n      for (var i = 0; i < type.matches.length; i++) {\n        node[type.matches[i]] = match[i + 1]\n      }\n      return node\n    }\n  }\n\n  node.type = 'unknown'\n  return node\n}\n\nfunction matchBlock(all, string, qs) {\n  var node\n  return find(string, function (parsed, n, max) {\n    if (AND_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(AND_REGEXP)[1])\n      node.compose = 'and'\n      qs.unshift(node)\n      return true\n    } else if (OR_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(OR_REGEXP)[1])\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    } else if (n === max) {\n      node = matchQuery(all, parsed.trim())\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    }\n    return false\n  })\n}\n\nmodule.exports = function parse(all, queries) {\n  if (!Array.isArray(queries)) queries = [queries]\n  return flatten(\n    queries.map(function (block) {\n      var qs = []\n      do {\n        block = matchBlock(all, block, qs)\n      } while (block)\n      return qs\n    })\n  )\n}\n","\"use strict\";\nconst pattern = /-(\\w|$)/g;\n\nconst callback = (dashChar, char) => char.toUpperCase();\n\n\n\nconst camelCaseCSS = property =>\n{\n\tproperty = property.toLowerCase();\n\n\t// NOTE :: IE8's \"styleFloat\" is intentionally not supported\n\tif (property === \"float\")\n\t{\n\t\treturn \"cssFloat\";\n\t}\n\t// Microsoft vendor-prefixes are uniquely cased\n\telse if (property.startsWith(\"-ms-\"))\n\t{\n\t\treturn property.substr(1).replace(pattern, callback);\n\t}\n\telse\n\t{\n\t\treturn property.replace(pattern, callback);\n\t}\n};\n\n\n\nmodule.exports = camelCaseCSS;\n","module.exports={A:{A:{J:0.0131217,D:0.00621152,E:0.0530043,F:0.074206,A:0.0106009,B:0.508841,CC:0.009298},B:\"ms{CC:962323200,J:998870400,D:1161129600,E:1237420800,F:1300060800,A:1346716800,B:1381968000}},B:{A:{C:0.007886,K:0.004267,L:0.004268,G:0.003943,M:0.003702,N:0.003943,O:0.015772,P:0,Q:0.004298,R:0.00944,S:0.004043,T:0.007886,U:0.007886,V:0.003943,W:0.003943,X:0.003943,Y:0.007886,Z:0.003943,a:0.003943,b:0.011829,c:0.004118,d:0.003939,e:0.003943,h:0.003943,i:0.003943,j:0.003929,k:0.003901,l:0.011829,m:0.007886,n:0.003943,o:0.011829,p:0.011829,q:0.011829,r:0.019715,s:0.102518,t:2.13316,f:1.95967,H:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"f\",\"H\",\"\",\"\",\"\"],E:\"Edge\",F:{C:1438128000,K:1447286400,L:1470096000,G:1491868800,M:1508198400,N:1525046400,O:1542067200,P:1579046400,Q:1581033600,R:1586736000,S:1590019200,T:1594857600,U:1598486400,V:1602201600,W:1605830400,X:1611360000,Y:1614816000,Z:1618358400,a:1622073600,b:1626912000,c:1630627200,d:1632441600,e:1634774400,h:1637539200,i:1641427200,j:1643932800,k:1646265600,l:1649635200,m:1651190400,n:1653955200,o:1655942400,p:1659657600,q:1661990400,r:1664755200,s:1666915200,t:1670198400,f:1673481600,H:1675900800},D:{C:\"ms\",K:\"ms\",L:\"ms\",G:\"ms\",M:\"ms\",N:\"ms\",O:\"ms\"}},C:{A:{\"0\":0.008786,\"1\":0.004118,\"2\":0.004317,\"3\":0.004393,\"4\":0.004418,\"5\":0.008834,\"6\":0.008322,\"7\":0.008928,\"8\":0.004471,\"9\":0.009284,DC:0.004118,tB:0.004271,I:0.011703,u:0.004879,J:0.020136,D:0.005725,E:0.004525,F:0.00533,A:0.004283,B:0.007886,C:0.004471,K:0.004486,L:0.00453,G:0.008322,M:0.004417,N:0.004425,O:0.004161,v:0.004443,w:0.004283,x:0.008322,y:0.013698,z:0.004161,AB:0.004707,BB:0.009076,CB:0.003943,DB:0.004783,EB:0.003929,FB:0.004783,GB:0.00487,HB:0.005029,IB:0.0047,JB:0.027601,KB:0.003943,LB:0.003867,MB:0.004525,NB:0.004293,OB:0.007886,PB:0.004538,QB:0.008282,RB:0.011601,SB:0.047316,TB:0.011601,UB:0.003929,VB:0.003974,WB:0.007886,XB:0.011601,YB:0.003939,uB:0.003943,ZB:0.003929,vB:0.004356,aB:0.004425,bB:0.008322,cB:0.00415,dB:0.004267,eB:0.003801,fB:0.004267,gB:0.003943,hB:0.00415,iB:0.004293,jB:0.004425,kB:0.003943,g:0.00415,lB:0.00415,mB:0.004318,nB:0.004356,oB:0.003974,pB:0.035487,P:0.003943,Q:0.003943,R:0.003943,wB:0.003943,S:0.003943,T:0.003929,U:0.004268,V:0.003801,W:0.011829,X:0.007886,Y:0.003943,Z:0.003943,a:0.011829,b:0.003801,c:0.003855,d:0.015772,e:0.003773,h:0.007886,i:0.003901,j:0.003901,k:0.003943,l:0.003943,m:0.003943,n:0.094632,o:0.043373,p:0.011829,q:0.023658,r:0.023658,s:0.047316,t:1.33668,f:0.760999,H:0.007886,xB:0,yB:0,EC:0.008786,FC:0.00487},B:\"moz\",C:[\"DC\",\"tB\",\"EC\",\"FC\",\"I\",\"u\",\"J\",\"D\",\"E\",\"F\",\"A\",\"B\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"uB\",\"ZB\",\"vB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"g\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"P\",\"Q\",\"R\",\"wB\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"f\",\"H\",\"xB\",\"yB\",\"\"],E:\"Firefox\",F:{\"0\":1375747200,\"1\":1379376000,\"2\":1386633600,\"3\":1391472000,\"4\":1395100800,\"5\":1398729600,\"6\":1402358400,\"7\":1405987200,\"8\":1409616000,\"9\":1413244800,DC:1161648000,tB:1213660800,EC:1246320000,FC:1264032000,I:1300752000,u:1308614400,J:1313452800,D:1317081600,E:1317081600,F:1320710400,A:1324339200,B:1327968000,C:1331596800,K:1335225600,L:1338854400,G:1342483200,M:1346112000,N:1349740800,O:1353628800,v:1357603200,w:1361232000,x:1364860800,y:1368489600,z:1372118400,AB:1417392000,BB:1421107200,CB:1424736000,DB:1428278400,EB:1431475200,FB:1435881600,GB:1439251200,HB:1442880000,IB:1446508800,JB:1450137600,KB:1453852800,LB:1457395200,MB:1461628800,NB:1465257600,OB:1470096000,PB:1474329600,QB:1479168000,RB:1485216000,SB:1488844800,TB:1492560000,UB:1497312000,VB:1502150400,WB:1506556800,XB:1510617600,YB:1516665600,uB:1520985600,ZB:1525824000,vB:1529971200,aB:1536105600,bB:1540252800,cB:1544486400,dB:1548720000,eB:1552953600,fB:1558396800,gB:1562630400,hB:1567468800,iB:1571788800,jB:1575331200,kB:1578355200,g:1581379200,lB:1583798400,mB:1586304000,nB:1588636800,oB:1591056000,pB:1593475200,P:1595894400,Q:1598313600,R:1600732800,wB:1603152000,S:1605571200,T:1607990400,U:1611619200,V:1614038400,W:1616457600,X:1618790400,Y:1622505600,Z:1626134400,a:1628553600,b:1630972800,c:1633392000,d:1635811200,e:1638835200,h:1641859200,i:1644364800,j:1646697600,k:1649116800,l:1651536000,m:1653955200,n:1656374400,o:1658793600,p:1661212800,q:1663632000,r:1666051200,s:1668470400,t:1670889600,f:1673913600,H:1676332800,xB:null,yB:null}},D:{A:{\"0\":0.003939,\"1\":0.004461,\"2\":0.004141,\"3\":0.004326,\"4\":0.0047,\"5\":0.004538,\"6\":0.008322,\"7\":0.008596,\"8\":0.004566,\"9\":0.004118,I:0.004706,u:0.004879,J:0.004879,D:0.005591,E:0.005591,F:0.005591,A:0.004534,B:0.004464,C:0.010424,K:0.0083,L:0.004706,G:0.015087,M:0.004393,N:0.004393,O:0.008652,v:0.008322,w:0.004393,x:0.004317,y:0.003901,z:0.008786,AB:0.007886,BB:0.007886,CB:0.004335,DB:0.004464,EB:0.015772,FB:0.003867,GB:0.015772,HB:0.003773,IB:0.003974,JB:0.003943,KB:0.007948,LB:0.003974,MB:0.003867,NB:0.007886,OB:0.019715,PB:0.043373,QB:0.003867,RB:0.003929,SB:0.007886,TB:0.007886,UB:0.003867,VB:0.003943,WB:0.086746,XB:0.003943,YB:0.015772,uB:0.003773,ZB:0.011829,vB:0.011319,aB:0.003773,bB:0.007886,cB:0.003943,dB:0.007886,eB:0.031544,fB:0.007886,gB:0.011829,hB:0.059145,iB:0.027601,jB:0.015772,kB:0.031544,g:0.011829,lB:0.043373,mB:0.047316,nB:0.031544,oB:0.015772,pB:0.027601,P:0.126176,Q:0.035487,R:0.03943,S:0.070974,T:0.043373,U:0.086746,V:0.074917,W:0.07886,X:0.027601,Y:0.043373,Z:0.051259,a:0.074917,b:0.063088,c:0.059145,d:0.051259,e:0.03943,h:0.067031,i:0.070974,j:0.126176,k:0.082803,l:0.094632,m:0.07886,n:0.110404,o:0.268124,p:0.11829,q:0.149834,r:0.138005,s:0.417958,t:11.2218,f:9.7471,H:0.019715,xB:0.019715,yB:0,GC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"I\",\"u\",\"J\",\"D\",\"E\",\"F\",\"A\",\"B\",\"C\",\"K\",\"L\",\"G\",\"M\",\"N\",\"O\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"uB\",\"ZB\",\"vB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"g\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"f\",\"H\",\"xB\",\"yB\",\"GC\"],E:\"Chrome\",F:{\"0\":1352246400,\"1\":1357862400,\"2\":1361404800,\"3\":1364428800,\"4\":1369094400,\"5\":1374105600,\"6\":1376956800,\"7\":1384214400,\"8\":1389657600,\"9\":1392940800,I:1264377600,u:1274745600,J:1283385600,D:1287619200,E:1291248000,F:1296777600,A:1299542400,B:1303862400,C:1307404800,K:1312243200,L:1316131200,G:1316131200,M:1319500800,N:1323734400,O:1328659200,v:1332892800,w:1337040000,x:1340668800,y:1343692800,z:1348531200,AB:1397001600,BB:1400544000,CB:1405468800,DB:1409011200,EB:1412640000,FB:1416268800,GB:1421798400,HB:1425513600,IB:1429401600,JB:1432080000,KB:1437523200,LB:1441152000,MB:1444780800,NB:1449014400,OB:1453248000,PB:1456963200,QB:1460592000,RB:1464134400,SB:1469059200,TB:1472601600,UB:1476230400,VB:1480550400,WB:1485302400,XB:1489017600,YB:1492560000,uB:1496707200,ZB:1500940800,vB:1504569600,aB:1508198400,bB:1512518400,cB:1516752000,dB:1520294400,eB:1523923200,fB:1527552000,gB:1532390400,hB:1536019200,iB:1539648000,jB:1543968000,kB:1548720000,g:1552348800,lB:1555977600,mB:1559606400,nB:1564444800,oB:1568073600,pB:1571702400,P:1575936000,Q:1580860800,R:1586304000,S:1589846400,T:1594684800,U:1598313600,V:1601942400,W:1605571200,X:1611014400,Y:1614556800,Z:1618272000,a:1621987200,b:1626739200,c:1630368000,d:1632268800,e:1634601600,h:1637020800,i:1641340800,j:1643673600,k:1646092800,l:1648512000,m:1650931200,n:1653350400,o:1655769600,p:1659398400,q:1661817600,r:1664236800,s:1666656000,t:1669680000,f:1673308800,H:1675728000,xB:null,yB:null,GC:null}},E:{A:{I:0,u:0.008322,J:0.004656,D:0.004465,E:0.003974,F:0.003929,A:0.004425,B:0.004318,C:0.003801,K:0.023658,L:0.098575,G:0.023658,HC:0,zB:0.008692,IC:0.007886,JC:0.00456,KC:0.004283,LC:0.047316,\"0B\":0.007802,qB:0.007886,rB:0.031544,\"1B\":0.177435,MC:0.252352,NC:0.03943,\"2B\":0.03943,\"3B\":0.090689,\"4B\":0.181378,\"5B\":1.13558,sB:0.126176,\"6B\":0.410072,\"7B\":0.808315,\"8B\":0.055202,\"9B\":0,OC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"HC\",\"zB\",\"I\",\"u\",\"IC\",\"J\",\"JC\",\"D\",\"KC\",\"E\",\"F\",\"LC\",\"A\",\"0B\",\"B\",\"qB\",\"C\",\"rB\",\"K\",\"1B\",\"L\",\"MC\",\"G\",\"NC\",\"2B\",\"3B\",\"4B\",\"5B\",\"sB\",\"6B\",\"7B\",\"8B\",\"9B\",\"OC\",\"\"],E:\"Safari\",F:{HC:1205798400,zB:1226534400,I:1244419200,u:1275868800,IC:1311120000,J:1343174400,JC:1382400000,D:1382400000,KC:1410998400,E:1413417600,F:1443657600,LC:1458518400,A:1474329600,\"0B\":1490572800,B:1505779200,qB:1522281600,C:1537142400,rB:1553472000,K:1568851200,\"1B\":1585008000,L:1600214400,MC:1619395200,G:1632096000,NC:1635292800,\"2B\":1639353600,\"3B\":1647216000,\"4B\":1652745600,\"5B\":1658275200,sB:1662940800,\"6B\":1666569600,\"7B\":1670889600,\"8B\":1674432000,\"9B\":null,OC:null}},F:{A:{\"0\":0.006702,\"1\":0.006015,\"2\":0.005595,\"3\":0.004393,\"4\":0.007886,\"5\":0.004879,\"6\":0.004879,\"7\":0.003943,\"8\":0.005152,\"9\":0.005014,F:0.0082,B:0.016581,C:0.004317,G:0.00685,M:0.00685,N:0.00685,O:0.005014,v:0.006015,w:0.004879,x:0.006597,y:0.006597,z:0.013434,AB:0.009758,BB:0.004879,CB:0.007886,DB:0.004283,EB:0.004367,FB:0.004534,GB:0.007886,HB:0.004227,IB:0.004418,JB:0.004161,KB:0.004227,LB:0.004725,MB:0.011829,NB:0.008942,OB:0.004707,PB:0.004827,QB:0.004707,RB:0.004707,SB:0.004326,TB:0.008922,UB:0.014349,VB:0.004425,WB:0.00472,XB:0.004425,YB:0.004425,ZB:0.00472,aB:0.004532,bB:0.004566,cB:0.02283,dB:0.00867,eB:0.004656,fB:0.004642,gB:0.003929,hB:0.00944,iB:0.004293,jB:0.003929,kB:0.004298,g:0.096692,lB:0.004201,mB:0.004141,nB:0.004257,oB:0.003939,pB:0.008236,P:0.003855,Q:0.003939,R:0.008514,wB:0.003939,S:0.003939,T:0.003702,U:0.007886,V:0.003855,W:0.003855,X:0.003929,Y:0.003943,Z:0.011703,a:0.007546,b:0.011829,c:0.496818,d:0.690025,e:0,PC:0.00685,QC:0,RC:0.008392,SC:0.004706,qB:0.006229,AC:0.004879,TC:0.008786,rB:0.00472},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"F\",\"PC\",\"QC\",\"RC\",\"SC\",\"B\",\"qB\",\"AC\",\"TC\",\"C\",\"rB\",\"G\",\"M\",\"N\",\"O\",\"v\",\"w\",\"x\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"NB\",\"OB\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"g\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"P\",\"Q\",\"R\",\"wB\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"\",\"\",\"\"],E:\"Opera\",F:{\"0\":1409616000,\"1\":1413331200,\"2\":1417132800,\"3\":1422316800,\"4\":1425945600,\"5\":1430179200,\"6\":1433808000,\"7\":1438646400,\"8\":1442448000,\"9\":1445904000,F:1150761600,PC:1223424000,QC:1251763200,RC:1267488000,SC:1277942400,B:1292457600,qB:1302566400,AC:1309219200,TC:1323129600,C:1323129600,rB:1352073600,G:1372723200,M:1377561600,N:1381104000,O:1386288000,v:1390867200,w:1393891200,x:1399334400,y:1401753600,z:1405987200,AB:1449100800,BB:1454371200,CB:1457308800,DB:1462320000,EB:1465344000,FB:1470096000,GB:1474329600,HB:1477267200,IB:1481587200,JB:1486425600,KB:1490054400,LB:1494374400,MB:1498003200,NB:1502236800,OB:1506470400,PB:1510099200,QB:1515024000,RB:1517961600,SB:1521676800,TB:1525910400,UB:1530144000,VB:1534982400,WB:1537833600,XB:1543363200,YB:1548201600,ZB:1554768000,aB:1561593600,bB:1566259200,cB:1570406400,dB:1573689600,eB:1578441600,fB:1583971200,gB:1587513600,hB:1592956800,iB:1595894400,jB:1600128000,kB:1603238400,g:1613520000,lB:1612224000,mB:1616544000,nB:1619568000,oB:1623715200,pB:1627948800,P:1631577600,Q:1633392000,R:1635984000,wB:1638403200,S:1642550400,T:1644969600,U:1647993600,V:1650412800,W:1652745600,X:1654646400,Y:1657152000,Z:1660780800,a:1663113600,b:1668816000,c:1668643200,d:1671062400,e:1675209600},D:{F:\"o\",B:\"o\",C:\"o\",PC:\"o\",QC:\"o\",RC:\"o\",SC:\"o\",qB:\"o\",AC:\"o\",TC:\"o\",rB:\"o\"}},G:{A:{E:0,zB:0,UC:0,BC:0.00157571,VC:0.00315142,WC:0.00315142,XC:0.0126057,YC:0.00630284,ZC:0.0157571,aC:0.0583013,bC:0.00630284,cC:0.1103,dC:0.0267871,eC:0.0252114,fC:0.0220599,gC:0.395503,hC:0.0330899,iC:0.0236357,jC:0.0346656,kC:0.105573,lC:0.288355,mC:0.567256,nC:0.157571,\"2B\":0.207994,\"3B\":0.250538,\"4B\":0.472713,\"5B\":1.89085,sB:1.7837,\"6B\":4.8784,\"7B\":3.17191,\"8B\":0.237932,\"9B\":0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"zB\",\"UC\",\"BC\",\"VC\",\"WC\",\"XC\",\"E\",\"YC\",\"ZC\",\"aC\",\"bC\",\"cC\",\"dC\",\"eC\",\"fC\",\"gC\",\"hC\",\"iC\",\"jC\",\"kC\",\"lC\",\"mC\",\"nC\",\"2B\",\"3B\",\"4B\",\"5B\",\"sB\",\"6B\",\"7B\",\"8B\",\"9B\",\"\",\"\"],E:\"Safari on iOS\",F:{zB:1270252800,UC:1283904000,BC:1299628800,VC:1331078400,WC:1359331200,XC:1394409600,E:1410912000,YC:1413763200,ZC:1442361600,aC:1458518400,bC:1473724800,cC:1490572800,dC:1505779200,eC:1522281600,fC:1537142400,gC:1553472000,hC:1568851200,iC:1572220800,jC:1580169600,kC:1585008000,lC:1600214400,mC:1619395200,nC:1632096000,\"2B\":1639353600,\"3B\":1647216000,\"4B\":1652659200,\"5B\":1658275200,sB:1662940800,\"6B\":1666569600,\"7B\":1670889600,\"8B\":1674432000,\"9B\":null}},H:{A:{oC:1.01498},B:\"ooC\",\"\",\"\",\"\"],E:\"Opera Mini\",F:{oC:1426464000}},I:{A:{tB:0,I:0.0286543,f:0,pC:0,qC:0,rC:0,sC:0.0764114,BC:0.0764114,tC:0,uC:0.315197},B:\"webkitpC\",\"qC\",\"rC\",\"tB\",\"I\",\"sC\",\"BC\",\"tC\",\"uC\",\"f\",\"\",\"\",\"\"],E:\"Android Browser\",F:{pC:1256515200,qC:1274313600,rC:1291593600,tB:1298332800,I:1318896000,sC:1341792000,BC:1374624000,tC:1386547200,uC:1401667200,f:1673568000}},J:{A:{D:0,A:0},B:\"webkitlackberry Browser\",F:{D:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,g:0.0111391,qB:0,AC:0,rB:0},B:\"oqB\",\"AC\",\"C\",\"rB\",\"g\",\"\",\"\",\"\"],E:\"Opera Mobile\",F:{A:1287100800,B:1300752000,qB:1314835200,AC:1318291200,C:1330300800,rB:1349740800,g:1673827200},D:{g:\"webkit\"}},L:{A:{H:41.3632},B:\"webkithrome for Android\",F:{H:1675728000}},M:{A:{H:0.30285},B:\"mozirefox for Android\",F:{H:1676332800}},N:{A:{A:0.0115934,B:0.022664},B:\"msobile\",F:{A:1340150400,B:1353456000}},O:{A:{vC:0.890379},B:\"webkitvC\",\"\",\"\",\"\"],E:\"UC Browser for Android\",F:{vC:1634688000},D:{vC:\"webkit\"}},P:{A:{I:0.147734,wC:0.0103543,xC:0.010304,yC:0.0527621,zC:0.0103584,\"0C\":0.0104443,\"0B\":0.0105043,\"1C\":0.0211049,\"2C\":0.0105524,\"3C\":0.0316573,\"4C\":0.0316573,\"5C\":0.0211049,sB:0.073867,\"6C\":0.0844194,\"7C\":0.126629,\"8C\":2.09993},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"I\",\"wC\",\"xC\",\"yC\",\"zC\",\"0C\",\"0B\",\"1C\",\"2C\",\"3C\",\"4C\",\"5C\",\"sB\",\"6C\",\"7C\",\"8C\",\"\",\"\",\"\"],E:\"Samsung Internet\",F:{I:1461024000,wC:1481846400,xC:1509408000,yC:1528329600,zC:1546128000,\"0C\":1554163200,\"0B\":1567900800,\"1C\":1582588800,\"2C\":1593475200,\"3C\":1605657600,\"4C\":1618531200,\"5C\":1629072000,sB:1640736000,\"6C\":1651708800,\"7C\":1659657600,\"8C\":1667260800}},Q:{A:{\"1B\":0.145368},B:\"webkitrowser\",F:{\"1B\":1663718400}},R:{A:{\"9C\":0},B:\"webkitaidu Browser\",F:{\"9C\":1663027200}},S:{A:{AD:0.066627},B:\"mozaiOS Browser\",F:{AD:1527811200}}};\n","module.exports={\"0\":\"24\",\"1\":\"25\",\"2\":\"26\",\"3\":\"27\",\"4\":\"28\",\"5\":\"29\",\"6\":\"30\",\"7\":\"31\",\"8\":\"32\",\"9\":\"33\",A:\"10\",B:\"11\",C:\"12\",D:\"7\",E:\"8\",F:\"9\",G:\"15\",H:\"110\",I:\"4\",J:\"6\",K:\"13\",L:\"14\",M:\"16\",N:\"17\",O:\"18\",P:\"79\",Q:\"80\",R:\"81\",S:\"83\",T:\"84\",U:\"85\",V:\"86\",W:\"87\",X:\"88\",Y:\"89\",Z:\"90\",a:\"91\",b:\"92\",c:\"93\",d:\"94\",e:\"95\",f:\"109\",g:\"73\",h:\"96\",i:\"97\",j:\"98\",k:\"99\",l:\"100\",m:\"101\",n:\"102\",o:\"103\",p:\"104\",q:\"105\",r:\"106\",s:\"107\",t:\"108\",u:\"5\",v:\"19\",w:\"20\",x:\"21\",y:\"22\",z:\"23\",AB:\"34\",BB:\"35\",CB:\"36\",DB:\"37\",EB:\"38\",FB:\"39\",GB:\"40\",HB:\"41\",IB:\"42\",JB:\"43\",KB:\"44\",LB:\"45\",MB:\"46\",NB:\"47\",OB:\"48\",PB:\"49\",QB:\"50\",RB:\"51\",SB:\"52\",TB:\"53\",UB:\"54\",VB:\"55\",WB:\"56\",XB:\"57\",YB:\"58\",ZB:\"60\",aB:\"62\",bB:\"63\",cB:\"64\",dB:\"65\",eB:\"66\",fB:\"67\",gB:\"68\",hB:\"69\",iB:\"70\",jB:\"71\",kB:\"72\",lB:\"74\",mB:\"75\",nB:\"76\",oB:\"77\",pB:\"78\",qB:\"11.1\",rB:\"12.1\",sB:\"16.0\",tB:\"3\",uB:\"59\",vB:\"61\",wB:\"82\",xB:\"111\",yB:\"112\",zB:\"3.2\",\"0B\":\"10.1\",\"1B\":\"13.1\",\"2B\":\"15.2-15.3\",\"3B\":\"15.4\",\"4B\":\"15.5\",\"5B\":\"15.6\",\"6B\":\"16.1\",\"7B\":\"16.2\",\"8B\":\"16.3\",\"9B\":\"16.4\",AC:\"11.5\",BC:\"4.2-4.3\",CC:\"5.5\",DC:\"2\",EC:\"3.5\",FC:\"3.6\",GC:\"113\",HC:\"3.1\",IC:\"5.1\",JC:\"6.1\",KC:\"7.1\",LC:\"9.1\",MC:\"14.1\",NC:\"15.1\",OC:\"TP\",PC:\"9.5-9.6\",QC:\"10.0-10.1\",RC:\"10.5\",SC:\"10.6\",TC:\"11.6\",UC:\"4.0-4.1\",VC:\"5.0-5.1\",WC:\"6.0-6.1\",XC:\"7.0-7.1\",YC:\"8.1-8.4\",ZC:\"9.0-9.2\",aC:\"9.3\",bC:\"10.0-10.2\",cC:\"10.3\",dC:\"11.0-11.2\",eC:\"11.3-11.4\",fC:\"12.0-12.1\",gC:\"12.2-12.5\",hC:\"13.0-13.1\",iC:\"13.2\",jC:\"13.3\",kC:\"13.4-13.7\",lC:\"14.0-14.4\",mC:\"14.5-14.8\",nC:\"15.0-15.1\",oC:\"all\",pC:\"2.1\",qC:\"2.2\",rC:\"2.3\",sC:\"4.1\",tC:\"4.4\",uC:\"4.4.3-4.4.4\",vC:\"13.4\",wC:\"5.0-5.4\",xC:\"6.2-6.4\",yC:\"7.2-7.4\",zC:\"8.2\",\"0C\":\"9.2\",\"1C\":\"11.1-11.2\",\"2C\":\"12.0\",\"3C\":\"13.0\",\"4C\":\"14.0\",\"5C\":\"15.0\",\"6C\":\"17.0\",\"7C\":\"18.0\",\"8C\":\"19.0\",\"9C\":\"13.18\",AD:\"2.5\"};\n","module.exports={A:\"ie\",B:\"edge\",C:\"firefox\",D:\"chrome\",E:\"safari\",F:\"opera\",G:\"ios_saf\",H:\"op_mini\",I:\"android\",J:\"bb\",K:\"op_mob\",L:\"and_chr\",M:\"and_ff\",N:\"ie_mob\",O:\"and_uc\",P:\"samsung\",Q:\"and_qq\",R:\"baidu\",S:\"kaios\"};\n","module.exports={\"aac\":require(\"./features/aac\"),\"abortcontroller\":require(\"./features/abortcontroller\"),\"ac3-ec3\":require(\"./features/ac3-ec3\"),\"accelerometer\":require(\"./features/accelerometer\"),\"addeventlistener\":require(\"./features/addeventlistener\"),\"alternate-stylesheet\":require(\"./features/alternate-stylesheet\"),\"ambient-light\":require(\"./features/ambient-light\"),\"apng\":require(\"./features/apng\"),\"array-find-index\":require(\"./features/array-find-index\"),\"array-find\":require(\"./features/array-find\"),\"array-flat\":require(\"./features/array-flat\"),\"array-includes\":require(\"./features/array-includes\"),\"arrow-functions\":require(\"./features/arrow-functions\"),\"asmjs\":require(\"./features/asmjs\"),\"async-clipboard\":require(\"./features/async-clipboard\"),\"async-functions\":require(\"./features/async-functions\"),\"atob-btoa\":require(\"./features/atob-btoa\"),\"audio-api\":require(\"./features/audio-api\"),\"audio\":require(\"./features/audio\"),\"audiotracks\":require(\"./features/audiotracks\"),\"autofocus\":require(\"./features/autofocus\"),\"auxclick\":require(\"./features/auxclick\"),\"av1\":require(\"./features/av1\"),\"avif\":require(\"./features/avif\"),\"background-attachment\":require(\"./features/background-attachment\"),\"background-clip-text\":require(\"./features/background-clip-text\"),\"background-img-opts\":require(\"./features/background-img-opts\"),\"background-position-x-y\":require(\"./features/background-position-x-y\"),\"background-repeat-round-space\":require(\"./features/background-repeat-round-space\"),\"background-sync\":require(\"./features/background-sync\"),\"battery-status\":require(\"./features/battery-status\"),\"beacon\":require(\"./features/beacon\"),\"beforeafterprint\":require(\"./features/beforeafterprint\"),\"bigint\":require(\"./features/bigint\"),\"blobbuilder\":require(\"./features/blobbuilder\"),\"bloburls\":require(\"./features/bloburls\"),\"border-image\":require(\"./features/border-image\"),\"border-radius\":require(\"./features/border-radius\"),\"broadcastchannel\":require(\"./features/broadcastchannel\"),\"brotli\":require(\"./features/brotli\"),\"calc\":require(\"./features/calc\"),\"canvas-blending\":require(\"./features/canvas-blending\"),\"canvas-text\":require(\"./features/canvas-text\"),\"canvas\":require(\"./features/canvas\"),\"ch-unit\":require(\"./features/ch-unit\"),\"chacha20-poly1305\":require(\"./features/chacha20-poly1305\"),\"channel-messaging\":require(\"./features/channel-messaging\"),\"childnode-remove\":require(\"./features/childnode-remove\"),\"classlist\":require(\"./features/classlist\"),\"client-hints-dpr-width-viewport\":require(\"./features/client-hints-dpr-width-viewport\"),\"clipboard\":require(\"./features/clipboard\"),\"colr-v1\":require(\"./features/colr-v1\"),\"colr\":require(\"./features/colr\"),\"comparedocumentposition\":require(\"./features/comparedocumentposition\"),\"console-basic\":require(\"./features/console-basic\"),\"console-time\":require(\"./features/console-time\"),\"const\":require(\"./features/const\"),\"constraint-validation\":require(\"./features/constraint-validation\"),\"contenteditable\":require(\"./features/contenteditable\"),\"contentsecuritypolicy\":require(\"./features/contentsecuritypolicy\"),\"contentsecuritypolicy2\":require(\"./features/contentsecuritypolicy2\"),\"cookie-store-api\":require(\"./features/cookie-store-api\"),\"cors\":require(\"./features/cors\"),\"createimagebitmap\":require(\"./features/createimagebitmap\"),\"credential-management\":require(\"./features/credential-management\"),\"cryptography\":require(\"./features/cryptography\"),\"css-all\":require(\"./features/css-all\"),\"css-animation\":require(\"./features/css-animation\"),\"css-any-link\":require(\"./features/css-any-link\"),\"css-appearance\":require(\"./features/css-appearance\"),\"css-at-counter-style\":require(\"./features/css-at-counter-style\"),\"css-autofill\":require(\"./features/css-autofill\"),\"css-backdrop-filter\":require(\"./features/css-backdrop-filter\"),\"css-background-offsets\":require(\"./features/css-background-offsets\"),\"css-backgroundblendmode\":require(\"./features/css-backgroundblendmode\"),\"css-boxdecorationbreak\":require(\"./features/css-boxdecorationbreak\"),\"css-boxshadow\":require(\"./features/css-boxshadow\"),\"css-canvas\":require(\"./features/css-canvas\"),\"css-caret-color\":require(\"./features/css-caret-color\"),\"css-cascade-layers\":require(\"./features/css-cascade-layers\"),\"css-case-insensitive\":require(\"./features/css-case-insensitive\"),\"css-clip-path\":require(\"./features/css-clip-path\"),\"css-color-adjust\":require(\"./features/css-color-adjust\"),\"css-color-function\":require(\"./features/css-color-function\"),\"css-conic-gradients\":require(\"./features/css-conic-gradients\"),\"css-container-queries-style\":require(\"./features/css-container-queries-style\"),\"css-container-queries\":require(\"./features/css-container-queries\"),\"css-container-query-units\":require(\"./features/css-container-query-units\"),\"css-containment\":require(\"./features/css-containment\"),\"css-content-visibility\":require(\"./features/css-content-visibility\"),\"css-counters\":require(\"./features/css-counters\"),\"css-crisp-edges\":require(\"./features/css-crisp-edges\"),\"css-cross-fade\":require(\"./features/css-cross-fade\"),\"css-default-pseudo\":require(\"./features/css-default-pseudo\"),\"css-descendant-gtgt\":require(\"./features/css-descendant-gtgt\"),\"css-deviceadaptation\":require(\"./features/css-deviceadaptation\"),\"css-dir-pseudo\":require(\"./features/css-dir-pseudo\"),\"css-display-contents\":require(\"./features/css-display-contents\"),\"css-element-function\":require(\"./features/css-element-function\"),\"css-env-function\":require(\"./features/css-env-function\"),\"css-exclusions\":require(\"./features/css-exclusions\"),\"css-featurequeries\":require(\"./features/css-featurequeries\"),\"css-file-selector-button\":require(\"./features/css-file-selector-button\"),\"css-filter-function\":require(\"./features/css-filter-function\"),\"css-filters\":require(\"./features/css-filters\"),\"css-first-letter\":require(\"./features/css-first-letter\"),\"css-first-line\":require(\"./features/css-first-line\"),\"css-fixed\":require(\"./features/css-fixed\"),\"css-focus-visible\":require(\"./features/css-focus-visible\"),\"css-focus-within\":require(\"./features/css-focus-within\"),\"css-font-palette\":require(\"./features/css-font-palette\"),\"css-font-rendering-controls\":require(\"./features/css-font-rendering-controls\"),\"css-font-stretch\":require(\"./features/css-font-stretch\"),\"css-gencontent\":require(\"./features/css-gencontent\"),\"css-gradients\":require(\"./features/css-gradients\"),\"css-grid-animation\":require(\"./features/css-grid-animation\"),\"css-grid\":require(\"./features/css-grid\"),\"css-hanging-punctuation\":require(\"./features/css-hanging-punctuation\"),\"css-has\":require(\"./features/css-has\"),\"css-hyphens\":require(\"./features/css-hyphens\"),\"css-image-orientation\":require(\"./features/css-image-orientation\"),\"css-image-set\":require(\"./features/css-image-set\"),\"css-in-out-of-range\":require(\"./features/css-in-out-of-range\"),\"css-indeterminate-pseudo\":require(\"./features/css-indeterminate-pseudo\"),\"css-initial-letter\":require(\"./features/css-initial-letter\"),\"css-initial-value\":require(\"./features/css-initial-value\"),\"css-lch-lab\":require(\"./features/css-lch-lab\"),\"css-letter-spacing\":require(\"./features/css-letter-spacing\"),\"css-line-clamp\":require(\"./features/css-line-clamp\"),\"css-logical-props\":require(\"./features/css-logical-props\"),\"css-marker-pseudo\":require(\"./features/css-marker-pseudo\"),\"css-masks\":require(\"./features/css-masks\"),\"css-matches-pseudo\":require(\"./features/css-matches-pseudo\"),\"css-math-functions\":require(\"./features/css-math-functions\"),\"css-media-interaction\":require(\"./features/css-media-interaction\"),\"css-media-range-syntax\":require(\"./features/css-media-range-syntax\"),\"css-media-resolution\":require(\"./features/css-media-resolution\"),\"css-media-scripting\":require(\"./features/css-media-scripting\"),\"css-mediaqueries\":require(\"./features/css-mediaqueries\"),\"css-mixblendmode\":require(\"./features/css-mixblendmode\"),\"css-motion-paths\":require(\"./features/css-motion-paths\"),\"css-namespaces\":require(\"./features/css-namespaces\"),\"css-nesting\":require(\"./features/css-nesting\"),\"css-not-sel-list\":require(\"./features/css-not-sel-list\"),\"css-nth-child-of\":require(\"./features/css-nth-child-of\"),\"css-opacity\":require(\"./features/css-opacity\"),\"css-optional-pseudo\":require(\"./features/css-optional-pseudo\"),\"css-overflow-anchor\":require(\"./features/css-overflow-anchor\"),\"css-overflow-overlay\":require(\"./features/css-overflow-overlay\"),\"css-overflow\":require(\"./features/css-overflow\"),\"css-overscroll-behavior\":require(\"./features/css-overscroll-behavior\"),\"css-page-break\":require(\"./features/css-page-break\"),\"css-paged-media\":require(\"./features/css-paged-media\"),\"css-paint-api\":require(\"./features/css-paint-api\"),\"css-placeholder-shown\":require(\"./features/css-placeholder-shown\"),\"css-placeholder\":require(\"./features/css-placeholder\"),\"css-print-color-adjust\":require(\"./features/css-print-color-adjust\"),\"css-read-only-write\":require(\"./features/css-read-only-write\"),\"css-rebeccapurple\":require(\"./features/css-rebeccapurple\"),\"css-reflections\":require(\"./features/css-reflections\"),\"css-regions\":require(\"./features/css-regions\"),\"css-repeating-gradients\":require(\"./features/css-repeating-gradients\"),\"css-resize\":require(\"./features/css-resize\"),\"css-revert-value\":require(\"./features/css-revert-value\"),\"css-rrggbbaa\":require(\"./features/css-rrggbbaa\"),\"css-scroll-behavior\":require(\"./features/css-scroll-behavior\"),\"css-scroll-timeline\":require(\"./features/css-scroll-timeline\"),\"css-scrollbar\":require(\"./features/css-scrollbar\"),\"css-sel2\":require(\"./features/css-sel2\"),\"css-sel3\":require(\"./features/css-sel3\"),\"css-selection\":require(\"./features/css-selection\"),\"css-shapes\":require(\"./features/css-shapes\"),\"css-snappoints\":require(\"./features/css-snappoints\"),\"css-sticky\":require(\"./features/css-sticky\"),\"css-subgrid\":require(\"./features/css-subgrid\"),\"css-supports-api\":require(\"./features/css-supports-api\"),\"css-table\":require(\"./features/css-table\"),\"css-text-align-last\":require(\"./features/css-text-align-last\"),\"css-text-indent\":require(\"./features/css-text-indent\"),\"css-text-justify\":require(\"./features/css-text-justify\"),\"css-text-orientation\":require(\"./features/css-text-orientation\"),\"css-text-spacing\":require(\"./features/css-text-spacing\"),\"css-textshadow\":require(\"./features/css-textshadow\"),\"css-touch-action\":require(\"./features/css-touch-action\"),\"css-transitions\":require(\"./features/css-transitions\"),\"css-unicode-bidi\":require(\"./features/css-unicode-bidi\"),\"css-unset-value\":require(\"./features/css-unset-value\"),\"css-variables\":require(\"./features/css-variables\"),\"css-when-else\":require(\"./features/css-when-else\"),\"css-widows-orphans\":require(\"./features/css-widows-orphans\"),\"css-width-stretch\":require(\"./features/css-width-stretch\"),\"css-writing-mode\":require(\"./features/css-writing-mode\"),\"css-zoom\":require(\"./features/css-zoom\"),\"css3-attr\":require(\"./features/css3-attr\"),\"css3-boxsizing\":require(\"./features/css3-boxsizing\"),\"css3-colors\":require(\"./features/css3-colors\"),\"css3-cursors-grab\":require(\"./features/css3-cursors-grab\"),\"css3-cursors-newer\":require(\"./features/css3-cursors-newer\"),\"css3-cursors\":require(\"./features/css3-cursors\"),\"css3-tabsize\":require(\"./features/css3-tabsize\"),\"currentcolor\":require(\"./features/currentcolor\"),\"custom-elements\":require(\"./features/custom-elements\"),\"custom-elementsv1\":require(\"./features/custom-elementsv1\"),\"customevent\":require(\"./features/customevent\"),\"datalist\":require(\"./features/datalist\"),\"dataset\":require(\"./features/dataset\"),\"datauri\":require(\"./features/datauri\"),\"date-tolocaledatestring\":require(\"./features/date-tolocaledatestring\"),\"declarative-shadow-dom\":require(\"./features/declarative-shadow-dom\"),\"decorators\":require(\"./features/decorators\"),\"details\":require(\"./features/details\"),\"deviceorientation\":require(\"./features/deviceorientation\"),\"devicepixelratio\":require(\"./features/devicepixelratio\"),\"dialog\":require(\"./features/dialog\"),\"dispatchevent\":require(\"./features/dispatchevent\"),\"dnssec\":require(\"./features/dnssec\"),\"do-not-track\":require(\"./features/do-not-track\"),\"document-currentscript\":require(\"./features/document-currentscript\"),\"document-evaluate-xpath\":require(\"./features/document-evaluate-xpath\"),\"document-execcommand\":require(\"./features/document-execcommand\"),\"document-policy\":require(\"./features/document-policy\"),\"document-scrollingelement\":require(\"./features/document-scrollingelement\"),\"documenthead\":require(\"./features/documenthead\"),\"dom-manip-convenience\":require(\"./features/dom-manip-convenience\"),\"dom-range\":require(\"./features/dom-range\"),\"domcontentloaded\":require(\"./features/domcontentloaded\"),\"dommatrix\":require(\"./features/dommatrix\"),\"download\":require(\"./features/download\"),\"dragndrop\":require(\"./features/dragndrop\"),\"element-closest\":require(\"./features/element-closest\"),\"element-from-point\":require(\"./features/element-from-point\"),\"element-scroll-methods\":require(\"./features/element-scroll-methods\"),\"eme\":require(\"./features/eme\"),\"eot\":require(\"./features/eot\"),\"es5\":require(\"./features/es5\"),\"es6-class\":require(\"./features/es6-class\"),\"es6-generators\":require(\"./features/es6-generators\"),\"es6-module-dynamic-import\":require(\"./features/es6-module-dynamic-import\"),\"es6-module\":require(\"./features/es6-module\"),\"es6-number\":require(\"./features/es6-number\"),\"es6-string-includes\":require(\"./features/es6-string-includes\"),\"es6\":require(\"./features/es6\"),\"eventsource\":require(\"./features/eventsource\"),\"extended-system-fonts\":require(\"./features/extended-system-fonts\"),\"feature-policy\":require(\"./features/feature-policy\"),\"fetch\":require(\"./features/fetch\"),\"fieldset-disabled\":require(\"./features/fieldset-disabled\"),\"fileapi\":require(\"./features/fileapi\"),\"filereader\":require(\"./features/filereader\"),\"filereadersync\":require(\"./features/filereadersync\"),\"filesystem\":require(\"./features/filesystem\"),\"flac\":require(\"./features/flac\"),\"flexbox-gap\":require(\"./features/flexbox-gap\"),\"flexbox\":require(\"./features/flexbox\"),\"flow-root\":require(\"./features/flow-root\"),\"focusin-focusout-events\":require(\"./features/focusin-focusout-events\"),\"font-family-system-ui\":require(\"./features/font-family-system-ui\"),\"font-feature\":require(\"./features/font-feature\"),\"font-kerning\":require(\"./features/font-kerning\"),\"font-loading\":require(\"./features/font-loading\"),\"font-size-adjust\":require(\"./features/font-size-adjust\"),\"font-smooth\":require(\"./features/font-smooth\"),\"font-unicode-range\":require(\"./features/font-unicode-range\"),\"font-variant-alternates\":require(\"./features/font-variant-alternates\"),\"font-variant-numeric\":require(\"./features/font-variant-numeric\"),\"fontface\":require(\"./features/fontface\"),\"form-attribute\":require(\"./features/form-attribute\"),\"form-submit-attributes\":require(\"./features/form-submit-attributes\"),\"form-validation\":require(\"./features/form-validation\"),\"forms\":require(\"./features/forms\"),\"fullscreen\":require(\"./features/fullscreen\"),\"gamepad\":require(\"./features/gamepad\"),\"geolocation\":require(\"./features/geolocation\"),\"getboundingclientrect\":require(\"./features/getboundingclientrect\"),\"getcomputedstyle\":require(\"./features/getcomputedstyle\"),\"getelementsbyclassname\":require(\"./features/getelementsbyclassname\"),\"getrandomvalues\":require(\"./features/getrandomvalues\"),\"gyroscope\":require(\"./features/gyroscope\"),\"hardwareconcurrency\":require(\"./features/hardwareconcurrency\"),\"hashchange\":require(\"./features/hashchange\"),\"heif\":require(\"./features/heif\"),\"hevc\":require(\"./features/hevc\"),\"hidden\":require(\"./features/hidden\"),\"high-resolution-time\":require(\"./features/high-resolution-time\"),\"history\":require(\"./features/history\"),\"html-media-capture\":require(\"./features/html-media-capture\"),\"html5semantic\":require(\"./features/html5semantic\"),\"http-live-streaming\":require(\"./features/http-live-streaming\"),\"http2\":require(\"./features/http2\"),\"http3\":require(\"./features/http3\"),\"iframe-sandbox\":require(\"./features/iframe-sandbox\"),\"iframe-seamless\":require(\"./features/iframe-seamless\"),\"iframe-srcdoc\":require(\"./features/iframe-srcdoc\"),\"imagecapture\":require(\"./features/imagecapture\"),\"ime\":require(\"./features/ime\"),\"img-naturalwidth-naturalheight\":require(\"./features/img-naturalwidth-naturalheight\"),\"import-maps\":require(\"./features/import-maps\"),\"imports\":require(\"./features/imports\"),\"indeterminate-checkbox\":require(\"./features/indeterminate-checkbox\"),\"indexeddb\":require(\"./features/indexeddb\"),\"indexeddb2\":require(\"./features/indexeddb2\"),\"inline-block\":require(\"./features/inline-block\"),\"innertext\":require(\"./features/innertext\"),\"input-autocomplete-onoff\":require(\"./features/input-autocomplete-onoff\"),\"input-color\":require(\"./features/input-color\"),\"input-datetime\":require(\"./features/input-datetime\"),\"input-email-tel-url\":require(\"./features/input-email-tel-url\"),\"input-event\":require(\"./features/input-event\"),\"input-file-accept\":require(\"./features/input-file-accept\"),\"input-file-directory\":require(\"./features/input-file-directory\"),\"input-file-multiple\":require(\"./features/input-file-multiple\"),\"input-inputmode\":require(\"./features/input-inputmode\"),\"input-minlength\":require(\"./features/input-minlength\"),\"input-number\":require(\"./features/input-number\"),\"input-pattern\":require(\"./features/input-pattern\"),\"input-placeholder\":require(\"./features/input-placeholder\"),\"input-range\":require(\"./features/input-range\"),\"input-search\":require(\"./features/input-search\"),\"input-selection\":require(\"./features/input-selection\"),\"insert-adjacent\":require(\"./features/insert-adjacent\"),\"insertadjacenthtml\":require(\"./features/insertadjacenthtml\"),\"internationalization\":require(\"./features/internationalization\"),\"intersectionobserver-v2\":require(\"./features/intersectionobserver-v2\"),\"intersectionobserver\":require(\"./features/intersectionobserver\"),\"intl-pluralrules\":require(\"./features/intl-pluralrules\"),\"intrinsic-width\":require(\"./features/intrinsic-width\"),\"jpeg2000\":require(\"./features/jpeg2000\"),\"jpegxl\":require(\"./features/jpegxl\"),\"jpegxr\":require(\"./features/jpegxr\"),\"js-regexp-lookbehind\":require(\"./features/js-regexp-lookbehind\"),\"json\":require(\"./features/json\"),\"justify-content-space-evenly\":require(\"./features/justify-content-space-evenly\"),\"kerning-pairs-ligatures\":require(\"./features/kerning-pairs-ligatures\"),\"keyboardevent-charcode\":require(\"./features/keyboardevent-charcode\"),\"keyboardevent-code\":require(\"./features/keyboardevent-code\"),\"keyboardevent-getmodifierstate\":require(\"./features/keyboardevent-getmodifierstate\"),\"keyboardevent-key\":require(\"./features/keyboardevent-key\"),\"keyboardevent-location\":require(\"./features/keyboardevent-location\"),\"keyboardevent-which\":require(\"./features/keyboardevent-which\"),\"lazyload\":require(\"./features/lazyload\"),\"let\":require(\"./features/let\"),\"link-icon-png\":require(\"./features/link-icon-png\"),\"link-icon-svg\":require(\"./features/link-icon-svg\"),\"link-rel-dns-prefetch\":require(\"./features/link-rel-dns-prefetch\"),\"link-rel-modulepreload\":require(\"./features/link-rel-modulepreload\"),\"link-rel-preconnect\":require(\"./features/link-rel-preconnect\"),\"link-rel-prefetch\":require(\"./features/link-rel-prefetch\"),\"link-rel-preload\":require(\"./features/link-rel-preload\"),\"link-rel-prerender\":require(\"./features/link-rel-prerender\"),\"loading-lazy-attr\":require(\"./features/loading-lazy-attr\"),\"localecompare\":require(\"./features/localecompare\"),\"magnetometer\":require(\"./features/magnetometer\"),\"matchesselector\":require(\"./features/matchesselector\"),\"matchmedia\":require(\"./features/matchmedia\"),\"mathml\":require(\"./features/mathml\"),\"maxlength\":require(\"./features/maxlength\"),\"mdn-css-unicode-bidi-isolate-override\":require(\"./features/mdn-css-unicode-bidi-isolate-override\"),\"mdn-css-unicode-bidi-isolate\":require(\"./features/mdn-css-unicode-bidi-isolate\"),\"mdn-css-unicode-bidi-plaintext\":require(\"./features/mdn-css-unicode-bidi-plaintext\"),\"mdn-text-decoration-color\":require(\"./features/mdn-text-decoration-color\"),\"mdn-text-decoration-line\":require(\"./features/mdn-text-decoration-line\"),\"mdn-text-decoration-shorthand\":require(\"./features/mdn-text-decoration-shorthand\"),\"mdn-text-decoration-style\":require(\"./features/mdn-text-decoration-style\"),\"media-fragments\":require(\"./features/media-fragments\"),\"mediacapture-fromelement\":require(\"./features/mediacapture-fromelement\"),\"mediarecorder\":require(\"./features/mediarecorder\"),\"mediasource\":require(\"./features/mediasource\"),\"menu\":require(\"./features/menu\"),\"meta-theme-color\":require(\"./features/meta-theme-color\"),\"meter\":require(\"./features/meter\"),\"midi\":require(\"./features/midi\"),\"minmaxwh\":require(\"./features/minmaxwh\"),\"mp3\":require(\"./features/mp3\"),\"mpeg-dash\":require(\"./features/mpeg-dash\"),\"mpeg4\":require(\"./features/mpeg4\"),\"multibackgrounds\":require(\"./features/multibackgrounds\"),\"multicolumn\":require(\"./features/multicolumn\"),\"mutation-events\":require(\"./features/mutation-events\"),\"mutationobserver\":require(\"./features/mutationobserver\"),\"namevalue-storage\":require(\"./features/namevalue-storage\"),\"native-filesystem-api\":require(\"./features/native-filesystem-api\"),\"nav-timing\":require(\"./features/nav-timing\"),\"netinfo\":require(\"./features/netinfo\"),\"notifications\":require(\"./features/notifications\"),\"object-entries\":require(\"./features/object-entries\"),\"object-fit\":require(\"./features/object-fit\"),\"object-observe\":require(\"./features/object-observe\"),\"object-values\":require(\"./features/object-values\"),\"objectrtc\":require(\"./features/objectrtc\"),\"offline-apps\":require(\"./features/offline-apps\"),\"offscreencanvas\":require(\"./features/offscreencanvas\"),\"ogg-vorbis\":require(\"./features/ogg-vorbis\"),\"ogv\":require(\"./features/ogv\"),\"ol-reversed\":require(\"./features/ol-reversed\"),\"once-event-listener\":require(\"./features/once-event-listener\"),\"online-status\":require(\"./features/online-status\"),\"opus\":require(\"./features/opus\"),\"orientation-sensor\":require(\"./features/orientation-sensor\"),\"outline\":require(\"./features/outline\"),\"pad-start-end\":require(\"./features/pad-start-end\"),\"page-transition-events\":require(\"./features/page-transition-events\"),\"pagevisibility\":require(\"./features/pagevisibility\"),\"passive-event-listener\":require(\"./features/passive-event-listener\"),\"passwordrules\":require(\"./features/passwordrules\"),\"path2d\":require(\"./features/path2d\"),\"payment-request\":require(\"./features/payment-request\"),\"pdf-viewer\":require(\"./features/pdf-viewer\"),\"permissions-api\":require(\"./features/permissions-api\"),\"permissions-policy\":require(\"./features/permissions-policy\"),\"picture-in-picture\":require(\"./features/picture-in-picture\"),\"picture\":require(\"./features/picture\"),\"ping\":require(\"./features/ping\"),\"png-alpha\":require(\"./features/png-alpha\"),\"pointer-events\":require(\"./features/pointer-events\"),\"pointer\":require(\"./features/pointer\"),\"pointerlock\":require(\"./features/pointerlock\"),\"portals\":require(\"./features/portals\"),\"prefers-color-scheme\":require(\"./features/prefers-color-scheme\"),\"prefers-reduced-motion\":require(\"./features/prefers-reduced-motion\"),\"progress\":require(\"./features/progress\"),\"promise-finally\":require(\"./features/promise-finally\"),\"promises\":require(\"./features/promises\"),\"proximity\":require(\"./features/proximity\"),\"proxy\":require(\"./features/proxy\"),\"publickeypinning\":require(\"./features/publickeypinning\"),\"push-api\":require(\"./features/push-api\"),\"queryselector\":require(\"./features/queryselector\"),\"readonly-attr\":require(\"./features/readonly-attr\"),\"referrer-policy\":require(\"./features/referrer-policy\"),\"registerprotocolhandler\":require(\"./features/registerprotocolhandler\"),\"rel-noopener\":require(\"./features/rel-noopener\"),\"rel-noreferrer\":require(\"./features/rel-noreferrer\"),\"rellist\":require(\"./features/rellist\"),\"rem\":require(\"./features/rem\"),\"requestanimationframe\":require(\"./features/requestanimationframe\"),\"requestidlecallback\":require(\"./features/requestidlecallback\"),\"resizeobserver\":require(\"./features/resizeobserver\"),\"resource-timing\":require(\"./features/resource-timing\"),\"rest-parameters\":require(\"./features/rest-parameters\"),\"rtcpeerconnection\":require(\"./features/rtcpeerconnection\"),\"ruby\":require(\"./features/ruby\"),\"run-in\":require(\"./features/run-in\"),\"same-site-cookie-attribute\":require(\"./features/same-site-cookie-attribute\"),\"screen-orientation\":require(\"./features/screen-orientation\"),\"script-async\":require(\"./features/script-async\"),\"script-defer\":require(\"./features/script-defer\"),\"scrollintoview\":require(\"./features/scrollintoview\"),\"scrollintoviewifneeded\":require(\"./features/scrollintoviewifneeded\"),\"sdch\":require(\"./features/sdch\"),\"selection-api\":require(\"./features/selection-api\"),\"server-timing\":require(\"./features/server-timing\"),\"serviceworkers\":require(\"./features/serviceworkers\"),\"setimmediate\":require(\"./features/setimmediate\"),\"shadowdom\":require(\"./features/shadowdom\"),\"shadowdomv1\":require(\"./features/shadowdomv1\"),\"sharedarraybuffer\":require(\"./features/sharedarraybuffer\"),\"sharedworkers\":require(\"./features/sharedworkers\"),\"sni\":require(\"./features/sni\"),\"spdy\":require(\"./features/spdy\"),\"speech-recognition\":require(\"./features/speech-recognition\"),\"speech-synthesis\":require(\"./features/speech-synthesis\"),\"spellcheck-attribute\":require(\"./features/spellcheck-attribute\"),\"sql-storage\":require(\"./features/sql-storage\"),\"srcset\":require(\"./features/srcset\"),\"stream\":require(\"./features/stream\"),\"streams\":require(\"./features/streams\"),\"stricttransportsecurity\":require(\"./features/stricttransportsecurity\"),\"style-scoped\":require(\"./features/style-scoped\"),\"subresource-bundling\":require(\"./features/subresource-bundling\"),\"subresource-integrity\":require(\"./features/subresource-integrity\"),\"svg-css\":require(\"./features/svg-css\"),\"svg-filters\":require(\"./features/svg-filters\"),\"svg-fonts\":require(\"./features/svg-fonts\"),\"svg-fragment\":require(\"./features/svg-fragment\"),\"svg-html\":require(\"./features/svg-html\"),\"svg-html5\":require(\"./features/svg-html5\"),\"svg-img\":require(\"./features/svg-img\"),\"svg-smil\":require(\"./features/svg-smil\"),\"svg\":require(\"./features/svg\"),\"sxg\":require(\"./features/sxg\"),\"tabindex-attr\":require(\"./features/tabindex-attr\"),\"template-literals\":require(\"./features/template-literals\"),\"template\":require(\"./features/template\"),\"temporal\":require(\"./features/temporal\"),\"testfeat\":require(\"./features/testfeat\"),\"text-decoration\":require(\"./features/text-decoration\"),\"text-emphasis\":require(\"./features/text-emphasis\"),\"text-overflow\":require(\"./features/text-overflow\"),\"text-size-adjust\":require(\"./features/text-size-adjust\"),\"text-stroke\":require(\"./features/text-stroke\"),\"textcontent\":require(\"./features/textcontent\"),\"textencoder\":require(\"./features/textencoder\"),\"tls1-1\":require(\"./features/tls1-1\"),\"tls1-2\":require(\"./features/tls1-2\"),\"tls1-3\":require(\"./features/tls1-3\"),\"touch\":require(\"./features/touch\"),\"transforms2d\":require(\"./features/transforms2d\"),\"transforms3d\":require(\"./features/transforms3d\"),\"trusted-types\":require(\"./features/trusted-types\"),\"ttf\":require(\"./features/ttf\"),\"typedarrays\":require(\"./features/typedarrays\"),\"u2f\":require(\"./features/u2f\"),\"unhandledrejection\":require(\"./features/unhandledrejection\"),\"upgradeinsecurerequests\":require(\"./features/upgradeinsecurerequests\"),\"url-scroll-to-text-fragment\":require(\"./features/url-scroll-to-text-fragment\"),\"url\":require(\"./features/url\"),\"urlsearchparams\":require(\"./features/urlsearchparams\"),\"use-strict\":require(\"./features/use-strict\"),\"user-select-none\":require(\"./features/user-select-none\"),\"user-timing\":require(\"./features/user-timing\"),\"variable-fonts\":require(\"./features/variable-fonts\"),\"vector-effect\":require(\"./features/vector-effect\"),\"vibration\":require(\"./features/vibration\"),\"video\":require(\"./features/video\"),\"videotracks\":require(\"./features/videotracks\"),\"viewport-unit-variants\":require(\"./features/viewport-unit-variants\"),\"viewport-units\":require(\"./features/viewport-units\"),\"wai-aria\":require(\"./features/wai-aria\"),\"wake-lock\":require(\"./features/wake-lock\"),\"wasm\":require(\"./features/wasm\"),\"wav\":require(\"./features/wav\"),\"wbr-element\":require(\"./features/wbr-element\"),\"web-animation\":require(\"./features/web-animation\"),\"web-app-manifest\":require(\"./features/web-app-manifest\"),\"web-bluetooth\":require(\"./features/web-bluetooth\"),\"web-serial\":require(\"./features/web-serial\"),\"web-share\":require(\"./features/web-share\"),\"webauthn\":require(\"./features/webauthn\"),\"webcodecs\":require(\"./features/webcodecs\"),\"webgl\":require(\"./features/webgl\"),\"webgl2\":require(\"./features/webgl2\"),\"webgpu\":require(\"./features/webgpu\"),\"webhid\":require(\"./features/webhid\"),\"webkit-user-drag\":require(\"./features/webkit-user-drag\"),\"webm\":require(\"./features/webm\"),\"webnfc\":require(\"./features/webnfc\"),\"webp\":require(\"./features/webp\"),\"websockets\":require(\"./features/websockets\"),\"webtransport\":require(\"./features/webtransport\"),\"webusb\":require(\"./features/webusb\"),\"webvr\":require(\"./features/webvr\"),\"webvtt\":require(\"./features/webvtt\"),\"webworkers\":require(\"./features/webworkers\"),\"webxr\":require(\"./features/webxr\"),\"will-change\":require(\"./features/will-change\"),\"woff\":require(\"./features/woff\"),\"woff2\":require(\"./features/woff2\"),\"word-break\":require(\"./features/word-break\"),\"wordwrap\":require(\"./features/wordwrap\"),\"x-doc-messaging\":require(\"./features/x-doc-messaging\"),\"x-frame-options\":require(\"./features/x-frame-options\"),\"xhr2\":require(\"./features/xhr2\"),\"xhtml\":require(\"./features/xhtml\"),\"xhtmlsmil\":require(\"./features/xhtmlsmil\"),\"xml-serializer\":require(\"./features/xml-serializer\")};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F\",\"16\":\"A B\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"132\":\"H\"},N:{\"1\":\"A\",\"2\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"132\":\"AD\"}},B:6,C:\"AAC audio file format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G\"},C:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB EC FC\"},D:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\",\"130\":\"C qB\"},F:{\"1\":\"TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"AbortController & AbortSignal\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O\",\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC\",\"132\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"132\":\"A\"},K:{\"2\":\"A B C g qB AC\",\"132\":\"rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"AC-3 (Dolby Digital) and EC-3 (Dolby Digital Plus) codecs\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\",\"194\":\"YB uB ZB vB aB bB cB dB eB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Accelerometer\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"130\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"257\":\"DC tB I u J EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"EventTarget.addEventListener()\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"2\":\"J D CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"F B C PC QC RC SC qB AC TC rB\",\"16\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"16\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"2\":\"g\",\"16\":\"A B C qB AC rB\"},L:{\"16\":\"H\"},M:{\"16\":\"H\"},N:{\"16\":\"A B\"},O:{\"16\":\"vC\"},P:{\"16\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"16\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Alternate stylesheet\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K\",\"132\":\"L G M N O\",\"322\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB\",\"194\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\",\"322\":\"YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB PC QC RC SC qB AC TC rB\",\"322\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"132\":\"AD\"}},B:4,C:\"Ambient Light Sensor\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC\"},D:{\"1\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB\"},E:{\"1\":\"E F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC KC\"},F:{\"1\":\"B C MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Animated PNG (APNG)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB\"},E:{\"1\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC\"},F:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"16\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Array.prototype.findIndex\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"C K L\"},C:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB\"},E:{\"1\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC\"},F:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"16\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Array.prototype.find\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB EC FC\"},D:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB\"},E:{\"1\":\"C K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B qB\"},F:{\"1\":\"WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"flat & flatMap array methods\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB EC FC\"},D:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Array.prototype.includes\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\"},D:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Arrow functions\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O\",\"132\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"322\":\"C\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\"},D:{\"2\":\"0 1 2 3 I u J D E F A B C K L G M N O v w x y z\",\"132\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"132\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"132\":\"g\"},L:{\"132\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"132\":\"vC\"},P:{\"2\":\"I\",\"132\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"132\":\"1B\"},R:{\"132\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"asm.js\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB EC FC\",\"132\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\",\"66\":\"YB uB ZB vB\"},E:{\"1\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB\"},F:{\"1\":\"PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC\",\"260\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"260\":\"f\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"132\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC\",\"260\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Asynchronous Clipboard API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\",\"194\":\"L\"},C:{\"1\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB EC FC\"},D:{\"1\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\",\"514\":\"0B\"},F:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\",\"514\":\"cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Async functions\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"2\":\"F PC QC\",\"16\":\"RC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"16\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Base64 encoding and decoding\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K\",\"33\":\"0 1 2 3 4 5 6 7 8 9 L G M N O v w x y z\"},E:{\"1\":\"G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"33\":\"J D E F A B C K L JC KC LC 0B qB rB 1B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"G M N O v w x\"},G:{\"1\":\"mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Web Audio API\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"132\":\"I u J D E F A B C K L G M N O v EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F\",\"4\":\"PC QC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"2\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Audio element\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O\",\"322\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB\",\"322\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"322\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"322\":\"g\"},L:{\"322\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"A B\"},O:{\"322\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"322\":\"1B\"},R:{\"322\":\"9C\"},S:{\"194\":\"AD\"}},B:1,C:\"Audio Tracks\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Autofocus attribute\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB EC FC\",\"129\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Auxclick\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N\",\"194\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB EC FC\",\"66\":\"VB WB XB YB uB ZB vB aB bB cB\",\"260\":\"dB\",\"516\":\"eB\"},D:{\"1\":\"iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB\",\"66\":\"fB gB hB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1090\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"AV1 video format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB EC FC\",\"194\":\"oB pB P Q R wB S T U V W X Y Z a b\",\"257\":\"c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB\",\"1281\":\"9B OC\",\"1796\":\"6B 7B 8B\"},F:{\"1\":\"jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\",\"1281\":\"sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"257\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"AVIF image format\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"132\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"132\":\"0 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F A B C IC JC KC LC 0B qB rB 3B 4B 5B sB 6B 7B 8B 9B OC\",\"132\":\"I K HC zB 1B\",\"2050\":\"L G MC NC 2B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"132\":\"F PC QC\"},G:{\"2\":\"zB UC BC\",\"772\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC\",\"2050\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC tC uC\",\"132\":\"sC BC\"},J:{\"260\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"132\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I\",\"1028\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS background-attachment\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O\",\"33\":\"C K L P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB EC FC\"},D:{\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC zB\",\"33\":\"I u J D E F A B C K IC JC KC LC 0B qB rB 1B\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC\",\"33\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC\"},H:{\"2\":\"oC\"},I:{\"16\":\"tB pC qC rC\",\"33\":\"I f sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"16\":\"A B C qB AC rB\",\"33\":\"g\"},L:{\"33\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"33\":\"vC\"},P:{\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"33\":\"1B\"},R:{\"33\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"Background-clip: text\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC\",\"36\":\"FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"516\":\"I u J D E F A B C K L\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"772\":\"I u J HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC\",\"36\":\"QC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"4\":\"zB UC BC WC\",\"516\":\"VC\"},H:{\"132\":\"oC\"},I:{\"1\":\"f tC uC\",\"36\":\"pC\",\"516\":\"tB I sC BC\",\"548\":\"qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 Background-image options\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"background-position-x & background-position-y\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E CC\",\"132\":\"F\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB EC FC\"},D:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F G M N O PC QC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS background-repeat round and space\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H EC FC\",\"16\":\"xB yB\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Background Sync API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"JB KB LB MB NB OB PB QB RB\",\"2\":\"DC tB I u J D E F SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB\",\"164\":\"A B C K L G\"},D:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB\",\"66\":\"DB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Battery Status API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Beacon API\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"16\":\"CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\"},D:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB rB\"},F:{\"1\":\"QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"16\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"16\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Printing Events\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB EC FC\",\"194\":\"dB eB fB\"},D:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB\"},E:{\"1\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB 1B\"},F:{\"1\":\"UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"BigInt\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\",\"36\":\"J D E F A B C\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\",\"36\":\"E F A B C K L G M N O v\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B C PC QC RC SC qB AC TC\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"pC qC rC\",\"36\":\"tB I sC BC tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Blob constructing\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"129\":\"A B\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"C K L\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\",\"33\":\"E F A B C K L G M N O v w x y\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"33\":\"J\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB pC qC rC\",\"33\":\"I sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Blob URLs\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"C K\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"260\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"804\":\"I u J D E F A B C K L EC FC\"},D:{\"1\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"260\":\"RB SB TB UB VB\",\"388\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"1412\":\"0 1 2 3 4 5 G M N O v w x y z\",\"1956\":\"I u J D E F A B C K L\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"129\":\"A B C K L G LC 0B qB rB 1B MC NC 2B\",\"1412\":\"J D E F JC KC\",\"1956\":\"I u HC zB IC\"},F:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F PC QC\",\"260\":\"EB FB GB HB IB\",\"388\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB\",\"1796\":\"RC SC\",\"1828\":\"B C qB AC TC rB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"129\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\",\"1412\":\"E WC XC YC ZC\",\"1956\":\"zB UC BC VC\"},H:{\"1828\":\"oC\"},I:{\"1\":\"f\",\"388\":\"tC uC\",\"1956\":\"tB I pC qC rC sC BC\"},J:{\"1412\":\"A\",\"1924\":\"D\"},K:{\"1\":\"g\",\"2\":\"A\",\"1828\":\"B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"260\":\"wC xC\",\"388\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"260\":\"AD\"}},B:4,C:\"CSS3 Border images\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"257\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"289\":\"tB EC FC\",\"292\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"I\"},E:{\"1\":\"u D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"I HC zB\",\"129\":\"J IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f qC rC sC BC tC uC\",\"33\":\"pC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"257\":\"AD\"}},B:4,C:\"CSS3 Border-radius (rounded corners)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EC FC\"},D:{\"1\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"BroadcastChannel\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\"},C:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB EC FC\"},D:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\",\"194\":\"PB\",\"257\":\"QB\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"513\":\"B C qB rB\"},F:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\",\"194\":\"CB DB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Brotli Accept-Encoding/Content-Encoding\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"260\":\"F\",\"516\":\"A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"33\":\"I u J D E F A B C K L G\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O\",\"33\":\"0 1 v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"33\":\"J\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC\",\"132\":\"tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"calc() as CSS unit value\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v EC FC\"},D:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Canvas blend modes\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"CC\",\"8\":\"J D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"8\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"8\":\"F PC QC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"8\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Text API for Canvas\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"CC\",\"8\":\"J D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"132\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"132\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"260\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"132\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Canvas (basic support)\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"132\":\"F A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"ch (character) unit\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 I u J D E F A B C K L G M N O v w x y z\",\"129\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC\",\"16\":\"uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"ChaCha20-Poly1305 cipher suites for TLS\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"2\":\"F PC QC\",\"16\":\"RC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Channel messaging\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"C\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x y EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"16\":\"J\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"ChildNode.remove()\"};\n","module.exports={A:{A:{\"8\":\"J D E F CC\",\"1924\":\"A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"DC tB EC\",\"516\":\"0 1\",\"772\":\"I u J D E F A B C K L G M N O v w x y z FC\"},D:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"8\":\"I u J D\",\"516\":\"0 1 2 3\",\"772\":\"z\",\"900\":\"E F A B C K L G M N O v w x y\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I u HC zB\",\"900\":\"J IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"8\":\"F B PC QC RC SC qB\",\"900\":\"C AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"zB UC BC\",\"900\":\"VC WC\"},H:{\"900\":\"oC\"},I:{\"1\":\"f tC uC\",\"8\":\"pC qC rC\",\"900\":\"tB I sC BC\"},J:{\"1\":\"A\",\"900\":\"D\"},K:{\"1\":\"g\",\"8\":\"A B\",\"900\":\"C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"900\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"classList (DOMTokenList)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Client Hints: DPR, Width, Viewport-Width\"};\n","module.exports={A:{A:{\"2436\":\"J D E F A B CC\"},B:{\"260\":\"N O\",\"2436\":\"C K L G M\",\"8196\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\",\"772\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB\",\"4100\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"I u J D E F A B C\",\"2564\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\",\"8196\":\"YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"10244\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\"},E:{\"1\":\"C K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC zB\",\"2308\":\"A B 0B qB\",\"2820\":\"I u J D E F IC JC KC LC\"},F:{\"2\":\"F B PC QC RC SC qB AC TC\",\"16\":\"C\",\"516\":\"rB\",\"2564\":\"0 1 2 3 4 5 G M N O v w x y z\",\"8196\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"10244\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB\"},G:{\"1\":\"fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\",\"2820\":\"E VC WC XC YC ZC aC bC cC dC eC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"260\":\"f\",\"2308\":\"tC uC\"},J:{\"2\":\"D\",\"2308\":\"A\"},K:{\"2\":\"A B C qB AC\",\"16\":\"rB\",\"8196\":\"g\"},L:{\"8196\":\"H\"},M:{\"1028\":\"H\"},N:{\"2\":\"A B\"},O:{\"8196\":\"vC\"},P:{\"2052\":\"wC xC\",\"2308\":\"I\",\"8196\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"8196\":\"1B\"},R:{\"8196\":\"9C\"},S:{\"4100\":\"AD\"}},B:5,C:\"Synchronous Clipboard API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i\"},C:{\"1\":\"s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i EC FC\",\"258\":\"j k l m n o p\",\"578\":\"q r\"},D:{\"1\":\"j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y\",\"194\":\"Z a b c d e h i\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"16\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"COLR/CPAL(v1) Font Formats\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"257\":\"F A B\"},B:{\"1\":\"C K L G M N O\",\"513\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB\",\"513\":\"jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"129\":\"B C K qB rB 1B\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB PC QC RC SC qB AC TC rB\",\"513\":\"YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"16\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"COLR/CPAL(v0) Font Formats\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC tB EC FC\"},D:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\",\"132\":\"0 1 2 3 4 5 G M N O v w x y z\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u J HC zB\",\"132\":\"D E F JC KC LC\",\"260\":\"IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"16\":\"F B PC QC RC SC qB AC\",\"132\":\"G M\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\",\"132\":\"E UC BC VC WC XC YC ZC aC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"16\":\"pC qC\",\"132\":\"tB I rC sC BC\"},J:{\"132\":\"D A\"},K:{\"1\":\"C g rB\",\"16\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Node.compareDocumentPosition()\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D CC\",\"132\":\"E F\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F PC QC RC SC\"},G:{\"1\":\"zB UC BC VC\",\"513\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"4097\":\"oC\"},I:{\"1025\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"258\":\"D A\"},K:{\"2\":\"A\",\"258\":\"B C qB AC rB\",\"1025\":\"g\"},L:{\"1025\":\"H\"},M:{\"2049\":\"H\"},N:{\"258\":\"A B\"},O:{\"258\":\"vC\"},P:{\"1025\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1025\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Basic console logging functions\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F PC QC RC SC\",\"16\":\"B\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"console.time and console.timeEnd\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"2052\":\"B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"132\":\"DC tB I u J D E F A B C EC FC\",\"260\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"260\":\"I u J D E F A B C K L G M N O v w\",\"772\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB\",\"1028\":\"HB IB JB KB LB MB NB OB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"260\":\"I u A HC zB 0B\",\"772\":\"J D E F IC JC KC LC\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F PC\",\"132\":\"B QC RC SC qB AC\",\"644\":\"C TC rB\",\"772\":\"0 1 2 3 G M N O v w x y z\",\"1028\":\"4 5 6 7 8 9 AB BB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"260\":\"zB UC BC bC cC\",\"772\":\"E VC WC XC YC ZC aC\"},H:{\"644\":\"oC\"},I:{\"1\":\"f\",\"16\":\"pC qC\",\"260\":\"rC\",\"772\":\"tB I sC BC tC uC\"},J:{\"772\":\"D A\"},K:{\"1\":\"g\",\"132\":\"A B qB AC\",\"644\":\"C rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"1028\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"const\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"900\":\"A B\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"388\":\"L G M\",\"900\":\"C K\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"260\":\"PB QB\",\"388\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\",\"900\":\"0 1 2 3 4 I u J D E F A B C K L G M N O v w x y z\"},D:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\",\"388\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB\",\"900\":\"0 G M N O v w x y z\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\",\"388\":\"E F KC LC\",\"900\":\"J D IC JC\"},F:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F B PC QC RC SC qB AC\",\"388\":\"0 1 2 G M N O v w x y z\",\"900\":\"C TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\",\"388\":\"E XC YC ZC aC\",\"900\":\"VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"16\":\"tB pC qC rC\",\"388\":\"tC uC\",\"900\":\"I sC BC\"},J:{\"16\":\"D\",\"388\":\"A\"},K:{\"1\":\"g\",\"16\":\"A B qB AC\",\"900\":\"C rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"900\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"388\":\"AD\"}},B:1,C:\"Constraint Validation API\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC\",\"4\":\"tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"contenteditable attribute (basic support)\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"132\":\"A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"129\":\"I u J D E F A B C K L G M N O v w x y\"},D:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K\",\"257\":\"0 L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\",\"257\":\"J JC\",\"260\":\"IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\",\"257\":\"WC\",\"260\":\"VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D\",\"257\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Content Security Policy 1.0\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\",\"4100\":\"G M N O\"},C:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"132\":\"7 8 9 AB\",\"260\":\"BB\",\"516\":\"CB DB EB FB GB HB IB JB KB\"},D:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\",\"1028\":\"CB DB EB\",\"2052\":\"FB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y PC QC RC SC qB AC TC rB\",\"1028\":\"0 1 z\",\"2052\":\"2\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Content Security Policy Level 2\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"194\":\"P Q R S T U V\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB\",\"194\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB PC QC RC SC qB AC TC rB\",\"194\":\"RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Cookie Store API\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D CC\",\"132\":\"A\",\"260\":\"E F\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\",\"1025\":\"vB aB bB cB dB eB fB gB hB iB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"I u J D E F A B C\"},E:{\"2\":\"HC zB\",\"513\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"644\":\"I u IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\"},G:{\"513\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"644\":\"zB UC BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"132\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"132\":\"D\"},K:{\"1\":\"C g rB\",\"2\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"132\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Cross-Origin Resource Sharing\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB EC FC\",\"1028\":\"c d e h i\",\"3076\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b\",\"8196\":\"j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"132\":\"QB RB\",\"260\":\"SB TB\",\"516\":\"UB VB WB XB YB\"},E:{\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B MC\",\"4100\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB PC QC RC SC qB AC TC rB\",\"132\":\"DB EB\",\"260\":\"FB GB\",\"516\":\"HB IB JB KB LB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC\",\"4100\":\"nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"8196\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"16\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"3076\":\"AD\"}},B:1,C:\"createImageBitmap\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\",\"66\":\"OB PB QB\",\"129\":\"RB SB TB UB VB WB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Credential Management API\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E F A\",\"164\":\"B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"513\":\"C K L G M N O\"},C:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"0 1 2 3 4 5 6 7 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"66\":\"8 9\"},D:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"8\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I u J D HC zB IC JC\",\"289\":\"E F A KC LC 0B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"8\":\"F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"zB UC BC VC WC XC\",\"289\":\"E YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"8\":\"tB I pC qC rC sC BC tC uC\"},J:{\"8\":\"D A\"},K:{\"1\":\"g\",\"8\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A\",\"164\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Web Cryptography\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"tB I pC qC rC sC BC tC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS all property\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I EC FC\",\"33\":\"u J D E F A B C K L G\"},D:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\",\"33\":\"J D E IC JC KC\",\"292\":\"I u\"},F:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\",\"33\":\"0 1 2 3 4 5 C G M N O v w x y z\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"E WC XC YC\",\"164\":\"zB UC BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"33\":\"I sC BC tC uC\",\"164\":\"tB pC qC rC\"},J:{\"33\":\"D A\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"CSS Animation\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB EC FC\"},D:{\"1\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u J HC zB IC\",\"33\":\"D E JC KC\"},F:{\"1\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC\",\"33\":\"E WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"16\":\"tB I pC qC rC sC BC\",\"33\":\"tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"16\":\"I\",\"33\":\"wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"33\":\"AD\"}},B:5,C:\"CSS :any-link selector\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"33\":\"S\",\"164\":\"P Q R\",\"388\":\"C K L G M N O\"},C:{\"1\":\"Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"164\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\",\"676\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB EC FC\"},D:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"S\",\"164\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"164\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"iB jB kB\",\"164\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"164\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"164\":\"tB I pC qC rC sC BC tC uC\"},J:{\"164\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A\",\"388\":\"B\"},O:{\"164\":\"vC\"},P:{\"164\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"164\":\"1B\"},R:{\"1\":\"9C\"},S:{\"164\":\"AD\"}},B:5,C:\"CSS Appearance\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z\",\"132\":\"a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"132\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z\",\"132\":\"a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB PC QC RC SC qB AC TC rB\",\"132\":\"oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"132\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"132\":\"g\"},L:{\"132\":\"H\"},M:{\"132\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C\",\"132\":\"sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"132\":\"9C\"},S:{\"132\":\"AD\"}},B:4,C:\"CSS Counter Styles\"};\n","module.exports={A:{D:{\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},L:{\"33\":\"H\"},B:{\"2\":\"C K L G M N O\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U EC FC\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"OC\",\"33\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B MC\"},G:{\"1\":\"nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC\"},P:{\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"33\":\"f tC uC\"}},B:6,C:\":autofill CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\",\"257\":\"N O\"},C:{\"1\":\"o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB EC FC\",\"578\":\"iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n\"},D:{\"1\":\"nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB\",\"194\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB\"},E:{\"2\":\"I u J D E HC zB IC JC KC\",\"33\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"194\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\"},G:{\"2\":\"E zB UC BC VC WC XC YC\",\"33\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"194\":\"wC xC yC zC 0C 0B 1C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS Backdrop Filter\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C EC FC\"},D:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS background-position edge offsets\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB\",\"260\":\"MB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC\",\"132\":\"E F A KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x PC QC RC SC qB AC TC rB\",\"260\":\"9\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"132\":\"E YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS background-blend-mode\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"164\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"2\":\"I u J D E F A B C K L G M N O v w x\",\"164\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J HC zB IC\",\"164\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F PC QC RC SC\",\"129\":\"B C qB AC TC rB\",\"164\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"zB UC BC VC WC\",\"164\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"132\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"164\":\"f tC uC\"},J:{\"2\":\"D\",\"164\":\"A\"},K:{\"2\":\"A\",\"129\":\"B C qB AC rB\",\"164\":\"g\"},L:{\"164\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"164\":\"vC\"},P:{\"164\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"164\":\"1B\"},R:{\"164\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS box-decoration-break\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"33\":\"EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"I u J D E F\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"u\",\"164\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"UC BC\",\"164\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"164\":\"tB pC qC rC\"},J:{\"1\":\"A\",\"33\":\"D\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 Box-shadow\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},E:{\"2\":\"HC zB\",\"33\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB\"},G:{\"33\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"f\",\"33\":\"tB I pC qC rC sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"33\":\"I\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS Canvas Drawings\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB EC FC\"},D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"CSS caret-color\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e\",\"322\":\"h i j\"},C:{\"1\":\"i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c EC FC\",\"194\":\"d e h\"},D:{\"1\":\"k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e\",\"322\":\"h i j\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U PC QC RC SC qB AC TC rB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS Cascade Layers\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Case-insensitive CSS attribute selectors\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N\",\"260\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"3138\":\"O\"},C:{\"1\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB EC FC\",\"644\":\"NB OB PB QB RB SB TB\"},D:{\"2\":\"I u J D E F A B C K L G M N O v w x y z\",\"260\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"292\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\"},E:{\"2\":\"I u J HC zB IC JC\",\"260\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"292\":\"D E F A B C K KC LC 0B qB rB\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"260\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"292\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB\"},G:{\"2\":\"zB UC BC VC WC\",\"260\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"292\":\"E XC YC ZC aC bC cC dC eC fC gC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"260\":\"f\",\"292\":\"tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"260\":\"g\"},L:{\"260\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"260\":\"vC\"},P:{\"292\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"260\":\"1B\"},R:{\"260\":\"9C\"},S:{\"644\":\"AD\"}},B:4,C:\"CSS clip-path property (for HTML)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB EC FC\"},D:{\"16\":\"I u J D E F A B C K L G M N O\",\"33\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"33\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"16\":\"tB I pC qC rC sC BC tC uC\",\"33\":\"f\"},J:{\"16\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},L:{\"16\":\"H\"},M:{\"1\":\"H\"},N:{\"16\":\"A B\"},O:{\"16\":\"vC\"},P:{\"16\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"33\":\"1B\"},R:{\"16\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS print-color-adjust\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s\",\"322\":\"t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s\",\"322\":\"t f H\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\",\"132\":\"B C K L 0B qB rB 1B MC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d PC QC RC SC qB AC TC rB\",\"322\":\"e\"},G:{\"1\":\"nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\",\"132\":\"cC dC eC fC gC hC iC jC kC lC mC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS color() function\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB EC FC\",\"578\":\"mB nB oB pB P Q R wB\"},D:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB\",\"194\":\"uB ZB vB aB bB cB dB eB fB gB\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB PC QC RC SC qB AC TC rB\",\"194\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Conical Gradients\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r\",\"194\":\"s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r\",\"194\":\"s t f H\",\"260\":\"xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b PC QC RC SC qB AC TC rB\",\"194\":\"c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"194\":\"g\"},L:{\"194\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Container Style Queries\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p\",\"516\":\"q\"},C:{\"1\":\"H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f EC FC\"},D:{\"1\":\"r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a\",\"194\":\"c d e h i j k l m n o p\",\"450\":\"b\",\"516\":\"q\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"1\":\"d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB PC QC RC SC qB AC TC rB\",\"194\":\"P Q R wB S T U V W X Y Z\",\"516\":\"a b c\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Container Queries (Size)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p\"},C:{\"1\":\"H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f EC FC\"},D:{\"1\":\"q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b\",\"194\":\"m n o p\",\"450\":\"c d e h i j k l\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"1\":\"a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB PC QC RC SC qB AC TC rB\",\"194\":\"P Q R wB S T U V W X Y Z\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Container Query Units\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB EC FC\",\"194\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB\"},D:{\"1\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"66\":\"RB\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB PC QC RC SC qB AC TC rB\",\"66\":\"EB FB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"194\":\"AD\"}},B:2,C:\"CSS Containment\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S T\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS content-visibility\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"2\":\"J D CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS Counters\"};\n","module.exports={A:{A:{\"2\":\"J CC\",\"2340\":\"D E F A B\"},B:{\"2\":\"C K L G M N O\",\"1025\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC\",\"513\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b\",\"545\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\",\"1025\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"164\":\"J\",\"4644\":\"D E F JC KC LC\"},F:{\"2\":\"0 1 2 3 F B G M N O v w x y z PC QC RC SC qB AC\",\"545\":\"C TC rB\",\"1025\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\",\"4260\":\"VC WC\",\"4644\":\"E XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"1025\":\"f\"},J:{\"2\":\"D\",\"4260\":\"A\"},K:{\"2\":\"A B qB AC\",\"545\":\"C rB\",\"1025\":\"g\"},L:{\"1025\":\"H\"},M:{\"1\":\"H\"},N:{\"2340\":\"A B\"},O:{\"1025\":\"vC\"},P:{\"1025\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1025\":\"1B\"},R:{\"1025\":\"9C\"},S:{\"4097\":\"AD\"}},B:4,C:\"Crisp edges/pixelated images\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"I u J D E F A B C K L G M\",\"33\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\",\"33\":\"J D E F IC JC KC LC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\",\"33\":\"E VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"33\":\"f tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},L:{\"33\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"33\":\"vC\"},P:{\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"33\":\"1B\"},R:{\"33\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS Cross-Fade Function\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC tB EC FC\"},D:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\",\"132\":\"J D E F A IC JC KC LC\"},F:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F B PC QC RC SC qB AC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB\",\"260\":\"C TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC WC\",\"132\":\"E XC YC ZC aC bC\"},H:{\"260\":\"oC\"},I:{\"1\":\"f\",\"16\":\"tB pC qC rC\",\"132\":\"I sC BC tC uC\"},J:{\"16\":\"D\",\"132\":\"A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC\",\"260\":\"rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"132\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\":default CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"P\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"B\",\"2\":\"I u J D E F A C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Explicit descendant combinator >>\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"164\":\"A B\"},B:{\"66\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"164\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 I u J D E F A B C K L G M N O v w x y z\",\"66\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB PC QC RC SC qB AC TC rB\",\"66\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"292\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A g\",\"292\":\"B C qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"164\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"66\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Device Adaptation\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p\",\"194\":\"q r s t f H\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z\",\"194\":\"a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z PC QC RC SC qB AC TC rB\",\"194\":\"a b c d e\"},G:{\"1\":\"9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"33\":\"AD\"}},B:5,C:\":dir() CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"132\":\"P Q R S T U V W X\",\"260\":\"Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB EC FC\",\"132\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB\",\"260\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\",\"132\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X\",\"194\":\"YB uB ZB vB aB bB cB\",\"260\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\",\"132\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B\",\"516\":\"6B 7B 8B 9B OC\",\"772\":\"sB\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB PC QC RC SC qB AC TC rB\",\"132\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB\",\"260\":\"nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\",\"132\":\"eC fC gC hC iC jC\",\"260\":\"kC lC mC nC 2B 3B 4B 5B\",\"772\":\"sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"260\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"260\":\"g\"},L:{\"260\":\"H\"},M:{\"260\":\"H\"},N:{\"2\":\"A B\"},O:{\"132\":\"vC\"},P:{\"2\":\"I wC xC yC zC\",\"132\":\"0C 0B 1C 2C 3C 4C\",\"260\":\"5C sB 6C 7C 8C\"},Q:{\"132\":\"1B\"},R:{\"260\":\"9C\"},S:{\"132\":\"AD\"}},B:4,C:\"CSS display: contents\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"164\":\"DC tB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"33\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"33\":\"AD\"}},B:5,C:\"CSS element() function\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB EC FC\"},D:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"132\":\"B\"},F:{\"1\":\"WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"132\":\"dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS Environment Variables env()\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"33\":\"A B\"},B:{\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"33\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"33\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Exclusions Level 1\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\"},D:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B C PC QC RC SC qB AC TC\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS Feature Queries\"};\n","module.exports={A:{D:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X\"},L:{\"1\":\"H\"},B:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H\",\"33\":\"C K L G M N O P Q R S T U V W X\"},C:{\"1\":\"wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R EC FC\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F CC\",\"33\":\"A B\"},F:{\"1\":\"mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},E:{\"1\":\"G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"OC\",\"33\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B\"},G:{\"1\":\"mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC\",\"33\":\"tC uC\"}},B:6,C:\"::file-selector-button CSS pseudo-element\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\",\"33\":\"F\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\",\"33\":\"ZC aC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS filter() function\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"1028\":\"K L G M N O\",\"1346\":\"C\"},C:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC\",\"196\":\"AB\",\"516\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z FC\"},D:{\"1\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N\",\"33\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"33\":\"J D E F JC KC\"},F:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"E WC XC YC ZC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC\",\"33\":\"tC uC\"},J:{\"2\":\"D\",\"33\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"33\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"CSS Filter Effects\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"16\":\"CC\",\"516\":\"E\",\"1540\":\"J D\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"132\":\"tB\",\"260\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"u J D E\",\"132\":\"I\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"u HC\",\"132\":\"I zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"16\":\"F PC\",\"260\":\"B QC RC SC qB AC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"16\":\"pC qC\",\"132\":\"rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g rB\",\"260\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"::first-letter CSS pseudo-element selector\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"132\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS first-line pseudo-element\"};\n","module.exports={A:{A:{\"1\":\"D E F A B\",\"2\":\"CC\",\"8\":\"J\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"1025\":\"LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\",\"132\":\"VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB f tC uC\",\"260\":\"pC qC rC\",\"513\":\"I sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS position:fixed\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"328\":\"P Q R S T U\"},C:{\"1\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"161\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T\"},D:{\"1\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB\",\"328\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B MC\",\"578\":\"G NC 2B\"},F:{\"1\":\"kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB PC QC RC SC qB AC TC rB\",\"328\":\"eB fB gB hB iB jB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC\",\"578\":\"nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"161\":\"AD\"}},B:5,C:\":focus-visible CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB EC FC\"},D:{\"1\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB\",\"194\":\"uB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB PC QC RC SC qB AC TC rB\",\"194\":\"MB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\":focus-within CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p\"},C:{\"1\":\"s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r EC FC\"},D:{\"1\":\"m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V PC QC RC SC qB AC TC rB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS font-palette\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB EC FC\",\"194\":\"MB NB OB PB QB RB SB TB UB VB WB XB\"},D:{\"1\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\",\"66\":\"PB QB RB SB TB UB VB WB XB YB uB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\",\"66\":\"CB DB EB FB GB HB IB JB KB LB MB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"66\":\"wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"194\":\"AD\"}},B:5,C:\"CSS font-display\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E EC FC\"},D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\"},F:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS font-stretch\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D CC\",\"132\":\"E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS Generated content for pseudo-elements\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC\",\"260\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB\",\"292\":\"I u J D E F A B C K L G FC\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 A B C K L G M N O v w x y z\",\"548\":\"I u J D E F\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\",\"260\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B\",\"292\":\"J IC\",\"804\":\"I u\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC\",\"33\":\"C TC\",\"164\":\"qB AC\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"260\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\",\"292\":\"VC WC\",\"804\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"33\":\"I sC BC\",\"548\":\"tB pC qC rC\"},J:{\"1\":\"A\",\"548\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A B\",\"33\":\"C\",\"164\":\"qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS Gradients\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS Grid animation\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"8\":\"F\",\"292\":\"A B\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"292\":\"C K L G\"},C:{\"1\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O EC FC\",\"8\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB\",\"584\":\"GB HB IB JB KB LB MB NB OB PB QB RB\",\"1025\":\"SB TB\"},D:{\"1\":\"YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 I u J D E F A B C K L G M N O v w x y z\",\"8\":\"1 2 3 4\",\"200\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\",\"1025\":\"XB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"8\":\"J D E F A JC KC LC\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"200\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"8\":\"E WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC\",\"8\":\"BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"292\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"wC\",\"8\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS Grid Layout (level 1)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS hanging-punctuation\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n EC FC\",\"322\":\"o p q r s t f H xB yB\"},D:{\"1\":\"q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l\",\"194\":\"m n o p\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\":has() CSS relational pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"33\":\"A B\"},B:{\"1\":\"q r s t f H\",\"33\":\"C K L G M N O\",\"132\":\"P Q R S T U V W\",\"260\":\"X Y Z a b c d e h i j k l m n o p\"},C:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\"},D:{\"1\":\"X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\",\"132\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W\"},E:{\"2\":\"I u HC zB\",\"33\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB PC QC RC SC qB AC TC rB\",\"132\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z\"},G:{\"2\":\"zB UC\",\"33\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"4\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"132\":\"wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS Hyphenation\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q\",\"257\":\"R S T U V W X\"},C:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q\",\"257\":\"R S T U V W X\"},E:{\"1\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB\"},F:{\"1\":\"oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB PC QC RC SC qB AC TC rB\",\"257\":\"gB hB iB jB kB g lB mB nB\"},G:{\"1\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"132\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C\",\"257\":\"3C 4C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 image-orientation\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"164\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U EC FC\",\"66\":\"V W\",\"257\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"772\":\"X\"},D:{\"2\":\"I u J D E F A B C K L G M N O v w\",\"132\":\"xB yB GC\",\"164\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},E:{\"2\":\"I u HC zB IC\",\"132\":\"A B C K 0B qB rB 1B\",\"164\":\"J D E F JC KC LC\",\"516\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"164\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"zB UC BC VC\",\"132\":\"bC cC dC eC fC gC hC iC jC kC\",\"164\":\"E WC XC YC ZC aC\",\"516\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"164\":\"f tC uC\"},J:{\"2\":\"D\",\"164\":\"A\"},K:{\"2\":\"A B C qB AC rB\",\"164\":\"g\"},L:{\"164\":\"H\"},M:{\"257\":\"H\"},N:{\"2\":\"A B\"},O:{\"164\":\"vC\"},P:{\"164\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"164\":\"1B\"},R:{\"164\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS image-set\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\",\"260\":\"K L G M N O\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"516\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\"},D:{\"1\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\",\"16\":\"u J D E F A B C K L\",\"260\":\"SB\",\"772\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"16\":\"u\",\"772\":\"J D E F A IC JC KC LC\"},F:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F PC\",\"260\":\"B C FB QC RC SC qB AC TC rB\",\"772\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\",\"772\":\"E VC WC XC YC ZC aC bC\"},H:{\"132\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB pC qC rC\",\"260\":\"I sC BC tC uC\"},J:{\"2\":\"D\",\"260\":\"A\"},K:{\"1\":\"g\",\"260\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"260\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"516\":\"AD\"}},B:5,C:\":in-range and :out-of-range CSS pseudo-classes\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"132\":\"A B\",\"388\":\"F\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"132\":\"C K L G M N O\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC tB EC FC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"388\":\"I u\"},D:{\"1\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u J HC zB\",\"132\":\"D E F A JC KC LC\",\"388\":\"IC\"},F:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F B PC QC RC SC qB AC\",\"132\":\"0 1 G M N O v w x y z\",\"516\":\"C TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC WC\",\"132\":\"E XC YC ZC aC bC\"},H:{\"516\":\"oC\"},I:{\"1\":\"f\",\"16\":\"tB pC qC rC uC\",\"132\":\"tC\",\"388\":\"I sC BC\"},J:{\"16\":\"D\",\"132\":\"A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC\",\"516\":\"rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"132\":\"AD\"}},B:5,C:\":indeterminate CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f\",\"260\":\"H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f\",\"260\":\"H xB yB GC\"},E:{\"2\":\"I u J D E HC zB IC JC KC\",\"4\":\"F\",\"164\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC\",\"164\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"260\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Initial Letter\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"33\":\"I u J D E F A B C K L G M N O EC FC\",\"164\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS initial value\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f\",\"322\":\"H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H EC FC\",\"194\":\"xB yB\"},D:{\"1\":\"xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f\",\"322\":\"H\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B MC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"LCH and Lab color values\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"16\":\"CC\",\"132\":\"J D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"0 1 2 3 4 5 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC\",\"132\":\"I u J zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F PC\",\"132\":\"B C G M QC RC SC qB AC TC rB\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"16\":\"pC qC\",\"132\":\"tB I rC sC BC\"},J:{\"132\":\"D A\"},K:{\"1\":\"g\",\"132\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"letter-spacing CSS property\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB EC FC\",\"33\":\"gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"16\":\"I u J D E F A B C K\",\"33\":\"0 1 2 3 4 5 6 7 8 9 L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I HC zB\",\"33\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"zB UC BC\",\"33\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"16\":\"pC qC\",\"33\":\"tB I f rC sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},L:{\"33\":\"H\"},M:{\"33\":\"H\"},N:{\"2\":\"A B\"},O:{\"33\":\"vC\"},P:{\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"33\":\"1B\"},R:{\"33\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS line-clamp\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"1028\":\"W X\",\"1540\":\"P Q R S T U V\"},C:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC\",\"164\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB EC FC\",\"1540\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB\"},D:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"292\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB\",\"1028\":\"W X\",\"1540\":\"hB iB jB kB g lB mB nB oB pB P Q R S T U V\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"292\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\",\"1540\":\"K L rB 1B\",\"5124\":\"MC\"},F:{\"1\":\"nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"292\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB\",\"1028\":\"lB mB\",\"1540\":\"WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g\"},G:{\"1\":\"nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"292\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\",\"1540\":\"gC hC iC jC kC lC\",\"5124\":\"mC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"292\":\"tB I pC qC rC sC BC tC uC\"},J:{\"292\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"292\":\"vC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"292\":\"I wC xC yC zC 0C\",\"1540\":\"0B 1C 2C 3C 4C\"},Q:{\"1540\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1540\":\"AD\"}},B:5,C:\"CSS Logical Properties\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S T U\"},C:{\"1\":\"gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB EC FC\"},D:{\"1\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U\"},E:{\"1\":\"OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\",\"129\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},F:{\"1\":\"kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS ::marker pseudo-element\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M\",\"164\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"3138\":\"N\",\"12292\":\"O\"},C:{\"1\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"260\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB EC FC\"},D:{\"164\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\",\"164\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"164\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"164\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"164\":\"f tC uC\",\"676\":\"tB I pC qC rC sC BC\"},J:{\"164\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"164\":\"g\"},L:{\"164\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"164\":\"vC\"},P:{\"164\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"164\":\"1B\"},R:{\"164\":\"9C\"},S:{\"260\":\"AD\"}},B:4,C:\"CSS Masks\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"1220\":\"P Q R S T U V W\"},C:{\"1\":\"pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC tB EC FC\",\"548\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB\"},D:{\"1\":\"X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\",\"164\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB\",\"196\":\"dB eB fB\",\"1220\":\"gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W\"},E:{\"1\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"16\":\"u\",\"164\":\"J D E IC JC KC\",\"260\":\"F A B C K LC 0B qB rB 1B\"},F:{\"1\":\"mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"164\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"196\":\"SB TB UB\",\"1220\":\"VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB\"},G:{\"1\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC WC\",\"164\":\"E XC YC\",\"260\":\"ZC aC bC cC dC eC fC gC hC iC jC kC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"16\":\"tB pC qC rC\",\"164\":\"I sC BC tC uC\"},J:{\"16\":\"D\",\"164\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"164\":\"vC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"164\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C\"},Q:{\"1220\":\"1B\"},R:{\"1\":\"9C\"},S:{\"548\":\"AD\"}},B:5,C:\":is() CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB EC FC\"},D:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB\"},E:{\"1\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\",\"132\":\"C K qB rB\"},F:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\",\"132\":\"eC fC gC hC iC jC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS math functions min(), max() and clamp()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB EC FC\"},D:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Media Queries: interaction media features\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"p q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o\"},C:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB EC FC\"},D:{\"1\":\"p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o\"},E:{\"1\":\"9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\"},F:{\"1\":\"a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Media Queries: Range Syntax\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"132\":\"F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"1028\":\"C K L G M N O\"},C:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"260\":\"I u J D E F A B C K L G EC FC\",\"1028\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB\"},D:{\"1\":\"gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"548\":\"0 1 2 3 4 I u J D E F A B C K L G M N O v w x y z\",\"1028\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\",\"548\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"1\":\"VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F\",\"548\":\"B C PC QC RC SC qB AC TC\",\"1028\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"16\":\"zB\",\"548\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"132\":\"oC\"},I:{\"1\":\"f\",\"16\":\"pC qC\",\"548\":\"tB I rC sC BC\",\"1028\":\"tC uC\"},J:{\"548\":\"D A\"},K:{\"1\":\"g rB\",\"548\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"1028\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Media Queries: resolution feature\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Media Queries: scripting media feature\"};\n","module.exports={A:{A:{\"8\":\"J D E CC\",\"129\":\"F A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"129\":\"0 1 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"129\":\"I u J IC\",\"388\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"129\":\"zB UC BC VC WC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"129\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"129\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS3 Media Queries\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 I u J D E F A B C K L G M N O v w x y z\",\"194\":\"5 6 7 8 9 AB BB CB DB EB FB GB\"},E:{\"2\":\"I u J D HC zB IC JC\",\"260\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"2\":\"zB UC BC VC WC XC\",\"260\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Blending of HTML/SVG elements\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB EC FC\"},D:{\"1\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\",\"194\":\"JB KB LB\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"194\":\"6 7 8\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Motion Path\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS namespaces\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t\",\"194\":\"f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t\",\"194\":\"f H xB\"},E:{\"1\":\"OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d PC QC RC SC qB AC TC rB\",\"194\":\"e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Nesting\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O Q R S T U V W\",\"16\":\"P\"},C:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S EC FC\"},D:{\"1\":\"X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"selector list argument of :not()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"selector list argument of :nth-child and :nth-last-child CSS pseudo-classes\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"4\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS3 Opacity\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F PC\",\"132\":\"B C QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"132\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"132\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\":optional CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB EC FC\"},D:{\"1\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS overflow-anchor (Scroll Anchoring)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"I u J D E F A B IC JC KC LC 0B qB\",\"16\":\"HC zB\",\"130\":\"C K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC\",\"16\":\"zB\",\"130\":\"fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS overflow: overlay\"};\n","module.exports={A:{A:{\"388\":\"J D E F A B CC\"},B:{\"1\":\"Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"P Q R S T U V W X Y\",\"388\":\"C K L G M N O\"},C:{\"1\":\"R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"260\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q\",\"388\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB EC FC\"},D:{\"1\":\"Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"260\":\"gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y\",\"388\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"260\":\"L G 1B MC NC 2B 3B 4B 5B\",\"388\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB\"},F:{\"1\":\"nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"260\":\"VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB\",\"388\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"260\":\"kC lC mC nC 2B 3B 4B 5B\",\"388\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC\"},H:{\"388\":\"oC\"},I:{\"1\":\"f\",\"388\":\"tB I pC qC rC sC BC tC uC\"},J:{\"388\":\"D A\"},K:{\"1\":\"g\",\"388\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"388\":\"A B\"},O:{\"388\":\"vC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"388\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C\"},Q:{\"388\":\"1B\"},R:{\"1\":\"9C\"},S:{\"388\":\"AD\"}},B:5,C:\"CSS overflow property\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"132\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"132\":\"C K L G M N\",\"516\":\"O\"},C:{\"1\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB EC FC\"},D:{\"1\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB\",\"260\":\"bB cB\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B\",\"1090\":\"G MC NC 2B 3B 4B 5B\"},F:{\"1\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB PC QC RC SC qB AC TC rB\",\"260\":\"QB RB\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC\",\"1090\":\"mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS overscroll-behavior\"};\n","module.exports={A:{A:{\"388\":\"A B\",\"900\":\"J D E F CC\"},B:{\"388\":\"C K L G M N O\",\"900\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"772\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"900\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB EC FC\"},D:{\"900\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"772\":\"A\",\"900\":\"I u J D E F B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"16\":\"F PC\",\"129\":\"B C QC RC SC qB AC TC rB\",\"900\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"900\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"129\":\"oC\"},I:{\"900\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"900\":\"D A\"},K:{\"129\":\"A B C qB AC rB\",\"900\":\"g\"},L:{\"900\":\"H\"},M:{\"772\":\"H\"},N:{\"388\":\"A B\"},O:{\"900\":\"vC\"},P:{\"900\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"900\":\"1B\"},R:{\"900\":\"9C\"},S:{\"900\":\"AD\"}},B:2,C:\"CSS page-break properties\"};\n","module.exports={A:{A:{\"2\":\"J D CC\",\"132\":\"E F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"132\":\"C K L G M N O\"},C:{\"2\":\"DC tB I u J D E F A B C K L G M N O EC FC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"132\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"16\":\"oC\"},I:{\"16\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"132\":\"H\"},N:{\"258\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"132\":\"AD\"}},B:5,C:\"CSS Paged Media (@page)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB\"},E:{\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\",\"194\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS Painting API\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"292\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"164\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\"},D:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"164\":\"AD\"}},B:5,C:\":placeholder-shown CSS pseudo-class\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"36\":\"C K L G M N O\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\"},D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"36\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"36\":\"u J D E F A IC JC KC LC\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"36\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC\",\"36\":\"E BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"36\":\"tB I pC qC rC sC BC tC uC\"},J:{\"36\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"36\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"36\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"33\":\"AD\"}},B:5,C:\"::placeholder CSS pseudo-element\"};\n","module.exports={A:{D:{\"2\":\"I u J D E F A B C K L G M\",\"33\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},L:{\"33\":\"H\"},B:{\"2\":\"C K L G M N O\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB EC FC\",\"33\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"I u HC zB IC OC\",\"33\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},P:{\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"33\":\"f tC uC\"}},B:6,C:\"print-color-adjust property\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB EC FC\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC zB\",\"132\":\"I u J D E IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F B PC QC RC SC qB\",\"132\":\"C G M N O v w x y AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC\",\"132\":\"E BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"16\":\"pC qC\",\"132\":\"tB I rC sC BC tC uC\"},J:{\"1\":\"A\",\"132\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B qB\",\"132\":\"C AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"33\":\"AD\"}},B:1,C:\"CSS :read-only and :read-write selectors\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"132\":\"B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\",\"16\":\"JC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Rebeccapurple color\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"HC zB\",\"33\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"33\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"33\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},L:{\"33\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"33\":\"vC\"},P:{\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"33\":\"1B\"},R:{\"33\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS Reflections\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"420\":\"A B\"},B:{\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"420\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"I u J D E F A B C K L BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"36\":\"G M N O\",\"66\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB\"},E:{\"2\":\"I u J C K L G HC zB IC qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"D E F A B JC KC LC 0B\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"zB UC BC VC WC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"E XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"420\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Regions\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC\",\"33\":\"I u J D E F A B C K L G FC\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F\",\"33\":\"0 1 A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\",\"33\":\"J IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC\",\"33\":\"C TC\",\"36\":\"qB AC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\",\"33\":\"VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB pC qC rC\",\"33\":\"I sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A B\",\"33\":\"C\",\"36\":\"qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS Repeating Gradients\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"33\":\"I\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC\",\"132\":\"rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"CSS resize property\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S\"},C:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB EC FC\"},D:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC\"},F:{\"1\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS revert value\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB EC FC\"},D:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"194\":\"SB TB UB VB WB XB YB uB ZB vB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB PC QC RC SC qB AC TC rB\",\"194\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"194\":\"wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"#rrggbbaa hex color notation\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"129\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\",\"129\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"450\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB 1B\",\"578\":\"L G MC NC 2B\"},F:{\"2\":\"0 1 2 3 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"129\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"450\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC\",\"578\":\"mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"129\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"129\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Scroll-behavior\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y\",\"194\":\"Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T\",\"194\":\"X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"322\":\"U V W\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB PC QC RC SC qB AC TC rB\",\"194\":\"mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"322\":\"g lB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS @scroll-timeline\"};\n","module.exports={A:{A:{\"132\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"292\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB EC FC\",\"3074\":\"bB\",\"4100\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"292\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"16\":\"I u HC zB\",\"292\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"292\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC WC\",\"292\":\"XC\",\"804\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC\"},H:{\"2\":\"oC\"},I:{\"16\":\"pC qC\",\"292\":\"tB I f rC sC BC tC uC\"},J:{\"292\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"292\":\"g\"},L:{\"292\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"292\":\"vC\"},P:{\"292\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"292\":\"1B\"},R:{\"292\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS scrollbar styling\"};\n","module.exports={A:{A:{\"1\":\"D E F A B\",\"2\":\"CC\",\"8\":\"J\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS 2.1 selectors\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"CC\",\"8\":\"J\",\"132\":\"D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS3 selectors\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"C g AC rB\",\"16\":\"A B qB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"33\":\"AD\"}},B:5,C:\"::selection CSS pseudo-element\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB EC FC\",\"322\":\"RB SB TB UB VB WB XB YB uB ZB vB\"},D:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z\",\"194\":\"AB BB CB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC\",\"33\":\"E F A KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"33\":\"E YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS Shapes Level 1\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"6308\":\"A\",\"6436\":\"B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"6436\":\"C K L G M N O\"},C:{\"1\":\"gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB EC FC\",\"2052\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB\"},D:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB\",\"8258\":\"eB fB gB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\",\"3108\":\"F A LC 0B\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB PC QC RC SC qB AC TC rB\",\"8258\":\"UB VB WB XB YB ZB aB bB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\",\"3108\":\"ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2052\":\"AD\"}},B:4,C:\"CSS Scroll Snap\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G\",\"1028\":\"P Q R S T U V W X Y Z\",\"4100\":\"M N O\"},C:{\"1\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"2 3 4 5 6 7\",\"516\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB\"},D:{\"1\":\"a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w x y DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"322\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB SB TB UB VB\",\"1028\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\",\"33\":\"E F A B C KC LC 0B qB rB\",\"2084\":\"D JC\"},F:{\"1\":\"pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB PC QC RC SC qB AC TC rB\",\"322\":\"FB GB HB\",\"1028\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"E YC ZC aC bC cC dC eC fC gC\",\"2084\":\"WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1028\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"1028\":\"1B\"},R:{\"1\":\"9C\"},S:{\"516\":\"AD\"}},B:5,C:\"CSS position:sticky\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS Subgrid\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G M N O\"},C:{\"1\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v EC FC\",\"66\":\"w x\",\"260\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\"},D:{\"1\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 I u J D E F A B C K L G M N O v w x y z\",\"260\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC\",\"132\":\"rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"132\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC\",\"132\":\"rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS.supports() API\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"2\":\"J D CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"132\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS Table display\"};\n","module.exports={A:{A:{\"132\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"4\":\"C K L G M N O\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},D:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB\",\"322\":\"BB CB DB EB FB GB HB IB JB KB LB MB\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x PC QC RC SC qB AC TC rB\",\"578\":\"0 1 2 3 4 5 6 7 8 9 y z\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"33\":\"AD\"}},B:4,C:\"CSS3 text-align-last\"};\n","module.exports={A:{A:{\"132\":\"J D E F A B CC\"},B:{\"132\":\"C K L G M N O\",\"388\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"132\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"132\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB\",\"388\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"132\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"132\":\"0 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"388\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"132\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"132\":\"oC\"},I:{\"132\":\"tB I pC qC rC sC BC tC uC\",\"388\":\"f\"},J:{\"132\":\"D A\"},K:{\"132\":\"A B C qB AC rB\",\"388\":\"g\"},L:{\"388\":\"H\"},M:{\"132\":\"H\"},N:{\"132\":\"A B\"},O:{\"388\":\"vC\"},P:{\"132\":\"I\",\"388\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"388\":\"1B\"},R:{\"388\":\"9C\"},S:{\"132\":\"AD\"}},B:4,C:\"CSS text-indent\"};\n","module.exports={A:{A:{\"16\":\"J D CC\",\"132\":\"E F A B\"},B:{\"132\":\"C K L G M N O\",\"322\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB EC FC\",\"1025\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"1602\":\"UB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\",\"322\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"322\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"322\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"322\":\"g\"},L:{\"322\":\"H\"},M:{\"1025\":\"H\"},N:{\"132\":\"A B\"},O:{\"322\":\"vC\"},P:{\"2\":\"I\",\"322\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"322\":\"1B\"},R:{\"322\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"CSS text-justify\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EC FC\",\"194\":\"EB FB GB\"},D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},E:{\"1\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\",\"16\":\"A\",\"33\":\"B C K 0B qB rB 1B\"},F:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS text-orientation\"};\n","module.exports={A:{A:{\"2\":\"J D CC\",\"161\":\"E F A B\"},B:{\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"161\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"16\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS Text 4 text-spacing\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"129\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"260\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"4\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"A\",\"4\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"129\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 Text-shadow\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F CC\",\"289\":\"A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"1025\":\"SB TB UB VB WB\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y PC QC RC SC qB AC TC rB\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC\",\"516\":\"aC bC cC dC eC fC gC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"289\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"194\":\"AD\"}},B:2,C:\"CSS touch-action property\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"33\":\"u J D E F A B C K L G\",\"164\":\"I\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"J IC\",\"164\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F PC QC\",\"33\":\"C\",\"164\":\"B RC SC qB AC TC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"WC\",\"164\":\"zB UC BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"33\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"33\":\"D\"},K:{\"1\":\"g rB\",\"33\":\"C\",\"164\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"CSS3 Transitions\"};\n","module.exports={A:{A:{\"132\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"132\":\"C K L G M N O\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"132\":\"DC tB I u J D E F EC FC\",\"292\":\"A B C K L G M\"},D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"I u J D E F A B C K L G M\",\"548\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},E:{\"132\":\"I u J D E HC zB IC JC KC\",\"548\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"132\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"132\":\"E zB UC BC VC WC XC YC\",\"548\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"16\":\"oC\"},I:{\"1\":\"f\",\"16\":\"tB I pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"16\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"33\":\"AD\"}},B:4,C:\"CSS unicode-bidi property\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC\"},F:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS unset value\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\",\"260\":\"G\"},C:{\"1\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\",\"194\":\"OB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC\",\"260\":\"LC\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB PC QC RC SC qB AC TC rB\",\"194\":\"BB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC\",\"260\":\"aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS Variables (Custom Properties)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"CSS @when / @else conditional rules\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D CC\",\"129\":\"E F\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"129\":\"F B PC QC RC SC qB AC TC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"CSS widows & orphans\"};\n","module.exports={A:{D:{\"2\":\"I u J D E F A B C K L G M N O v w x\",\"33\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},L:{\"33\":\"H\"},B:{\"2\":\"C K L G M N O\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},M:{\"33\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},E:{\"2\":\"I u J HC zB IC JC OC\",\"33\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},G:{\"2\":\"zB UC BC VC WC\",\"33\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},P:{\"2\":\"I\",\"33\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"33\":\"f tC uC\"}},B:6,C:\"width: stretch property\"};\n","module.exports={A:{A:{\"132\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB EC FC\",\"322\":\"CB DB EB FB GB\"},D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J\",\"16\":\"D\",\"33\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"16\":\"u\",\"33\":\"J D E F A IC JC KC LC 0B\"},F:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\",\"33\":\"E VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"pC qC rC\",\"33\":\"tB I sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"36\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"33\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS writing-mode property\"};\n","module.exports={A:{A:{\"1\":\"J D CC\",\"129\":\"E F A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"129\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS zoom\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS3 attr() function for all properties\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"8\":\"J D CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"33\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"I u J D E F\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"33\":\"tB pC qC rC\"},J:{\"1\":\"A\",\"33\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"CSS3 Box-sizing\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"4\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"2\":\"F\",\"4\":\"PC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS3 Colors\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\"},C:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"33\":\"0 1 2 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"I u J D E F A HC zB IC JC KC LC 0B\"},F:{\"1\":\"C VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F B PC QC RC SC qB AC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"CSS grab & grabbing cursors\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"33\":\"DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F B PC QC RC SC qB AC\",\"33\":\"G M N O v w x y z\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"CSS3 Cursors: zoom-in & zoom-out\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"132\":\"J D E CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"4\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"I\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"4\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"260\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"16\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"CSS3 Cursors (original values)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"33\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z\",\"164\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB\"},D:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w\",\"132\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB\"},E:{\"1\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\",\"132\":\"D E F A B C K JC KC LC 0B qB rB\"},F:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F PC QC RC\",\"132\":\"0 1 2 3 4 G M N O v w x y z\",\"164\":\"B C SC qB AC TC rB\"},G:{\"1\":\"kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\",\"132\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC\"},H:{\"164\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC\",\"132\":\"tC uC\"},J:{\"132\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A\",\"164\":\"B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"164\":\"AD\"}},B:4,C:\"CSS3 tab-size\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS currentColor value\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"8\":\"A B\"},B:{\"1\":\"P\",\"2\":\"Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"8\":\"C K L G M N O\"},C:{\"2\":\"DC tB I u J D E F A B C K L G M N O v w x y uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"66\":\"0 1 2 3 4 5 z\",\"72\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB\"},D:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\",\"2\":\"0 1 2 I u J D E F A B C K L G M N O v w x y z Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"66\":\"3 4 5 6 7 8\"},E:{\"2\":\"I u HC zB IC\",\"8\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB\",\"2\":\"F B C fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"66\":\"G M N O v\"},G:{\"2\":\"zB UC BC VC WC\",\"8\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"uC\",\"2\":\"tB I f pC qC rC sC BC tC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C\",\"2\":\"3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"72\":\"AD\"}},B:7,C:\"Custom Elements (deprecated V0 spec)\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"8\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"8\":\"C K L G M N O\"},C:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"8\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"456\":\"QB RB SB TB UB VB WB XB YB\",\"712\":\"uB ZB vB aB\"},D:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"8\":\"SB TB\",\"132\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB\"},E:{\"2\":\"I u J D HC zB IC JC KC\",\"8\":\"E F A LC\",\"132\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB PC QC RC SC qB AC TC rB\",\"132\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\",\"132\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"132\":\"wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"8\":\"AD\"}},B:1,C:\"Custom Elements (V1)\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"132\":\"F A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\",\"132\":\"J D E F A\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\",\"16\":\"u J D E K L\",\"388\":\"F A B C\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"16\":\"u J\",\"388\":\"IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F PC QC RC SC\",\"132\":\"B qB AC\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"UC\",\"16\":\"zB BC\",\"388\":\"VC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"pC qC rC\",\"388\":\"tB I sC BC\"},J:{\"1\":\"A\",\"388\":\"D\"},K:{\"1\":\"C g rB\",\"2\":\"A\",\"132\":\"B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"CustomEvent\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E F\",\"260\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G\",\"1284\":\"M N O\"},C:{\"1\":\"H xB yB\",\"8\":\"DC tB EC FC\",\"516\":\"n o p q r s t f\",\"4612\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m\"},D:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"8\":\"I u J D E F A B C K L G M N O v\",\"132\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\"},F:{\"1\":\"F B C cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\"},G:{\"8\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\",\"2049\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f uC\",\"8\":\"tB I pC qC rC sC BC tC\"},J:{\"1\":\"A\",\"8\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Datalist element\"};\n","module.exports={A:{A:{\"1\":\"B\",\"4\":\"J D E F A CC\"},B:{\"1\":\"C K L G M\",\"129\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"4\":\"DC tB I u EC FC\",\"129\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"LB MB NB OB PB QB RB SB TB UB\",\"4\":\"I u J\",\"129\":\"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"4\":\"I u HC zB\",\"129\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"8 9 C AB BB CB DB EB FB GB HB qB AC TC rB\",\"4\":\"F B PC QC RC SC\",\"129\":\"0 1 2 3 4 5 6 7 G M N O v w x y z IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"4\":\"zB UC BC\",\"129\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"4\":\"oC\"},I:{\"4\":\"pC qC rC\",\"129\":\"tB I f sC BC tC uC\"},J:{\"129\":\"D A\"},K:{\"1\":\"C qB AC rB\",\"4\":\"A B\",\"129\":\"g\"},L:{\"129\":\"H\"},M:{\"129\":\"H\"},N:{\"1\":\"B\",\"4\":\"A\"},O:{\"129\":\"vC\"},P:{\"129\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"129\":\"1B\"},R:{\"129\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"dataset & data-* attributes\"};\n","module.exports={A:{A:{\"2\":\"J D CC\",\"132\":\"E\",\"260\":\"F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K G M N O\",\"772\":\"L\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"260\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Data URIs\"};\n","module.exports={A:{A:{\"16\":\"CC\",\"132\":\"J D E F A B\"},B:{\"1\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"132\":\"C K L G M N\"},C:{\"1\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"132\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"260\":\"SB TB UB VB\",\"772\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\"},D:{\"1\":\"iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"I u J D E F A B C K L G M N O v w x y z\",\"260\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB\",\"772\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB\"},E:{\"1\":\"C K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\",\"132\":\"J D E F A IC JC KC LC\",\"260\":\"B 0B qB\"},F:{\"1\":\"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F B C PC QC RC SC qB AC TC\",\"132\":\"rB\",\"260\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\",\"772\":\"0 G M N O v w x y z\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC\",\"132\":\"E WC XC YC ZC aC bC\"},H:{\"132\":\"oC\"},I:{\"1\":\"f\",\"16\":\"tB pC qC rC\",\"132\":\"I sC BC\",\"772\":\"tC uC\"},J:{\"132\":\"D A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC\",\"132\":\"rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"260\":\"I wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"132\":\"AD\"}},B:6,C:\"Date.prototype.toLocaleDateString\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T\",\"66\":\"U V W X Y\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"OC\"},F:{\"1\":\"oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Declarative Shadow DOM\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Decorators\"};\n","module.exports={A:{A:{\"2\":\"F A B CC\",\"8\":\"J D E\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC\",\"8\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB EC FC\",\"194\":\"NB OB\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"8\":\"I u J D E F A B\",\"257\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB\",\"769\":\"C K L G M N O\"},E:{\"1\":\"C K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I u HC zB IC\",\"257\":\"J D E F A JC KC LC\",\"1025\":\"B 0B qB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"C qB AC TC rB\",\"8\":\"F B PC QC RC SC\"},G:{\"1\":\"E WC XC YC ZC aC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"zB UC BC VC\",\"1025\":\"bC cC dC\"},H:{\"8\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"8\":\"tB pC qC rC\"},J:{\"1\":\"A\",\"8\":\"D\"},K:{\"1\":\"g\",\"8\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Details & Summary elements\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"132\":\"B\"},B:{\"1\":\"C K L G M N O\",\"4\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB EC\",\"4\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"I u FC\"},D:{\"2\":\"I u J\",\"4\":\"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"4\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"zB UC\",\"4\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"pC qC rC\",\"4\":\"tB I f sC BC tC uC\"},J:{\"2\":\"D\",\"4\":\"A\"},K:{\"1\":\"C rB\",\"2\":\"A B qB AC\",\"4\":\"g\"},L:{\"4\":\"H\"},M:{\"4\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"4\":\"vC\"},P:{\"4\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"4\":\"1B\"},R:{\"4\":\"9C\"},S:{\"4\":\"AD\"}},B:4,C:\"DeviceOrientation & DeviceMotion events\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F B PC QC RC SC qB AC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g rB\",\"2\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Window.devicePixelRatio\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB EC FC\",\"194\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\",\"1218\":\"Q R wB S T U V W X Y Z a b c d e h i\"},D:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 I u J D E F A B C K L G M N O v w x y z\",\"322\":\"8 9 AB BB CB\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O PC QC RC SC qB AC TC rB\",\"578\":\"v w x y z\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Dialog element\"};\n","module.exports={A:{A:{\"1\":\"B\",\"16\":\"CC\",\"129\":\"F A\",\"130\":\"J D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"16\":\"F\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"129\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"EventTarget.dispatchEvent\"};\n","module.exports={A:{A:{\"132\":\"J D E F A B CC\"},B:{\"132\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"132\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"132\":\"7 8 9 I u AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"388\":\"0 1 2 3 4 5 6 J D E F A B C K L G M N O v w x y z\"},E:{\"132\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"132\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"132\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"132\":\"oC\"},I:{\"132\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"132\":\"D A\"},K:{\"132\":\"A B C g qB AC rB\"},L:{\"132\":\"H\"},M:{\"132\":\"H\"},N:{\"132\":\"A B\"},O:{\"132\":\"vC\"},P:{\"132\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"132\":\"1B\"},R:{\"132\":\"9C\"},S:{\"132\":\"AD\"}},B:6,C:\"DNSSEC and DANE\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"164\":\"F A\",\"260\":\"B\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G M\"},C:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E EC FC\",\"516\":\"0 1 2 3 4 5 6 7 F A B C K L G M N O v w x y z\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w x y\"},E:{\"1\":\"J A B C IC LC 0B qB\",\"2\":\"I u K L G HC zB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"1028\":\"D E F JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\"},G:{\"1\":\"ZC aC bC cC dC eC fC\",\"2\":\"zB UC BC VC WC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"1028\":\"E XC YC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"16\":\"D\",\"1028\":\"A\"},K:{\"1\":\"g rB\",\"16\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"164\":\"A\",\"260\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"Do Not Track API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"E F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"document.currentScript\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"16\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"16\":\"F\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"document.evaluate & XPath\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"16\":\"F PC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC\",\"16\":\"BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f sC BC tC uC\",\"2\":\"tB I pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"Document.execCommand()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T\",\"132\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T\",\"132\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB PC QC RC SC qB AC TC rB\",\"132\":\"jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"132\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"132\":\"g\"},L:{\"132\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"132\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Document Policy\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"C K\"},C:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB EC FC\"},D:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"document.scrollingElement\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"16\":\"u\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F PC QC RC SC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"document.head\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB EC FC\"},D:{\"1\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"194\":\"SB TB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB PC QC RC SC qB AC TC rB\",\"194\":\"GB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"DOM manipulation convenience methods\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"CC\",\"8\":\"J D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Document Object Model Range\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"DOMContentLoaded\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"132\":\"A B\"},B:{\"132\":\"C K L G M N O\",\"1028\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"1028\":\"hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2564\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\",\"3076\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB\"},D:{\"16\":\"I u J D\",\"132\":\"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\",\"388\":\"E\",\"1028\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"16\":\"I HC zB\",\"132\":\"u J D E F A IC JC KC LC 0B\",\"1028\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\",\"1028\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"16\":\"zB UC BC\",\"132\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"132\":\"I sC BC tC uC\",\"292\":\"tB pC qC rC\",\"1028\":\"f\"},J:{\"16\":\"D\",\"132\":\"A\"},K:{\"2\":\"A B C qB AC rB\",\"1028\":\"g\"},L:{\"1028\":\"H\"},M:{\"1028\":\"H\"},N:{\"132\":\"A B\"},O:{\"1028\":\"vC\"},P:{\"132\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1028\":\"1B\"},R:{\"1028\":\"9C\"},S:{\"2564\":\"AD\"}},B:4,C:\"DOMMatrix\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Download attribute\"};\n","module.exports={A:{A:{\"644\":\"J D E F CC\",\"772\":\"A B\"},B:{\"1\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G M N\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"8\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"8\":\"F B PC QC RC SC qB AC TC\"},G:{\"1\":\"nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"1025\":\"f\"},J:{\"2\":\"D A\"},K:{\"1\":\"rB\",\"8\":\"A B C qB AC\",\"1025\":\"g\"},L:{\"1025\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"A B\"},O:{\"1025\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Drag and Drop\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\"},C:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB EC FC\"},D:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Element.closest()\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"16\":\"CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"16\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"16\":\"F PC QC RC SC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g rB\",\"16\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"document.elementFromPoint()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB EC FC\"},D:{\"1\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\"},E:{\"1\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\",\"132\":\"A B C K 0B qB rB 1B\"},F:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\",\"132\":\"bC cC dC eC fC gC hC iC jC kC lC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Scroll methods on elements (scroll, scrollTo, scrollBy)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"164\":\"B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EC FC\"},D:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB\",\"132\":\"BB CB DB EB FB GB HB\"},E:{\"1\":\"C K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\",\"164\":\"D E F A B KC LC 0B qB\"},F:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x PC QC RC SC qB AC TC rB\",\"132\":\"0 1 2 3 4 y z\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Encrypted Media Extensions\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"2\":\"CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"EOT - Embedded OpenType fonts\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D CC\",\"260\":\"F\",\"1026\":\"E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"4\":\"DC tB EC FC\",\"132\":\"I u J D E F A B C K L G M N O v w\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"I u J D E F A B C K L G M N O\",\"132\":\"v w x y\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"4\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"4\":\"F B C PC QC RC SC qB AC TC\",\"132\":\"rB\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"4\":\"zB UC BC VC\"},H:{\"132\":\"oC\"},I:{\"1\":\"f tC uC\",\"4\":\"tB pC qC rC\",\"132\":\"sC BC\",\"900\":\"I\"},J:{\"1\":\"A\",\"4\":\"D\"},K:{\"1\":\"g\",\"4\":\"A B C qB AC\",\"132\":\"rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"ECMAScript 5\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB\",\"132\":\"IB JB KB LB MB NB OB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"132\":\"5 6 7 8 9 AB BB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"ES6 classes\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"ES6 Generators\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB EC FC\",\"194\":\"eB\"},D:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"JavaScript modules: dynamic import()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\",\"4097\":\"M N O\",\"4290\":\"G\"},C:{\"1\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB EC FC\",\"322\":\"UB VB WB XB YB uB\"},D:{\"1\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB\",\"194\":\"ZB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\",\"3076\":\"0B\"},F:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB PC QC RC SC qB AC TC rB\",\"194\":\"NB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\",\"3076\":\"cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"JavaScript modules via script tag\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G EC FC\",\"132\":\"0 M N O v w x y z\",\"260\":\"1 2 3 4 5 6\",\"516\":\"7\"},D:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O\",\"1028\":\"0 1 2 3 4 5 6 7 8 9 v w x y z\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"1028\":\"G M N O v w\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC\",\"1028\":\"sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"ES6 Number\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB EC FC\"},D:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"String.prototype.includes\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"388\":\"B\"},B:{\"257\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L\",\"769\":\"G M N O\"},C:{\"2\":\"DC tB I u EC FC\",\"4\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\",\"257\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"I u J D E F A B C K L G M N O v w\",\"4\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"257\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC\",\"4\":\"E F KC LC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"4\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB\",\"257\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\",\"4\":\"E XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"4\":\"tC uC\",\"257\":\"f\"},J:{\"2\":\"D\",\"4\":\"A\"},K:{\"2\":\"A B C qB AC rB\",\"257\":\"g\"},L:{\"257\":\"H\"},M:{\"257\":\"H\"},N:{\"2\":\"A\",\"388\":\"B\"},O:{\"257\":\"vC\"},P:{\"4\":\"I\",\"257\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"257\":\"1B\"},R:{\"257\":\"9C\"},S:{\"4\":\"AD\"}},B:6,C:\"ECMAScript 2015 (ES6)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"4\":\"F PC QC RC SC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g qB AC rB\",\"4\":\"A B\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Server-sent events\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"ui-serif, ui-sans-serif, ui-monospace and ui-rounded values for font-family\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W\",\"2\":\"C K L G M N O\",\"1025\":\"X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g EC FC\",\"260\":\"lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"lB mB nB oB pB P Q R S T U V W\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB\",\"132\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g\",\"1025\":\"X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\",\"772\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB PC QC RC SC qB AC TC rB\",\"132\":\"NB OB PB QB RB SB TB UB VB WB XB YB ZB\",\"1025\":\"mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\",\"772\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"1025\":\"g\"},L:{\"1025\":\"H\"},M:{\"260\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\",\"132\":\"zC 0C 0B\"},Q:{\"132\":\"1B\"},R:{\"1025\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Feature Policy\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"1025\":\"FB\",\"1218\":\"AB BB CB DB EB\"},D:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB\",\"260\":\"GB\",\"772\":\"HB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"260\":\"3\",\"772\":\"4\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Fetch\"};\n","module.exports={A:{A:{\"16\":\"CC\",\"132\":\"E F\",\"388\":\"J D A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G\",\"16\":\"M N O v\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"16\":\"F PC\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\"},H:{\"388\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A\",\"260\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"disabled attribute of the fieldset element\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"260\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G M N O\"},C:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC\",\"260\":\"0 1 2 3 I u J D E F A B C K L G M N O v w x y z FC\"},D:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\",\"260\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB\",\"388\":\"J D E F A B C\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\",\"260\":\"J D E F JC KC LC\",\"388\":\"IC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B PC QC RC SC\",\"260\":\"0 C G M N O v w x y z qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"260\":\"E WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"pC qC rC\",\"260\":\"tC\",\"388\":\"tB I sC BC\"},J:{\"260\":\"A\",\"388\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B\",\"260\":\"C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A\",\"260\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"File API\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"132\":\"A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"2\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F B PC QC RC SC\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"C g qB AC rB\",\"2\":\"A B\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"FileReader API\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F PC QC\",\"16\":\"B RC SC qB AC\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"C g AC rB\",\"2\":\"A\",\"16\":\"B qB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"FileReaderSync\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"I u J D\",\"33\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"36\":\"E F A B C\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"33\":\"A\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},L:{\"33\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"33\":\"vC\"},P:{\"2\":\"I\",\"33\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"33\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Filesystem & FileWriter API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB EC FC\"},D:{\"1\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB\",\"16\":\"KB LB MB\",\"388\":\"NB OB PB QB RB SB TB UB VB\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"516\":\"B C qB rB\"},F:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"pC qC rC\",\"16\":\"tB I sC BC tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g rB\",\"16\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"129\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"FLAC audio format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S\"},C:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB EC FC\"},D:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S\"},E:{\"1\":\"G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B\"},F:{\"1\":\"iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"gap property for Flexbox\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"1028\":\"B\",\"1316\":\"A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"164\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\",\"516\":\"0 1 2 3 y z\"},D:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 2 3 4 x y z\",\"164\":\"I u J D E F A B C K L G M N O v w\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"D E JC KC\",\"164\":\"I u J HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B C PC QC RC SC qB AC TC\",\"33\":\"G M\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"E XC YC\",\"164\":\"zB UC BC VC WC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"164\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"164\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"292\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS Flexible Box Layout Module\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB EC FC\"},D:{\"1\":\"YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB rB\"},F:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"display: flow-root\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"2\":\"CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F PC QC RC SC\",\"16\":\"B qB AC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"2\":\"pC qC rC\",\"16\":\"tB\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g rB\",\"2\":\"A\",\"16\":\"B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"focusin & focusout events\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB EC FC\",\"132\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a\"},D:{\"1\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB\",\"260\":\"TB UB VB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\",\"16\":\"F\",\"132\":\"A LC 0B\"},F:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\",\"132\":\"ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"132\":\"AD\"}},B:5,C:\"system-ui value for font-family\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z\",\"164\":\"I u J D E F A B C K L\"},D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G\",\"33\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\",\"292\":\"M N O v w\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"D E F HC zB JC KC\",\"4\":\"I u J IC\"},F:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E XC YC ZC\",\"4\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC\",\"33\":\"tC uC\"},J:{\"2\":\"D\",\"33\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"33\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS font-feature-settings\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"0 1 2 3 4 5 6 7 8 9\"},D:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 I u J D E F A B C K L G M N O v w x y z\",\"33\":\"5 6 7 8\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\",\"33\":\"D E F KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G PC QC RC SC qB AC TC rB\",\"33\":\"M N O v\"},G:{\"1\":\"fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"33\":\"E YC ZC aC bC cC dC eC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"tB I pC qC rC sC BC\",\"33\":\"tC\"},J:{\"2\":\"D\",\"33\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 font-kerning\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB EC FC\",\"194\":\"BB CB DB EB FB GB\"},D:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"CSS Font Loading\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"194\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\",\"194\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\"},F:{\"2\":\"0 1 2 3 4 5 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"194\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"194\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"CSS font-size-adjust\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"676\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"804\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"I\",\"676\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"HC zB\",\"676\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"676\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"804\":\"AD\"}},B:7,C:\"CSS font-smooth\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"4\":\"F A B\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"4\":\"C K L G M\"},C:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB EC FC\",\"194\":\"CB DB EB FB GB HB IB JB\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"4\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"4\":\"G M N O v w x y\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"4\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"4\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"4\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"4\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"4\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Font unicode-range subsetting\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"130\":\"A B\"},B:{\"130\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"130\":\"I u J D E F A B C K L G M N O v w x y z\",\"322\":\"0 1 2 3 4 5 6 7 8 9\"},D:{\"1\":\"xB yB GC\",\"2\":\"I u J D E F A B C K L G\",\"130\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"D E F HC zB JC KC\",\"130\":\"I u J IC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"130\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB XC YC ZC\",\"130\":\"UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"130\":\"f tC uC\"},J:{\"2\":\"D\",\"130\":\"A\"},K:{\"2\":\"A B C qB AC rB\",\"130\":\"g\"},L:{\"130\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"130\":\"vC\"},P:{\"130\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"130\":\"1B\"},R:{\"130\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"CSS font-variant-alternates\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC\"},F:{\"1\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"16\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS font-variant-numeric\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"132\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"2\":\"F PC\"},G:{\"1\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"260\":\"zB UC\"},H:{\"2\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"2\":\"pC\",\"4\":\"tB qC rC\"},J:{\"1\":\"A\",\"4\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"@font-face Web fonts\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"16\":\"u\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Form attribute\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"2\":\"F PC\",\"16\":\"QC RC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"2\":\"pC qC rC\",\"16\":\"tB\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"B C g qB AC rB\",\"16\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Attributes for form submission\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"132\":\"u J D E F A IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"2\":\"F PC\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\",\"132\":\"E UC BC VC WC XC YC ZC aC bC\"},H:{\"516\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"tB pC qC rC\",\"132\":\"I sC BC tC\"},J:{\"1\":\"A\",\"132\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"260\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"132\":\"AD\"}},B:1,C:\"Form validation\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"4\":\"A B\",\"8\":\"J D E F\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"4\":\"C K L G\"},C:{\"4\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"DC tB EC FC\"},D:{\"1\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\"},E:{\"4\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"HC zB\"},F:{\"1\":\"F B C SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"4\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\"},G:{\"2\":\"zB\",\"4\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC\",\"4\":\"tC uC\"},J:{\"2\":\"D\",\"4\":\"A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"4\":\"H\"},N:{\"4\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"4\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"4\":\"AD\"}},B:1,C:\"HTML5 form features\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"548\":\"B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"516\":\"C K L G M N O\"},C:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F EC FC\",\"676\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB\",\"1700\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB\"},D:{\"1\":\"jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L\",\"676\":\"G M N O v\",\"804\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB\"},E:{\"1\":\"9B OC\",\"2\":\"I u HC zB\",\"548\":\"3B 4B 5B sB 6B 7B 8B\",\"676\":\"IC\",\"804\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B C PC QC RC SC qB AC TC\",\"804\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC\",\"2052\":\"fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"292\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A\",\"548\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"804\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Full Screen API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w\",\"33\":\"0 x y z\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Gamepad API\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"CC\",\"8\":\"J D E\"},B:{\"1\":\"C K L G M N O\",\"129\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB EC FC\",\"8\":\"DC tB\",\"129\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"4\":\"I\",\"129\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I HC zB\",\"129\":\"A\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C M N O v w x y z AB BB CB DB EB SC qB AC TC rB\",\"2\":\"F G PC\",\"8\":\"QC RC\",\"129\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC\",\"129\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I pC qC rC sC BC tC uC\",\"129\":\"f\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C qB AC rB\",\"8\":\"A\",\"129\":\"g\"},L:{\"129\":\"H\"},M:{\"129\":\"H\"},N:{\"1\":\"A B\"},O:{\"129\":\"vC\"},P:{\"1\":\"I\",\"129\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"129\":\"1B\"},R:{\"129\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Geolocation\"};\n","module.exports={A:{A:{\"644\":\"J D CC\",\"2049\":\"F A B\",\"2692\":\"E\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2049\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC\",\"260\":\"I u J D E F A B\",\"1156\":\"tB\",\"1284\":\"EC\",\"1796\":\"FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"16\":\"F PC\",\"132\":\"QC RC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"132\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2049\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Element.getBoundingClientRect()\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC\",\"132\":\"tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"260\":\"I u J D E F A\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"260\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"260\":\"F PC QC RC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"260\":\"zB UC BC\"},H:{\"260\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"260\":\"tB pC qC rC\"},J:{\"1\":\"A\",\"260\":\"D\"},K:{\"1\":\"B C g qB AC rB\",\"260\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"getComputedStyle\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"CC\",\"8\":\"J D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"8\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"getElementsByClassName\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"33\":\"B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A\",\"33\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"crypto.getRandomValues()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\",\"194\":\"YB uB ZB vB aB bB cB dB eB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Gyroscope\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\"},C:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB EC FC\"},D:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB\"},E:{\"2\":\"I u J D HC zB IC JC KC\",\"129\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"194\":\"E F A LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"2\":\"zB UC BC VC WC XC\",\"129\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"194\":\"E YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"navigator.hardwareConcurrency\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"8\":\"J D CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"8\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"8\":\"I\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"8\":\"F PC QC RC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f qC rC sC BC tC uC\",\"2\":\"pC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"8\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Hashchange event\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"130\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"130\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"HEIF/ISO Base Media File Format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"132\":\"B\"},B:{\"132\":\"C K L G M N O\",\"1028\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r\",\"2052\":\"s t f H xB yB GC\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"516\":\"B C qB rB\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c PC QC RC SC qB AC TC rB\",\"2052\":\"d e\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"2052\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"258\":\"g\"},L:{\"2052\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I\",\"258\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"HEVC/H.265 video format\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F B PC QC RC SC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"2\":\"tB pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"C g qB AC rB\",\"2\":\"A B\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"hidden attribute\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v\",\"33\":\"w x y z\"},E:{\"1\":\"E F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"High Resolution Time API\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"4\":\"u IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e AC TC rB\",\"2\":\"F B PC QC RC SC qB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC\",\"4\":\"BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f qC rC BC tC uC\",\"2\":\"tB I pC sC\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g qB AC rB\",\"2\":\"A B\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Session history management\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"zB UC BC VC\",\"129\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC\",\"257\":\"qC rC\"},J:{\"1\":\"A\",\"16\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"516\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"16\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"HTML Media Capture\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E\",\"260\":\"F A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC\",\"132\":\"tB EC FC\",\"260\":\"I u J D E F A B C K L G M N O v w\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"I u\",\"260\":\"0 1 J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"132\":\"I HC zB\",\"260\":\"u J IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"132\":\"F B PC QC RC SC\",\"260\":\"C qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"132\":\"zB\",\"260\":\"UC BC VC WC\"},H:{\"132\":\"oC\"},I:{\"1\":\"f tC uC\",\"132\":\"pC\",\"260\":\"tB I qC rC sC BC\"},J:{\"260\":\"D A\"},K:{\"1\":\"g\",\"132\":\"A\",\"260\":\"B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"260\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"HTML5 semantic elements\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O\",\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"HTTP Live Streaming (HLS)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"132\":\"B\"},B:{\"1\":\"C K L G M N O\",\"513\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB EC FC\",\"513\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"HB IB JB KB LB MB NB OB PB QB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\",\"513\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\",\"260\":\"F A LC 0B\"},F:{\"1\":\"4 5 6 7 8 9 AB BB CB DB\",\"2\":\"0 1 2 3 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"513\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"513\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"513\":\"g\"},L:{\"513\":\"H\"},M:{\"513\":\"H\"},N:{\"2\":\"A B\"},O:{\"513\":\"vC\"},P:{\"1\":\"I\",\"513\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"513\":\"1B\"},R:{\"513\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"HTTP/2 protocol\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"322\":\"P Q R S T\",\"578\":\"U V\"},C:{\"1\":\"X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB EC FC\",\"194\":\"kB g lB mB nB oB pB P Q R wB S T U V W\"},D:{\"1\":\"W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB\",\"322\":\"P Q R S T\",\"578\":\"U V\"},E:{\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB 1B\",\"1090\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB PC QC RC SC qB AC TC rB\",\"578\":\"g\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC\",\"66\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"HTTP/3 protocol\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M EC FC\",\"4\":\"0 1 2 3 N O v w x y z\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f qC rC sC BC tC uC\",\"2\":\"pC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"sandbox attribute for iframes\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"66\":\"0 1 2 w x y z\"},E:{\"2\":\"I u J E F A B C K L G HC zB IC JC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"130\":\"D KC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"130\":\"XC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"seamless attribute for iframes\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"8\":\"C K L G M N O\"},C:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC\",\"8\":\"0 tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K\",\"8\":\"L G M N O v\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\",\"8\":\"I u IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B PC QC RC SC\",\"8\":\"C qB AC TC rB\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\",\"8\":\"UC BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"8\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"8\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B\",\"8\":\"C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"srcdoc attribute for iframes\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB EC FC\",\"194\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB\",\"322\":\"TB UB VB WB XB YB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB PC QC RC SC qB AC TC rB\",\"322\":\"GB HB IB JB KB LB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"194\":\"AD\"}},B:5,C:\"ImageCapture API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"161\":\"B\"},B:{\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"161\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A\",\"161\":\"B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Input Method Editor API\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"naturalWidth & naturalHeight image properties\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"194\":\"P Q R S T U V W X\"},C:{\"1\":\"t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m EC FC\",\"322\":\"n o p q r s\"},D:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g\",\"194\":\"lB mB nB oB pB P Q R S T U V W X\"},E:{\"1\":\"9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\"},F:{\"1\":\"nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB PC QC RC SC qB AC TC rB\",\"194\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB\"},G:{\"1\":\"9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Import maps\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"8\":\"A B\"},B:{\"1\":\"P\",\"2\":\"Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"8\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"8\":\"6 7 WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"72\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\",\"2\":\"0 1 2 3 4 5 I u J D E F A B C K L G M N O v w x y z Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"66\":\"6 7 8 9 AB\",\"72\":\"BB\"},E:{\"2\":\"I u HC zB IC\",\"8\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB\",\"2\":\"F B C G M fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"66\":\"N O v w x\",\"72\":\"y\"},G:{\"2\":\"zB UC BC VC WC\",\"8\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"8\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C\",\"2\":\"3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"HTML Imports\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"16\":\"CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"2\":\"DC tB\",\"16\":\"EC\"},D:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F B PC QC RC SC qB AC\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"indeterminate checkbox\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"132\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"132\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"33\":\"A B C K L G\",\"36\":\"I u J D E F\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"A\",\"8\":\"I u J D E F\",\"33\":\"z\",\"36\":\"B C K L G M N O v w x y\"},E:{\"1\":\"A B C K L G 0B qB rB 1B NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I u J D HC zB IC JC\",\"260\":\"E F KC LC\",\"516\":\"MC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F PC QC\",\"8\":\"B C RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"zB UC BC VC WC XC\",\"260\":\"E YC ZC aC\",\"516\":\"mC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"8\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"8\":\"D\"},K:{\"1\":\"g\",\"2\":\"A\",\"8\":\"B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"IndexedDB\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB EC FC\",\"132\":\"KB LB MB\",\"260\":\"NB OB PB QB\"},D:{\"1\":\"YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\",\"132\":\"OB PB QB RB\",\"260\":\"SB TB UB VB WB XB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB PC QC RC SC qB AC TC rB\",\"132\":\"BB CB DB EB\",\"260\":\"FB GB HB IB JB KB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\",\"16\":\"bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"260\":\"wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"260\":\"AD\"}},B:2,C:\"IndexedDB 2.0\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"4\":\"CC\",\"132\":\"J D\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"36\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS inline-block\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"16\":\"CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"16\":\"F\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"HTMLElement.innerText\"};\n","module.exports={A:{A:{\"1\":\"J D E F A CC\",\"132\":\"B\"},B:{\"132\":\"C K L G M N O\",\"260\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"516\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"0 1 2 N O v w x y z\",\"2\":\"I u J D E F A B C K L G M\",\"132\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB\",\"260\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"J IC JC\",\"2\":\"I u HC zB\",\"2052\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"zB UC BC\",\"1025\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1025\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2052\":\"A B\"},O:{\"1025\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"260\":\"1B\"},R:{\"1\":\"9C\"},S:{\"516\":\"AD\"}},B:1,C:\"autocomplete attribute: on & off values\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F G M PC QC RC SC\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\",\"129\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Color input type\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"132\":\"C\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB EC FC\",\"1090\":\"TB UB VB WB\",\"2052\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b\",\"4100\":\"c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v\",\"2052\":\"0 w x y z\"},E:{\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B\",\"4100\":\"G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"zB UC BC\",\"260\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB pC qC rC\",\"514\":\"I sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"4100\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2052\":\"AD\"}},B:1,C:\"Date and time input types\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"132\":\"pC qC rC\"},J:{\"1\":\"A\",\"132\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Email, telephone & URL input types\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"2561\":\"A B\",\"2692\":\"F\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2561\":\"C K L G M N O\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC\",\"1537\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB FC\",\"1796\":\"tB EC\"},D:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\",\"1025\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB\",\"1537\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB\"},E:{\"1\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u J HC zB\",\"1025\":\"D E F A B C JC KC LC 0B qB\",\"1537\":\"IC\",\"4097\":\"K rB\"},F:{\"1\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"16\":\"F B C PC QC RC SC qB AC\",\"260\":\"TC\",\"1025\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"1537\":\"G M N O v w x\"},G:{\"1\":\"iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\",\"1025\":\"E YC ZC aC bC cC dC eC fC\",\"1537\":\"VC WC XC\",\"4097\":\"gC hC\"},H:{\"2\":\"oC\"},I:{\"16\":\"pC qC\",\"1025\":\"f uC\",\"1537\":\"tB I rC sC BC tC\"},J:{\"1025\":\"A\",\"1537\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2561\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1025\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1537\":\"AD\"}},B:1,C:\"input event\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\",\"16\":\"0 1 u J D E x y z\",\"132\":\"F A B C K L G M N O v w\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"132\":\"J D E F A B JC KC LC 0B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"2\":\"WC XC\",\"132\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"514\":\"zB UC BC VC\"},H:{\"2\":\"oC\"},I:{\"2\":\"pC qC rC\",\"260\":\"tB I sC BC\",\"514\":\"f tC uC\"},J:{\"132\":\"A\",\"260\":\"D\"},K:{\"2\":\"A B C qB AC rB\",\"514\":\"g\"},L:{\"260\":\"H\"},M:{\"2\":\"H\"},N:{\"514\":\"A\",\"1028\":\"B\"},O:{\"2\":\"vC\"},P:{\"260\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"260\":\"1B\"},R:{\"260\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"accept attribute for file input\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB EC FC\"},D:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Directory selection from file input\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"2\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"2\":\"F PC QC RC\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\"},H:{\"130\":\"oC\"},I:{\"130\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"130\":\"A B C g qB AC rB\"},L:{\"132\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"130\":\"vC\"},P:{\"130\":\"I\",\"132\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"132\":\"1B\"},R:{\"132\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Multiple file selection\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M EC FC\",\"4\":\"N O v w\",\"194\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d\"},D:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB\",\"66\":\"WB XB YB uB ZB vB aB bB cB dB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB PC QC RC SC qB AC TC rB\",\"66\":\"JB KB LB MB NB OB PB QB RB SB\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"194\":\"AD\"}},B:1,C:\"inputmode attribute\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB EC FC\"},D:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Minimum length attribute for input fields\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"129\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"C K\",\"1025\":\"L G M N O\"},C:{\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"513\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"388\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB pC qC rC\",\"388\":\"I f sC BC tC uC\"},J:{\"2\":\"D\",\"388\":\"A\"},K:{\"1\":\"A B C qB AC rB\",\"388\":\"g\"},L:{\"388\":\"H\"},M:{\"641\":\"H\"},N:{\"388\":\"A B\"},O:{\"388\":\"vC\"},P:{\"388\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"388\":\"1B\"},R:{\"388\":\"9C\"},S:{\"513\":\"AD\"}},B:1,C:\"Number input type\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"16\":\"u\",\"388\":\"J D E F A IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\",\"388\":\"E VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"tB I pC qC rC sC BC tC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Pattern attribute for input fields\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"132\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e AC TC rB\",\"2\":\"F PC QC RC SC\",\"132\":\"B qB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB f pC qC rC BC tC uC\",\"4\":\"I sC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"input placeholder attribute\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x y EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f BC tC uC\",\"4\":\"tB I pC qC rC sC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Range input type\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"129\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"C K L G M N O\"},C:{\"2\":\"DC tB EC FC\",\"129\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"0 1 I u J D E F A B C K L x y z\",\"129\":\"G M N O v w\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F PC QC RC SC\",\"16\":\"B qB AC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\"},H:{\"129\":\"oC\"},I:{\"1\":\"f tC uC\",\"16\":\"pC qC\",\"129\":\"tB I rC sC BC\"},J:{\"1\":\"D\",\"129\":\"A\"},K:{\"1\":\"C g\",\"2\":\"A\",\"16\":\"B qB AC\",\"129\":\"rB\"},L:{\"1\":\"H\"},M:{\"129\":\"H\"},N:{\"129\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"129\":\"AD\"}},B:1,C:\"Search input type\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"16\":\"F PC QC RC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Selection controls for input & textarea\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"16\":\"CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"16\":\"F\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Element.insertAdjacentElement() & Element.insertAdjacentText()\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"16\":\"CC\",\"132\":\"J D E F\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"16\":\"F PC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Element.insertAdjacentHTML()\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Internationalization API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"IntersectionObserver V2\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O\",\"2\":\"C K L\",\"516\":\"G\",\"1025\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB EC FC\",\"194\":\"SB TB UB\"},D:{\"1\":\"YB uB ZB vB aB bB cB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"516\":\"RB SB TB UB VB WB XB\",\"1025\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\"},F:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB PC QC RC SC qB AC TC rB\",\"516\":\"EB FB GB HB IB JB KB\",\"1025\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"1025\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"1025\":\"g\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"516\":\"wC xC\"},Q:{\"1025\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"IntersectionObserver\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N\",\"130\":\"O\"},C:{\"1\":\"YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB EC FC\"},D:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB rB\"},F:{\"1\":\"QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Intl.PluralRules API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"1025\":\"d e h i j k l m n o p q r s t f H\",\"1537\":\"P Q R S T U V W X Y Z a b c\"},C:{\"2\":\"DC\",\"932\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB EC FC\",\"2308\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"I u J D E F A B C K L G M N O v w x\",\"545\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB\",\"1025\":\"d e h i j k l m n o p q r s t f H xB yB GC\",\"1537\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\",\"516\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B\",\"548\":\"F A LC 0B\",\"676\":\"D E JC KC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"513\":\"AB\",\"545\":\"0 1 2 3 4 5 6 7 8 G M N O v w x y z\",\"1025\":\"e\",\"1537\":\"9 BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\",\"516\":\"lC mC nC 2B 3B 4B 5B\",\"548\":\"ZC aC bC cC dC eC fC gC hC iC jC kC\",\"676\":\"E XC YC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"545\":\"tC uC\",\"1025\":\"f\"},J:{\"2\":\"D\",\"545\":\"A\"},K:{\"2\":\"A B C qB AC rB\",\"1025\":\"g\"},L:{\"1025\":\"H\"},M:{\"2308\":\"H\"},N:{\"2\":\"A B\"},O:{\"1537\":\"vC\"},P:{\"545\":\"I\",\"1025\":\"6C 7C 8C\",\"1537\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB\"},Q:{\"1537\":\"1B\"},R:{\"1537\":\"9C\"},S:{\"932\":\"AD\"}},B:5,C:\"Intrinsic & Extrinsic Sizing\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"129\":\"u IC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"JPEG 2000 image format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z H\",\"578\":\"a b c d e h i j k l m n o p q r s t f\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y EC FC\",\"322\":\"Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z H xB yB GC\",\"194\":\"a b c d e h i j k l m n o p q r s t f\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB PC QC RC SC qB AC TC rB\",\"194\":\"oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"JPEG XL image format\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O\",\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"JPEG XR image format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB EC FC\"},D:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB\"},E:{\"1\":\"9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\"},F:{\"1\":\"PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Lookbehind in JS regular expressions\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D CC\",\"129\":\"E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"JSON parsing\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G\",\"132\":\"M N O\"},C:{\"1\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB EC FC\"},D:{\"1\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\",\"132\":\"XB YB uB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\",\"132\":\"0B\"},F:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB PC QC RC SC qB AC TC rB\",\"132\":\"KB LB MB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\",\"132\":\"cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\",\"132\":\"yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"132\":\"AD\"}},B:5,C:\"CSS justify-content: space-evenly\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"pC qC rC\",\"132\":\"tB I sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"High-quality kerning pairs & ligatures\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"16\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\",\"16\":\"C\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g rB\",\"2\":\"A B qB AC\",\"16\":\"C\"},L:{\"1\":\"H\"},M:{\"130\":\"H\"},N:{\"130\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"KeyboardEvent.charCode\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EC FC\"},D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB\",\"194\":\"IB JB KB LB MB NB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"194\":\"5 6 7 8 9 AB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"194\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I\",\"194\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"194\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"KeyboardEvent.code\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B G M PC QC RC SC qB AC TC\",\"16\":\"C\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g rB\",\"2\":\"A B qB AC\",\"16\":\"C\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"KeyboardEvent.getModifierState()\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"260\":\"F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G M N O\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x y EC FC\",\"132\":\"0 1 2 3 4 z\"},D:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B G M N O v w x y z AB BB CB DB PC QC RC SC qB AC TC\",\"16\":\"C\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g rB\",\"2\":\"A B qB AC\",\"16\":\"C\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"260\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"KeyboardEvent.key\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"0 1 2 3 4 5 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"J HC zB\",\"132\":\"I u IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\",\"16\":\"C\",\"132\":\"G M\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\",\"132\":\"VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"16\":\"pC qC\",\"132\":\"tB I rC sC BC\"},J:{\"132\":\"D A\"},K:{\"1\":\"g rB\",\"2\":\"A B qB AC\",\"16\":\"C\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"KeyboardEvent.location\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"16\":\"u\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"16\":\"F PC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC\",\"16\":\"pC qC\",\"132\":\"tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"132\":\"H\"},M:{\"132\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I\",\"132\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"132\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"KeyboardEvent.which\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O\",\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Resource Hints: Lazyload\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"2052\":\"B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"194\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O\",\"322\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB\",\"516\":\"HB IB JB KB LB MB NB OB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\",\"1028\":\"A 0B\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"322\":\"0 1 2 3 G M N O v w x y z\",\"516\":\"4 5 6 7 8 9 AB BB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\",\"1028\":\"bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"516\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"let\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"130\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC\"},H:{\"130\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D\",\"130\":\"A\"},K:{\"1\":\"g\",\"130\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"130\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"PNG favicons\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P\",\"1537\":\"Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB EC FC\",\"260\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\",\"513\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\",\"1537\":\"Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB UB VB WB XB YB ZB aB bB cB dB eB PC QC RC SC qB AC TC rB\",\"1537\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"130\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC\"},H:{\"130\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"130\":\"A\"},K:{\"130\":\"A B C qB AC rB\",\"1537\":\"g\"},L:{\"1537\":\"H\"},M:{\"2\":\"H\"},N:{\"130\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C\",\"1537\":\"3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"1537\":\"9C\"},S:{\"513\":\"AD\"}},B:1,C:\"SVG favicons\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E CC\",\"132\":\"F\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB\",\"260\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"16\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"16\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"16\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Resource Hints: dns-prefetch\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Resource Hints: modulepreload\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\",\"260\":\"G M N O\"},C:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"129\":\"FB\"},D:{\"1\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"16\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Resource Hints: preconnect\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\"},E:{\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB\",\"194\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC\",\"194\":\"kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"I f tC uC\",\"2\":\"tB pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Resource Hints: prefetch\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\",\"1028\":\"N O\"},C:{\"1\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB EC FC\",\"132\":\"WB\",\"578\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T\"},D:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"322\":\"B\"},F:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"322\":\"dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Resource Hints: preload\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Resource Hints: prerender\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB EC FC\",\"132\":\"mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB\",\"66\":\"mB nB\"},E:{\"1\":\"9B OC\",\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB\",\"322\":\"L G 1B MC NC 2B\",\"580\":\"3B 4B 5B sB 6B 7B 8B\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB PC QC RC SC qB AC TC rB\",\"66\":\"aB bB\"},G:{\"1\":\"9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC\",\"322\":\"kC lC mC nC 2B\",\"580\":\"3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"132\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Lazy loading via attribute for images & iframes\"};\n","module.exports={A:{A:{\"1\":\"B\",\"16\":\"CC\",\"132\":\"J D E F A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"132\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"132\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F B C PC QC RC SC qB AC TC\",\"132\":\"rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"132\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"132\":\"oC\"},I:{\"1\":\"f tC uC\",\"132\":\"tB I pC qC rC sC BC\"},J:{\"132\":\"D A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC\",\"132\":\"rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"132\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"132\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"4\":\"AD\"}},B:6,C:\"localeCompare()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\",\"194\":\"YB uB ZB vB aB bB cB dB eB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"194\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Magnetometer\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"36\":\"F A B\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"36\":\"C K L\"},C:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC\",\"36\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z FC\"},D:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"36\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"36\":\"u J D IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B PC QC RC SC qB\",\"36\":\"C G M N O v w AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\",\"36\":\"UC BC VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"pC\",\"36\":\"tB I qC rC sC BC tC uC\"},J:{\"36\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B\",\"36\":\"C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"36\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"36\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"matches() DOM method\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B C PC QC RC SC qB AC TC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"matchMedia\"};\n","module.exports={A:{A:{\"2\":\"F A B CC\",\"8\":\"J D E\"},B:{\"2\":\"C K L G M N O\",\"8\":\"P Q R S T U V W X Y Z a b c d e h\",\"584\":\"i j k l m n o p q r s t\",\"1025\":\"f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"129\":\"DC tB EC FC\"},D:{\"1\":\"0\",\"8\":\"1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h\",\"584\":\"i j k l m n o p q r s t\",\"1025\":\"f H xB yB GC\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"260\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"2\":\"F\",\"8\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB\",\"584\":\"S T U V W X Y Z a b c d\",\"1025\":\"e\",\"2052\":\"B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"zB UC BC\"},H:{\"8\":\"oC\"},I:{\"8\":\"tB I pC qC rC sC BC tC uC\",\"1025\":\"f\"},J:{\"1\":\"A\",\"8\":\"D\"},K:{\"8\":\"A B C g qB AC rB\"},L:{\"1025\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"8\":\"vC\"},P:{\"8\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"8\":\"1B\"},R:{\"8\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"MathML\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"16\":\"CC\",\"900\":\"J D E F\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"1025\":\"C K L G M N O\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"900\":\"DC tB EC FC\",\"1025\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"u HC\",\"900\":\"I zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F\",\"132\":\"B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"UC BC VC WC XC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\",\"2052\":\"E YC\"},H:{\"132\":\"oC\"},I:{\"1\":\"tB I rC sC BC tC uC\",\"16\":\"pC qC\",\"4097\":\"f\"},J:{\"1\":\"D A\"},K:{\"132\":\"A B C qB AC rB\",\"4097\":\"g\"},L:{\"4097\":\"H\"},M:{\"4097\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"4097\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1025\":\"AD\"}},B:1,C:\"maxlength attribute for input and textarea elements\"};\n","module.exports={A:{D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},L:{\"1\":\"H\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB PC QC RC SC qB AC TC rB\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"I u J HC zB IC JC OC\",\"33\":\"D E F A KC LC 0B\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\",\"33\":\"E XC YC ZC aC bC cC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"}},B:6,C:\"isolate-override from unicode-bidi\"};\n","module.exports={A:{D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G\",\"33\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},L:{\"1\":\"H\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"I u HC zB IC OC\",\"33\":\"J D E F A JC KC LC 0B\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"E WC XC YC ZC aC bC cC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"}},B:6,C:\"isolate from unicode-bidi\"};\n","module.exports={A:{D:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},L:{\"1\":\"H\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB PC QC RC SC qB AC TC rB\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"I u HC zB IC OC\",\"33\":\"J D E F A JC KC LC 0B\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"E WC XC YC ZC aC bC cC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"}},B:6,C:\"plaintext from unicode-bidi\"};\n","module.exports={A:{D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\"},L:{\"1\":\"H\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB PC QC RC SC qB AC TC rB\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"I u J D HC zB IC JC KC OC\",\"33\":\"E F A B C LC 0B qB\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"33\":\"E YC ZC aC bC cC dC eC fC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"}},B:6,C:\"text-decoration-color property\"};\n","module.exports={A:{D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\"},L:{\"1\":\"H\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB PC QC RC SC qB AC TC rB\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"I u J D HC zB IC JC KC OC\",\"33\":\"E F A B C LC 0B qB\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"33\":\"E YC ZC aC bC cC dC eC fC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"}},B:6,C:\"text-decoration-line property\"};\n","module.exports={A:{D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\"},L:{\"1\":\"H\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB PC QC RC SC qB AC TC rB\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},E:{\"2\":\"I u J D HC zB IC JC KC OC\",\"33\":\"E F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},G:{\"2\":\"zB UC BC VC WC XC\",\"33\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"}},B:6,C:\"text-decoration shorthand property\"};\n","module.exports={A:{D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\"},L:{\"1\":\"H\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB\"},M:{\"1\":\"H\"},A:{\"2\":\"J D E F A B CC\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB PC QC RC SC qB AC TC rB\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"I u J D HC zB IC JC KC OC\",\"33\":\"E F A B C LC 0B qB\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"33\":\"E YC ZC aC bC cC dC eC fC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"}},B:6,C:\"text-decoration-style property\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"132\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"132\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"I u J D E F A B C K L G M N\",\"132\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u HC zB IC\",\"132\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"zB UC BC VC WC XC\",\"132\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"132\":\"f tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"132\":\"g\"},L:{\"132\":\"H\"},M:{\"132\":\"H\"},N:{\"132\":\"A B\"},O:{\"132\":\"vC\"},P:{\"2\":\"I wC\",\"132\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"132\":\"1B\"},R:{\"132\":\"9C\"},S:{\"132\":\"AD\"}},B:2,C:\"Media Fragments\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB EC FC\",\"260\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"324\":\"RB SB TB UB VB WB XB YB uB ZB vB\"},E:{\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"132\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\",\"324\":\"CB DB EB FB GB HB IB JB KB LB MB NB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"260\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"132\":\"wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"260\":\"AD\"}},B:5,C:\"Media Capture from DOM Elements API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB\",\"194\":\"NB OB\"},E:{\"1\":\"G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\",\"322\":\"K L rB 1B\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"194\":\"AB BB\"},G:{\"1\":\"mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC\",\"578\":\"fC gC hC iC jC kC lC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"MediaRecorder API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"132\":\"B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"66\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB\"},D:{\"1\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M\",\"33\":\"0 1 2 3 4 5 6 z\",\"66\":\"N O v w x y\"},E:{\"1\":\"E F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC\",\"260\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"tB I pC qC rC sC BC tC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Media Source Extensions\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB I u J D EC FC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T\",\"450\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"66\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"66\":\"BB CB DB EB FB GB HB IB JB KB LB MB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"450\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Context menu item (menuitem element)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB\",\"132\":\"g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"258\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B MC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"513\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"16\":\"wC\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"theme-color Meta Tag\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F PC QC RC SC\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"meter element\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s EC FC\"},D:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Web MIDI API\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"8\":\"J CC\",\"129\":\"D\",\"257\":\"E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS min/max-width/height\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"132\":\"I u J D E F A B C K L G M N O v w x EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"2\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"MP3 audio format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O\",\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"386\":\"x y\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Dynamic Adaptive Streaming over HTTP (MPEG-DASH)\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w EC FC\",\"4\":\"0 1 2 3 4 5 6 7 8 9 x y z AB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"4\":\"tB I pC qC sC BC\",\"132\":\"rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"260\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"MPEG-4/H.264 video format\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"2\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 Multiple backgrounds\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O\",\"516\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"132\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB\",\"164\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB EC FC\",\"516\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a\",\"1028\":\"b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"420\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"516\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"132\":\"F LC\",\"164\":\"D E KC\",\"420\":\"I u J HC zB IC JC\"},F:{\"1\":\"C qB AC TC rB\",\"2\":\"F B PC QC RC SC\",\"420\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB\",\"516\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"132\":\"ZC aC\",\"164\":\"E XC YC\",\"420\":\"zB UC BC VC WC\"},H:{\"1\":\"oC\"},I:{\"420\":\"tB I pC qC rC sC BC tC uC\",\"516\":\"f\"},J:{\"420\":\"D A\"},K:{\"1\":\"C qB AC rB\",\"2\":\"A B\",\"516\":\"g\"},L:{\"516\":\"H\"},M:{\"1028\":\"H\"},N:{\"1\":\"A B\"},O:{\"516\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"420\":\"I\"},Q:{\"516\":\"1B\"},R:{\"516\":\"9C\"},S:{\"164\":\"AD\"}},B:4,C:\"CSS3 Multiple column layout\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"260\":\"F A B\"},B:{\"132\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G M N O\"},C:{\"2\":\"DC tB I u EC FC\",\"260\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"16\":\"I u J D E F A B C K L\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"16\":\"HC zB\",\"132\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"C TC rB\",\"2\":\"F PC QC RC SC\",\"16\":\"B qB AC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"16\":\"zB UC\",\"132\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"16\":\"pC qC\",\"132\":\"tB I f rC sC BC tC uC\"},J:{\"132\":\"D A\"},K:{\"1\":\"C rB\",\"2\":\"A\",\"16\":\"B qB AC\",\"132\":\"g\"},L:{\"132\":\"H\"},M:{\"260\":\"H\"},N:{\"260\":\"A B\"},O:{\"132\":\"vC\"},P:{\"132\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"132\":\"1B\"},R:{\"132\":\"9C\"},S:{\"260\":\"AD\"}},B:5,C:\"Mutation events\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E CC\",\"8\":\"F A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K EC FC\"},D:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N\",\"33\":\"0 1 2 O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"33\":\"J\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB pC qC rC\",\"8\":\"I sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"8\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Mutation Observer\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"2\":\"CC\",\"8\":\"J D\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"4\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Web Storage - name/value pairs\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"194\":\"P Q R S T U\",\"260\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g\",\"194\":\"lB mB nB oB pB P Q R S T U\",\"260\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC\",\"516\":\"2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB PC QC RC SC qB AC TC rB\",\"194\":\"aB bB cB dB eB fB gB hB iB jB\",\"260\":\"kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC\",\"516\":\"2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"File System Access API\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\",\"33\":\"J D E F A B C\"},E:{\"1\":\"E F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"2\":\"tB pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Navigation Timing API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"1028\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\",\"1028\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB PC QC RC SC qB AC TC rB\",\"1028\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"pC tC uC\",\"132\":\"tB I qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"132\":\"I\",\"516\":\"wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"260\":\"AD\"}},B:7,C:\"Network Information API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\",\"36\":\"u J D E F A B C K L G M N O v w x\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\",\"1028\":\"9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"36\":\"f tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"2\":\"A B C qB AC rB\",\"36\":\"g\"},L:{\"513\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"36\":\"I\",\"258\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"258\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Web Notifications\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB EC FC\"},D:{\"1\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"16\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Object.entries\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G\",\"260\":\"M N O\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB EC FC\"},D:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC\",\"132\":\"E F KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F G M N O PC QC RC\",\"33\":\"B C SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"132\":\"E YC ZC aC\"},H:{\"33\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"tB I pC qC rC sC BC tC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A\",\"33\":\"B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 object-fit/object-position\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB\",\"2\":\"F B C G M N O v w x y DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"I\",\"2\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Object.observe data binding\"};\n","module.exports={A:{A:{\"8\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB EC FC\"},D:{\"1\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"8\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"8\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"8\":\"oC\"},I:{\"1\":\"f\",\"8\":\"tB I pC qC rC sC BC tC uC\"},J:{\"8\":\"D A\"},K:{\"1\":\"g\",\"8\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"8\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Object.values method\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O\",\"2\":\"C P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"130\":\"A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Object RTC (ORTC) API for WebRTC\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"F CC\",\"8\":\"J D E\"},B:{\"1\":\"C K L G M N O P Q R S T\",\"2\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S EC FC\",\"2\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"4\":\"tB\",\"8\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T\",\"2\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB SC qB AC TC rB\",\"2\":\"F g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC\",\"8\":\"QC RC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I pC qC rC sC BC tC uC\",\"2\":\"f\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C qB AC rB\",\"2\":\"A g\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"Offline web applications\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB EC FC\",\"194\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p\"},D:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\",\"322\":\"YB uB ZB vB aB bB cB dB eB fB gB\"},E:{\"1\":\"9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB PC QC RC SC qB AC TC rB\",\"322\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\"},G:{\"1\":\"9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"194\":\"AD\"}},B:1,C:\"OffscreenCanvas\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B\",\"132\":\"G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Ogg Vorbis audio format\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"8\":\"F A B\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"8\":\"C K L G M\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Ogg/Theora video format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G\",\"16\":\"M N O v\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"16\":\"J\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\",\"16\":\"C\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Reversed attribute of ordered lists\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G\"},C:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB EC FC\"},D:{\"1\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"\\\"once\\\" event listener option\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D CC\",\"260\":\"E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\",\"516\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC\",\"4\":\"rB\"},G:{\"1\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"A\",\"132\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Online/offline status\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 I u J D E F A B C K L G M N O v w x y z\"},E:{\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"132\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"132\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Opus audio format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB\",\"194\":\"YB uB ZB vB aB bB cB dB eB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Orientation Sensor\"};\n","module.exports={A:{A:{\"2\":\"J D CC\",\"260\":\"E\",\"388\":\"F A B\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"388\":\"C K L\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC\",\"129\":\"rB\",\"260\":\"F B PC QC RC SC qB AC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g rB\",\"260\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"388\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS outline properties\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\"},C:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB EC FC\"},D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"String.prototype.padStart(), String.prototype.padEnd()\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"PageTransitionEvent\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F EC FC\",\"33\":\"A B C K L G M N\"},D:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K\",\"33\":\"0 1 2 3 4 5 6 7 8 L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B C PC QC RC SC qB AC TC\",\"33\":\"G M N O v\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC\",\"33\":\"tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"33\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Page Visibility\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB EC FC\"},D:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Passive event listeners\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"16\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H EC FC\",\"16\":\"xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"xB yB GC\"},E:{\"1\":\"C K rB\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B qB\",\"16\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB PC QC RC SC qB AC TC rB\",\"16\":\"TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"16\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"16\":\"f\"},J:{\"2\":\"D\",\"16\":\"A\"},K:{\"2\":\"A B C qB AC rB\",\"16\":\"g\"},L:{\"16\":\"H\"},M:{\"16\":\"H\"},N:{\"2\":\"A\",\"16\":\"B\"},O:{\"16\":\"vC\"},P:{\"2\":\"I wC xC\",\"16\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"16\":\"1B\"},R:{\"16\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Password Rules\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\",\"132\":\"L G M N O\"},C:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"132\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB\"},D:{\"1\":\"gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\",\"132\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC\",\"132\":\"E F KC\"},F:{\"1\":\"VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y PC QC RC SC qB AC TC rB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"16\":\"E\",\"132\":\"YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"132\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Path2D\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\",\"322\":\"L\",\"8196\":\"G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB EC FC\",\"4162\":\"VB WB XB YB uB ZB vB aB bB cB dB\",\"16452\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB\",\"194\":\"TB UB VB WB XB YB\",\"1090\":\"uB ZB\",\"8196\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\",\"514\":\"A B 0B\",\"8196\":\"C qB\"},F:{\"1\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB PC QC RC SC qB AC TC rB\",\"194\":\"GB HB IB JB KB LB MB NB\",\"8196\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\",\"514\":\"bC cC dC\",\"8196\":\"eC fC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"2049\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"8196\":\"wC xC yC zC 0C 0B 1C\"},Q:{\"8196\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"Payment Request API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"132\":\"B\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"C K L\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"16\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Built-in PDF viewer\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB EC FC\"},D:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Permissions API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"258\":\"P Q R S T U\",\"322\":\"V W\",\"388\":\"X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g EC FC\",\"258\":\"lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB\",\"258\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U\",\"322\":\"V W\",\"388\":\"X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\",\"258\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB PC QC RC SC qB AC TC rB\",\"258\":\"NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB\",\"322\":\"kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d\",\"388\":\"e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\",\"258\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"258\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"388\":\"g\"},L:{\"388\":\"H\"},M:{\"258\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC\",\"258\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"258\":\"1B\"},R:{\"388\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Permissions Policy\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB EC FC\",\"132\":\"kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"1090\":\"fB\",\"1412\":\"jB\",\"1668\":\"gB hB iB\"},D:{\"1\":\"iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB\",\"2114\":\"hB\"},E:{\"1\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\",\"4100\":\"A B C K 0B qB rB\"},F:{\"1\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB PC QC RC SC qB AC TC rB\",\"8196\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB\"},G:{\"1\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\",\"4100\":\"ZC aC bC cC dC eC fC gC hC iC jC kC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"16388\":\"H\"},M:{\"16388\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Picture-in-Picture\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"578\":\"AB BB CB DB\"},D:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB\",\"194\":\"DB\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"322\":\"0\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Picture element\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\"},C:{\"2\":\"DC\",\"194\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"194\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"194\":\"AD\"}},B:1,C:\"Ping attribute\"};\n","module.exports={A:{A:{\"1\":\"D E F A B\",\"2\":\"CC\",\"8\":\"J\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"PNG alpha transparency\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"2\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"CSS pointer-events (for HTML)\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F CC\",\"164\":\"A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\",\"8\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\",\"328\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB\"},D:{\"1\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w x\",\"8\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"584\":\"SB TB UB\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\",\"8\":\"D E F A B C JC KC LC 0B qB\",\"1096\":\"rB\"},F:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"8\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB\",\"584\":\"FB GB HB\"},G:{\"1\":\"iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC\",\"6148\":\"hC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"8\":\"tB I pC qC rC sC BC tC uC\"},J:{\"8\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A\",\"8\":\"B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"36\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"wC\",\"8\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"328\":\"AD\"}},B:2,C:\"Pointer events\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\"},C:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 L G M N O v w x y z AB BB CB DB EB FB GB\"},D:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G\",\"33\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB\",\"66\":\"M N O v w x\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"G M N O v w x y z\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Pointer Lock API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T\",\"322\":\"Z a b c d e h i j k l m n o p q r s t f H\",\"450\":\"U V W X Y\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB\",\"194\":\"mB nB oB pB P Q R S T\",\"322\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"450\":\"U\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB PC QC RC SC qB AC TC rB\",\"194\":\"aB bB cB dB eB fB gB hB iB jB kB\",\"322\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"450\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Portals\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB EC FC\"},D:{\"1\":\"nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB\"},E:{\"1\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\"},F:{\"1\":\"aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"prefers-color-scheme media query\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB EC FC\"},D:{\"1\":\"lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"prefers-reduced-motion media query\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F PC QC RC SC\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\",\"132\":\"XC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"progress element\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N\"},C:{\"1\":\"YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB EC FC\"},D:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Promise.prototype.finally\"};\n","module.exports={A:{A:{\"8\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"4\":\"3 4\",\"8\":\"0 1 2 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"8\",\"8\":\"0 1 2 3 4 5 6 7 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I u J D HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"4\":\"v\",\"8\":\"F B C G M N O PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"zB UC BC VC WC XC\"},H:{\"8\":\"oC\"},I:{\"1\":\"f uC\",\"8\":\"tB I pC qC rC sC BC tC\"},J:{\"8\":\"D A\"},K:{\"1\":\"g\",\"8\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Promises\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Proximity API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O EB FB GB HB IB JB KB LB MB NB OB\",\"66\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"1 2 3 4 5 6 7 8 9 F B C AB BB PC QC RC SC qB AC TC rB\",\"66\":\"0 G M N O v w x y z\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Proxy object\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB\",\"2\":\"F B C G M N O v eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"4\":\"z\",\"16\":\"0 w x y\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B\",\"2\":\"1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"HTTP Public Key Pinning\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O\",\"2\":\"C K L G M\",\"257\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB EC FC\",\"257\":\"KB MB NB OB PB QB RB TB UB VB WB XB YB uB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"1281\":\"LB SB ZB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB\",\"257\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"388\":\"KB LB MB NB OB PB\"},E:{\"2\":\"I u J HC zB IC JC\",\"514\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB\",\"4612\":\"6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB PC QC RC SC qB AC TC rB\",\"16\":\"DB EB FB GB HB\",\"257\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\",\"8196\":\"9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"257\":\"AD\"}},B:5,C:\"Push API\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"CC\",\"8\":\"J D\",\"132\":\"E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"8\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"8\":\"F PC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"querySelector/querySelectorAll\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"16\":\"CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC tB EC FC\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"0 1 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F PC\",\"132\":\"B C QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC WC\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"132\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"257\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"readonly attribute of input and textarea elements\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"132\":\"B\"},B:{\"1\":\"P Q R S\",\"132\":\"C K L G M N O\",\"513\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB EC FC\",\"513\":\"W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T\",\"2\":\"I u J D E F A B C K L G M N O v w\",\"260\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\",\"513\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"C qB rB\",\"2\":\"I u J D HC zB IC JC\",\"132\":\"E F A B KC LC 0B\",\"1025\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"513\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"fC gC hC iC\",\"2\":\"zB UC BC VC WC XC\",\"132\":\"E YC ZC aC bC cC dC eC\",\"1025\":\"jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"513\":\"g\"},L:{\"513\":\"H\"},M:{\"513\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"513\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Referrer Policy\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"129\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC\"},D:{\"2\":\"I u J D E F A B C\",\"129\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B PC QC RC SC qB AC\",\"129\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"129\":\"A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Custom protocol handling\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"rel=noopener\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"132\":\"B\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"C\"},C:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L G\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Link type \\\"noreferrer\\\"\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\",\"132\":\"N\"},C:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB\",\"132\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB PC QC RC SC qB AC TC rB\",\"132\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"132\":\"wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"relList (DOMTokenList)\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E CC\",\"132\":\"F A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"2\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F B PC QC RC SC qB AC\"},G:{\"1\":\"E UC BC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\",\"260\":\"VC\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g rB\",\"2\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"rem (root em) units\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"33\":\"B C K L G M N O v w x y\",\"164\":\"I u J D E F A\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F\",\"33\":\"y z\",\"164\":\"O v w x\",\"420\":\"A B C K L G M N\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"33\":\"J\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"33\":\"WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"requestAnimationFrame\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB EC FC\",\"194\":\"TB UB\"},D:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB\"},E:{\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB\",\"322\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC\",\"322\":\"kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"requestIdleCallback\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB EC FC\"},D:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\",\"194\":\"UB VB WB XB YB uB ZB vB aB bB\"},E:{\"1\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB rB\",\"66\":\"K\"},F:{\"1\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB PC QC RC SC qB AC TC rB\",\"194\":\"HB IB JB KB LB MB NB OB PB QB RB\"},G:{\"1\":\"kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Resize Observer\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"7 8 9 AB\"},D:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"260\":\"B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Resource Timing\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"1\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB\",\"194\":\"KB LB MB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"194\":\"7 8 9\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Rest parameters\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\",\"516\":\"G M N O\"},C:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB\"},D:{\"1\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w x y\",\"33\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\"},F:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"130\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"WebRTC Peer-to-peer connections\"};\n","module.exports={A:{A:{\"4\":\"J D E F A B CC\"},B:{\"4\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EC FC\"},D:{\"4\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"8\":\"I\"},E:{\"4\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I HC zB\"},F:{\"4\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"8\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"4\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"zB UC BC\"},H:{\"8\":\"oC\"},I:{\"4\":\"tB I f sC BC tC uC\",\"8\":\"pC qC rC\"},J:{\"4\":\"A\",\"8\":\"D\"},K:{\"4\":\"g\",\"8\":\"A B C qB AC rB\"},L:{\"4\":\"H\"},M:{\"1\":\"H\"},N:{\"4\":\"A B\"},O:{\"4\":\"vC\"},P:{\"4\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"4\":\"1B\"},R:{\"4\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Ruby annotation\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"2\":\"J D CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 I u J D E F A B C K L G M N O v w x y z\",\"2\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J IC\",\"2\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"JC\",\"129\":\"I HC zB\"},F:{\"1\":\"F B C G M N O PC QC RC SC qB AC TC rB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"UC BC VC WC XC\",\"2\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"129\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I pC qC rC sC BC tC\",\"2\":\"f uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C qB AC rB\",\"2\":\"g\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"display: run-in\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"388\":\"B\"},B:{\"1\":\"O P Q R S T U\",\"2\":\"C K L G\",\"129\":\"M N\",\"513\":\"V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB EC FC\"},D:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"513\":\"Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B qB\",\"2052\":\"L MC\",\"3076\":\"C K rB 1B\"},F:{\"1\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB PC QC RC SC qB AC TC rB\",\"513\":\"jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC\",\"2052\":\"fC gC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"513\":\"g\"},L:{\"513\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"16\":\"1B\"},R:{\"513\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"'SameSite' cookie attribute\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"164\":\"B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"36\":\"C K L G M N O\"},C:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N EC FC\",\"36\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB\"},D:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB\"},E:{\"1\":\"9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A\",\"36\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"16\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"Screen Orientation\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"2\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"132\":\"u\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"async attribute for external scripts\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"132\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"257\":\"0 1 2 3 4 5 6 I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"defer attribute for external scripts\"};\n","module.exports={A:{A:{\"2\":\"J D CC\",\"132\":\"E F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"132\":\"C K L G M N O\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB EC FC\"},D:{\"1\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\",\"132\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F PC QC RC SC\",\"16\":\"B qB AC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB TC rB\"},G:{\"1\":\"sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\",\"132\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"16\":\"pC qC\",\"132\":\"tB I rC sC BC tC uC\"},J:{\"132\":\"D A\"},K:{\"1\":\"g\",\"132\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"132\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"scrollIntoView\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Element.scrollIntoViewIfNeeded()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB\",\"2\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB\",\"2\":\"F B C g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"SDCH Accept-Encoding/Content-Encoding\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"16\":\"CC\",\"260\":\"J D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB EC FC\",\"2180\":\"JB KB LB MB NB OB PB QB RB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"132\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"16\":\"BC\",\"132\":\"zB UC\",\"516\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"16\":\"tB I pC qC rC sC\",\"1025\":\"BC\"},J:{\"1\":\"A\",\"16\":\"D\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC\",\"132\":\"rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"16\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2180\":\"AD\"}},B:5,C:\"Selection API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB EC FC\"},D:{\"1\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB\",\"196\":\"ZB vB aB bB\",\"324\":\"cB\"},E:{\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\",\"516\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Server Timing\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\",\"322\":\"G M\"},C:{\"1\":\"KB MB NB OB PB QB RB TB UB VB WB XB YB uB vB aB bB cB dB eB fB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"9 AB BB CB DB EB FB GB HB IB JB\",\"513\":\"LB SB ZB gB\"},D:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB\",\"4\":\"GB HB IB JB KB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\"},F:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"4\":\"3 4 5 6 7\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"4\":\"f\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Service Workers\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O\",\"2\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Efficient Script Yielding: setImmediate()\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P\",\"2\":\"C K L G M N O Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"66\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB\"},D:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\",\"2\":\"0 I u J D E F A B C K L G M N O v w x y z Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"1 2 3 4 5 6 7 8 9 AB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB\",\"2\":\"F B C fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"33\":\"G M N O v w x\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC\",\"33\":\"tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C\",\"2\":\"3C 4C 5C sB 6C 7C 8C\",\"33\":\"I\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"Shadow DOM (deprecated V0 spec)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB EC FC\",\"322\":\"YB\",\"578\":\"uB ZB vB aB\"},D:{\"1\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB\"},E:{\"1\":\"A B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\"},F:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\",\"132\":\"bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"4\":\"wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Shadow DOM (V1)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z\",\"2\":\"C K L G\",\"194\":\"M N O\",\"513\":\"a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB EC FC\",\"194\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g\",\"450\":\"lB mB nB oB pB\",\"513\":\"P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB\",\"194\":\"ZB vB aB bB cB dB eB fB\",\"513\":\"a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A HC zB IC JC KC LC\",\"194\":\"B C K L G 0B qB rB 1B MC NC\",\"513\":\"2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB PC QC RC SC qB AC TC rB\",\"194\":\"NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\",\"194\":\"cC dC eC fC gC hC iC jC kC lC mC nC\",\"513\":\"2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"513\":\"g\"},L:{\"513\":\"H\"},M:{\"513\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C\",\"513\":\"5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"513\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Shared Array Buffer\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"u J IC sB 6B 7B 8B 9B OC\",\"2\":\"I D E F A B C K L G HC zB JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"2\":\"F PC QC RC\"},G:{\"1\":\"VC WC sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C qB AC rB\",\"2\":\"g\",\"16\":\"A\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"I\",\"2\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Shared Web Workers\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J CC\",\"132\":\"D E\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Server Name Indication\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F A CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"2\":\"DC tB I u J D E F A B C RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"2\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"E F A B C LC 0B qB\",\"2\":\"I u J D HC zB IC JC KC\",\"129\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB IB KB rB\",\"2\":\"F B C GB HB JB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC\",\"2\":\"zB UC BC VC WC XC\",\"257\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I sC BC tC uC\",\"2\":\"f pC qC rC\"},J:{\"2\":\"D A\"},K:{\"1\":\"rB\",\"2\":\"A B C g qB AC\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"2\":\"vC\"},P:{\"1\":\"I\",\"2\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"SPDY protocol\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"1026\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\",\"322\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 I u J D E F A B C K L G M N O v w x y z\",\"164\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L HC zB IC JC KC LC 0B qB rB 1B\",\"2084\":\"G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"1026\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC\",\"2084\":\"mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"164\":\"g\"},L:{\"164\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"164\":\"vC\"},P:{\"164\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"164\":\"1B\"},R:{\"164\":\"9C\"},S:{\"322\":\"AD\"}},B:7,C:\"Speech Recognition API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O\",\"2\":\"C K\",\"257\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},D:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\",\"2\":\"0 1 2 3 4 5 6 7 8 I u J D E F A B C K L G M N O v w x y z\",\"257\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\"},F:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB\",\"2\":\"0 1 2 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"257\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"Speech Synthesis API\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"4\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"4\":\"oC\"},I:{\"4\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"A\",\"4\":\"D\"},K:{\"4\":\"A B C g qB AC rB\"},L:{\"4\":\"H\"},M:{\"4\":\"H\"},N:{\"4\":\"A B\"},O:{\"4\":\"vC\"},P:{\"4\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"4\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Spellcheck attribute\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p\",\"2\":\"C K L G M N O\",\"129\":\"q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p\",\"129\":\"q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB rB\",\"2\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z RC SC qB AC TC rB\",\"2\":\"F PC QC\",\"129\":\"a b c d e\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC\",\"2\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I pC qC rC sC BC tC uC\",\"129\":\"f\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C qB AC rB\",\"2\":\"A\",\"129\":\"g\"},L:{\"129\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Web SQL Database\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C\",\"514\":\"K L G\"},C:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"8 9 AB BB CB DB\"},D:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z\",\"260\":\"AB BB CB DB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC JC\",\"260\":\"E KC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w PC QC RC SC qB AC TC rB\",\"260\":\"0 x y z\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"260\":\"E YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Srcset and sizes attributes\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M EC FC\",\"129\":\"CB DB EB FB GB HB\",\"420\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB\"},D:{\"1\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w\",\"420\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\"},F:{\"1\":\"GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B G M N PC QC RC SC qB AC TC\",\"420\":\"0 1 2 3 4 5 6 7 8 9 C O v w x y z AB BB CB DB EB FB rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"513\":\"kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"1537\":\"dC eC fC gC hC iC jC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"420\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B qB AC\",\"420\":\"C rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"420\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"getUserMedia/Stream API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"130\":\"B\"},B:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"C K\",\"260\":\"L G\",\"1028\":\"P Q R S T U V W X\",\"5124\":\"M N O\"},C:{\"1\":\"n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB EC FC\",\"5124\":\"l m\",\"7172\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k\",\"7746\":\"XB YB uB ZB vB aB bB cB\"},D:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\",\"260\":\"SB TB UB VB WB XB YB\",\"1028\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X\"},E:{\"2\":\"I u J D E F HC zB IC JC KC LC\",\"1028\":\"G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"3076\":\"A B C K L 0B qB rB 1B\"},F:{\"1\":\"nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB PC QC RC SC qB AC TC rB\",\"260\":\"FB GB HB IB JB KB LB\",\"1028\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC\",\"16\":\"bC\",\"1028\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1028\":\"vC\"},P:{\"1\":\"5C sB 6C 7C 8C\",\"2\":\"I wC xC\",\"1028\":\"yC zC 0C 0B 1C 2C 3C 4C\"},Q:{\"1028\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"Streams\"};\n","module.exports={A:{A:{\"2\":\"J D E F A CC\",\"129\":\"B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Strict Transport Security\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"322\":\"VB WB XB YB uB ZB\"},D:{\"2\":\"I u J D E F A B C K L G M N O v DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"194\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"1\":\"AD\"}},B:7,C:\"Scoped CSS\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"p q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Subresource Loading with Web Bundles\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\"},C:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB EC FC\"},D:{\"1\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\"},F:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"194\":\"dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Subresource Integrity\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"516\":\"C K L G\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"260\":\"I u J D E F A B C K L G M N O v w x y z\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"I\"},E:{\"1\":\"u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC\",\"132\":\"I zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"132\":\"zB UC\"},H:{\"260\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g\",\"260\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"SVG in CSS backgrounds\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\",\"4\":\"u J D\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"SVG filters\"};\n","module.exports={A:{A:{\"2\":\"F A B CC\",\"8\":\"J D E\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB\",\"2\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"130\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC\"},F:{\"1\":\"0 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"2\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"130\":\"1 2 3 4 5 6 7 8 9 AB BB CB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"258\":\"oC\"},I:{\"1\":\"tB I sC BC tC uC\",\"2\":\"f pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C qB AC rB\",\"2\":\"g\"},L:{\"130\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"I\",\"130\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"130\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"SVG fonts\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"260\":\"F A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"1\":\"QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\",\"132\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB\"},E:{\"1\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D F A B HC zB IC JC LC 0B\",\"132\":\"E KC\"},F:{\"1\":\"DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"G M N O v w x y\",\"4\":\"B C QC RC SC qB AC TC\",\"16\":\"F PC\",\"132\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC ZC aC bC cC dC\",\"132\":\"E YC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D\",\"132\":\"A\"},K:{\"1\":\"g rB\",\"4\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"132\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"SVG fragment identifiers\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"388\":\"F A B\"},B:{\"4\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC\",\"4\":\"tB\"},D:{\"4\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"HC zB\",\"4\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"4\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"4\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"4\":\"f tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"4\":\"A B C g qB AC rB\"},L:{\"4\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"4\":\"vC\"},P:{\"4\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"4\":\"1B\"},R:{\"4\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"SVG effects for HTML\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E\",\"129\":\"F A B\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"C K L G M\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"8\":\"I u J\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"I u HC zB\",\"129\":\"J D E IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"B SC qB AC\",\"8\":\"F PC QC RC\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"8\":\"zB UC BC\",\"129\":\"E VC WC XC YC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"pC qC rC\",\"129\":\"tB I sC BC\"},J:{\"1\":\"A\",\"129\":\"D\"},K:{\"1\":\"C g rB\",\"8\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"129\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Inline SVG in HTML5\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"0 1 2 3 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC\",\"4\":\"zB\",\"132\":\"I u J D E IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"132\":\"E zB UC BC VC WC XC YC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"pC qC rC\",\"132\":\"tB I sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"SVG in HTML img element\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"8\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"I\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"HC zB\",\"132\":\"I u IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"132\":\"zB UC BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"SVG SMIL animation\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E\",\"772\":\"F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"513\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"4\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"4\":\"HC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"pC qC rC\",\"132\":\"tB I sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"257\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"SVG (basic support)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB\",\"132\":\"jB kB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Signed HTTP Exchanges (SXG)\"};\n","module.exports={A:{A:{\"1\":\"D E F A B\",\"16\":\"J CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"16\":\"DC tB EC FC\",\"129\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"16\":\"I u HC zB\",\"257\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"16\":\"F\"},G:{\"769\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"16\":\"oC\"},I:{\"16\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"16\":\"D A\"},K:{\"1\":\"g\",\"16\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"16\":\"A B\"},O:{\"1\":\"vC\"},P:{\"16\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"129\":\"AD\"}},B:1,C:\"tabindex global attribute\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"16\":\"C\"},C:{\"1\":\"AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB\"},E:{\"1\":\"A B K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC\",\"129\":\"C\"},F:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"ZC aC bC cC dC eC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC\",\"129\":\"fC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"ES6 Template Literals (Template Strings)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\",\"388\":\"K L\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x EC FC\"},D:{\"1\":\"BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 I u J D E F A B C K L G M N O v w x y z\",\"132\":\"2 3 4 5 6 7 8 9 AB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D HC zB IC\",\"388\":\"E KC\",\"514\":\"JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"132\":\"G M N O v w x\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\",\"388\":\"E YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"HTML templates\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"Temporal\"};\n","module.exports={A:{A:{\"2\":\"J D E A B CC\",\"16\":\"F\"},B:{\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"16\":\"I u\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"B C\"},E:{\"2\":\"I J HC zB IC\",\"16\":\"u D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC AC TC rB\",\"16\":\"qB\"},G:{\"2\":\"zB UC BC VC WC\",\"16\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC sC BC tC uC\",\"16\":\"rC\"},J:{\"2\":\"A\",\"16\":\"D\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Test feature - updated\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"2052\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB I u EC FC\",\"1028\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"1060\":\"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O v w x y z AB BB\"},D:{\"2\":\"0 1 I u J D E F A B C K L G M N O v w x y z\",\"226\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB\",\"2052\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D HC zB IC JC\",\"772\":\"K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"804\":\"E F A B C LC 0B qB\",\"1316\":\"KC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB PC QC RC SC qB AC TC rB\",\"226\":\"BB CB DB EB FB GB HB IB JB\",\"2052\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"zB UC BC VC WC XC\",\"292\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"2052\":\"g\"},L:{\"2052\":\"H\"},M:{\"1028\":\"H\"},N:{\"2\":\"A B\"},O:{\"2052\":\"vC\"},P:{\"2\":\"I wC xC\",\"2052\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2052\":\"1B\"},R:{\"2052\":\"9C\"},S:{\"1028\":\"AD\"}},B:4,C:\"text-decoration styling\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"164\":\"P Q R S T U V W X Y Z a b c d e h i j\"},C:{\"1\":\"MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB EC FC\",\"322\":\"LB\"},D:{\"1\":\"k l m n o p q r s t f H xB yB GC\",\"2\":\"0 I u J D E F A B C K L G M N O v w x y z\",\"164\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j\"},E:{\"1\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\",\"164\":\"D JC\"},F:{\"1\":\"V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"164\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC\",\"164\":\"tC uC\"},J:{\"2\":\"D\",\"164\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"164\":\"vC\"},P:{\"1\":\"7C 8C\",\"164\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C\"},Q:{\"164\":\"1B\"},R:{\"164\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"text-emphasis styling\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B\",\"2\":\"CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"8\":\"DC tB I u J EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"33\":\"F PC QC RC SC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"g rB\",\"33\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"CSS3 Text-overflow\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"33\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\",\"258\":\"2\"},E:{\"2\":\"I u J D E F A B C K L G HC zB JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"258\":\"IC\"},F:{\"1\":\"JB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB KB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"zB UC BC\",\"33\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"33\":\"H\"},N:{\"161\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS text-size-adjust\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L\",\"33\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"161\":\"G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB EC FC\",\"161\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"450\":\"OB\"},D:{\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"33\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"33\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"36\":\"zB\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB\",\"33\":\"I f pC qC rC sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"33\":\"g\"},L:{\"33\":\"H\"},M:{\"161\":\"H\"},N:{\"2\":\"A B\"},O:{\"33\":\"vC\"},P:{\"33\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"33\":\"1B\"},R:{\"33\":\"9C\"},S:{\"161\":\"AD\"}},B:7,C:\"CSS text-stroke and text-fill\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"16\":\"F\"},G:{\"1\":\"E UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Node.textContent\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O EC FC\",\"132\":\"v\"},D:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"TextEncoder & TextDecoder\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D CC\",\"66\":\"E F A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x y EC FC\",\"66\":\"z\",\"129\":\"gB hB iB jB kB g lB mB nB oB\",\"388\":\"pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T\",\"2\":\"I u J D E F A B C K L G M N O v w x\",\"1540\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"D E F A B C K KC LC 0B qB rB\",\"2\":\"I u J HC zB IC JC\",\"513\":\"L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB rB\",\"2\":\"F B C PC QC RC SC qB AC TC\",\"1540\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"129\":\"H\"},N:{\"1\":\"B\",\"66\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"TLS 1.1\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D CC\",\"66\":\"E F A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"66\":\"0 1 2\"},D:{\"1\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F G PC\",\"66\":\"B C QC RC SC qB AC TC rB\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"66\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"TLS 1.2\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB EC FC\",\"132\":\"ZB vB aB\",\"450\":\"RB SB TB UB VB WB XB YB uB\"},D:{\"1\":\"iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\",\"706\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB\"},E:{\"1\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\",\"1028\":\"K rB 1B\"},F:{\"1\":\"XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB PC QC RC SC qB AC TC rB\",\"706\":\"UB VB WB\"},G:{\"1\":\"gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:6,C:\"TLS 1.3\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"8\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"578\":\"C K L G M N O\"},C:{\"1\":\"0 O v w x y z SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"4\":\"I u J D E F A B C K L G M N\",\"194\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w x\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A\",\"260\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"Touch events\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E\",\"129\":\"A B\",\"161\":\"F\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"C K L G M\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"33\":\"I u J D E F A B C K L G EC FC\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"33\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F PC QC\",\"33\":\"B C G M N O v w x y RC SC qB AC TC\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"33\":\"tB I pC qC rC sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 2D Transforms\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"132\":\"A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F EC FC\",\"33\":\"A B C K L G\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B\",\"33\":\"0 1 2 3 4 5 6 7 8 9 C K L G M N O v w x y z AB BB\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\",\"33\":\"I u J D E IC JC KC\",\"257\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"G M N O v w x y\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"33\":\"E zB UC BC VC WC XC YC\",\"257\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"pC qC rC\",\"33\":\"tB I sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:5,C:\"CSS3 3D Transforms\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Trusted Types for DOM manipulation\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"132\":\"F A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e QC RC SC qB AC TC rB\",\"2\":\"F PC\"},G:{\"1\":\"E BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f qC rC sC BC tC uC\",\"2\":\"pC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"TTF/OTF - TrueType and OpenType font support\"};\n","module.exports={A:{A:{\"1\":\"B\",\"2\":\"J D E F CC\",\"132\":\"A\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\",\"260\":\"IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F B PC QC RC SC qB AC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC\",\"260\":\"BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"I f sC BC tC uC\",\"2\":\"tB pC qC rC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"C g rB\",\"2\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Typed Arrays\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O r s t f H\",\"513\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q\"},C:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB EC FC\",\"322\":\"NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB r s t f H xB yB GC\",\"130\":\"EB FB GB\",\"513\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i\",\"578\":\"j k l m n o p q\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB rB\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB HB PC QC RC SC qB AC TC rB\",\"513\":\"GB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"322\":\"AD\"}},B:7,C:\"FIDO U2F API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB EC FC\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"16\":\"dC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:1,C:\"unhandledrejection/rejectionhandled events\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\"},C:{\"1\":\"IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB EC FC\"},D:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Upgrade Insecure Requests\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"66\":\"P Q R\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g\",\"66\":\"lB mB nB oB pB P Q\"},E:{\"1\":\"6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB\"},F:{\"1\":\"gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB PC QC RC SC qB AC TC rB\",\"66\":\"eB fB\"},G:{\"1\":\"6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"URL Scroll-To-Text Fragment\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\"},D:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v w x y\",\"130\":\"0 1 2 3 4 5 6 7 z\"},E:{\"1\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC JC\",\"130\":\"D\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"130\":\"G M N O\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\",\"130\":\"XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"tB I pC qC rC sC BC\",\"130\":\"tC\"},J:{\"2\":\"D\",\"130\":\"A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"URL API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\"},C:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"132\":\"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB\"},D:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB\"},E:{\"1\":\"B C K L G 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\"},F:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"URLSearchParams\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"132\":\"u IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F B PC QC RC SC qB AC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f sC BC tC uC\",\"2\":\"pC qC rC\"},J:{\"1\":\"D A\"},K:{\"1\":\"C g AC rB\",\"2\":\"A B qB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"ECMAScript 5 Strict Mode\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"33\":\"A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"33\":\"C K L G M N O\"},C:{\"1\":\"hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB EC FC\"},D:{\"1\":\"UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"33\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\"},E:{\"1\":\"OC\",\"33\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},F:{\"1\":\"HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"33\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB\"},G:{\"33\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"33\":\"tB I pC qC rC sC BC tC uC\"},J:{\"33\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"33\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"33\":\"I wC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"33\":\"AD\"}},B:5,C:\"CSS user-select: none\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EC FC\"},D:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"User Timing API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB EC FC\",\"4609\":\"aB bB cB dB eB fB gB hB iB\",\"4674\":\"vB\",\"5698\":\"ZB\",\"7490\":\"TB UB VB WB XB\",\"7746\":\"YB uB\",\"8705\":\"jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB\",\"4097\":\"eB\",\"4290\":\"uB ZB vB\",\"6148\":\"aB bB cB dB\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"4609\":\"B C qB rB\",\"8193\":\"K L 1B MC\"},F:{\"1\":\"UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PC QC RC SC qB AC TC rB\",\"4097\":\"TB\",\"6148\":\"PB QB RB SB\"},G:{\"1\":\"hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"4097\":\"dC eC fC gC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"4097\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"2\":\"I wC xC yC\",\"4097\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Variable fonts\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J D E F A B C K L\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"2\":\"F B PC QC RC SC qB AC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f tC uC\",\"16\":\"tB I pC qC rC sC BC\"},J:{\"16\":\"D A\"},K:{\"1\":\"C g rB\",\"2\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"SVG vector-effect: non-scaling-stroke\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A EC FC\",\"33\":\"B C K L G\"},D:{\"1\":\"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 I u J D E F A B C K L G M N O v w x y z\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"Vibration API\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"260\":\"I u J D E F A B C K L G M N O v EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A IC JC KC LC 0B\",\"2\":\"HC zB\",\"513\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"513\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"132\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Video element\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O\",\"322\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB\",\"322\":\"LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J HC zB IC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 F B C G M N O v w x y z PC QC RC SC qB AC TC rB\",\"322\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"322\":\"g\"},L:{\"322\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"322\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"322\":\"1B\"},R:{\"322\":\"9C\"},S:{\"194\":\"AD\"}},B:1,C:\"Video Tracks\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p\",\"194\":\"q r s\"},C:{\"1\":\"m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l EC FC\"},D:{\"1\":\"t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k\",\"194\":\"l m n o p q r s\"},E:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B\"},F:{\"1\":\"d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z PC QC RC SC qB AC TC rB\",\"194\":\"a b c\"},G:{\"1\":\"3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Small, Large, and Dynamic viewport units\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"132\":\"F\",\"260\":\"A B\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"260\":\"C K L G\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L G M N O EC FC\"},D:{\"1\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N O v\",\"260\":\"0 1 w x y z\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\",\"260\":\"J\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC\",\"516\":\"XC\",\"772\":\"WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"260\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"Viewport units: vw, vh, vmin, vmax\"};\n","module.exports={A:{A:{\"2\":\"J D CC\",\"4\":\"E F A B\"},B:{\"4\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"4\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"4\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"HC zB\",\"4\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F\",\"4\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"4\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"4\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC\",\"4\":\"f tC uC\"},J:{\"2\":\"D A\"},K:{\"4\":\"A B C g qB AC rB\"},L:{\"4\":\"H\"},M:{\"4\":\"H\"},N:{\"4\":\"A B\"},O:{\"4\":\"vC\"},P:{\"4\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"4\":\"1B\"},R:{\"4\":\"9C\"},S:{\"4\":\"AD\"}},B:2,C:\"WAI-ARIA Accessibility features\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"194\":\"P Q R S T U V W X Y\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB\",\"194\":\"jB kB g lB mB nB oB pB P Q R S T\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\",\"4\":\"9B OC\"},F:{\"1\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB PC QC RC SC qB AC TC rB\",\"194\":\"YB ZB aB bB cB dB eB fB gB hB iB jB kB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\",\"4\":\"9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Screen Wake Lock API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L\",\"578\":\"G\"},C:{\"1\":\"TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB EC FC\",\"194\":\"NB OB PB QB RB\",\"1025\":\"SB\"},D:{\"1\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB\",\"322\":\"RB SB TB UB VB WB\"},E:{\"1\":\"B C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\"},F:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB PC QC RC SC qB AC TC rB\",\"322\":\"EB FB GB HB IB JB\"},G:{\"1\":\"dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"194\":\"AD\"}},B:6,C:\"WebAssembly\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e RC SC qB AC TC rB\",\"2\":\"F PC QC\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"16\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"Wav audio format\"};\n","module.exports={A:{A:{\"1\":\"J D CC\",\"2\":\"E F A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"HC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"16\":\"F\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f rC sC BC tC uC\",\"16\":\"pC qC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"wbr (word break opportunity) element\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"260\":\"P Q R S\"},C:{\"1\":\"R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"260\":\"uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB\",\"516\":\"NB OB PB QB RB SB TB UB VB WB XB YB\",\"580\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB\",\"2049\":\"mB nB oB pB P Q\"},D:{\"1\":\"T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\",\"132\":\"CB DB EB\",\"260\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC 0B\",\"1090\":\"B C K qB rB\",\"2049\":\"L 1B MC\"},F:{\"1\":\"jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y PC QC RC SC qB AC TC rB\",\"132\":\"0 1 z\",\"260\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC\",\"1090\":\"dC eC fC gC hC iC jC\",\"2049\":\"kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"260\":\"vC\"},P:{\"260\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"260\":\"1B\"},R:{\"1\":\"9C\"},S:{\"516\":\"AD\"}},B:5,C:\"Web Animations API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M\",\"130\":\"N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"578\":\"nB oB pB P Q R wB S T U\"},D:{\"1\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC\",\"4\":\"9B\",\"260\":\"eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"Add to home screen (A2HS)\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"1025\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB\",\"194\":\"LB MB NB OB PB QB RB SB\",\"706\":\"TB UB VB\",\"1025\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB PC QC RC SC qB AC TC rB\",\"450\":\"CB DB EB FB\",\"706\":\"GB HB IB\",\"1025\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC uC\",\"1025\":\"f\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"1025\":\"g\"},L:{\"1025\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1025\":\"vC\"},P:{\"1\":\"xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC\"},Q:{\"2\":\"1B\"},R:{\"1025\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Web Bluetooth\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"66\":\"P Q R S T U V W X\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB\",\"66\":\"pB P Q R S T U V W X\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB PC QC RC SC qB AC TC rB\",\"66\":\"dB eB fB gB hB iB jB kB g lB mB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Web Serial API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q\",\"516\":\"R S T U V W X Y Z a b c d\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X\",\"130\":\"0 O v w x y z\",\"1028\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"L G MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\",\"2049\":\"K rB 1B\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\",\"2049\":\"gC hC iC jC kC\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I pC qC rC sC BC tC\",\"258\":\"f uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I\",\"258\":\"wC xC yC\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"Web Share API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C\",\"226\":\"K L G M N\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB EC FC\",\"5124\":\"ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB\"},E:{\"1\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB\",\"322\":\"rB\"},F:{\"1\":\"UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC\",\"578\":\"iC\",\"2052\":\"lC\",\"3076\":\"jC kC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1028\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:2,C:\"Web Authentication API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B\",\"260\":\"9B OC\"},F:{\"1\":\"Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B\",\"260\":\"9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"6C 7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"WebCodecs API\"};\n","module.exports={A:{A:{\"2\":\"CC\",\"8\":\"J D E F A\",\"129\":\"B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"129\":\"C K L G M N O\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"129\":\"I u J D E F A B C K L G M N O v w x y z\"},D:{\"1\":\"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D\",\"129\":\"0 1 2 3 4 5 6 7 8 E F A B C K L G M N O v w x y z\"},E:{\"1\":\"E F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\",\"129\":\"J D IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B PC QC RC SC qB AC TC\",\"129\":\"C G M N O rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC XC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"C g rB\",\"2\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A\",\"129\":\"B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"129\":\"AD\"}},B:6,C:\"WebGL - 3D Canvas graphics\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"IB JB KB\",\"450\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB\",\"2242\":\"LB MB NB OB PB QB\"},D:{\"1\":\"WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB\",\"578\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB\"},E:{\"1\":\"G NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A HC zB IC JC KC LC\",\"1090\":\"B C K L 0B qB rB 1B MC\"},F:{\"1\":\"JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB PC QC RC SC qB AC TC rB\"},G:{\"1\":\"nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC\",\"1090\":\"fC gC hC iC jC kC lC mC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2242\":\"AD\"}},B:6,C:\"WebGL 2.0\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P\",\"578\":\"Q R S T U V W X Y Z a b c\",\"1602\":\"d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB EC FC\",\"194\":\"bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\",\"578\":\"Q R S T U V W X Y Z a b c\",\"1602\":\"d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B HC zB IC JC KC LC 0B\",\"322\":\"C K L G qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB PC QC RC SC qB AC TC rB\",\"578\":\"g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"194\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"WebGPU\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\",\"66\":\"P Q R S T U V W X\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB\",\"66\":\"pB P Q R S T U V W X\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB PC QC RC SC qB AC TC rB\",\"66\":\"eB fB gB hB iB jB kB g lB mB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"WebHID API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"132\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"16\":\"I u J D E F A B C K L G\",\"132\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"132\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"CSS -webkit-user-drag property\"};\n","module.exports={A:{A:{\"2\":\"J D E CC\",\"520\":\"F A B\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"8\":\"C K\",\"388\":\"L G M N O\"},C:{\"1\":\"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"132\":\"0 1 2 3 I u J D E F A B C K L G M N O v w x y z\"},D:{\"1\":\"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\",\"132\":\"0 J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"HC\",\"8\":\"I u zB IC\",\"520\":\"J D E F A B C JC KC LC 0B qB\",\"1028\":\"K rB 1B\",\"7172\":\"L\",\"8196\":\"G MC NC 2B 3B 4B 5B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F PC QC RC\",\"132\":\"B C G SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC\",\"1028\":\"gC hC iC jC kC\",\"3076\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"pC qC\",\"132\":\"tB I rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"8\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"132\":\"I\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"WebM video format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O P Y Z a b c d e h i j k l m n o p q r s t f H\",\"450\":\"Q R S T U V W X\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"450\":\"Q R S T U V W X\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"450\":\"fB gB hB iB jB kB g lB mB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"257\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"Web NFC\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N\"},C:{\"1\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"8\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB\"},D:{\"1\":\"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u\",\"8\":\"J D E\",\"132\":\"F A B C K L G M N O v w x y\",\"260\":\"0 1 2 3 4 5 6 7 z\"},E:{\"1\":\"sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F A B C K HC zB IC JC KC LC 0B qB rB 1B\",\"516\":\"L G MC NC 2B 3B 4B 5B\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F PC QC RC\",\"8\":\"B SC\",\"132\":\"qB AC TC\",\"260\":\"C G M N O rB\"},G:{\"1\":\"lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC\"},H:{\"1\":\"oC\"},I:{\"1\":\"f BC tC uC\",\"2\":\"tB pC qC rC\",\"132\":\"I sC\"},J:{\"2\":\"D A\"},K:{\"1\":\"C g qB AC rB\",\"2\":\"A\",\"132\":\"B\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"8\":\"AD\"}},B:6,C:\"WebP image format\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB EC FC\",\"132\":\"I u\",\"292\":\"J D E F A\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"I u J D E F A B C K L\",\"260\":\"G\"},E:{\"1\":\"D E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"132\":\"u IC\",\"260\":\"J JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F PC QC RC SC\",\"132\":\"B C qB AC TC\"},G:{\"1\":\"E WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC\",\"132\":\"BC VC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"129\":\"D\"},K:{\"1\":\"g rB\",\"2\":\"A\",\"132\":\"B C qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Web Sockets\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"j k l m n o p q r s t f H\",\"2\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z e h\",\"66\":\"a b c d\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB PC QC RC SC qB AC TC rB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"1\":\"7C 8C\",\"2\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:5,C:\"WebTransport\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB\",\"66\":\"UB VB WB XB YB uB ZB\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB PC QC RC SC qB AC TC rB\",\"66\":\"HB IB JB KB LB MB NB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\",\"2\":\"I wC xC yC\"},Q:{\"2\":\"1B\"},R:{\"1\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"WebUSB\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"66\":\"P\",\"257\":\"G M N O\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB EC FC\",\"129\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"194\":\"UB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"66\":\"XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P\"},E:{\"2\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"66\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C g qB AC rB\"},L:{\"2\":\"H\"},M:{\"2\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"513\":\"I\",\"516\":\"wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:7,C:\"WebVR API\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"66\":\"0 1 2 3 4 5 6\",\"129\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB\",\"257\":\"VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I u J D E F A B C K L G M N\"},E:{\"1\":\"J D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"2\":\"D\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"B\",\"2\":\"A\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"129\":\"AD\"}},B:4,C:\"WebVTT - Web Video Text Tracks\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"2\":\"CC\",\"8\":\"J D E F\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"8\":\"DC tB\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"8\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e SC qB AC TC rB\",\"2\":\"F PC\",\"8\":\"QC RC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f pC tC uC\",\"2\":\"tB I qC rC sC BC\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"8\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Web Workers\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"2\":\"C K L G M N O\",\"132\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB EC FC\",\"322\":\"oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\"},D:{\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB\",\"66\":\"dB eB fB gB hB iB jB kB g lB mB nB oB pB\",\"132\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"2\":\"I u J D E F A B C HC zB IC JC KC LC 0B qB rB\",\"578\":\"K L G 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"2\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB PC QC RC SC qB AC TC rB\",\"66\":\"SB TB UB VB WB XB YB ZB aB bB cB dB\",\"132\":\"eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\"},G:{\"2\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"2\":\"oC\"},I:{\"2\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"2\":\"A B C qB AC rB\",\"132\":\"g\"},L:{\"132\":\"H\"},M:{\"322\":\"H\"},N:{\"2\":\"A B\"},O:{\"2\":\"vC\"},P:{\"2\":\"I wC xC yC zC 0C 0B 1C\",\"132\":\"2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"2\":\"1B\"},R:{\"2\":\"9C\"},S:{\"2\":\"AD\"}},B:4,C:\"WebXR Device API\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K L G M N O\"},C:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 DC tB I u J D E F A B C K L G M N O v w x y z EC FC\",\"194\":\"5 6 7 8 9 AB BB\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\"},E:{\"1\":\"A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y z PC QC RC SC qB AC TC rB\"},G:{\"1\":\"aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS will-change property\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB FC\",\"2\":\"DC tB EC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"I\"},E:{\"1\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e qB AC TC rB\",\"2\":\"F B PC QC RC SC\"},G:{\"1\":\"E VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f tC uC\",\"2\":\"tB pC qC rC sC BC\",\"130\":\"I\"},J:{\"1\":\"D A\"},K:{\"1\":\"B C g qB AC rB\",\"2\":\"A\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"WOFF - Web Open Font Format\"};\n","module.exports={A:{A:{\"2\":\"J D E F A B CC\"},B:{\"1\":\"L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"2\":\"C K\"},C:{\"1\":\"FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB EC FC\"},D:{\"1\":\"CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"2\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB\"},E:{\"1\":\"C K L G rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I u J D E F HC zB IC JC KC LC\",\"132\":\"A B 0B qB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C G M N O v w x y PC QC RC SC qB AC TC rB\"},G:{\"1\":\"bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"E zB UC BC VC WC XC YC ZC aC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"2\":\"tB I pC qC rC sC BC tC uC\"},J:{\"2\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"2\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:2,C:\"WOFF 2.0 - Web Open Font Format\"};\n","module.exports={A:{A:{\"1\":\"J D E F A B CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB I u J D E F A B C K L EC FC\"},D:{\"1\":\"KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB\"},E:{\"1\":\"F A B C K L G LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"4\":\"I u J D E HC zB IC JC KC\"},F:{\"1\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"2\":\"F B C PC QC RC SC qB AC TC rB\",\"4\":\"0 1 2 3 4 5 6 G M N O v w x y z\"},G:{\"1\":\"ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"4\":\"E zB UC BC VC WC XC YC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f\",\"4\":\"tB I pC qC rC sC BC tC uC\"},J:{\"4\":\"D A\"},K:{\"1\":\"g\",\"2\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"CSS3 word-break\"};\n","module.exports={A:{A:{\"4\":\"J D E F A B CC\"},B:{\"1\":\"O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\",\"4\":\"C K L G M N\"},C:{\"1\":\"PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"4\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"4\":\"I u J D E F A B C K L G M N O v w x y\"},E:{\"1\":\"D E F A B C K L G JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"4\":\"I u J HC zB IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F PC QC\",\"4\":\"B C RC SC qB AC TC\"},G:{\"1\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"4\":\"zB UC BC VC WC\"},H:{\"4\":\"oC\"},I:{\"1\":\"f tC uC\",\"4\":\"tB I pC qC rC sC BC\"},J:{\"1\":\"A\",\"4\":\"D\"},K:{\"1\":\"g\",\"4\":\"A B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"4\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"4\":\"AD\"}},B:4,C:\"CSS3 Overflow-wrap\"};\n","module.exports={A:{A:{\"2\":\"J D CC\",\"132\":\"E F\",\"260\":\"A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\",\"2\":\"DC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"HC zB\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\",\"2\":\"F\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"4\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"Cross-document messaging\"};\n","module.exports={A:{A:{\"1\":\"E F A B\",\"2\":\"J D CC\"},B:{\"1\":\"C K L G M N O\",\"4\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB\",\"4\":\"I u J D E F A B C K L G M N iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"16\":\"DC tB EC FC\"},D:{\"4\":\"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"0 1 I u J D E F A B C K L G M N O v w x y z\"},E:{\"4\":\"J D E F A B C K L G IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"16\":\"I u HC zB\"},F:{\"4\":\"0 1 2 3 4 5 6 7 8 9 C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e TC rB\",\"16\":\"F B PC QC RC SC qB AC\"},G:{\"4\":\"E XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"16\":\"zB UC BC VC WC\"},H:{\"2\":\"oC\"},I:{\"4\":\"I f sC BC tC uC\",\"16\":\"tB pC qC rC\"},J:{\"4\":\"D A\"},K:{\"4\":\"g rB\",\"16\":\"A B C qB AC\"},L:{\"4\":\"H\"},M:{\"4\":\"H\"},N:{\"1\":\"A B\"},O:{\"4\":\"vC\"},P:{\"4\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"4\":\"1B\"},R:{\"4\":\"9C\"},S:{\"1\":\"AD\"}},B:6,C:\"X-Frame-Options HTTP header\"};\n","module.exports={A:{A:{\"2\":\"J D E F CC\",\"132\":\"A B\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"2\":\"DC tB\",\"260\":\"A B\",\"388\":\"J D E F\",\"900\":\"I u EC FC\"},D:{\"1\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"16\":\"I u J\",\"132\":\"5 6\",\"388\":\"0 1 2 3 4 D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"2\":\"I HC zB\",\"132\":\"D JC\",\"388\":\"u J IC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e rB\",\"2\":\"F B PC QC RC SC qB AC TC\",\"132\":\"G M N\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"2\":\"zB UC BC\",\"132\":\"XC\",\"388\":\"VC WC\"},H:{\"2\":\"oC\"},I:{\"1\":\"f uC\",\"2\":\"pC qC rC\",\"388\":\"tC\",\"900\":\"tB I sC BC\"},J:{\"132\":\"A\",\"388\":\"D\"},K:{\"1\":\"C g rB\",\"2\":\"A B qB AC\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"132\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"XMLHttpRequest advanced features\"};\n","module.exports={A:{A:{\"1\":\"F A B\",\"2\":\"J D E CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"1\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"1\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"1\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"1\":\"oC\"},I:{\"1\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"1\":\"D A\"},K:{\"1\":\"A B C g qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:1,C:\"XHTML served as application/xhtml+xml\"};\n","module.exports={A:{A:{\"2\":\"F A B CC\",\"4\":\"J D E\"},B:{\"2\":\"C K L G M N O\",\"8\":\"P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"8\":\"0 1 2 3 4 5 6 7 8 9 DC tB I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB EC FC\"},D:{\"8\":\"0 1 2 3 4 5 6 7 8 9 I u J D E F A B C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\"},E:{\"8\":\"I u J D E F A B C K L G HC zB IC JC KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\"},F:{\"8\":\"0 1 2 3 4 5 6 7 8 9 F B C G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e PC QC RC SC qB AC TC rB\"},G:{\"8\":\"E zB UC BC VC WC XC YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\"},H:{\"8\":\"oC\"},I:{\"8\":\"tB I f pC qC rC sC BC tC uC\"},J:{\"8\":\"D A\"},K:{\"8\":\"A B C g qB AC rB\"},L:{\"8\":\"H\"},M:{\"8\":\"H\"},N:{\"2\":\"A B\"},O:{\"8\":\"vC\"},P:{\"8\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"8\":\"1B\"},R:{\"8\":\"9C\"},S:{\"8\":\"AD\"}},B:7,C:\"XHTML+SMIL animation\"};\n","module.exports={A:{A:{\"1\":\"A B\",\"260\":\"J D E F CC\"},B:{\"1\":\"C K L G M N O P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H\"},C:{\"1\":\"0 1 2 3 4 5 6 7 8 9 C K L G M N O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB\",\"132\":\"B\",\"260\":\"DC tB I u J D EC FC\",\"516\":\"E F A\"},D:{\"1\":\"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB uB ZB vB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R S T U V W X Y Z a b c d e h i j k l m n o p q r s t f H xB yB GC\",\"132\":\"0 1 2 3 4 5 6 I u J D E F A B C K L G M N O v w x y z\"},E:{\"1\":\"E F A B C K L G KC LC 0B qB rB 1B MC NC 2B 3B 4B 5B sB 6B 7B 8B 9B OC\",\"132\":\"I u J D HC zB IC JC\"},F:{\"1\":\"0 1 2 3 4 5 6 7 8 9 O v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB g lB mB nB oB pB P Q R wB S T U V W X Y Z a b c d e\",\"16\":\"F PC\",\"132\":\"B C G M N QC RC SC qB AC TC rB\"},G:{\"1\":\"E YC ZC aC bC cC dC eC fC gC hC iC jC kC lC mC nC 2B 3B 4B 5B sB 6B 7B 8B 9B\",\"132\":\"zB UC BC VC WC XC\"},H:{\"132\":\"oC\"},I:{\"1\":\"f tC uC\",\"132\":\"tB I pC qC rC sC BC\"},J:{\"132\":\"D A\"},K:{\"1\":\"g\",\"16\":\"A\",\"132\":\"B C qB AC rB\"},L:{\"1\":\"H\"},M:{\"1\":\"H\"},N:{\"1\":\"A B\"},O:{\"1\":\"vC\"},P:{\"1\":\"I wC xC yC zC 0C 0B 1C 2C 3C 4C 5C sB 6C 7C 8C\"},Q:{\"1\":\"1B\"},R:{\"1\":\"9C\"},S:{\"1\":\"AD\"}},B:4,C:\"DOM Parsing and Serialization\"};\n","module.exports = {\n  1: 'ls', // WHATWG Living Standard\n  2: 'rec', // W3C Recommendation\n  3: 'pr', // W3C Proposed Recommendation\n  4: 'cr', // W3C Candidate Recommendation\n  5: 'wd', // W3C Working Draft\n  6: 'other', // Non-W3C, but reputable\n  7: 'unoff' // Unofficial, Editor's Draft or W3C \"Note\"\n}\n","module.exports = {\n  y: 1 << 0,\n  n: 1 << 1,\n  a: 1 << 2,\n  p: 1 << 3,\n  u: 1 << 4,\n  x: 1 << 5,\n  d: 1 << 6\n}\n","'use strict'\n\nconst browsers = require('./browsers').browsers\nconst versions = require('./browserVersions').browserVersions\nconst agentsData = require('../../data/agents')\n\nfunction unpackBrowserVersions(versionsData) {\n  return Object.keys(versionsData).reduce((usage, version) => {\n    usage[versions[version]] = versionsData[version]\n    return usage\n  }, {})\n}\n\nmodule.exports.agents = Object.keys(agentsData).reduce((map, key) => {\n  let versionsData = agentsData[key]\n  map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {\n    if (entry === 'A') {\n      data.usage_global = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'C') {\n      data.versions = versionsData[entry].reduce((list, version) => {\n        if (version === '') {\n          list.push(null)\n        } else {\n          list.push(versions[version])\n        }\n        return list\n      }, [])\n    } else if (entry === 'D') {\n      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'E') {\n      data.browser = versionsData[entry]\n    } else if (entry === 'F') {\n      data.release_date = Object.keys(versionsData[entry]).reduce(\n        (map2, key2) => {\n          map2[versions[key2]] = versionsData[entry][key2]\n          return map2\n        },\n        {}\n      )\n    } else {\n      // entry is B\n      data.prefix = versionsData[entry]\n    }\n    return data\n  }, {})\n  return map\n}, {})\n","module.exports.browserVersions = require('../../data/browserVersions')\n","module.exports.browsers = require('../../data/browsers')\n","'use strict'\n\nconst statuses = require('../lib/statuses')\nconst supported = require('../lib/supported')\nconst browsers = require('./browsers').browsers\nconst versions = require('./browserVersions').browserVersions\n\nconst MATH2LOG = Math.log(2)\n\nfunction unpackSupport(cipher) {\n  // bit flags\n  let stats = Object.keys(supported).reduce((list, support) => {\n    if (cipher & supported[support]) list.push(support)\n    return list\n  }, [])\n\n  // notes\n  let notes = cipher >> 7\n  let notesArray = []\n  while (notes) {\n    let note = Math.floor(Math.log(notes) / MATH2LOG) + 1\n    notesArray.unshift(`#${note}`)\n    notes -= Math.pow(2, note - 1)\n  }\n\n  return stats.concat(notesArray).join(' ')\n}\n\nfunction unpackFeature(packed) {\n  let unpacked = { status: statuses[packed.B], title: packed.C }\n  unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {\n    let browser = packed.A[key]\n    browserStats[browsers[key]] = Object.keys(browser).reduce(\n      (stats, support) => {\n        let packedVersions = browser[support].split(' ')\n        let unpacked2 = unpackSupport(support)\n        packedVersions.forEach(v => (stats[versions[v]] = unpacked2))\n        return stats\n      },\n      {}\n    )\n    return browserStats\n  }, {})\n  return unpacked\n}\n\nmodule.exports = unpackFeature\nmodule.exports.default = unpackFeature\n","/*\n * Load this dynamically so that it\n * doesn't appear in the rollup bundle.\n */\n\nmodule.exports.features = require('../../data/features')\n","module.exports.agents = require('./agents').agents\nmodule.exports.feature = require('./feature')\nmodule.exports.features = require('./features').features\nmodule.exports.region = require('./region')\n","'use strict'\n\nconst browsers = require('./browsers').browsers\n\nfunction unpackRegion(packed) {\n  return Object.keys(packed).reduce((list, browser) => {\n    let data = packed[browser]\n    list[browsers[browser]] = Object.keys(data).reduce((memo, key) => {\n      let stats = data[key]\n      if (key === '_') {\n        stats.split(' ').forEach(version => (memo[version] = null))\n      } else {\n        memo[key] = stats\n      }\n      return memo\n    }, {})\n    return list\n  }, {})\n}\n\nmodule.exports = unpackRegion\nmodule.exports.default = unpackRegion\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/*! https://mths.be/cssesc v3.0.0 by @mathias */\n'use strict';\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nvar merge = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\nvar regexAlwaysEscape = /['\"\\\\]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it’s not a printable ASCII character…\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It’s a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It’s an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they’re redundant. Note that this is only possible if the escape\n\t// sequence isn’t preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It’s not safe to remove the space, so don’t.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '3.0.0';\n\nmodule.exports = cssesc;\n","'use strict';\n\nmodule.exports = function defined() {\n\tfor (var i = 0; i < arguments.length; i++) {\n\t\tif (typeof arguments[i] !== 'undefined') {\n\t\t\treturn arguments[i];\n\t\t}\n\t}\n};\n","var acorn = require('acorn-node');\nvar walk = require('acorn-node/walk');\nvar defined = require('defined');\n\nvar requireRe = /\\brequire\\b/;\n\nfunction parse (src, opts) {\n    if (!opts) opts = {};\n    var acornOpts = {\n        ranges: defined(opts.ranges, opts.range),\n        locations: defined(opts.locations, opts.loc),\n        allowReserved: defined(opts.allowReserved, true),\n        allowImportExportEverywhere: defined(opts.allowImportExportEverywhere, false)\n    };\n\n    // Use acorn-node's defaults for the rest.\n    if (opts.ecmaVersion != null) acornOpts.ecmaVersion = opts.ecmaVersion;\n    if (opts.sourceType != null) acornOpts.sourceType = opts.sourceType;\n    if (opts.allowHashBang != null) acornOpts.allowHashBang = opts.allowHashBang;\n    if (opts.allowReturnOutsideFunction != null) acornOpts.allowReturnOutsideFunction = opts.allowReturnOutsideFunction;\n\n    return acorn.parse(src, acornOpts);\n}\n\nvar exports = module.exports = function (src, opts) {\n    return exports.find(src, opts).strings;\n};\n\nexports.find = function (src, opts) {\n    if (!opts) opts = {};\n    \n    var word = opts.word === undefined ? 'require' : opts.word;\n    if (typeof src !== 'string') src = String(src);\n    \n    var isRequire = opts.isRequire || function (node) {\n        return node.callee.type === 'Identifier'\n            && node.callee.name === word\n        ;\n    };\n    \n    var modules = { strings : [], expressions : [] };\n    if (opts.nodes) modules.nodes = [];\n    \n    var wordRe = word === 'require' ? requireRe : RegExp('\\\\b' + word + '\\\\b');\n    if (!wordRe.test(src)) return modules;\n    \n    var ast = parse(src, opts.parse);\n    \n    function visit(node, st, c) {\n        var hasRequire = wordRe.test(src.slice(node.start, node.end));\n        if (!hasRequire) return;\n        walk.base[node.type](node, st, c);\n        if (node.type !== 'CallExpression') return;\n        if (isRequire(node)) {\n            if (node.arguments.length) {\n                var arg = node.arguments[0];\n                if (arg.type === 'Literal') {\n                    modules.strings.push(arg.value);\n                }\n                else if (arg.type === 'TemplateLiteral'\n                        && arg.quasis.length === 1\n                        && arg.expressions.length === 0) {\n\n                    modules.strings.push(arg.quasis[0].value.raw);\n                }\n                else {\n                    modules.expressions.push(src.slice(arg.start, arg.end));\n                }\n            }\n            if (opts.nodes) modules.nodes.push(node);\n        }\n    }\n    \n    walk.recursive(ast, null, {\n        Statement: visit,\n        Expression: visit\n    });\n    \n    return modules;\n};\n","/*\n\ndidYouMean.js - A simple JavaScript matching engine\n===================================================\n\n[Available on GitHub](https://github.com/dcporter/didyoumean.js).\n\nA super-simple, highly optimized JS library for matching human-quality input to a list of potential\nmatches. You can use it to suggest a misspelled command-line utility option to a user, or to offer\nlinks to nearby valid URLs on your 404 page. (The examples below are taken from a personal project,\nmy [HTML5 business card](http://dcporter.aws.af.cm/me), which uses didYouMean.js to suggest correct\nURLs from misspelled ones, such as [dcporter.aws.af.cm/me/instagarm](http://dcporter.aws.af.cm/me/instagarm).)\nUses the [Levenshtein distance algorithm](https://en.wikipedia.org/wiki/Levenshtein_distance).\n\ndidYouMean.js works in the browser as well as in node.js. To install it for use in node:\n\n```\nnpm install didyoumean\n```\n\n\nExamples\n--------\n\nMatching against a list of strings:\n```\nvar input = 'insargrm'\nvar list = ['facebook', 'twitter', 'instagram', 'linkedin'];\nconsole.log(didYouMean(input, list));\n> 'instagram'\n// The method matches 'insargrm' to 'instagram'.\n\ninput = 'google plus';\nconsole.log(didYouMean(input, list));\n> null\n// The method was unable to find 'google plus' in the list of options.\n```\n\nMatching against a list of objects:\n```\nvar input = 'insargrm';\nvar list = [ { id: 'facebook' }, { id: 'twitter' }, { id: 'instagram' }, { id: 'linkedin' } ];\nvar key = 'id';\nconsole.log(didYouMean(input, list, key));\n> 'instagram'\n// The method returns the matching value.\n\ndidYouMean.returnWinningObject = true;\nconsole.log(didYouMean(input, list, key));\n> { id: 'instagram' }\n// The method returns the matching object.\n```\n\n\ndidYouMean(str, list, [key])\n----------------------------\n\n- str: The string input to match.\n- list: An array of strings or objects to match against.\n- key (OPTIONAL): If your list array contains objects, you must specify the key which contains the string\n  to match against.\n\nReturns: the closest matching string, or null if no strings exceed the threshold.\n\n\nOptions\n-------\n\nOptions are set on the didYouMean function object. You may change them at any time.\n\n### threshold\n\n  By default, the method will only return strings whose edit distance is less than 40% (0.4x) of their length.\n  For example, if a ten-letter string is five edits away from its nearest match, the method will return null.\n\n  You can control this by setting the \"threshold\" value on the didYouMean function. For example, to set the\n  edit distance threshold to 50% of the input string's length:\n\n  ```\n  didYouMean.threshold = 0.5;\n  ```\n\n  To return the nearest match no matter the threshold, set this value to null.\n\n### thresholdAbsolute\n\n  This option behaves the same as threshold, but instead takes an integer number of edit steps. For example,\n  if thresholdAbsolute is set to 20 (the default), then the method will only return strings whose edit distance\n  is less than 20. Both options apply.\n\n### caseSensitive\n\n  By default, the method will perform case-insensitive comparisons. If you wish to force case sensitivity, set\n  the \"caseSensitive\" value to true:\n\n  ```\n  didYouMean.caseSensitive = true;\n  ```\n\n### nullResultValue\n\n  By default, the method will return null if there is no sufficiently close match. You can change this value here.\n\n### returnWinningObject\n\n  By default, the method will return the winning string value (if any). If your list contains objects rather\n  than strings, you may set returnWinningObject to true.\n  \n  ```\n  didYouMean.returnWinningObject = true;\n  ```\n  \n  This option has no effect on lists of strings.\n\n### returnFirstMatch\n  \n  By default, the method will search all values and return the closest match. If you're simply looking for a \"good-\n  enough\" match, you can set your thresholds appropriately and set returnFirstMatch to true to substantially speed\n  things up.\n\n\nLicense\n-------\n\ndidYouMean copyright (c) 2013-2014 Dave Porter.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License\n[here](http://www.apache.org/licenses/LICENSE-2.0).\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n(function() {\n  \"use strict\";\n\n  // The didYouMean method.\n  function didYouMean(str, list, key) {\n    if (!str) return null;\n\n    // If we're running a case-insensitive search, smallify str.\n    if (!didYouMean.caseSensitive) { str = str.toLowerCase(); }\n\n    // Calculate the initial value (the threshold) if present.\n    var thresholdRelative = didYouMean.threshold === null ? null : didYouMean.threshold * str.length,\n        thresholdAbsolute = didYouMean.thresholdAbsolute,\n        winningVal;\n    if (thresholdRelative !== null && thresholdAbsolute !== null) winningVal = Math.min(thresholdRelative, thresholdAbsolute);\n    else if (thresholdRelative !== null) winningVal = thresholdRelative;\n    else if (thresholdAbsolute !== null) winningVal = thresholdAbsolute;\n    else winningVal = null;\n\n    // Get the edit distance to each option. If the closest one is less than 40% (by default) of str's length,\n    // then return it.\n    var winner, candidate, testCandidate, val,\n        i, len = list.length;\n    for (i = 0; i < len; i++) {\n      // Get item.\n      candidate = list[i];\n      // If there's a key, get the candidate value out of the object.\n      if (key) { candidate = candidate[key]; }\n      // Gatekeep.\n      if (!candidate) { continue; }\n      // If we're running a case-insensitive search, smallify the candidate.\n      if (!didYouMean.caseSensitive) { testCandidate = candidate.toLowerCase(); }\n      else { testCandidate = candidate; }\n      // Get and compare edit distance.\n      val = getEditDistance(str, testCandidate, winningVal);\n      // If this value is smaller than our current winning value, OR if we have no winning val yet (i.e. the\n      // threshold option is set to null, meaning the caller wants a match back no matter how bad it is), then\n      // this is our new winner.\n      if (winningVal === null || val < winningVal) {\n        winningVal = val;\n        // Set the winner to either the value or its object, depending on the returnWinningObject option.\n        if (key && didYouMean.returnWinningObject) winner = list[i];\n        else winner = candidate;\n        // If we're returning the first match, return it now.\n        if (didYouMean.returnFirstMatch) return winner;\n      }\n    }\n\n    // If we have a winner, return it.\n    return winner || didYouMean.nullResultValue;\n  }\n\n  // Set default options.\n  didYouMean.threshold = 0.4;\n  didYouMean.thresholdAbsolute = 20;\n  didYouMean.caseSensitive = false;\n  didYouMean.nullResultValue = null;\n  didYouMean.returnWinningObject = null;\n  didYouMean.returnFirstMatch = false;\n\n  // Expose.\n  // In node...\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = didYouMean;\n  }\n  // Otherwise...\n  else {\n    window.didYouMean = didYouMean;\n  }\n\n  var MAX_INT = Math.pow(2,32) - 1; // We could probably go higher than this, but for practical reasons let's not.\n  function getEditDistance(a, b, max) {\n    // Handle null or undefined max.\n    max = max || max === 0 ? max : MAX_INT;\n\n    var lena = a.length;\n    var lenb = b.length;\n\n    // Fast path - no A or B.\n    if (lena === 0) return Math.min(max + 1, lenb);\n    if (lenb === 0) return Math.min(max + 1, lena);\n\n    // Fast path - length diff larger than max.\n    if (Math.abs(lena - lenb) > max) return max + 1;\n\n    // Slow path.\n    var matrix = [],\n        i, j, colMin, minJ, maxJ;\n\n    // Set up the first row ([0, 1, 2, 3, etc]).\n    for (i = 0; i <= lenb; i++) { matrix[i] = [i]; }\n\n    // Set up the first column (same).\n    for (j = 0; j <= lena; j++) { matrix[0][j] = j; }\n\n    // Loop over the rest of the columns.\n    for (i = 1; i <= lenb; i++) {\n      colMin = MAX_INT;\n      minJ = 1;\n      if (i > max) minJ = i - max;\n      maxJ = lenb + 1;\n      if (maxJ > max + i) maxJ = max + i;\n      // Loop over the rest of the rows.\n      for (j = 1; j <= lena; j++) {\n        // If j is out of bounds, just put a large value in the slot.\n        if (j < minJ || j > maxJ) {\n          matrix[i][j] = max + 1;\n        }\n\n        // Otherwise do the normal Levenshtein thing.\n        else {\n          // If the characters are the same, there's no change in edit distance.\n          if (b.charAt(i - 1) === a.charAt(j - 1)) {\n            matrix[i][j] = matrix[i - 1][j - 1];\n          }\n          // Otherwise, see if we're substituting, inserting or deleting.\n          else {\n            matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // Substitute\n                                    Math.min(matrix[i][j - 1] + 1, // Insert\n                                    matrix[i - 1][j] + 1)); // Delete\n          }\n        }\n\n        // Either way, update colMin.\n        if (matrix[i][j] < colMin) colMin = matrix[i][j];\n      }\n\n      // If this column's minimum is greater than the allowed maximum, there's no point\n      // in going on with life.\n      if (colMin > max) return max + 1;\n    }\n    // If we made it this far without running into the max, then return the final matrix value.\n    return matrix[lenb][lena];\n  }\n\n})();\n","module.exports=function(t,e,l,n,o){for(e=e.split?e.split(\".\"):e,n=0;n<e.length;n++)t=t?t[e[n]]:o;return t===o?l:t};\n//# sourceMappingURL=dlv.js.map\n","module.exports = {\n\t\"0.20\": \"39\",\n\t\"0.21\": \"41\",\n\t\"0.22\": \"41\",\n\t\"0.23\": \"41\",\n\t\"0.24\": \"41\",\n\t\"0.25\": \"42\",\n\t\"0.26\": \"42\",\n\t\"0.27\": \"43\",\n\t\"0.28\": \"43\",\n\t\"0.29\": \"43\",\n\t\"0.30\": \"44\",\n\t\"0.31\": \"45\",\n\t\"0.32\": \"45\",\n\t\"0.33\": \"45\",\n\t\"0.34\": \"45\",\n\t\"0.35\": \"45\",\n\t\"0.36\": \"47\",\n\t\"0.37\": \"49\",\n\t\"1.0\": \"49\",\n\t\"1.1\": \"50\",\n\t\"1.2\": \"51\",\n\t\"1.3\": \"52\",\n\t\"1.4\": \"53\",\n\t\"1.5\": \"54\",\n\t\"1.6\": \"56\",\n\t\"1.7\": \"58\",\n\t\"1.8\": \"59\",\n\t\"2.0\": \"61\",\n\t\"2.1\": \"61\",\n\t\"3.0\": \"66\",\n\t\"3.1\": \"66\",\n\t\"4.0\": \"69\",\n\t\"4.1\": \"69\",\n\t\"4.2\": \"69\",\n\t\"5.0\": \"73\",\n\t\"6.0\": \"76\",\n\t\"6.1\": \"76\",\n\t\"7.0\": \"78\",\n\t\"7.1\": \"78\",\n\t\"7.2\": \"78\",\n\t\"7.3\": \"78\",\n\t\"8.0\": \"80\",\n\t\"8.1\": \"80\",\n\t\"8.2\": \"80\",\n\t\"8.3\": \"80\",\n\t\"8.4\": \"80\",\n\t\"8.5\": \"80\",\n\t\"9.0\": \"83\",\n\t\"9.1\": \"83\",\n\t\"9.2\": \"83\",\n\t\"9.3\": \"83\",\n\t\"9.4\": \"83\",\n\t\"10.0\": \"85\",\n\t\"10.1\": \"85\",\n\t\"10.2\": \"85\",\n\t\"10.3\": \"85\",\n\t\"10.4\": \"85\",\n\t\"11.0\": \"87\",\n\t\"11.1\": \"87\",\n\t\"11.2\": \"87\",\n\t\"11.3\": \"87\",\n\t\"11.4\": \"87\",\n\t\"11.5\": \"87\",\n\t\"12.0\": \"89\",\n\t\"12.1\": \"89\",\n\t\"12.2\": \"89\",\n\t\"13.0\": \"91\",\n\t\"13.1\": \"91\",\n\t\"13.2\": \"91\",\n\t\"13.3\": \"91\",\n\t\"13.4\": \"91\",\n\t\"13.5\": \"91\",\n\t\"13.6\": \"91\",\n\t\"14.0\": \"93\",\n\t\"14.1\": \"93\",\n\t\"14.2\": \"93\",\n\t\"15.0\": \"94\",\n\t\"15.1\": \"94\",\n\t\"15.2\": \"94\",\n\t\"15.3\": \"94\",\n\t\"15.4\": \"94\",\n\t\"15.5\": \"94\",\n\t\"16.0\": \"96\",\n\t\"16.1\": \"96\",\n\t\"16.2\": \"96\",\n\t\"17.0\": \"98\",\n\t\"17.1\": \"98\",\n\t\"17.2\": \"98\",\n\t\"17.3\": \"98\",\n\t\"17.4\": \"98\",\n\t\"18.0\": \"100\",\n\t\"18.1\": \"100\",\n\t\"18.2\": \"100\",\n\t\"18.3\": \"100\",\n\t\"19.0\": \"102\",\n\t\"19.1\": \"102\",\n\t\"20.0\": \"104\",\n\t\"20.1\": \"104\",\n\t\"20.2\": \"104\",\n\t\"20.3\": \"104\",\n\t\"21.0\": \"106\",\n\t\"21.1\": \"106\",\n\t\"21.2\": \"106\",\n\t\"21.3\": \"106\",\n\t\"21.4\": \"106\",\n\t\"22.0\": \"108\",\n\t\"22.1\": \"108\",\n\t\"22.2\": \"108\",\n\t\"22.3\": \"108\",\n\t\"23.0\": \"110\",\n\t\"23.1\": \"110\",\n\t\"24.0\": \"111\"\n};","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","\"use strict\";\r\nconst taskManager = require(\"./managers/tasks\");\r\nconst patternManager = require(\"./managers/patterns\");\r\nconst async_1 = require(\"./providers/async\");\r\nconst stream_1 = require(\"./providers/stream\");\r\nconst sync_1 = require(\"./providers/sync\");\r\nconst settings_1 = require(\"./settings\");\r\nconst utils = require(\"./utils\");\r\nasync function FastGlob(source, options) {\r\n    assertPatternsInput(source);\r\n    const works = getWorks(source, async_1.default, options);\r\n    const result = await Promise.all(works);\r\n    return utils.array.flatten(result);\r\n}\r\n// https://github.com/typescript-eslint/typescript-eslint/issues/60\r\n// eslint-disable-next-line no-redeclare\r\n(function (FastGlob) {\r\n    function sync(source, options) {\r\n        assertPatternsInput(source);\r\n        const works = getWorks(source, sync_1.default, options);\r\n        return utils.array.flatten(works);\r\n    }\r\n    FastGlob.sync = sync;\r\n    function stream(source, options) {\r\n        assertPatternsInput(source);\r\n        const works = getWorks(source, stream_1.default, options);\r\n        /**\r\n         * The stream returned by the provider cannot work with an asynchronous iterator.\r\n         * To support asynchronous iterators, regardless of the number of tasks, we always multiplex streams.\r\n         * This affects performance (+25%). I don't see best solution right now.\r\n         */\r\n        return utils.stream.merge(works);\r\n    }\r\n    FastGlob.stream = stream;\r\n    function generateTasks(source, options) {\r\n        assertPatternsInput(source);\r\n        const patterns = patternManager.transform([].concat(source));\r\n        const settings = new settings_1.default(options);\r\n        return taskManager.generate(patterns, settings);\r\n    }\r\n    FastGlob.generateTasks = generateTasks;\r\n    function isDynamicPattern(source, options) {\r\n        assertPatternsInput(source);\r\n        const settings = new settings_1.default(options);\r\n        return utils.pattern.isDynamicPattern(source, settings);\r\n    }\r\n    FastGlob.isDynamicPattern = isDynamicPattern;\r\n    function escapePath(source) {\r\n        assertPatternsInput(source);\r\n        return utils.path.escape(source);\r\n    }\r\n    FastGlob.escapePath = escapePath;\r\n})(FastGlob || (FastGlob = {}));\r\nfunction getWorks(source, _Provider, options) {\r\n    const patterns = patternManager.transform([].concat(source));\r\n    const settings = new settings_1.default(options);\r\n    const tasks = taskManager.generate(patterns, settings);\r\n    const provider = new _Provider(settings);\r\n    return tasks.map(provider.read, provider);\r\n}\r\nfunction assertPatternsInput(input) {\r\n    const source = [].concat(input);\r\n    const isValidSource = source.every((item) => utils.string.isString(item) && !utils.string.isEmpty(item));\r\n    if (!isValidSource) {\r\n        throw new TypeError('Patterns must be a string (non empty) or an array of strings');\r\n    }\r\n}\r\nmodule.exports = FastGlob;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.removeDuplicateSlashes = exports.transform = void 0;\r\n/**\r\n * Matches a sequence of two or more consecutive slashes, excluding the first two slashes at the beginning of the string.\r\n * The latter is due to the presence of the device path at the beginning of the UNC path.\r\n * @todo rewrite to negative lookbehind with the next major release.\r\n */\r\nconst DOUBLE_SLASH_RE = /(?!^)\\/{2,}/g;\r\nfunction transform(patterns) {\r\n    return patterns.map((pattern) => removeDuplicateSlashes(pattern));\r\n}\r\nexports.transform = transform;\r\n/**\r\n * This package only works with forward slashes as a path separator.\r\n * Because of this, we cannot use the standard `path.normalize` method, because on Windows platform it will use of backslashes.\r\n */\r\nfunction removeDuplicateSlashes(pattern) {\r\n    return pattern.replace(DOUBLE_SLASH_RE, '/');\r\n}\r\nexports.removeDuplicateSlashes = removeDuplicateSlashes;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.convertPatternGroupToTask = exports.convertPatternGroupsToTasks = exports.groupPatternsByBaseDirectory = exports.getNegativePatternsAsPositive = exports.getPositivePatterns = exports.convertPatternsToTasks = exports.generate = void 0;\r\nconst utils = require(\"../utils\");\r\nfunction generate(patterns, settings) {\r\n    const positivePatterns = getPositivePatterns(patterns);\r\n    const negativePatterns = getNegativePatternsAsPositive(patterns, settings.ignore);\r\n    const staticPatterns = positivePatterns.filter((pattern) => utils.pattern.isStaticPattern(pattern, settings));\r\n    const dynamicPatterns = positivePatterns.filter((pattern) => utils.pattern.isDynamicPattern(pattern, settings));\r\n    const staticTasks = convertPatternsToTasks(staticPatterns, negativePatterns, /* dynamic */ false);\r\n    const dynamicTasks = convertPatternsToTasks(dynamicPatterns, negativePatterns, /* dynamic */ true);\r\n    return staticTasks.concat(dynamicTasks);\r\n}\r\nexports.generate = generate;\r\n/**\r\n * Returns tasks grouped by basic pattern directories.\r\n *\r\n * Patterns that can be found inside (`./`) and outside (`../`) the current directory are handled separately.\r\n * This is necessary because directory traversal starts at the base directory and goes deeper.\r\n */\r\nfunction convertPatternsToTasks(positive, negative, dynamic) {\r\n    const tasks = [];\r\n    const patternsOutsideCurrentDirectory = utils.pattern.getPatternsOutsideCurrentDirectory(positive);\r\n    const patternsInsideCurrentDirectory = utils.pattern.getPatternsInsideCurrentDirectory(positive);\r\n    const outsideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsOutsideCurrentDirectory);\r\n    const insideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsInsideCurrentDirectory);\r\n    tasks.push(...convertPatternGroupsToTasks(outsideCurrentDirectoryGroup, negative, dynamic));\r\n    /*\r\n     * For the sake of reducing future accesses to the file system, we merge all tasks within the current directory\r\n     * into a global task, if at least one pattern refers to the root (`.`). In this case, the global task covers the rest.\r\n     */\r\n    if ('.' in insideCurrentDirectoryGroup) {\r\n        tasks.push(convertPatternGroupToTask('.', patternsInsideCurrentDirectory, negative, dynamic));\r\n    }\r\n    else {\r\n        tasks.push(...convertPatternGroupsToTasks(insideCurrentDirectoryGroup, negative, dynamic));\r\n    }\r\n    return tasks;\r\n}\r\nexports.convertPatternsToTasks = convertPatternsToTasks;\r\nfunction getPositivePatterns(patterns) {\r\n    return utils.pattern.getPositivePatterns(patterns);\r\n}\r\nexports.getPositivePatterns = getPositivePatterns;\r\nfunction getNegativePatternsAsPositive(patterns, ignore) {\r\n    const negative = utils.pattern.getNegativePatterns(patterns).concat(ignore);\r\n    const positive = negative.map(utils.pattern.convertToPositivePattern);\r\n    return positive;\r\n}\r\nexports.getNegativePatternsAsPositive = getNegativePatternsAsPositive;\r\nfunction groupPatternsByBaseDirectory(patterns) {\r\n    const group = {};\r\n    return patterns.reduce((collection, pattern) => {\r\n        const base = utils.pattern.getBaseDirectory(pattern);\r\n        if (base in collection) {\r\n            collection[base].push(pattern);\r\n        }\r\n        else {\r\n            collection[base] = [pattern];\r\n        }\r\n        return collection;\r\n    }, group);\r\n}\r\nexports.groupPatternsByBaseDirectory = groupPatternsByBaseDirectory;\r\nfunction convertPatternGroupsToTasks(positive, negative, dynamic) {\r\n    return Object.keys(positive).map((base) => {\r\n        return convertPatternGroupToTask(base, positive[base], negative, dynamic);\r\n    });\r\n}\r\nexports.convertPatternGroupsToTasks = convertPatternGroupsToTasks;\r\nfunction convertPatternGroupToTask(base, positive, negative, dynamic) {\r\n    return {\r\n        dynamic,\r\n        positive,\r\n        negative,\r\n        base,\r\n        patterns: [].concat(positive, negative.map(utils.pattern.convertToNegativePattern))\r\n    };\r\n}\r\nexports.convertPatternGroupToTask = convertPatternGroupToTask;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst async_1 = require(\"../readers/async\");\r\nconst provider_1 = require(\"./provider\");\r\nclass ProviderAsync extends provider_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._reader = new async_1.default(this._settings);\r\n    }\r\n    async read(task) {\r\n        const root = this._getRootDirectory(task);\r\n        const options = this._getReaderOptions(task);\r\n        const entries = await this.api(root, task, options);\r\n        return entries.map((entry) => options.transform(entry));\r\n    }\r\n    api(root, task, options) {\r\n        if (task.dynamic) {\r\n            return this._reader.dynamic(root, options);\r\n        }\r\n        return this._reader.static(task.patterns, options);\r\n    }\r\n}\r\nexports.default = ProviderAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils = require(\"../../utils\");\r\nconst partial_1 = require(\"../matchers/partial\");\r\nclass DeepFilter {\r\n    constructor(_settings, _micromatchOptions) {\r\n        this._settings = _settings;\r\n        this._micromatchOptions = _micromatchOptions;\r\n    }\r\n    getFilter(basePath, positive, negative) {\r\n        const matcher = this._getMatcher(positive);\r\n        const negativeRe = this._getNegativePatternsRe(negative);\r\n        return (entry) => this._filter(basePath, entry, matcher, negativeRe);\r\n    }\r\n    _getMatcher(patterns) {\r\n        return new partial_1.default(patterns, this._settings, this._micromatchOptions);\r\n    }\r\n    _getNegativePatternsRe(patterns) {\r\n        const affectDepthOfReadingPatterns = patterns.filter(utils.pattern.isAffectDepthOfReadingPattern);\r\n        return utils.pattern.convertPatternsToRe(affectDepthOfReadingPatterns, this._micromatchOptions);\r\n    }\r\n    _filter(basePath, entry, matcher, negativeRe) {\r\n        if (this._isSkippedByDeep(basePath, entry.path)) {\r\n            return false;\r\n        }\r\n        if (this._isSkippedSymbolicLink(entry)) {\r\n            return false;\r\n        }\r\n        const filepath = utils.path.removeLeadingDotSegment(entry.path);\r\n        if (this._isSkippedByPositivePatterns(filepath, matcher)) {\r\n            return false;\r\n        }\r\n        return this._isSkippedByNegativePatterns(filepath, negativeRe);\r\n    }\r\n    _isSkippedByDeep(basePath, entryPath) {\r\n        /**\r\n         * Avoid unnecessary depth calculations when it doesn't matter.\r\n         */\r\n        if (this._settings.deep === Infinity) {\r\n            return false;\r\n        }\r\n        return this._getEntryLevel(basePath, entryPath) >= this._settings.deep;\r\n    }\r\n    _getEntryLevel(basePath, entryPath) {\r\n        const entryPathDepth = entryPath.split('/').length;\r\n        if (basePath === '') {\r\n            return entryPathDepth;\r\n        }\r\n        const basePathDepth = basePath.split('/').length;\r\n        return entryPathDepth - basePathDepth;\r\n    }\r\n    _isSkippedSymbolicLink(entry) {\r\n        return !this._settings.followSymbolicLinks && entry.dirent.isSymbolicLink();\r\n    }\r\n    _isSkippedByPositivePatterns(entryPath, matcher) {\r\n        return !this._settings.baseNameMatch && !matcher.match(entryPath);\r\n    }\r\n    _isSkippedByNegativePatterns(entryPath, patternsRe) {\r\n        return !utils.pattern.matchAny(entryPath, patternsRe);\r\n    }\r\n}\r\nexports.default = DeepFilter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils = require(\"../../utils\");\r\nclass EntryFilter {\r\n    constructor(_settings, _micromatchOptions) {\r\n        this._settings = _settings;\r\n        this._micromatchOptions = _micromatchOptions;\r\n        this.index = new Map();\r\n    }\r\n    getFilter(positive, negative) {\r\n        const positiveRe = utils.pattern.convertPatternsToRe(positive, this._micromatchOptions);\r\n        const negativeRe = utils.pattern.convertPatternsToRe(negative, this._micromatchOptions);\r\n        return (entry) => this._filter(entry, positiveRe, negativeRe);\r\n    }\r\n    _filter(entry, positiveRe, negativeRe) {\r\n        if (this._settings.unique && this._isDuplicateEntry(entry)) {\r\n            return false;\r\n        }\r\n        if (this._onlyFileFilter(entry) || this._onlyDirectoryFilter(entry)) {\r\n            return false;\r\n        }\r\n        if (this._isSkippedByAbsoluteNegativePatterns(entry.path, negativeRe)) {\r\n            return false;\r\n        }\r\n        const filepath = this._settings.baseNameMatch ? entry.name : entry.path;\r\n        const isDirectory = entry.dirent.isDirectory();\r\n        const isMatched = this._isMatchToPatterns(filepath, positiveRe, isDirectory) && !this._isMatchToPatterns(entry.path, negativeRe, isDirectory);\r\n        if (this._settings.unique && isMatched) {\r\n            this._createIndexRecord(entry);\r\n        }\r\n        return isMatched;\r\n    }\r\n    _isDuplicateEntry(entry) {\r\n        return this.index.has(entry.path);\r\n    }\r\n    _createIndexRecord(entry) {\r\n        this.index.set(entry.path, undefined);\r\n    }\r\n    _onlyFileFilter(entry) {\r\n        return this._settings.onlyFiles && !entry.dirent.isFile();\r\n    }\r\n    _onlyDirectoryFilter(entry) {\r\n        return this._settings.onlyDirectories && !entry.dirent.isDirectory();\r\n    }\r\n    _isSkippedByAbsoluteNegativePatterns(entryPath, patternsRe) {\r\n        if (!this._settings.absolute) {\r\n            return false;\r\n        }\r\n        const fullpath = utils.path.makeAbsolute(this._settings.cwd, entryPath);\r\n        return utils.pattern.matchAny(fullpath, patternsRe);\r\n    }\r\n    _isMatchToPatterns(entryPath, patternsRe, isDirectory) {\r\n        const filepath = utils.path.removeLeadingDotSegment(entryPath);\r\n        // Trying to match files and directories by patterns.\r\n        const isMatched = utils.pattern.matchAny(filepath, patternsRe);\r\n        // A pattern with a trailling slash can be used for directory matching.\r\n        // To apply such pattern, we need to add a tralling slash to the path.\r\n        if (!isMatched && isDirectory) {\r\n            return utils.pattern.matchAny(filepath + '/', patternsRe);\r\n        }\r\n        return isMatched;\r\n    }\r\n}\r\nexports.default = EntryFilter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils = require(\"../../utils\");\r\nclass ErrorFilter {\r\n    constructor(_settings) {\r\n        this._settings = _settings;\r\n    }\r\n    getFilter() {\r\n        return (error) => this._isNonFatalError(error);\r\n    }\r\n    _isNonFatalError(error) {\r\n        return utils.errno.isEnoentCodeError(error) || this._settings.suppressErrors;\r\n    }\r\n}\r\nexports.default = ErrorFilter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils = require(\"../../utils\");\r\nclass Matcher {\r\n    constructor(_patterns, _settings, _micromatchOptions) {\r\n        this._patterns = _patterns;\r\n        this._settings = _settings;\r\n        this._micromatchOptions = _micromatchOptions;\r\n        this._storage = [];\r\n        this._fillStorage();\r\n    }\r\n    _fillStorage() {\r\n        /**\r\n         * The original pattern may include `{,*,**,a/*}`, which will lead to problems with matching (unresolved level).\r\n         * So, before expand patterns with brace expansion into separated patterns.\r\n         */\r\n        const patterns = utils.pattern.expandPatternsWithBraceExpansion(this._patterns);\r\n        for (const pattern of patterns) {\r\n            const segments = this._getPatternSegments(pattern);\r\n            const sections = this._splitSegmentsIntoSections(segments);\r\n            this._storage.push({\r\n                complete: sections.length <= 1,\r\n                pattern,\r\n                segments,\r\n                sections\r\n            });\r\n        }\r\n    }\r\n    _getPatternSegments(pattern) {\r\n        const parts = utils.pattern.getPatternParts(pattern, this._micromatchOptions);\r\n        return parts.map((part) => {\r\n            const dynamic = utils.pattern.isDynamicPattern(part, this._settings);\r\n            if (!dynamic) {\r\n                return {\r\n                    dynamic: false,\r\n                    pattern: part\r\n                };\r\n            }\r\n            return {\r\n                dynamic: true,\r\n                pattern: part,\r\n                patternRe: utils.pattern.makeRe(part, this._micromatchOptions)\r\n            };\r\n        });\r\n    }\r\n    _splitSegmentsIntoSections(segments) {\r\n        return utils.array.splitWhen(segments, (segment) => segment.dynamic && utils.pattern.hasGlobStar(segment.pattern));\r\n    }\r\n}\r\nexports.default = Matcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst matcher_1 = require(\"./matcher\");\r\nclass PartialMatcher extends matcher_1.default {\r\n    match(filepath) {\r\n        const parts = filepath.split('/');\r\n        const levels = parts.length;\r\n        const patterns = this._storage.filter((info) => !info.complete || info.segments.length > levels);\r\n        for (const pattern of patterns) {\r\n            const section = pattern.sections[0];\r\n            /**\r\n             * In this case, the pattern has a globstar and we must read all directories unconditionally,\r\n             * but only if the level has reached the end of the first group.\r\n             *\r\n             * fixtures/{a,b}/**\r\n             *  ^ true/false  ^ always true\r\n            */\r\n            if (!pattern.complete && levels > section.length) {\r\n                return true;\r\n            }\r\n            const match = parts.every((part, index) => {\r\n                const segment = pattern.segments[index];\r\n                if (segment.dynamic && segment.patternRe.test(part)) {\r\n                    return true;\r\n                }\r\n                if (!segment.dynamic && segment.pattern === part) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (match) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexports.default = PartialMatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path = require(\"path\");\r\nconst deep_1 = require(\"./filters/deep\");\r\nconst entry_1 = require(\"./filters/entry\");\r\nconst error_1 = require(\"./filters/error\");\r\nconst entry_2 = require(\"./transformers/entry\");\r\nclass Provider {\r\n    constructor(_settings) {\r\n        this._settings = _settings;\r\n        this.errorFilter = new error_1.default(this._settings);\r\n        this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());\r\n        this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());\r\n        this.entryTransformer = new entry_2.default(this._settings);\r\n    }\r\n    _getRootDirectory(task) {\r\n        return path.resolve(this._settings.cwd, task.base);\r\n    }\r\n    _getReaderOptions(task) {\r\n        const basePath = task.base === '.' ? '' : task.base;\r\n        return {\r\n            basePath,\r\n            pathSegmentSeparator: '/',\r\n            concurrency: this._settings.concurrency,\r\n            deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),\r\n            entryFilter: this.entryFilter.getFilter(task.positive, task.negative),\r\n            errorFilter: this.errorFilter.getFilter(),\r\n            followSymbolicLinks: this._settings.followSymbolicLinks,\r\n            fs: this._settings.fs,\r\n            stats: this._settings.stats,\r\n            throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,\r\n            transform: this.entryTransformer.getTransformer()\r\n        };\r\n    }\r\n    _getMicromatchOptions() {\r\n        return {\r\n            dot: this._settings.dot,\r\n            matchBase: this._settings.baseNameMatch,\r\n            nobrace: !this._settings.braceExpansion,\r\n            nocase: !this._settings.caseSensitiveMatch,\r\n            noext: !this._settings.extglob,\r\n            noglobstar: !this._settings.globstar,\r\n            posix: true,\r\n            strictSlashes: false\r\n        };\r\n    }\r\n}\r\nexports.default = Provider;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst stream_1 = require(\"stream\");\r\nconst stream_2 = require(\"../readers/stream\");\r\nconst provider_1 = require(\"./provider\");\r\nclass ProviderStream extends provider_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._reader = new stream_2.default(this._settings);\r\n    }\r\n    read(task) {\r\n        const root = this._getRootDirectory(task);\r\n        const options = this._getReaderOptions(task);\r\n        const source = this.api(root, task, options);\r\n        const destination = new stream_1.Readable({ objectMode: true, read: () => { } });\r\n        source\r\n            .once('error', (error) => destination.emit('error', error))\r\n            .on('data', (entry) => destination.emit('data', options.transform(entry)))\r\n            .once('end', () => destination.emit('end'));\r\n        destination\r\n            .once('close', () => source.destroy());\r\n        return destination;\r\n    }\r\n    api(root, task, options) {\r\n        if (task.dynamic) {\r\n            return this._reader.dynamic(root, options);\r\n        }\r\n        return this._reader.static(task.patterns, options);\r\n    }\r\n}\r\nexports.default = ProviderStream;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst sync_1 = require(\"../readers/sync\");\r\nconst provider_1 = require(\"./provider\");\r\nclass ProviderSync extends provider_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._reader = new sync_1.default(this._settings);\r\n    }\r\n    read(task) {\r\n        const root = this._getRootDirectory(task);\r\n        const options = this._getReaderOptions(task);\r\n        const entries = this.api(root, task, options);\r\n        return entries.map(options.transform);\r\n    }\r\n    api(root, task, options) {\r\n        if (task.dynamic) {\r\n            return this._reader.dynamic(root, options);\r\n        }\r\n        return this._reader.static(task.patterns, options);\r\n    }\r\n}\r\nexports.default = ProviderSync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils = require(\"../../utils\");\r\nclass EntryTransformer {\r\n    constructor(_settings) {\r\n        this._settings = _settings;\r\n    }\r\n    getTransformer() {\r\n        return (entry) => this._transform(entry);\r\n    }\r\n    _transform(entry) {\r\n        let filepath = entry.path;\r\n        if (this._settings.absolute) {\r\n            filepath = utils.path.makeAbsolute(this._settings.cwd, filepath);\r\n            filepath = utils.path.unixify(filepath);\r\n        }\r\n        if (this._settings.markDirectories && entry.dirent.isDirectory()) {\r\n            filepath += '/';\r\n        }\r\n        if (!this._settings.objectMode) {\r\n            return filepath;\r\n        }\r\n        return Object.assign(Object.assign({}, entry), { path: filepath });\r\n    }\r\n}\r\nexports.default = EntryTransformer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fsWalk = require(\"@nodelib/fs.walk\");\r\nconst reader_1 = require(\"./reader\");\r\nconst stream_1 = require(\"./stream\");\r\nclass ReaderAsync extends reader_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._walkAsync = fsWalk.walk;\r\n        this._readerStream = new stream_1.default(this._settings);\r\n    }\r\n    dynamic(root, options) {\r\n        return new Promise((resolve, reject) => {\r\n            this._walkAsync(root, options, (error, entries) => {\r\n                if (error === null) {\r\n                    resolve(entries);\r\n                }\r\n                else {\r\n                    reject(error);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    async static(patterns, options) {\r\n        const entries = [];\r\n        const stream = this._readerStream.static(patterns, options);\r\n        // After #235, replace it with an asynchronous iterator.\r\n        return new Promise((resolve, reject) => {\r\n            stream.once('error', reject);\r\n            stream.on('data', (entry) => entries.push(entry));\r\n            stream.once('end', () => resolve(entries));\r\n        });\r\n    }\r\n}\r\nexports.default = ReaderAsync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path = require(\"path\");\r\nconst fsStat = require(\"@nodelib/fs.stat\");\r\nconst utils = require(\"../utils\");\r\nclass Reader {\r\n    constructor(_settings) {\r\n        this._settings = _settings;\r\n        this._fsStatSettings = new fsStat.Settings({\r\n            followSymbolicLink: this._settings.followSymbolicLinks,\r\n            fs: this._settings.fs,\r\n            throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks\r\n        });\r\n    }\r\n    _getFullEntryPath(filepath) {\r\n        return path.resolve(this._settings.cwd, filepath);\r\n    }\r\n    _makeEntry(stats, pattern) {\r\n        const entry = {\r\n            name: pattern,\r\n            path: pattern,\r\n            dirent: utils.fs.createDirentFromStats(pattern, stats)\r\n        };\r\n        if (this._settings.stats) {\r\n            entry.stats = stats;\r\n        }\r\n        return entry;\r\n    }\r\n    _isFatalError(error) {\r\n        return !utils.errno.isEnoentCodeError(error) && !this._settings.suppressErrors;\r\n    }\r\n}\r\nexports.default = Reader;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst stream_1 = require(\"stream\");\r\nconst fsStat = require(\"@nodelib/fs.stat\");\r\nconst fsWalk = require(\"@nodelib/fs.walk\");\r\nconst reader_1 = require(\"./reader\");\r\nclass ReaderStream extends reader_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._walkStream = fsWalk.walkStream;\r\n        this._stat = fsStat.stat;\r\n    }\r\n    dynamic(root, options) {\r\n        return this._walkStream(root, options);\r\n    }\r\n    static(patterns, options) {\r\n        const filepaths = patterns.map(this._getFullEntryPath, this);\r\n        const stream = new stream_1.PassThrough({ objectMode: true });\r\n        stream._write = (index, _enc, done) => {\r\n            return this._getEntry(filepaths[index], patterns[index], options)\r\n                .then((entry) => {\r\n                if (entry !== null && options.entryFilter(entry)) {\r\n                    stream.push(entry);\r\n                }\r\n                if (index === filepaths.length - 1) {\r\n                    stream.end();\r\n                }\r\n                done();\r\n            })\r\n                .catch(done);\r\n        };\r\n        for (let i = 0; i < filepaths.length; i++) {\r\n            stream.write(i);\r\n        }\r\n        return stream;\r\n    }\r\n    _getEntry(filepath, pattern, options) {\r\n        return this._getStat(filepath)\r\n            .then((stats) => this._makeEntry(stats, pattern))\r\n            .catch((error) => {\r\n            if (options.errorFilter(error)) {\r\n                return null;\r\n            }\r\n            throw error;\r\n        });\r\n    }\r\n    _getStat(filepath) {\r\n        return new Promise((resolve, reject) => {\r\n            this._stat(filepath, this._fsStatSettings, (error, stats) => {\r\n                return error === null ? resolve(stats) : reject(error);\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.default = ReaderStream;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fsStat = require(\"@nodelib/fs.stat\");\r\nconst fsWalk = require(\"@nodelib/fs.walk\");\r\nconst reader_1 = require(\"./reader\");\r\nclass ReaderSync extends reader_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._walkSync = fsWalk.walkSync;\r\n        this._statSync = fsStat.statSync;\r\n    }\r\n    dynamic(root, options) {\r\n        return this._walkSync(root, options);\r\n    }\r\n    static(patterns, options) {\r\n        const entries = [];\r\n        for (const pattern of patterns) {\r\n            const filepath = this._getFullEntryPath(pattern);\r\n            const entry = this._getEntry(filepath, pattern, options);\r\n            if (entry === null || !options.entryFilter(entry)) {\r\n                continue;\r\n            }\r\n            entries.push(entry);\r\n        }\r\n        return entries;\r\n    }\r\n    _getEntry(filepath, pattern, options) {\r\n        try {\r\n            const stats = this._getStat(filepath);\r\n            return this._makeEntry(stats, pattern);\r\n        }\r\n        catch (error) {\r\n            if (options.errorFilter(error)) {\r\n                return null;\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    _getStat(filepath) {\r\n        return this._statSync(filepath, this._fsStatSettings);\r\n    }\r\n}\r\nexports.default = ReaderSync;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;\r\nconst fs = require(\"fs\");\r\nconst os = require(\"os\");\r\n/**\r\n * The `os.cpus` method can return zero. We expect the number of cores to be greater than zero.\r\n * https://github.com/nodejs/node/blob/7faeddf23a98c53896f8b574a6e66589e8fb1eb8/lib/os.js#L106-L107\r\n */\r\nconst CPU_COUNT = Math.max(os.cpus().length, 1);\r\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = {\r\n    lstat: fs.lstat,\r\n    lstatSync: fs.lstatSync,\r\n    stat: fs.stat,\r\n    statSync: fs.statSync,\r\n    readdir: fs.readdir,\r\n    readdirSync: fs.readdirSync\r\n};\r\nclass Settings {\r\n    constructor(_options = {}) {\r\n        this._options = _options;\r\n        this.absolute = this._getValue(this._options.absolute, false);\r\n        this.baseNameMatch = this._getValue(this._options.baseNameMatch, false);\r\n        this.braceExpansion = this._getValue(this._options.braceExpansion, true);\r\n        this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch, true);\r\n        this.concurrency = this._getValue(this._options.concurrency, CPU_COUNT);\r\n        this.cwd = this._getValue(this._options.cwd, process.cwd());\r\n        this.deep = this._getValue(this._options.deep, Infinity);\r\n        this.dot = this._getValue(this._options.dot, false);\r\n        this.extglob = this._getValue(this._options.extglob, true);\r\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, true);\r\n        this.fs = this._getFileSystemMethods(this._options.fs);\r\n        this.globstar = this._getValue(this._options.globstar, true);\r\n        this.ignore = this._getValue(this._options.ignore, []);\r\n        this.markDirectories = this._getValue(this._options.markDirectories, false);\r\n        this.objectMode = this._getValue(this._options.objectMode, false);\r\n        this.onlyDirectories = this._getValue(this._options.onlyDirectories, false);\r\n        this.onlyFiles = this._getValue(this._options.onlyFiles, true);\r\n        this.stats = this._getValue(this._options.stats, false);\r\n        this.suppressErrors = this._getValue(this._options.suppressErrors, false);\r\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, false);\r\n        this.unique = this._getValue(this._options.unique, true);\r\n        if (this.onlyDirectories) {\r\n            this.onlyFiles = false;\r\n        }\r\n        if (this.stats) {\r\n            this.objectMode = true;\r\n        }\r\n    }\r\n    _getValue(option, value) {\r\n        return option === undefined ? value : option;\r\n    }\r\n    _getFileSystemMethods(methods = {}) {\r\n        return Object.assign(Object.assign({}, exports.DEFAULT_FILE_SYSTEM_ADAPTER), methods);\r\n    }\r\n}\r\nexports.default = Settings;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.splitWhen = exports.flatten = void 0;\r\nfunction flatten(items) {\r\n    return items.reduce((collection, item) => [].concat(collection, item), []);\r\n}\r\nexports.flatten = flatten;\r\nfunction splitWhen(items, predicate) {\r\n    const result = [[]];\r\n    let groupIndex = 0;\r\n    for (const item of items) {\r\n        if (predicate(item)) {\r\n            groupIndex++;\r\n            result[groupIndex] = [];\r\n        }\r\n        else {\r\n            result[groupIndex].push(item);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.splitWhen = splitWhen;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isEnoentCodeError = void 0;\r\nfunction isEnoentCodeError(error) {\r\n    return error.code === 'ENOENT';\r\n}\r\nexports.isEnoentCodeError = isEnoentCodeError;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createDirentFromStats = void 0;\r\nclass DirentFromStats {\r\n    constructor(name, stats) {\r\n        this.name = name;\r\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\r\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\r\n        this.isDirectory = stats.isDirectory.bind(stats);\r\n        this.isFIFO = stats.isFIFO.bind(stats);\r\n        this.isFile = stats.isFile.bind(stats);\r\n        this.isSocket = stats.isSocket.bind(stats);\r\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\r\n    }\r\n}\r\nfunction createDirentFromStats(name, stats) {\r\n    return new DirentFromStats(name, stats);\r\n}\r\nexports.createDirentFromStats = createDirentFromStats;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.string = exports.stream = exports.pattern = exports.path = exports.fs = exports.errno = exports.array = void 0;\r\nconst array = require(\"./array\");\r\nexports.array = array;\r\nconst errno = require(\"./errno\");\r\nexports.errno = errno;\r\nconst fs = require(\"./fs\");\r\nexports.fs = fs;\r\nconst path = require(\"./path\");\r\nexports.path = path;\r\nconst pattern = require(\"./pattern\");\r\nexports.pattern = pattern;\r\nconst stream = require(\"./stream\");\r\nexports.stream = stream;\r\nconst string = require(\"./string\");\r\nexports.string = string;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.removeLeadingDotSegment = exports.escape = exports.makeAbsolute = exports.unixify = void 0;\r\nconst path = require(\"path\");\r\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\r\nconst UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;\r\n/**\r\n * Designed to work only with simple paths: `dir\\\\file`.\r\n */\r\nfunction unixify(filepath) {\r\n    return filepath.replace(/\\\\/g, '/');\r\n}\r\nexports.unixify = unixify;\r\nfunction makeAbsolute(cwd, filepath) {\r\n    return path.resolve(cwd, filepath);\r\n}\r\nexports.makeAbsolute = makeAbsolute;\r\nfunction escape(pattern) {\r\n    return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\r\n}\r\nexports.escape = escape;\r\nfunction removeLeadingDotSegment(entry) {\r\n    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\r\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\r\n    if (entry.charAt(0) === '.') {\r\n        const secondCharactery = entry.charAt(1);\r\n        if (secondCharactery === '/' || secondCharactery === '\\\\') {\r\n            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\r\n        }\r\n    }\r\n    return entry;\r\n}\r\nexports.removeLeadingDotSegment = removeLeadingDotSegment;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.matchAny = exports.convertPatternsToRe = exports.makeRe = exports.getPatternParts = exports.expandBraceExpansion = exports.expandPatternsWithBraceExpansion = exports.isAffectDepthOfReadingPattern = exports.endsWithSlashGlobStar = exports.hasGlobStar = exports.getBaseDirectory = exports.isPatternRelatedToParentDirectory = exports.getPatternsOutsideCurrentDirectory = exports.getPatternsInsideCurrentDirectory = exports.getPositivePatterns = exports.getNegativePatterns = exports.isPositivePattern = exports.isNegativePattern = exports.convertToNegativePattern = exports.convertToPositivePattern = exports.isDynamicPattern = exports.isStaticPattern = void 0;\r\nconst path = require(\"path\");\r\nconst globParent = require(\"glob-parent\");\r\nconst micromatch = require(\"micromatch\");\r\nconst GLOBSTAR = '**';\r\nconst ESCAPE_SYMBOL = '\\\\';\r\nconst COMMON_GLOB_SYMBOLS_RE = /[*?]|^!/;\r\nconst REGEX_CHARACTER_CLASS_SYMBOLS_RE = /\\[[^[]*]/;\r\nconst REGEX_GROUP_SYMBOLS_RE = /(?:^|[^!*+?@])\\([^(]*\\|[^|]*\\)/;\r\nconst GLOB_EXTENSION_SYMBOLS_RE = /[!*+?@]\\([^(]*\\)/;\r\nconst BRACE_EXPANSION_SEPARATORS_RE = /,|\\.\\./;\r\nfunction isStaticPattern(pattern, options = {}) {\r\n    return !isDynamicPattern(pattern, options);\r\n}\r\nexports.isStaticPattern = isStaticPattern;\r\nfunction isDynamicPattern(pattern, options = {}) {\r\n    /**\r\n     * A special case with an empty string is necessary for matching patterns that start with a forward slash.\r\n     * An empty string cannot be a dynamic pattern.\r\n     * For example, the pattern `/lib/*` will be spread into parts: '', 'lib', '*'.\r\n     */\r\n    if (pattern === '') {\r\n        return false;\r\n    }\r\n    /**\r\n     * When the `caseSensitiveMatch` option is disabled, all patterns must be marked as dynamic, because we cannot check\r\n     * filepath directly (without read directory).\r\n     */\r\n    if (options.caseSensitiveMatch === false || pattern.includes(ESCAPE_SYMBOL)) {\r\n        return true;\r\n    }\r\n    if (COMMON_GLOB_SYMBOLS_RE.test(pattern) || REGEX_CHARACTER_CLASS_SYMBOLS_RE.test(pattern) || REGEX_GROUP_SYMBOLS_RE.test(pattern)) {\r\n        return true;\r\n    }\r\n    if (options.extglob !== false && GLOB_EXTENSION_SYMBOLS_RE.test(pattern)) {\r\n        return true;\r\n    }\r\n    if (options.braceExpansion !== false && hasBraceExpansion(pattern)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.isDynamicPattern = isDynamicPattern;\r\nfunction hasBraceExpansion(pattern) {\r\n    const openingBraceIndex = pattern.indexOf('{');\r\n    if (openingBraceIndex === -1) {\r\n        return false;\r\n    }\r\n    const closingBraceIndex = pattern.indexOf('}', openingBraceIndex + 1);\r\n    if (closingBraceIndex === -1) {\r\n        return false;\r\n    }\r\n    const braceContent = pattern.slice(openingBraceIndex, closingBraceIndex);\r\n    return BRACE_EXPANSION_SEPARATORS_RE.test(braceContent);\r\n}\r\nfunction convertToPositivePattern(pattern) {\r\n    return isNegativePattern(pattern) ? pattern.slice(1) : pattern;\r\n}\r\nexports.convertToPositivePattern = convertToPositivePattern;\r\nfunction convertToNegativePattern(pattern) {\r\n    return '!' + pattern;\r\n}\r\nexports.convertToNegativePattern = convertToNegativePattern;\r\nfunction isNegativePattern(pattern) {\r\n    return pattern.startsWith('!') && pattern[1] !== '(';\r\n}\r\nexports.isNegativePattern = isNegativePattern;\r\nfunction isPositivePattern(pattern) {\r\n    return !isNegativePattern(pattern);\r\n}\r\nexports.isPositivePattern = isPositivePattern;\r\nfunction getNegativePatterns(patterns) {\r\n    return patterns.filter(isNegativePattern);\r\n}\r\nexports.getNegativePatterns = getNegativePatterns;\r\nfunction getPositivePatterns(patterns) {\r\n    return patterns.filter(isPositivePattern);\r\n}\r\nexports.getPositivePatterns = getPositivePatterns;\r\n/**\r\n * Returns patterns that can be applied inside the current directory.\r\n *\r\n * @example\r\n * // ['./*', '*', 'a/*']\r\n * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])\r\n */\r\nfunction getPatternsInsideCurrentDirectory(patterns) {\r\n    return patterns.filter((pattern) => !isPatternRelatedToParentDirectory(pattern));\r\n}\r\nexports.getPatternsInsideCurrentDirectory = getPatternsInsideCurrentDirectory;\r\n/**\r\n * Returns patterns to be expanded relative to (outside) the current directory.\r\n *\r\n * @example\r\n * // ['../*', './../*']\r\n * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])\r\n */\r\nfunction getPatternsOutsideCurrentDirectory(patterns) {\r\n    return patterns.filter(isPatternRelatedToParentDirectory);\r\n}\r\nexports.getPatternsOutsideCurrentDirectory = getPatternsOutsideCurrentDirectory;\r\nfunction isPatternRelatedToParentDirectory(pattern) {\r\n    return pattern.startsWith('..') || pattern.startsWith('./..');\r\n}\r\nexports.isPatternRelatedToParentDirectory = isPatternRelatedToParentDirectory;\r\nfunction getBaseDirectory(pattern) {\r\n    return globParent(pattern, { flipBackslashes: false });\r\n}\r\nexports.getBaseDirectory = getBaseDirectory;\r\nfunction hasGlobStar(pattern) {\r\n    return pattern.includes(GLOBSTAR);\r\n}\r\nexports.hasGlobStar = hasGlobStar;\r\nfunction endsWithSlashGlobStar(pattern) {\r\n    return pattern.endsWith('/' + GLOBSTAR);\r\n}\r\nexports.endsWithSlashGlobStar = endsWithSlashGlobStar;\r\nfunction isAffectDepthOfReadingPattern(pattern) {\r\n    const basename = path.basename(pattern);\r\n    return endsWithSlashGlobStar(pattern) || isStaticPattern(basename);\r\n}\r\nexports.isAffectDepthOfReadingPattern = isAffectDepthOfReadingPattern;\r\nfunction expandPatternsWithBraceExpansion(patterns) {\r\n    return patterns.reduce((collection, pattern) => {\r\n        return collection.concat(expandBraceExpansion(pattern));\r\n    }, []);\r\n}\r\nexports.expandPatternsWithBraceExpansion = expandPatternsWithBraceExpansion;\r\nfunction expandBraceExpansion(pattern) {\r\n    return micromatch.braces(pattern, {\r\n        expand: true,\r\n        nodupes: true\r\n    });\r\n}\r\nexports.expandBraceExpansion = expandBraceExpansion;\r\nfunction getPatternParts(pattern, options) {\r\n    let { parts } = micromatch.scan(pattern, Object.assign(Object.assign({}, options), { parts: true }));\r\n    /**\r\n     * The scan method returns an empty array in some cases.\r\n     * See micromatch/picomatch#58 for more details.\r\n     */\r\n    if (parts.length === 0) {\r\n        parts = [pattern];\r\n    }\r\n    /**\r\n     * The scan method does not return an empty part for the pattern with a forward slash.\r\n     * This is another part of micromatch/picomatch#58.\r\n     */\r\n    if (parts[0].startsWith('/')) {\r\n        parts[0] = parts[0].slice(1);\r\n        parts.unshift('');\r\n    }\r\n    return parts;\r\n}\r\nexports.getPatternParts = getPatternParts;\r\nfunction makeRe(pattern, options) {\r\n    return micromatch.makeRe(pattern, options);\r\n}\r\nexports.makeRe = makeRe;\r\nfunction convertPatternsToRe(patterns, options) {\r\n    return patterns.map((pattern) => makeRe(pattern, options));\r\n}\r\nexports.convertPatternsToRe = convertPatternsToRe;\r\nfunction matchAny(entry, patternsRe) {\r\n    return patternsRe.some((patternRe) => patternRe.test(entry));\r\n}\r\nexports.matchAny = matchAny;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.merge = void 0;\r\nconst merge2 = require(\"merge2\");\r\nfunction merge(streams) {\r\n    const mergedStream = merge2(streams);\r\n    streams.forEach((stream) => {\r\n        stream.once('error', (error) => mergedStream.emit('error', error));\r\n    });\r\n    mergedStream.once('close', () => propagateCloseEventToSources(streams));\r\n    mergedStream.once('end', () => propagateCloseEventToSources(streams));\r\n    return mergedStream;\r\n}\r\nexports.merge = merge;\r\nfunction propagateCloseEventToSources(streams) {\r\n    streams.forEach((stream) => stream.emit('close'));\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isEmpty = exports.isString = void 0;\r\nfunction isString(input) {\r\n    return typeof input === 'string';\r\n}\r\nexports.isString = isString;\r\nfunction isEmpty(input) {\r\n    return input === '';\r\n}\r\nexports.isEmpty = isEmpty;\r\n","'use strict'\n\n/* eslint-disable no-var */\n\nvar reusify = require('reusify')\n\nfunction fastqueue (context, worker, concurrency) {\n  if (typeof context === 'function') {\n    concurrency = worker\n    worker = context\n    context = null\n  }\n\n  if (concurrency < 1) {\n    throw new Error('fastqueue concurrency must be greater than 1')\n  }\n\n  var cache = reusify(Task)\n  var queueHead = null\n  var queueTail = null\n  var _running = 0\n  var errorHandler = null\n\n  var self = {\n    push: push,\n    drain: noop,\n    saturated: noop,\n    pause: pause,\n    paused: false,\n    concurrency: concurrency,\n    running: running,\n    resume: resume,\n    idle: idle,\n    length: length,\n    getQueue: getQueue,\n    unshift: unshift,\n    empty: noop,\n    kill: kill,\n    killAndDrain: killAndDrain,\n    error: error\n  }\n\n  return self\n\n  function running () {\n    return _running\n  }\n\n  function pause () {\n    self.paused = true\n  }\n\n  function length () {\n    var current = queueHead\n    var counter = 0\n\n    while (current) {\n      current = current.next\n      counter++\n    }\n\n    return counter\n  }\n\n  function getQueue () {\n    var current = queueHead\n    var tasks = []\n\n    while (current) {\n      tasks.push(current.value)\n      current = current.next\n    }\n\n    return tasks\n  }\n\n  function resume () {\n    if (!self.paused) return\n    self.paused = false\n    for (var i = 0; i < self.concurrency; i++) {\n      _running++\n      release()\n    }\n  }\n\n  function idle () {\n    return _running === 0 && self.length() === 0\n  }\n\n  function push (value, done) {\n    var current = cache.get()\n\n    current.context = context\n    current.release = release\n    current.value = value\n    current.callback = done || noop\n    current.errorHandler = errorHandler\n\n    if (_running === self.concurrency || self.paused) {\n      if (queueTail) {\n        queueTail.next = current\n        queueTail = current\n      } else {\n        queueHead = current\n        queueTail = current\n        self.saturated()\n      }\n    } else {\n      _running++\n      worker.call(context, current.value, current.worked)\n    }\n  }\n\n  function unshift (value, done) {\n    var current = cache.get()\n\n    current.context = context\n    current.release = release\n    current.value = value\n    current.callback = done || noop\n\n    if (_running === self.concurrency || self.paused) {\n      if (queueHead) {\n        current.next = queueHead\n        queueHead = current\n      } else {\n        queueHead = current\n        queueTail = current\n        self.saturated()\n      }\n    } else {\n      _running++\n      worker.call(context, current.value, current.worked)\n    }\n  }\n\n  function release (holder) {\n    if (holder) {\n      cache.release(holder)\n    }\n    var next = queueHead\n    if (next) {\n      if (!self.paused) {\n        if (queueTail === queueHead) {\n          queueTail = null\n        }\n        queueHead = next.next\n        next.next = null\n        worker.call(context, next.value, next.worked)\n        if (queueTail === null) {\n          self.empty()\n        }\n      } else {\n        _running--\n      }\n    } else if (--_running === 0) {\n      self.drain()\n    }\n  }\n\n  function kill () {\n    queueHead = null\n    queueTail = null\n    self.drain = noop\n  }\n\n  function killAndDrain () {\n    queueHead = null\n    queueTail = null\n    self.drain()\n    self.drain = noop\n  }\n\n  function error (handler) {\n    errorHandler = handler\n  }\n}\n\nfunction noop () {}\n\nfunction Task () {\n  this.value = null\n  this.callback = noop\n  this.next = null\n  this.release = noop\n  this.context = null\n  this.errorHandler = null\n\n  var self = this\n\n  this.worked = function worked (err, result) {\n    var callback = self.callback\n    var errorHandler = self.errorHandler\n    var val = self.value\n    self.value = null\n    self.callback = noop\n    if (self.errorHandler) {\n      errorHandler(err, val)\n    }\n    callback.call(self.context, err, result)\n    self.release(self)\n  }\n}\n\nfunction queueAsPromised (context, worker, concurrency) {\n  if (typeof context === 'function') {\n    concurrency = worker\n    worker = context\n    context = null\n  }\n\n  function asyncWrapper (arg, cb) {\n    worker.call(this, arg)\n      .then(function (res) {\n        cb(null, res)\n      }, cb)\n  }\n\n  var queue = fastqueue(context, asyncWrapper, concurrency)\n\n  var pushCb = queue.push\n  var unshiftCb = queue.unshift\n\n  queue.push = push\n  queue.unshift = unshift\n  queue.drained = drained\n\n  return queue\n\n  function push (value) {\n    var p = new Promise(function (resolve, reject) {\n      pushCb(value, function (err, result) {\n        if (err) {\n          reject(err)\n          return\n        }\n        resolve(result)\n      })\n    })\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop)\n\n    return p\n  }\n\n  function unshift (value) {\n    var p = new Promise(function (resolve, reject) {\n      unshiftCb(value, function (err, result) {\n        if (err) {\n          reject(err)\n          return\n        }\n        resolve(result)\n      })\n    })\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop)\n\n    return p\n  }\n\n  function drained () {\n    if (queue.idle()) {\n      return new Promise(function (resolve) {\n        resolve()\n      })\n    }\n\n    var previousDrain = queue.drain\n\n    var p = new Promise(function (resolve) {\n      queue.drain = function () {\n        previousDrain()\n        resolve()\n      }\n    })\n\n    return p\n  }\n}\n\nmodule.exports = fastqueue\nmodule.exports.promise = queueAsPromised\n","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","/**\n * @license Fraction.js v4.2.0 05/03/2022\n * https://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2021, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throw Fraction['InvalidParameter'];\n    }\n    return n * s;\n  }\n\n  // Creates a new Fraction internally without the need of the bulky constructor\n  function newFraction(n, d) {\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    var f = Object.create(Fraction.prototype);\n    f[\"s\"] = n < 0 ? -1 : 1;\n\n    n = n < 0 ? -n : n;\n\n    var a = gcd(n, d);\n\n    f[\"n\"] = n / a;\n    f[\"d\"] = d / a;\n    return f;\n  }\n\n  function factorize(num) {\n\n    var factors = {};\n\n    var n = num;\n    var i = 2;\n    var s = 4;\n\n    while (s <= n) {\n\n      while (n % i === 0) {\n        n/= i;\n        factors[i] = (factors[i] || 0) + 1;\n      }\n      s+= 1 + 2 * i++;\n    }\n\n    if (n !== num) {\n      if (n > 1)\n        factors[n] = (factors[n] || 0) + 1;\n    } else {\n      factors[num] = (factors[num] || 0) + 1;\n    }\n    return factors;\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n\n      if (n % 1 !== 0 || d % 1 !== 0) {\n        throw Fraction['NonIntegerParameter'];\n      }\n\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n          {\n            if (\"d\" in p1 && \"n\" in p1) {\n              n = p1[\"n\"];\n              d = p1[\"d\"];\n              if (\"s\" in p1)\n                n*= p1[\"s\"];\n            } else if (0 in p1) {\n              n = p1[0];\n              if (1 in p1)\n                d = p1[1];\n            } else {\n              throw Fraction['InvalidParameter'];\n            }\n            s = n * d;\n            break;\n          }\n        case \"number\":\n          {\n            if (p1 < 0) {\n              s = p1;\n              p1 = -p1;\n            }\n\n            if (p1 % 1 === 0) {\n              n = p1;\n            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n              if (p1 >= 1) {\n                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n                p1/= z;\n              }\n\n              // Using Farey Sequences\n              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n              while (B <= N && D <= N) {\n                M = (A + C) / (B + D);\n\n                if (p1 === M) {\n                  if (B + D <= N) {\n                    n = A + C;\n                    d = B + D;\n                  } else if (D > B) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                  break;\n\n                } else {\n\n                  if (p1 > M) {\n                    A+= C;\n                    B+= D;\n                  } else {\n                    C+= A;\n                    D+= B;\n                  }\n\n                  if (B > N) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                }\n              }\n              n*= z;\n            } else if (isNaN(p1) || isNaN(p2)) {\n              d = n = NaN;\n            }\n            break;\n          }\n        case \"string\":\n          {\n            B = p1.match(/\\d+|./g);\n\n            if (B === null)\n              throw Fraction['InvalidParameter'];\n\n            if (B[A] === '-') {// Check for minus sign at the beginning\n              s = -1;\n              A++;\n            } else if (B[A] === '+') {// Check for plus sign at the beginning\n              A++;\n            }\n\n            if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n              w = assign(B[A++], s);\n            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n              if (B[A] !== '.') { // Handle 0.5 and .5\n                v = assign(B[A++], s);\n              }\n              A++;\n\n              // Check for decimal places\n              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n                w = assign(B[A], s);\n                y = Math.pow(10, B[A].length);\n                A++;\n              }\n\n              // Check for repeating places\n              if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n                x = assign(B[A + 1], s);\n                z = Math.pow(10, B[A + 1].length) - 1;\n                A+= 3;\n              }\n\n            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n              w = assign(B[A], s);\n              y = assign(B[A + 2], 1);\n              A+= 3;\n            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n              v = assign(B[A], s);\n              w = assign(B[A + 2], s);\n              y = assign(B[A + 4], 1);\n              A+= 5;\n            }\n\n            if (B.length <= A) { // Check for more tokens on the stack\n              d = y * z;\n              s = /* void */\n              n = x + d * v + z * w;\n              break;\n            }\n\n            /* Fall through on error */\n          }\n        default:\n          throw Fraction['InvalidParameter'];\n      }\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n      d/= 2) {\n    }\n\n    for (; d % 5 === 0;\n      d/= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n  function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a%= b;\n      if (!a)\n        return b;\n      b%= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    parse(a, b);\n\n    if (this instanceof Fraction) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse variable a\n      this[\"s\"] = P[\"s\"];\n      this[\"n\"] = P[\"n\"] / a;\n      this[\"d\"] = P[\"d\"] / a;\n    } else {\n      return newFraction(P['s'] * P['n'], P['d']);\n    }\n  }\n\n  Fraction['DivisionByZero'] = new Error(\"Division by Zero\");\n  Fraction['InvalidParameter'] = new Error(\"Invalid argument\");\n  Fraction['NonIntegerParameter'] = new Error(\"Parameters must be integer\");\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return newFraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return newFraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n        this[\"d\"] * P[\"n\"]\n      );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return newFraction(this['s'] * this['n'], this['d']);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return newFraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        throw Fraction['DivisionByZero'];\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return newFraction(\n        this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n        P[\"d\"] * this[\"d\"]\n      );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return newFraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return newFraction(0, 1);\n      }\n      return newFraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denominator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return newFraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some rational exponent, if possible\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(a, b) {\n\n      parse(a, b);\n\n      // Trivial case when exp is an integer\n\n      if (P['d'] === 1) {\n\n        if (P['s'] < 0) {\n          return newFraction(Math.pow(this['s'] * this[\"d\"], P['n']), Math.pow(this[\"n\"], P['n']));\n        } else {\n          return newFraction(Math.pow(this['s'] * this[\"n\"], P['n']), Math.pow(this[\"d\"], P['n']));\n        }\n      }\n\n      // Negative roots become complex\n      //     (-a/b)^(c/d) = x\n      // <=> (-1)^(c/d) * (a/b)^(c/d) = x\n      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180°\n      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )\n      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.\n      if (this['s'] < 0) return null;\n\n      // Now prime factor n and d\n      var N = factorize(this['n']);\n      var D = factorize(this['d']);\n\n      // Exponentiate and take root for n and d individually\n      var n = 1;\n      var d = 1;\n      for (var k in N) {\n        if (k === '1') continue;\n        if (k === '0') {\n          n = 0;\n          break;\n        }\n        N[k]*= P['n'];\n\n        if (N[k] % P['d'] === 0) {\n          N[k]/= P['d'];\n        } else return null;\n        n*= Math.pow(k, N[k]);\n      }\n\n      for (var k in D) {\n        if (k === '1') continue;\n        D[k]*= P['n'];\n\n        if (D[k] % P['d'] === 0) {\n          D[k]/= P['d'];\n        } else return null;\n        d*= Math.pow(k, D[k]);\n      }\n\n      if (P['s'] < 0) {\n        return newFraction(d, n);\n      }\n      return newFraction(n, d);\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      eps = eps || 0.001;\n\n      var thisABS = this['abs']();\n      var cont = thisABS['toContinued']();\n\n      for (var i = 1; i < cont.length; i++) {\n\n        var s = newFraction(cont[i - 1], 1);\n        for (var k = i - 2; k >= 0; k--) {\n          s = s['inverse']()['add'](cont[k]);\n        }\n\n        if (s['sub'](thisABS)['abs']().valueOf() < eps) {\n          return s['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction(true) => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          str+= \" \";\n          n%= d;\n        }\n\n        str+= n;\n        str+= '/';\n        str+= d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          n%= d;\n        }\n\n        str+= \"\\\\frac{\";\n        str+= n;\n        str+= '}{';\n        str+= d;\n        str+= '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(a) || isNaN(b)) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repetation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] < 0 ? \"-\" : \"\";\n\n      str+= N / D | 0;\n\n      N%= D;\n      N*= 10;\n\n      if (N)\n        str+= \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \"(\";\n        for (var i = cycLen; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \")\";\n      } else {\n        for (var i = dec; N && i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(Fraction, \"__esModule\", { 'value': true });\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","'use strict'\n/*\n * merge2\n * https://github.com/teambition/merge2\n *\n * Copyright (c) 2014-2020 Teambition\n * Licensed under the MIT license.\n */\nconst Stream = require('stream')\nconst PassThrough = Stream.PassThrough\nconst slice = Array.prototype.slice\n\nmodule.exports = merge2\n\nfunction merge2 () {\n  const streamsQueue = []\n  const args = slice.call(arguments)\n  let merging = false\n  let options = args[args.length - 1]\n\n  if (options && !Array.isArray(options) && options.pipe == null) {\n    args.pop()\n  } else {\n    options = {}\n  }\n\n  const doEnd = options.end !== false\n  const doPipeError = options.pipeError === true\n  if (options.objectMode == null) {\n    options.objectMode = true\n  }\n  if (options.highWaterMark == null) {\n    options.highWaterMark = 64 * 1024\n  }\n  const mergedStream = PassThrough(options)\n\n  function addStream () {\n    for (let i = 0, len = arguments.length; i < len; i++) {\n      streamsQueue.push(pauseStreams(arguments[i], options))\n    }\n    mergeStream()\n    return this\n  }\n\n  function mergeStream () {\n    if (merging) {\n      return\n    }\n    merging = true\n\n    let streams = streamsQueue.shift()\n    if (!streams) {\n      process.nextTick(endStream)\n      return\n    }\n    if (!Array.isArray(streams)) {\n      streams = [streams]\n    }\n\n    let pipesCount = streams.length + 1\n\n    function next () {\n      if (--pipesCount > 0) {\n        return\n      }\n      merging = false\n      mergeStream()\n    }\n\n    function pipe (stream) {\n      function onend () {\n        stream.removeListener('merge2UnpipeEnd', onend)\n        stream.removeListener('end', onend)\n        if (doPipeError) {\n          stream.removeListener('error', onerror)\n        }\n        next()\n      }\n      function onerror (err) {\n        mergedStream.emit('error', err)\n      }\n      // skip ended stream\n      if (stream._readableState.endEmitted) {\n        return next()\n      }\n\n      stream.on('merge2UnpipeEnd', onend)\n      stream.on('end', onend)\n\n      if (doPipeError) {\n        stream.on('error', onerror)\n      }\n\n      stream.pipe(mergedStream, { end: false })\n      // compatible for old stream\n      stream.resume()\n    }\n\n    for (let i = 0; i < streams.length; i++) {\n      pipe(streams[i])\n    }\n\n    next()\n  }\n\n  function endStream () {\n    merging = false\n    // emit 'queueDrain' when all streams merged.\n    mergedStream.emit('queueDrain')\n    if (doEnd) {\n      mergedStream.end()\n    }\n  }\n\n  mergedStream.setMaxListeners(0)\n  mergedStream.add = addStream\n  mergedStream.on('unpipe', function (stream) {\n    stream.emit('merge2UnpipeEnd')\n  })\n\n  if (args.length) {\n    addStream.apply(null, args)\n  }\n  return mergedStream\n}\n\n// check and pause streams for pipe.\nfunction pauseStreams (streams, options) {\n  if (!Array.isArray(streams)) {\n    // Backwards-compat with old-style streams\n    if (!streams._readableState && streams.pipe) {\n      streams = streams.pipe(PassThrough(options))\n    }\n    if (!streams._readableState || !streams.pause || !streams.pipe) {\n      throw new Error('Only readable stream can be merged.')\n    }\n    streams.pause()\n  } else {\n    for (let i = 0, len = streams.length; i < len; i++) {\n      streams[i] = pauseStreams(streams[i], options)\n    }\n  }\n  return streams\n}\n","'use strict';\n\nconst util = require('util');\nconst braces = require('braces');\nconst picomatch = require('picomatch');\nconst utils = require('picomatch/lib/utils');\nconst isEmptyString = val => val === '' || val === './';\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} `list` List of strings to match.\n * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.match = micromatch;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `[options]` See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.any = micromatch.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = new Set(micromatch(list, patterns, { ...options, onResult }));\n\n  for (let item of items) {\n    if (!matches.has(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any of the patterns matches any part of `str`.\n * @api public\n */\n\nmicromatch.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch.matchKeys = (obj, patterns, options) => {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`\n * @api public\n */\n\nmicromatch.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`\n * @api public\n */\n\nmicromatch.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch.capture = (glob, input, options) => {\n  let posix = utils.isWindows(options);\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch.scan = (...args) => picomatch.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.parse(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces(String(pattern), options)) {\n      res.push(picomatch.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n    return [pattern];\n  }\n  return braces(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\nmodule.exports = micromatch;\n","/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n","'use strict';\nmodule.exports = {\n  wrap: wrapRange,\n  limit: limitRange,\n  validate: validateRange,\n  test: testRange,\n  curry: curry,\n  name: name\n};\n\nfunction wrapRange(min, max, value) {\n  var maxLessMin = max - min;\n  return ((value - min) % maxLessMin + maxLessMin) % maxLessMin + min;\n}\n\nfunction limitRange(min, max, value) {\n  return Math.max(min, Math.min(max, value));\n}\n\nfunction validateRange(min, max, value, minExclusive, maxExclusive) {\n  if (!testRange(min, max, value, minExclusive, maxExclusive)) {\n    throw new Error(value + ' is outside of range [' + min + ',' + max + ')');\n  }\n  return value;\n}\n\nfunction testRange(min, max, value, minExclusive, maxExclusive) {\n  return !(\n       value < min ||\n       value > max ||\n       (maxExclusive && (value === max)) ||\n       (minExclusive && (value === min))\n  );\n}\n\nfunction name(min, max, minExcl, maxExcl) {\n  return (minExcl ? '(' : '[') + min + ',' + max + (maxExcl ? ')' : ']');\n}\n\nfunction curry(min, max, minExclusive, maxExclusive) {\n  var boundNameFn = name.bind(null, min, max, minExclusive, maxExclusive);\n  return {\n    wrap: wrapRange.bind(null, min, max),\n    limit: limitRange.bind(null, min, max),\n    validate: function(value) {\n      return validateRange(min, max, value, minExclusive, maxExclusive);\n    },\n    test: function(value) {\n      return testRange(min, max, value, minExclusive, maxExclusive);\n    },\n    toString: boundNameFn,\n    name: boundNameFn\n  };\n}\n","'use strict';\n\nvar crypto = require('crypto');\n\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */\nexports = module.exports = objectHash;\n\nfunction objectHash(object, options){\n  options = applyDefaults(object, options);\n\n  return hash(object, options);\n}\n\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */\nexports.sha1 = function(object){\n  return objectHash(object);\n};\nexports.keys = function(object){\n  return objectHash(object, {excludeValues: true, algorithm: 'sha1', encoding: 'hex'});\n};\nexports.MD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex'});\n};\nexports.keysMD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex', excludeValues: true});\n};\n\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : ['sha1', 'md5'];\nhashes.push('passthrough');\nvar encodings = ['buffer', 'hex', 'binary', 'base64'];\n\nfunction applyDefaults(object, sourceOptions){\n  sourceOptions = sourceOptions || {};\n\n  // create a copy rather than mutating\n  var options = {};\n  options.algorithm = sourceOptions.algorithm || 'sha1';\n  options.encoding = sourceOptions.encoding || 'hex';\n  options.excludeValues = sourceOptions.excludeValues ? true : false;\n  options.algorithm = options.algorithm.toLowerCase();\n  options.encoding = options.encoding.toLowerCase();\n  options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n  options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n  options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n  options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n  options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n  options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n  options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n  options.replacer = sourceOptions.replacer || undefined;\n  options.excludeKeys = sourceOptions.excludeKeys || undefined;\n\n  if(typeof object === 'undefined') {\n    throw new Error('Object argument required.');\n  }\n\n  // if there is a case-insensitive match in the hashes list, accept it\n  // (i.e. SHA256 for sha256)\n  for (var i = 0; i < hashes.length; ++i) {\n    if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n      options.algorithm = hashes[i];\n    }\n  }\n\n  if(hashes.indexOf(options.algorithm) === -1){\n    throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' +\n      'supported values: ' + hashes.join(', '));\n  }\n\n  if(encodings.indexOf(options.encoding) === -1 &&\n     options.algorithm !== 'passthrough'){\n    throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' +\n      'supported values: ' + encodings.join(', '));\n  }\n\n  return options;\n}\n\n/** Check if the given function is a native function */\nfunction isNativeFunction(f) {\n  if ((typeof f) !== 'function') {\n    return false;\n  }\n  var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\n\nfunction hash(object, options) {\n  var hashingStream;\n\n  if (options.algorithm !== 'passthrough') {\n    hashingStream = crypto.createHash(options.algorithm);\n  } else {\n    hashingStream = new PassThrough();\n  }\n\n  if (typeof hashingStream.write === 'undefined') {\n    hashingStream.write = hashingStream.update;\n    hashingStream.end   = hashingStream.update;\n  }\n\n  var hasher = typeHasher(options, hashingStream);\n  hasher.dispatch(object);\n  if (!hashingStream.update) {\n    hashingStream.end('');\n  }\n\n  if (hashingStream.digest) {\n    return hashingStream.digest(options.encoding === 'buffer' ? undefined : options.encoding);\n  }\n\n  var buf = hashingStream.read();\n  if (options.encoding === 'buffer') {\n    return buf;\n  }\n\n  return buf.toString(options.encoding);\n}\n\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */\nexports.writeToStream = function(object, options, stream) {\n  if (typeof stream === 'undefined') {\n    stream = options;\n    options = {};\n  }\n\n  options = applyDefaults(object, options);\n\n  return typeHasher(options, stream).dispatch(object);\n};\n\nfunction typeHasher(options, writeTo, context){\n  context = context || [];\n  var write = function(str) {\n    if (writeTo.update) {\n      return writeTo.update(str, 'utf8');\n    } else {\n      return writeTo.write(str, 'utf8');\n    }\n  };\n\n  return {\n    dispatch: function(value){\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n\n      var type = typeof value;\n      if (value === null) {\n        type = 'null';\n      }\n\n      //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n\n      return this['_' + type](value);\n    },\n    _object: function(object) {\n      var pattern = (/\\[object (.*)\\]/i);\n      var objString = Object.prototype.toString.call(object);\n      var objType = pattern.exec(objString);\n      if (!objType) { // object type did not match [object ...]\n        objType = 'unknown:[' + objString + ']';\n      } else {\n        objType = objType[1]; // take only the class name\n      }\n\n      objType = objType.toLowerCase();\n\n      var objectNumber = null;\n\n      if ((objectNumber = context.indexOf(object)) >= 0) {\n        return this.dispatch('[CIRCULAR:' + objectNumber + ']');\n      } else {\n        context.push(object);\n      }\n\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        return write(object);\n      }\n\n      if(objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if(this['_' + objType]) {\n          this['_' + objType](object);\n        } else if (options.ignoreUnknown) {\n          return write('[' + objType + ']');\n        } else {\n          throw new Error('Unknown object type \"' + objType + '\"');\n        }\n      }else{\n        var keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        // Make sure to incorporate special properties, so\n        // Types with different prototypes will produce\n        // a different hash and objects derived from\n        // different functions (`new Foo`, `new Bar`) will\n        // produce different hashes.\n        // We never do this for native functions since some\n        // seem to break because of that.\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          keys.splice(0, 0, 'prototype', '__proto__', 'constructor');\n        }\n\n        if (options.excludeKeys) {\n          keys = keys.filter(function(key) { return !options.excludeKeys(key); });\n        }\n\n        write('object:' + keys.length + ':');\n        var self = this;\n        return keys.forEach(function(key){\n          self.dispatch(key);\n          write(':');\n          if(!options.excludeValues) {\n            self.dispatch(object[key]);\n          }\n          write(',');\n        });\n      }\n    },\n    _array: function(arr, unordered){\n      unordered = typeof unordered !== 'undefined' ? unordered :\n        options.unorderedArrays !== false; // default to options.unorderedArrays\n\n      var self = this;\n      write('array:' + arr.length + ':');\n      if (!unordered || arr.length <= 1) {\n        return arr.forEach(function(entry) {\n          return self.dispatch(entry);\n        });\n      }\n\n      // the unordered case is a little more complicated:\n      // since there is no canonical ordering on objects,\n      // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n      // we first serialize each entry using a PassThrough stream\n      // before sorting.\n      // also: we can’t use the same context array for all entries\n      // since the order of hashing should *not* matter. instead,\n      // we keep track of the additions to a copy of the context array\n      // and add all of them to the global context array when we’re done\n      var contextAdditions = [];\n      var entries = arr.map(function(entry) {\n        var strm = new PassThrough();\n        var localContext = context.slice(); // make copy\n        var hasher = typeHasher(options, strm, localContext);\n        hasher.dispatch(entry);\n        // take only what was added to localContext and append it to contextAdditions\n        contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n        return strm.read().toString();\n      });\n      context = context.concat(contextAdditions);\n      entries.sort();\n      return this._array(entries, false);\n    },\n    _date: function(date){\n      return write('date:' + date.toJSON());\n    },\n    _symbol: function(sym){\n      return write('symbol:' + sym.toString());\n    },\n    _error: function(err){\n      return write('error:' + err.toString());\n    },\n    _boolean: function(bool){\n      return write('bool:' + bool.toString());\n    },\n    _string: function(string){\n      write('string:' + string.length + ':');\n      write(string.toString());\n    },\n    _function: function(fn){\n      write('fn:');\n      if (isNativeFunction(fn)) {\n        this.dispatch('[native]');\n      } else {\n        this.dispatch(fn.toString());\n      }\n\n      if (options.respectFunctionNames !== false) {\n        // Make sure we can still distinguish native functions\n        // by their name, otherwise String and Function will\n        // have the same hash\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n\n      if (options.respectFunctionProperties) {\n        this._object(fn);\n      }\n    },\n    _number: function(number){\n      return write('number:' + number.toString());\n    },\n    _xml: function(xml){\n      return write('xml:' + xml.toString());\n    },\n    _null: function() {\n      return write('Null');\n    },\n    _undefined: function() {\n      return write('Undefined');\n    },\n    _regexp: function(regex){\n      return write('regex:' + regex.toString());\n    },\n    _uint8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray: function(arr){\n      write('uint8clampedarray:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array: function(arr){\n      write('int8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array: function(arr){\n      write('int16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array: function(arr){\n      write('int32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array: function(arr){\n      write('float32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array: function(arr){\n      write('float64array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer: function(arr){\n      write('arraybuffer:');\n      return this.dispatch(new Uint8Array(arr));\n    },\n    _url: function(url) {\n      return write('url:' + url.toString(), 'utf8');\n    },\n    _map: function(map) {\n      write('map:');\n      var arr = Array.from(map);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _set: function(set) {\n      write('set:');\n      var arr = Array.from(set);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _file: function(file) {\n      write('file:');\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    _blob: function() {\n      if (options.ignoreUnknown) {\n        return write('[blob]');\n      }\n\n      throw Error('Hashing Blob objects is currently not supported\\n' +\n        '(see https://github.com/puleos/object-hash/issues/26)\\n' +\n        'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n    },\n    _domwindow: function() { return write('domwindow'); },\n    _bigint: function(number){\n      return write('bigint:' + number.toString());\n    },\n    /* Node.js standard native objects */\n    _process: function() { return write('process'); },\n    _timer: function() { return write('timer'); },\n    _pipe: function() { return write('pipe'); },\n    _tcp: function() { return write('tcp'); },\n    _udp: function() { return write('udp'); },\n    _tty: function() { return write('tty'); },\n    _statwatcher: function() { return write('statwatcher'); },\n    _securecontext: function() { return write('securecontext'); },\n    _connection: function() { return write('connection'); },\n    _zlib: function() { return write('zlib'); },\n    _context: function() { return write('context'); },\n    _nodescript: function() { return write('nodescript'); },\n    _httpparser: function() { return write('httpparser'); },\n    _dataview: function() { return write('dataview'); },\n    _signal: function() { return write('signal'); },\n    _fsevent: function() { return write('fsevent'); },\n    _tlswrap: function() { return write('tlswrap'); },\n  };\n}\n\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n  return {\n    buf: '',\n\n    write: function(b) {\n      this.buf += b;\n    },\n\n    end: function(b) {\n      this.buf += b;\n    },\n\n    read: function() {\n      return this.buf;\n    }\n  };\n}\n","'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n","let tty = require(\"tty\")\n\nlet isColorSupported =\n\t!(\"NO_COLOR\" in process.env || process.argv.includes(\"--no-color\")) &&\n\t(\"FORCE_COLOR\" in process.env ||\n\t\tprocess.argv.includes(\"--color\") ||\n\t\tprocess.platform === \"win32\" ||\n\t\t(tty.isatty(1) && process.env.TERM !== \"dumb\") ||\n\t\t\"CI\" in process.env)\n\nlet formatter =\n\t(open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input\n\t\tlet index = string.indexOf(close, open.length)\n\t\treturn ~index\n\t\t\t? open + replaceClose(string, close, replace, index) + close\n\t\t\t: open + string + close\n\t}\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet start = string.substring(0, index) + replace\n\tlet end = string.substring(index + close.length)\n\tlet nextIndex = end.indexOf(close)\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\n}\n\nlet createColors = (enabled = isColorSupported) => ({\n\tisColorSupported: enabled,\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\n})\n\nmodule.exports = createColors()\nmodule.exports.createColors = createColors\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","let postcss = require('postcss')\n\nlet processResult = require('./process-result')\nlet parse = require('./parser')\n\nmodule.exports = function async(plugins) {\n  let processor = postcss(plugins)\n  return async input => {\n    let result = await processor.process(input, {\n      parser: parse,\n      from: undefined\n    })\n    return processResult(result)\n  }\n}\n","let objectify = require('./objectifier')\nlet parse = require('./parser')\nlet async = require('./async')\nlet sync = require('./sync')\n\nmodule.exports = {\n  objectify,\n  parse,\n  async,\n  sync\n}\n","let camelcase = require('camelcase-css')\n\nlet UNITLESS = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n}\n\nfunction atRule(node) {\n  if (typeof node.nodes === 'undefined') {\n    return true\n  } else {\n    return process(node)\n  }\n}\n\nfunction process(node) {\n  let name\n  let result = {}\n\n  node.each(child => {\n    if (child.type === 'atrule') {\n      name = '@' + child.name\n      if (child.params) name += ' ' + child.params\n      if (typeof result[name] === 'undefined') {\n        result[name] = atRule(child)\n      } else if (Array.isArray(result[name])) {\n        result[name].push(atRule(child))\n      } else {\n        result[name] = [result[name], atRule(child)]\n      }\n    } else if (child.type === 'rule') {\n      let body = process(child)\n      if (result[child.selector]) {\n        for (let i in body) {\n          result[child.selector][i] = body[i]\n        }\n      } else {\n        result[child.selector] = body\n      }\n    } else if (child.type === 'decl') {\n      if (child.prop[0] === '-' && child.prop[1] === '-') {\n        name = child.prop\n      } else if (child.parent && child.parent.selector === ':export') {\n        name = child.prop\n      } else {\n        name = camelcase(child.prop)\n      }\n      let value = child.value\n      if (!isNaN(child.value) && UNITLESS[name]) {\n        value = parseFloat(child.value)\n      }\n      if (child.important) value += ' !important'\n      if (typeof result[name] === 'undefined') {\n        result[name] = value\n      } else if (Array.isArray(result[name])) {\n        result[name].push(value)\n      } else {\n        result[name] = [result[name], value]\n      }\n    }\n  })\n  return result\n}\n\nmodule.exports = process\n","let postcss = require('postcss')\n\nlet IMPORTANT = /\\s*!important\\s*$/i\n\nlet UNITLESS = {\n  'box-flex': true,\n  'box-flex-group': true,\n  'column-count': true,\n  'flex': true,\n  'flex-grow': true,\n  'flex-positive': true,\n  'flex-shrink': true,\n  'flex-negative': true,\n  'font-weight': true,\n  'line-clamp': true,\n  'line-height': true,\n  'opacity': true,\n  'order': true,\n  'orphans': true,\n  'tab-size': true,\n  'widows': true,\n  'z-index': true,\n  'zoom': true,\n  'fill-opacity': true,\n  'stroke-dashoffset': true,\n  'stroke-opacity': true,\n  'stroke-width': true\n}\n\nfunction dashify(str) {\n  return str\n    .replace(/([A-Z])/g, '-$1')\n    .replace(/^ms-/, '-ms-')\n    .toLowerCase()\n}\n\nfunction decl(parent, name, value) {\n  if (value === false || value === null) return\n\n  if (!name.startsWith('--')) {\n    name = dashify(name)\n  }\n\n  if (typeof value === 'number') {\n    if (value === 0 || UNITLESS[name]) {\n      value = value.toString()\n    } else {\n      value += 'px'\n    }\n  }\n\n  if (name === 'css-float') name = 'float'\n\n  if (IMPORTANT.test(value)) {\n    value = value.replace(IMPORTANT, '')\n    parent.push(postcss.decl({ prop: name, value, important: true }))\n  } else {\n    parent.push(postcss.decl({ prop: name, value }))\n  }\n}\n\nfunction atRule(parent, parts, value) {\n  let node = postcss.atRule({ name: parts[1], params: parts[3] || '' })\n  if (typeof value === 'object') {\n    node.nodes = []\n    parse(value, node)\n  }\n  parent.push(node)\n}\n\nfunction parse(obj, parent) {\n  let name, value, node\n  for (name in obj) {\n    value = obj[name]\n    if (value === null || typeof value === 'undefined') {\n      continue\n    } else if (name[0] === '@') {\n      let parts = name.match(/@(\\S+)(\\s+([\\W\\w]*)\\s*)?/)\n      if (Array.isArray(value)) {\n        for (let i of value) {\n          atRule(parent, parts, i)\n        }\n      } else {\n        atRule(parent, parts, value)\n      }\n    } else if (Array.isArray(value)) {\n      for (let i of value) {\n        decl(parent, name, i)\n      }\n    } else if (typeof value === 'object') {\n      node = postcss.rule({ selector: name })\n      parse(value, node)\n      parent.push(node)\n    } else {\n      decl(parent, name, value)\n    }\n  }\n}\n\nmodule.exports = function (obj) {\n  let root = postcss.root()\n  parse(obj, root)\n  return root\n}\n","let objectify = require('./objectifier')\n\nmodule.exports = function processResult(result) {\n  if (console && console.warn) {\n    result.warnings().forEach(warn => {\n      let source = warn.plugin || 'PostCSS'\n      console.warn(source + ': ' + warn.text)\n    })\n  }\n  return objectify(result.root)\n}\n","let postcss = require('postcss')\n\nlet processResult = require('./process-result')\nlet parse = require('./parser')\n\nmodule.exports = function (plugins) {\n  let processor = postcss(plugins)\n  return input => {\n    let result = processor.process(input, { parser: parse, from: undefined })\n    return processResult(result)\n  }\n}\n","const { Rule, AtRule } = require('postcss')\nlet parser = require('postcss-selector-parser')\n\n/**\n * Run a selector string through postcss-selector-parser\n */\nfunction parse(rawSelector, rule) {\n  let nodes\n  try {\n    parser(parsed => {\n      nodes = parsed\n    }).processSync(rawSelector)\n  } catch (e) {\n    if (rawSelector.includes(':')) {\n      throw rule ? rule.error('Missed semicolon') : e\n    } else {\n      throw rule ? rule.error(e.message) : e\n    }\n  }\n  return nodes.at(0)\n}\n\n/**\n * Replaces the \"&\" token in a node's selector with the parent selector\n * similar to what SCSS does.\n *\n * Mutates the nodes list\n */\nfunction interpolateAmpInSelector(nodes, parent) {\n  let replaced = false\n  nodes.each(node => {\n    if (node.type === 'nesting') {\n      let clonedParent = parent.clone({})\n      if (node.value !== '&') {\n        node.replaceWith(\n          parse(node.value.replace('&', clonedParent.toString()))\n        )\n      } else {\n        node.replaceWith(clonedParent)\n      }\n      replaced = true\n    } else if ('nodes' in node && node.nodes) {\n      if (interpolateAmpInSelector(node, parent)) {\n        replaced = true\n      }\n    }\n  })\n  return replaced\n}\n\n/**\n * Combines parent and child selectors, in a SCSS-like way\n */\nfunction mergeSelectors(parent, child) {\n  let merged = []\n  parent.selectors.forEach(sel => {\n    let parentNode = parse(sel, parent)\n\n    child.selectors.forEach(selector => {\n      if (!selector) {\n        return\n      }\n      let node = parse(selector, child)\n      let replaced = interpolateAmpInSelector(node, parentNode)\n      if (!replaced) {\n        node.prepend(parser.combinator({ value: ' ' }))\n        node.prepend(parentNode.clone({}))\n      }\n      merged.push(node.toString())\n    })\n  })\n  return merged\n}\n\n/**\n * Move a child and its preceeding comment(s) to after \"after\"\n */\nfunction breakOut(child, after) {\n  let prev = child.prev()\n  after.after(child)\n  while (prev && prev.type === 'comment') {\n    let nextPrev = prev.prev()\n    after.after(prev)\n    prev = nextPrev\n  }\n  return child\n}\n\nfunction createFnAtruleChilds(bubble) {\n  return function atruleChilds(rule, atrule, bubbling, mergeSels = bubbling) {\n    let children = []\n    atrule.each(child => {\n      if (child.type === 'rule' && bubbling) {\n        if (mergeSels) {\n          child.selectors = mergeSelectors(rule, child)\n        }\n      } else if (child.type === 'atrule' && child.nodes) {\n        if (bubble[child.name]) {\n          atruleChilds(rule, child, mergeSels)\n        } else if (atrule[rootRuleMergeSel] !== false) {\n          children.push(child)\n        }\n      } else {\n        children.push(child)\n      }\n    })\n    if (bubbling) {\n      if (children.length) {\n        let clone = rule.clone({ nodes: [] })\n        for (let child of children) {\n          clone.append(child)\n        }\n        atrule.prepend(clone)\n      }\n    }\n  }\n}\n\nfunction pickDeclarations(selector, declarations, after) {\n  let parent = new Rule({\n    selector,\n    nodes: []\n  })\n  parent.append(declarations)\n  after.after(parent)\n  return parent\n}\n\nfunction atruleNames(defaults, custom) {\n  let list = {}\n  for (let name of defaults) {\n    list[name] = true\n  }\n  if (custom) {\n    for (let name of custom) {\n      list[name.replace(/^@/, '')] = true\n    }\n  }\n  return list\n}\n\nfunction parseRootRuleParams(params) {\n  params = params.trim()\n  let braceBlock = params.match(/^\\((.*)\\)$/)\n  if (!braceBlock) {\n    return { type: 'basic', selector: params }\n  }\n  let bits = braceBlock[1].match(/^(with(?:out)?):(.+)$/)\n  if (bits) {\n    let allowlist = bits[1] === 'with'\n    let rules = Object.fromEntries(\n      bits[2]\n        .trim()\n        .split(/\\s+/)\n        .map(name => [name, true])\n    )\n    if (allowlist && rules.all) {\n      return { type: 'noop' }\n    }\n    let escapes = rule => !!rules[rule]\n    if (rules.all) {\n      escapes = () => true\n    } else if (allowlist) {\n      escapes = rule => (rule === 'all' ? false : !rules[rule])\n    }\n\n    return {\n      type: 'withrules',\n      escapes\n    }\n  }\n  // Unrecognized brace block\n  return { type: 'unknown' }\n}\n\nfunction getAncestorRules(leaf) {\n  let lineage = []\n  let parent = leaf.parent\n\n  while (parent && parent instanceof AtRule) {\n    lineage.push(parent)\n    parent = parent.parent\n  }\n  return lineage\n}\n\nfunction unwrapRootRule(rule) {\n  let escapes = rule[rootRuleEscapes]\n\n  if (!escapes) {\n    rule.after(rule.nodes)\n  } else {\n    let nodes = rule.nodes\n\n    let topEscaped\n    let topEscapedIdx = -1\n    let breakoutLeaf\n    let breakoutRoot\n    let clone\n\n    let lineage = getAncestorRules(rule)\n    lineage.forEach((parent, i) => {\n      if (escapes(parent.name)) {\n        topEscaped = parent\n        topEscapedIdx = i\n        breakoutRoot = clone\n      } else {\n        let oldClone = clone\n        clone = parent.clone({ nodes: [] })\n        oldClone && clone.append(oldClone)\n        breakoutLeaf = breakoutLeaf || clone\n      }\n    })\n\n    if (!topEscaped) {\n      rule.after(nodes)\n    } else if (!breakoutRoot) {\n      topEscaped.after(nodes)\n    } else {\n      let leaf = breakoutLeaf\n      leaf.append(nodes)\n      topEscaped.after(breakoutRoot)\n    }\n\n    if (rule.next() && topEscaped) {\n      let restRoot\n      lineage.slice(0, topEscapedIdx + 1).forEach((parent, i, arr) => {\n        let oldRoot = restRoot\n        restRoot = parent.clone({ nodes: [] })\n        oldRoot && restRoot.append(oldRoot)\n\n        let nextSibs = []\n        let _child = arr[i - 1] || rule\n        let next = _child.next()\n        while (next) {\n          nextSibs.push(next)\n          next = next.next()\n        }\n        restRoot.append(nextSibs)\n      })\n      restRoot && (breakoutRoot || nodes[nodes.length - 1]).after(restRoot)\n    }\n  }\n\n  rule.remove()\n}\n\nconst rootRuleMergeSel = Symbol('rootRuleMergeSel')\nconst rootRuleEscapes = Symbol('rootRuleEscapes')\n\nfunction normalizeRootRule(rule) {\n  let { params } = rule\n  let { type, selector, escapes } = parseRootRuleParams(params)\n  if (type === 'unknown') {\n    throw rule.error(\n      `Unknown @${rule.name} parameter ${JSON.stringify(params)}`\n    )\n  }\n  if (type === 'basic' && selector) {\n    let selectorBlock = new Rule({ selector, nodes: rule.nodes })\n    rule.removeAll()\n    rule.append(selectorBlock)\n  }\n  rule[rootRuleEscapes] = escapes\n  rule[rootRuleMergeSel] = escapes ? !escapes('all') : type === 'noop'\n}\n\nconst hasRootRule = Symbol('hasRootRule')\n\nmodule.exports = (opts = {}) => {\n  let bubble = atruleNames(['media', 'supports', 'layer'], opts.bubble)\n  let atruleChilds = createFnAtruleChilds(bubble)\n  let unwrap = atruleNames(\n    [\n      'document',\n      'font-face',\n      'keyframes',\n      '-webkit-keyframes',\n      '-moz-keyframes'\n    ],\n    opts.unwrap\n  )\n  let rootRuleName = (opts.rootRuleName || 'at-root').replace(/^@/, '')\n  let preserveEmpty = opts.preserveEmpty\n\n  return {\n    postcssPlugin: 'postcss-nested',\n\n    Once(root) {\n      root.walkAtRules(rootRuleName, node => {\n        normalizeRootRule(node)\n        root[hasRootRule] = true\n      })\n    },\n\n    Rule(rule) {\n      let unwrapped = false\n      let after = rule\n      let copyDeclarations = false\n      let declarations = []\n\n      rule.each(child => {\n        if (child.type === 'rule') {\n          if (declarations.length) {\n            after = pickDeclarations(rule.selector, declarations, after)\n            declarations = []\n          }\n\n          copyDeclarations = true\n          unwrapped = true\n          child.selectors = mergeSelectors(rule, child)\n          after = breakOut(child, after)\n        } else if (child.type === 'atrule') {\n          if (declarations.length) {\n            after = pickDeclarations(rule.selector, declarations, after)\n            declarations = []\n          }\n          if (child.name === rootRuleName) {\n            unwrapped = true\n            atruleChilds(rule, child, true, child[rootRuleMergeSel])\n            after = breakOut(child, after)\n          } else if (bubble[child.name]) {\n            copyDeclarations = true\n            unwrapped = true\n            atruleChilds(rule, child, true)\n            after = breakOut(child, after)\n          } else if (unwrap[child.name]) {\n            copyDeclarations = true\n            unwrapped = true\n            atruleChilds(rule, child, false)\n            after = breakOut(child, after)\n          } else if (copyDeclarations) {\n            declarations.push(child)\n          }\n        } else if (child.type === 'decl' && copyDeclarations) {\n          declarations.push(child)\n        }\n      })\n\n      if (declarations.length) {\n        after = pickDeclarations(rule.selector, declarations, after)\n      }\n\n      if (unwrapped && preserveEmpty !== true) {\n        rule.raws.semicolon = true\n        if (rule.nodes.length === 0) rule.remove()\n      }\n    },\n\n    RootExit(root) {\n      if (root[hasRootRule]) {\n        root.walkAtRules(rootRuleName, unwrapRootRule)\n        root[hasRootRule] = false\n      }\n    }\n  }\n}\nmodule.exports.postcss = true\n","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _processor = _interopRequireDefault(require(\"./processor\"));\n\nvar selectors = _interopRequireWildcard(require(\"./selectors\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar parser = function parser(processor) {\n  return new _processor[\"default\"](processor);\n};\n\nObject.assign(parser, selectors);\ndelete parser.__esModule;\nvar _default = parser;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _root = _interopRequireDefault(require(\"./selectors/root\"));\n\nvar _selector = _interopRequireDefault(require(\"./selectors/selector\"));\n\nvar _className = _interopRequireDefault(require(\"./selectors/className\"));\n\nvar _comment = _interopRequireDefault(require(\"./selectors/comment\"));\n\nvar _id = _interopRequireDefault(require(\"./selectors/id\"));\n\nvar _tag = _interopRequireDefault(require(\"./selectors/tag\"));\n\nvar _string = _interopRequireDefault(require(\"./selectors/string\"));\n\nvar _pseudo = _interopRequireDefault(require(\"./selectors/pseudo\"));\n\nvar _attribute = _interopRequireWildcard(require(\"./selectors/attribute\"));\n\nvar _universal = _interopRequireDefault(require(\"./selectors/universal\"));\n\nvar _combinator = _interopRequireDefault(require(\"./selectors/combinator\"));\n\nvar _nesting = _interopRequireDefault(require(\"./selectors/nesting\"));\n\nvar _sortAscending = _interopRequireDefault(require(\"./sortAscending\"));\n\nvar _tokenize = _interopRequireWildcard(require(\"./tokenize\"));\n\nvar tokens = _interopRequireWildcard(require(\"./tokenTypes\"));\n\nvar types = _interopRequireWildcard(require(\"./selectors/types\"));\n\nvar _util = require(\"./util\");\n\nvar _WHITESPACE_TOKENS, _Object$assign;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\nvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\n\nfunction tokenStart(token) {\n  return {\n    line: token[_tokenize.FIELDS.START_LINE],\n    column: token[_tokenize.FIELDS.START_COL]\n  };\n}\n\nfunction tokenEnd(token) {\n  return {\n    line: token[_tokenize.FIELDS.END_LINE],\n    column: token[_tokenize.FIELDS.END_COL]\n  };\n}\n\nfunction getSource(startLine, startColumn, endLine, endColumn) {\n  return {\n    start: {\n      line: startLine,\n      column: startColumn\n    },\n    end: {\n      line: endLine,\n      column: endColumn\n    }\n  };\n}\n\nfunction getTokenSource(token) {\n  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\n}\n\nfunction getTokenSourceSpan(startToken, endToken) {\n  if (!startToken) {\n    return undefined;\n  }\n\n  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\n}\n\nfunction unescapeProp(node, prop) {\n  var value = node[prop];\n\n  if (typeof value !== \"string\") {\n    return;\n  }\n\n  if (value.indexOf(\"\\\\\") !== -1) {\n    (0, _util.ensureObject)(node, 'raws');\n    node[prop] = (0, _util.unesc)(value);\n\n    if (node.raws[prop] === undefined) {\n      node.raws[prop] = value;\n    }\n  }\n\n  return node;\n}\n\nfunction indexesOf(array, item) {\n  var i = -1;\n  var indexes = [];\n\n  while ((i = array.indexOf(item, i + 1)) !== -1) {\n    indexes.push(i);\n  }\n\n  return indexes;\n}\n\nfunction uniqs() {\n  var list = Array.prototype.concat.apply([], arguments);\n  return list.filter(function (item, i) {\n    return i === list.indexOf(item);\n  });\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.rule = rule;\n    this.options = Object.assign({\n      lossy: false,\n      safe: false\n    }, options);\n    this.position = 0;\n    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\n    this.tokens = (0, _tokenize[\"default\"])({\n      css: this.css,\n      error: this._errorGenerator(),\n      safe: this.options.safe\n    });\n    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\n    this.root = new _root[\"default\"]({\n      source: rootSource\n    });\n    this.root.errorGenerator = this._errorGenerator();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: {\n          line: 1,\n          column: 1\n        }\n      }\n    });\n    this.root.append(selector);\n    this.current = selector;\n    this.loop();\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto._errorGenerator = function _errorGenerator() {\n    var _this = this;\n\n    return function (message, errorOptions) {\n      if (typeof _this.rule === 'string') {\n        return new Error(message);\n      }\n\n      return _this.rule.error(message, errorOptions);\n    };\n  };\n\n  _proto.attribute = function attribute() {\n    var attr = [];\n    var startingToken = this.currToken;\n    this.position++;\n\n    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      attr.push(this.currToken);\n      this.position++;\n    }\n\n    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n\n    var len = attr.length;\n    var node = {\n      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\n      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n    };\n\n    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\n      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\n    }\n\n    var pos = 0;\n    var spaceBefore = '';\n    var commentBefore = '';\n    var lastAdded = null;\n    var spaceAfterMeaningfulToken = false;\n\n    while (pos < len) {\n      var token = attr[pos];\n      var content = this.content(token);\n      var next = attr[pos + 1];\n\n      switch (token[_tokenize.FIELDS.TYPE]) {\n        case tokens.space:\n          // if (\n          //     len === 1 ||\n          //     pos === 0 && this.content(next) === '|'\n          // ) {\n          //     return this.expected('attribute', token[TOKEN.START_POS], content);\n          // }\n          spaceAfterMeaningfulToken = true;\n\n          if (this.options.lossy) {\n            break;\n          }\n\n          if (lastAdded) {\n            (0, _util.ensureObject)(node, 'spaces', lastAdded);\n            var prevContent = node.spaces[lastAdded].after || '';\n            node.spaces[lastAdded].after = prevContent + content;\n            var existingComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\n\n            if (existingComment) {\n              node.raws.spaces[lastAdded].after = existingComment + content;\n            }\n          } else {\n            spaceBefore = spaceBefore + content;\n            commentBefore = commentBefore + content;\n          }\n\n          break;\n\n        case tokens.asterisk:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = spaceBefore;\n              commentBefore = '';\n            }\n\n            node.namespace = (node.namespace || \"\") + content;\n            var rawValue = (0, _util.getProp)(node, 'raws', 'namespace') || null;\n\n            if (rawValue) {\n              node.raws.namespace += content;\n            }\n\n            lastAdded = 'namespace';\n          }\n\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.dollar:\n          if (lastAdded === \"value\") {\n            var oldRawValue = (0, _util.getProp)(node, 'raws', 'value');\n            node.value += \"$\";\n\n            if (oldRawValue) {\n              node.raws.value = oldRawValue + \"$\";\n            }\n\n            break;\n          }\n\n        // Falls through\n\n        case tokens.caret:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.combinator:\n          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n\n          if (content !== '|') {\n            spaceAfterMeaningfulToken = false;\n            break;\n          }\n\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if (!node.namespace && !node.attribute) {\n            node.namespace = true;\n          }\n\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.word:\n          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals && // this look-ahead probably fails with comment nodes involved.\n          !node.operator && !node.namespace) {\n            node.namespace = content;\n            lastAdded = 'namespace';\n          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = commentBefore;\n              commentBefore = '';\n            }\n\n            node.attribute = (node.attribute || \"\") + content;\n\n            var _rawValue = (0, _util.getProp)(node, 'raws', 'attribute') || null;\n\n            if (_rawValue) {\n              node.raws.attribute += content;\n            }\n\n            lastAdded = 'attribute';\n          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !(spaceAfterMeaningfulToken || node.quoteMark)) {\n            var _unescaped = (0, _util.unesc)(content);\n\n            var _oldRawValue = (0, _util.getProp)(node, 'raws', 'value') || '';\n\n            var oldValue = node.value || '';\n            node.value = oldValue + _unescaped;\n            node.quoteMark = null;\n\n            if (_unescaped !== content || _oldRawValue) {\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws.value = (_oldRawValue || oldValue) + content;\n            }\n\n            lastAdded = 'value';\n          } else {\n            var insensitive = content === 'i' || content === \"I\";\n\n            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\n              node.insensitive = insensitive;\n\n              if (!insensitive || content === \"I\") {\n                (0, _util.ensureObject)(node, 'raws');\n                node.raws.insensitiveFlag = content;\n              }\n\n              lastAdded = 'insensitive';\n\n              if (spaceBefore) {\n                (0, _util.ensureObject)(node, 'spaces', 'insensitive');\n                node.spaces.insensitive.before = spaceBefore;\n                spaceBefore = '';\n              }\n\n              if (commentBefore) {\n                (0, _util.ensureObject)(node, 'raws', 'spaces', 'insensitive');\n                node.raws.spaces.insensitive.before = commentBefore;\n                commentBefore = '';\n              }\n            } else if (node.value || node.value === '') {\n              lastAdded = 'value';\n              node.value += content;\n\n              if (node.raws.value) {\n                node.raws.value += content;\n              }\n            }\n          }\n\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.str:\n          if (!node.attribute || !node.operator) {\n            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n\n          var _unescapeValue = (0, _attribute.unescapeValue)(content),\n              unescaped = _unescapeValue.unescaped,\n              quoteMark = _unescapeValue.quoteMark;\n\n          node.value = unescaped;\n          node.quoteMark = quoteMark;\n          lastAdded = 'value';\n          (0, _util.ensureObject)(node, 'raws');\n          node.raws.value = content;\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.equals:\n          if (!node.attribute) {\n            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\n          }\n\n          if (node.value) {\n            return this.error('Unexpected \"=\" found; an operator was already defined.', {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n\n          node.operator = node.operator ? node.operator + content : content;\n          lastAdded = 'operator';\n          spaceAfterMeaningfulToken = false;\n          break;\n\n        case tokens.comment:\n          if (lastAdded) {\n            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\n              var lastComment = (0, _util.getProp)(node, 'spaces', lastAdded, 'after') || '';\n              var rawLastComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\n              (0, _util.ensureObject)(node, 'raws', 'spaces', lastAdded);\n              node.raws.spaces[lastAdded].after = rawLastComment + content;\n            } else {\n              var lastValue = node[lastAdded] || '';\n              var rawLastValue = (0, _util.getProp)(node, 'raws', lastAdded) || lastValue;\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws[lastAdded] = rawLastValue + content;\n            }\n          } else {\n            commentBefore = commentBefore + content;\n          }\n\n          break;\n\n        default:\n          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\n            index: token[_tokenize.FIELDS.START_POS]\n          });\n      }\n\n      pos++;\n    }\n\n    unescapeProp(node, \"attribute\");\n    unescapeProp(node, \"namespace\");\n    this.newNode(new _attribute[\"default\"](node));\n    this.position++;\n  }\n  /**\n   * return a node containing meaningless garbage up to (but not including) the specified token position.\n   * if the token position is negative, all remaining tokens are consumed.\n   *\n   * This returns an array containing a single string node if all whitespace,\n   * otherwise an array of comment nodes with space before and after.\n   *\n   * These tokens are not added to the current selector, the caller can add them or use them to amend\n   * a previous node's space metadata.\n   *\n   * In lossy mode, this returns only comments.\n   */\n  ;\n\n  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\n    if (stopPosition < 0) {\n      stopPosition = this.tokens.length;\n    }\n\n    var startPosition = this.position;\n    var nodes = [];\n    var space = \"\";\n    var lastComment = undefined;\n\n    do {\n      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n        if (!this.options.lossy) {\n          space += this.content();\n        }\n      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\n        var spaces = {};\n\n        if (space) {\n          spaces.before = space;\n          space = \"\";\n        }\n\n        lastComment = new _comment[\"default\"]({\n          value: this.content(),\n          source: getTokenSource(this.currToken),\n          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n          spaces: spaces\n        });\n        nodes.push(lastComment);\n      }\n    } while (++this.position < stopPosition);\n\n    if (space) {\n      if (lastComment) {\n        lastComment.spaces.after = space;\n      } else if (!this.options.lossy) {\n        var firstToken = this.tokens[startPosition];\n        var lastToken = this.tokens[this.position - 1];\n        nodes.push(new _string[\"default\"]({\n          value: '',\n          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\n          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n          spaces: {\n            before: space,\n            after: ''\n          }\n        }));\n      }\n    }\n\n    return nodes;\n  }\n  /**\n   *\n   * @param {*} nodes\n   */\n  ;\n\n  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\n    var _this2 = this;\n\n    if (requiredSpace === void 0) {\n      requiredSpace = false;\n    }\n\n    var space = \"\";\n    var rawSpace = \"\";\n    nodes.forEach(function (n) {\n      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\n\n      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\n\n      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\n      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\n    });\n\n    if (rawSpace === space) {\n      rawSpace = undefined;\n    }\n\n    var result = {\n      space: space,\n      rawSpace: rawSpace\n    };\n    return result;\n  };\n\n  _proto.isNamedCombinator = function isNamedCombinator(position) {\n    if (position === void 0) {\n      position = this.position;\n    }\n\n    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\n  };\n\n  _proto.namedCombinator = function namedCombinator() {\n    if (this.isNamedCombinator()) {\n      var nameRaw = this.content(this.tokens[this.position + 1]);\n      var name = (0, _util.unesc)(nameRaw).toLowerCase();\n      var raws = {};\n\n      if (name !== nameRaw) {\n        raws.value = \"/\" + nameRaw + \"/\";\n      }\n\n      var node = new _combinator[\"default\"]({\n        value: \"/\" + name + \"/\",\n        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n        raws: raws\n      });\n      this.position = this.position + 3;\n      return node;\n    } else {\n      this.unexpected();\n    }\n  };\n\n  _proto.combinator = function combinator() {\n    var _this3 = this;\n\n    if (this.content() === '|') {\n      return this.namespace();\n    } // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\n\n\n    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\n\n    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\n      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n\n      if (nodes.length > 0) {\n        var last = this.current.last;\n\n        if (last) {\n          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\n              space = _this$convertWhitespa.space,\n              rawSpace = _this$convertWhitespa.rawSpace;\n\n          if (rawSpace !== undefined) {\n            last.rawSpaceAfter += rawSpace;\n          }\n\n          last.spaces.after += space;\n        } else {\n          nodes.forEach(function (n) {\n            return _this3.newNode(n);\n          });\n        }\n      }\n\n      return;\n    }\n\n    var firstToken = this.currToken;\n    var spaceOrDescendantSelectorNodes = undefined;\n\n    if (nextSigTokenPos > this.position) {\n      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n    }\n\n    var node;\n\n    if (this.isNamedCombinator()) {\n      node = this.namedCombinator();\n    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\n      node = new _combinator[\"default\"]({\n        value: this.content(),\n        source: getTokenSource(this.currToken),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\n      });\n      this.position++;\n    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {// pass\n    } else if (!spaceOrDescendantSelectorNodes) {\n      this.unexpected();\n    }\n\n    if (node) {\n      if (spaceOrDescendantSelectorNodes) {\n        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\n            _space = _this$convertWhitespa2.space,\n            _rawSpace = _this$convertWhitespa2.rawSpace;\n\n        node.spaces.before = _space;\n        node.rawSpaceBefore = _rawSpace;\n      }\n    } else {\n      // descendant combinator\n      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\n          _space2 = _this$convertWhitespa3.space,\n          _rawSpace2 = _this$convertWhitespa3.rawSpace;\n\n      if (!_rawSpace2) {\n        _rawSpace2 = _space2;\n      }\n\n      var spaces = {};\n      var raws = {\n        spaces: {}\n      };\n\n      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\n        spaces.before = _space2.slice(0, _space2.length - 1);\n        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\n      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\n        spaces.after = _space2.slice(1);\n        raws.spaces.after = _rawSpace2.slice(1);\n      } else {\n        raws.value = _rawSpace2;\n      }\n\n      node = new _combinator[\"default\"]({\n        value: ' ',\n        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\n        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n        spaces: spaces,\n        raws: raws\n      });\n    }\n\n    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\n      node.spaces.after = this.optionalSpace(this.content());\n      this.position++;\n    }\n\n    return this.newNode(node);\n  };\n\n  _proto.comma = function comma() {\n    if (this.position === this.tokens.length - 1) {\n      this.root.trailingComma = true;\n      this.position++;\n      return;\n    }\n\n    this.current._inferEndPosition();\n\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: tokenStart(this.tokens[this.position + 1])\n      }\n    });\n    this.current.parent.append(selector);\n    this.current = selector;\n    this.position++;\n  };\n\n  _proto.comment = function comment() {\n    var current = this.currToken;\n    this.newNode(new _comment[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n\n  _proto.error = function error(message, opts) {\n    throw this.root.error(message, opts);\n  };\n\n  _proto.missingBackslash = function missingBackslash() {\n    return this.error('Expected a backslash preceding the semicolon.', {\n      index: this.currToken[_tokenize.FIELDS.START_POS]\n    });\n  };\n\n  _proto.missingParenthesis = function missingParenthesis() {\n    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n\n  _proto.missingSquareBracket = function missingSquareBracket() {\n    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n\n  _proto.unexpected = function unexpected() {\n    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n\n  _proto.namespace = function namespace() {\n    var before = this.prevToken && this.content(this.prevToken) || true;\n\n    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.position++;\n      return this.word(before);\n    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\n      this.position++;\n      return this.universal(before);\n    }\n  };\n\n  _proto.nesting = function nesting() {\n    if (this.nextToken) {\n      var nextContent = this.content(this.nextToken);\n\n      if (nextContent === \"|\") {\n        this.position++;\n        return;\n      }\n    }\n\n    var current = this.currToken;\n    this.newNode(new _nesting[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n\n  _proto.parentheses = function parentheses() {\n    var last = this.current.last;\n    var unbalanced = 1;\n    this.position++;\n\n    if (last && last.type === types.PSEUDO) {\n      var selector = new _selector[\"default\"]({\n        source: {\n          start: tokenStart(this.tokens[this.position - 1])\n        }\n      });\n      var cache = this.current;\n      last.append(selector);\n      this.current = selector;\n\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n\n        if (unbalanced) {\n          this.parse();\n        } else {\n          this.current.source.end = tokenEnd(this.currToken);\n          this.current.parent.source.end = tokenEnd(this.currToken);\n          this.position++;\n        }\n      }\n\n      this.current = cache;\n    } else {\n      // I think this case should be an error. It's used to implement a basic parse of media queries\n      // but I don't think it's a good idea.\n      var parenStart = this.currToken;\n      var parenValue = \"(\";\n      var parenEnd;\n\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n\n        parenEnd = this.currToken;\n        parenValue += this.parseParenthesisToken(this.currToken);\n        this.position++;\n      }\n\n      if (last) {\n        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\n      } else {\n        this.newNode(new _string[\"default\"]({\n          value: parenValue,\n          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\n          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\n        }));\n      }\n    }\n\n    if (unbalanced) {\n      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n\n  _proto.pseudo = function pseudo() {\n    var _this4 = this;\n\n    var pseudoStr = '';\n    var startingToken = this.currToken;\n\n    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\n      pseudoStr += this.content();\n      this.position++;\n    }\n\n    if (!this.currToken) {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\n    }\n\n    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.splitWord(false, function (first, length) {\n        pseudoStr += first;\n\n        _this4.newNode(new _pseudo[\"default\"]({\n          value: pseudoStr,\n          source: getTokenSourceSpan(startingToken, _this4.currToken),\n          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n        }));\n\n        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          _this4.error('Misplaced parenthesis.', {\n            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\n          });\n        }\n      });\n    } else {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n\n  _proto.space = function space() {\n    var content = this.content(); // Handle space before and after the selector\n\n    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\n      return node.type === 'comment';\n    })) {\n      this.spaces = this.optionalSpace(content);\n      this.position++;\n    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n      this.current.last.spaces.after = this.optionalSpace(content);\n      this.position++;\n    } else {\n      this.combinator();\n    }\n  };\n\n  _proto.string = function string() {\n    var current = this.currToken;\n    this.newNode(new _string[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n\n  _proto.universal = function universal(namespace) {\n    var nextToken = this.nextToken;\n\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n\n    var current = this.currToken;\n    this.newNode(new _universal[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }), namespace);\n    this.position++;\n  };\n\n  _proto.splitWord = function splitWord(namespace, firstCallback) {\n    var _this5 = this;\n\n    var nextToken = this.nextToken;\n    var word = this.content();\n\n    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\n      this.position++;\n      var current = this.content();\n      word += current;\n\n      if (current.lastIndexOf('\\\\') === current.length - 1) {\n        var next = this.nextToken;\n\n        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\n          word += this.requiredSpace(this.content(next));\n          this.position++;\n        }\n      }\n\n      nextToken = this.nextToken;\n    }\n\n    var hasClass = indexesOf(word, '.').filter(function (i) {\n      // Allow escaped dot within class name\n      var escapedDot = word[i - 1] === '\\\\'; // Allow decimal numbers percent in @keyframes\n\n      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\n      return !escapedDot && !isKeyframesPercent;\n    });\n    var hasId = indexesOf(word, '#').filter(function (i) {\n      return word[i - 1] !== '\\\\';\n    }); // Eliminate Sass interpolations from the list of id indexes\n\n    var interpolations = indexesOf(word, '#{');\n\n    if (interpolations.length) {\n      hasId = hasId.filter(function (hashIndex) {\n        return !~interpolations.indexOf(hashIndex);\n      });\n    }\n\n    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\n    indices.forEach(function (ind, i) {\n      var index = indices[i + 1] || word.length;\n      var value = word.slice(ind, index);\n\n      if (i === 0 && firstCallback) {\n        return firstCallback.call(_this5, value, indices.length);\n      }\n\n      var node;\n      var current = _this5.currToken;\n      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\n      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\n\n      if (~hasClass.indexOf(ind)) {\n        var classNameOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\n      } else if (~hasId.indexOf(ind)) {\n        var idOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\n      } else {\n        var tagOpts = {\n          value: value,\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        unescapeProp(tagOpts, \"value\");\n        node = new _tag[\"default\"](tagOpts);\n      }\n\n      _this5.newNode(node, namespace); // Ensure that the namespace is used only once\n\n\n      namespace = null;\n    });\n    this.position++;\n  };\n\n  _proto.word = function word(namespace) {\n    var nextToken = this.nextToken;\n\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n\n    return this.splitWord(namespace);\n  };\n\n  _proto.loop = function loop() {\n    while (this.position < this.tokens.length) {\n      this.parse(true);\n    }\n\n    this.current._inferEndPosition();\n\n    return this.root;\n  };\n\n  _proto.parse = function parse(throwOnParenthesis) {\n    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\n      case tokens.space:\n        this.space();\n        break;\n\n      case tokens.comment:\n        this.comment();\n        break;\n\n      case tokens.openParenthesis:\n        this.parentheses();\n        break;\n\n      case tokens.closeParenthesis:\n        if (throwOnParenthesis) {\n          this.missingParenthesis();\n        }\n\n        break;\n\n      case tokens.openSquare:\n        this.attribute();\n        break;\n\n      case tokens.dollar:\n      case tokens.caret:\n      case tokens.equals:\n      case tokens.word:\n        this.word();\n        break;\n\n      case tokens.colon:\n        this.pseudo();\n        break;\n\n      case tokens.comma:\n        this.comma();\n        break;\n\n      case tokens.asterisk:\n        this.universal();\n        break;\n\n      case tokens.ampersand:\n        this.nesting();\n        break;\n\n      case tokens.slash:\n      case tokens.combinator:\n        this.combinator();\n        break;\n\n      case tokens.str:\n        this.string();\n        break;\n      // These cases throw; no break needed.\n\n      case tokens.closeSquare:\n        this.missingSquareBracket();\n\n      case tokens.semicolon:\n        this.missingBackslash();\n\n      default:\n        this.unexpected();\n    }\n  }\n  /**\n   * Helpers\n   */\n  ;\n\n  _proto.expected = function expected(description, index, found) {\n    if (Array.isArray(description)) {\n      var last = description.pop();\n      description = description.join(', ') + \" or \" + last;\n    }\n\n    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\n\n    if (!found) {\n      return this.error(\"Expected \" + an + \" \" + description + \".\", {\n        index: index\n      });\n    }\n\n    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\n      index: index\n    });\n  };\n\n  _proto.requiredSpace = function requiredSpace(space) {\n    return this.options.lossy ? ' ' : space;\n  };\n\n  _proto.optionalSpace = function optionalSpace(space) {\n    return this.options.lossy ? '' : space;\n  };\n\n  _proto.lossySpace = function lossySpace(space, required) {\n    if (this.options.lossy) {\n      return required ? ' ' : '';\n    } else {\n      return space;\n    }\n  };\n\n  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\n    var content = this.content(token);\n\n    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\n      return this.requiredSpace(content);\n    } else {\n      return content;\n    }\n  };\n\n  _proto.newNode = function newNode(node, namespace) {\n    if (namespace) {\n      if (/^ +$/.test(namespace)) {\n        if (!this.options.lossy) {\n          this.spaces = (this.spaces || '') + namespace;\n        }\n\n        namespace = true;\n      }\n\n      node.namespace = namespace;\n      unescapeProp(node, \"namespace\");\n    }\n\n    if (this.spaces) {\n      node.spaces.before = this.spaces;\n      this.spaces = '';\n    }\n\n    return this.current.append(node);\n  };\n\n  _proto.content = function content(token) {\n    if (token === void 0) {\n      token = this.currToken;\n    }\n\n    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\n  };\n\n  /**\n   * returns the index of the next non-whitespace, non-comment token.\n   * returns -1 if no meaningful token is found.\n   */\n  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\n    if (startPosition === void 0) {\n      startPosition = this.position + 1;\n    }\n\n    var searchPosition = startPosition;\n\n    while (searchPosition < this.tokens.length) {\n      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\n        searchPosition++;\n        continue;\n      } else {\n        return searchPosition;\n      }\n    }\n\n    return -1;\n  };\n\n  _createClass(Parser, [{\n    key: \"currToken\",\n    get: function get() {\n      return this.tokens[this.position];\n    }\n  }, {\n    key: \"nextToken\",\n    get: function get() {\n      return this.tokens[this.position + 1];\n    }\n  }, {\n    key: \"prevToken\",\n    get: function get() {\n      return this.tokens[this.position - 1];\n    }\n  }]);\n\n  return Parser;\n}();\n\nexports[\"default\"] = Parser;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n\n    this.funcRes = null;\n    this.options = options;\n  }\n\n  var _proto = Processor.prototype;\n\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var root = this._root(rule, options);\n\n    var transform = this.func(root);\n\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n\n    var string = undefined;\n\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */\n  ;\n\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */\n  ;\n\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n\n    return result.string || result.root.toString();\n  };\n\n  return Processor;\n}();\n\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.unescapeValue = unescapeValue;\nexports[\"default\"] = void 0;\n\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\n\nvar _unesc = _interopRequireDefault(require(\"../util/unesc\"));\n\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\n\nvar _types = require(\"./types\");\n\nvar _CSSESC_QUOTE_OPTIONS;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar deprecate = require(\"util-deprecate\");\n\nvar WRAPPED_IN_QUOTES = /^('|\")([^]*)\\1$/;\nvar warnOfDeprecatedValueAssignment = deprecate(function () {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. \" + \"Call attribute.setValue() instead.\");\nvar warnOfDeprecatedQuotedAssignment = deprecate(function () {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\");\nvar warnOfDeprecatedConstructor = deprecate(function () {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\n\nfunction unescapeValue(value) {\n  var deprecatedUsage = false;\n  var quoteMark = null;\n  var unescaped = value;\n  var m = unescaped.match(WRAPPED_IN_QUOTES);\n\n  if (m) {\n    quoteMark = m[1];\n    unescaped = m[2];\n  }\n\n  unescaped = (0, _unesc[\"default\"])(unescaped);\n\n  if (unescaped !== value) {\n    deprecatedUsage = true;\n  }\n\n  return {\n    deprecatedUsage: deprecatedUsage,\n    unescaped: unescaped,\n    quoteMark: quoteMark\n  };\n}\n\nfunction handleDeprecatedContructorOpts(opts) {\n  if (opts.quoteMark !== undefined) {\n    return opts;\n  }\n\n  if (opts.value === undefined) {\n    return opts;\n  }\n\n  warnOfDeprecatedConstructor();\n\n  var _unescapeValue = unescapeValue(opts.value),\n      quoteMark = _unescapeValue.quoteMark,\n      unescaped = _unescapeValue.unescaped;\n\n  if (!opts.raws) {\n    opts.raws = {};\n  }\n\n  if (opts.raws.value === undefined) {\n    opts.raws.value = opts.value;\n  }\n\n  opts.value = unescaped;\n  opts.quoteMark = quoteMark;\n  return opts;\n}\n\nvar Attribute = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Attribute, _Namespace);\n\n  function Attribute(opts) {\n    var _this;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;\n    _this.type = _types.ATTRIBUTE;\n    _this.raws = _this.raws || {};\n    Object.defineProperty(_this.raws, 'unquoted', {\n      get: deprecate(function () {\n        return _this.value;\n      }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\n      set: deprecate(function () {\n        return _this.value;\n      }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\n    });\n    _this._constructed = true;\n    return _this;\n  }\n  /**\n   * Returns the Attribute's value quoted such that it would be legal to use\n   * in the value of a css file. The original value's quotation setting\n   * used for stringification is left unchanged. See `setValue(value, options)`\n   * if you want to control the quote settings of a new value for the attribute.\n   *\n   * You can also change the quotation used for the current value by setting quoteMark.\n   *\n   * Options:\n   *   * quoteMark {'\"' | \"'\" | null} - Use this value to quote the value. If this\n   *     option is not set, the original value for quoteMark will be used. If\n   *     indeterminate, a double quote is used. The legal values are:\n   *     * `null` - the value will be unquoted and characters will be escaped as necessary.\n   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.\n   *     * `\"` - the value will be quoted with a double quote and double quotes are escaped.\n   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark\n   *     over the quoteMark option value.\n   *   * smart {boolean} - if true, will select a quote mark based on the value\n   *     and the other options specified here. See the `smartQuoteMark()`\n   *     method.\n   **/\n\n\n  var _proto = Attribute.prototype;\n\n  _proto.getQuotedValue = function getQuotedValue(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var quoteMark = this._determineQuoteMark(options);\n\n    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];\n    var escaped = (0, _cssesc[\"default\"])(this._value, cssescopts);\n    return escaped;\n  };\n\n  _proto._determineQuoteMark = function _determineQuoteMark(options) {\n    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);\n  }\n  /**\n   * Set the unescaped value with the specified quotation options. The value\n   * provided must not include any wrapping quote marks -- those quotes will\n   * be interpreted as part of the value and escaped accordingly.\n   */\n  ;\n\n  _proto.setValue = function setValue(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._value = value;\n    this._quoteMark = this._determineQuoteMark(options);\n\n    this._syncRawValue();\n  }\n  /**\n   * Intelligently select a quoteMark value based on the value's contents. If\n   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote\n   * mark will be picked that minimizes the number of escapes.\n   *\n   * If there's no clear winner, the quote mark from these options is used,\n   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is\n   * true). If the quoteMark is unspecified, a double quote is used.\n   *\n   * @param options This takes the quoteMark and preferCurrentQuoteMark options\n   * from the quoteValue method.\n   */\n  ;\n\n  _proto.smartQuoteMark = function smartQuoteMark(options) {\n    var v = this.value;\n    var numSingleQuotes = v.replace(/[^']/g, '').length;\n    var numDoubleQuotes = v.replace(/[^\"]/g, '').length;\n\n    if (numSingleQuotes + numDoubleQuotes === 0) {\n      var escaped = (0, _cssesc[\"default\"])(v, {\n        isIdentifier: true\n      });\n\n      if (escaped === v) {\n        return Attribute.NO_QUOTE;\n      } else {\n        var pref = this.preferredQuoteMark(options);\n\n        if (pref === Attribute.NO_QUOTE) {\n          // pick a quote mark that isn't none and see if it's smaller\n          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;\n          var opts = CSSESC_QUOTE_OPTIONS[quote];\n          var quoteValue = (0, _cssesc[\"default\"])(v, opts);\n\n          if (quoteValue.length < escaped.length) {\n            return quote;\n          }\n        }\n\n        return pref;\n      }\n    } else if (numDoubleQuotes === numSingleQuotes) {\n      return this.preferredQuoteMark(options);\n    } else if (numDoubleQuotes < numSingleQuotes) {\n      return Attribute.DOUBLE_QUOTE;\n    } else {\n      return Attribute.SINGLE_QUOTE;\n    }\n  }\n  /**\n   * Selects the preferred quote mark based on the options and the current quote mark value.\n   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`\n   * instead.\n   */\n  ;\n\n  _proto.preferredQuoteMark = function preferredQuoteMark(options) {\n    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;\n\n    if (quoteMark === undefined) {\n      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;\n    }\n\n    if (quoteMark === undefined) {\n      quoteMark = Attribute.DOUBLE_QUOTE;\n    }\n\n    return quoteMark;\n  };\n\n  _proto._syncRawValue = function _syncRawValue() {\n    var rawValue = (0, _cssesc[\"default\"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);\n\n    if (rawValue === this._value) {\n      if (this.raws) {\n        delete this.raws.value;\n      }\n    } else {\n      this.raws.value = rawValue;\n    }\n  };\n\n  _proto._handleEscapes = function _handleEscapes(prop, value) {\n    if (this._constructed) {\n      var escaped = (0, _cssesc[\"default\"])(value, {\n        isIdentifier: true\n      });\n\n      if (escaped !== value) {\n        this.raws[prop] = escaped;\n      } else {\n        delete this.raws[prop];\n      }\n    }\n  };\n\n  _proto._spacesFor = function _spacesFor(name) {\n    var attrSpaces = {\n      before: '',\n      after: ''\n    };\n    var spaces = this.spaces[name] || {};\n    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};\n    return Object.assign(attrSpaces, spaces, rawSpaces);\n  };\n\n  _proto._stringFor = function _stringFor(name, spaceName, concat) {\n    if (spaceName === void 0) {\n      spaceName = name;\n    }\n\n    if (concat === void 0) {\n      concat = defaultAttrConcat;\n    }\n\n    var attrSpaces = this._spacesFor(spaceName);\n\n    return concat(this.stringifyProperty(name), attrSpaces);\n  }\n  /**\n   * returns the offset of the attribute part specified relative to the\n   * start of the node of the output string.\n   *\n   * * \"ns\" - alias for \"namespace\"\n   * * \"namespace\" - the namespace if it exists.\n   * * \"attribute\" - the attribute name\n   * * \"attributeNS\" - the start of the attribute or its namespace\n   * * \"operator\" - the match operator of the attribute\n   * * \"value\" - The value (string or identifier)\n   * * \"insensitive\" - the case insensitivity flag;\n   * @param part One of the possible values inside an attribute.\n   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.\n   */\n  ;\n\n  _proto.offsetOf = function offsetOf(name) {\n    var count = 1;\n\n    var attributeSpaces = this._spacesFor(\"attribute\");\n\n    count += attributeSpaces.before.length;\n\n    if (name === \"namespace\" || name === \"ns\") {\n      return this.namespace ? count : -1;\n    }\n\n    if (name === \"attributeNS\") {\n      return count;\n    }\n\n    count += this.namespaceString.length;\n\n    if (this.namespace) {\n      count += 1;\n    }\n\n    if (name === \"attribute\") {\n      return count;\n    }\n\n    count += this.stringifyProperty(\"attribute\").length;\n    count += attributeSpaces.after.length;\n\n    var operatorSpaces = this._spacesFor(\"operator\");\n\n    count += operatorSpaces.before.length;\n    var operator = this.stringifyProperty(\"operator\");\n\n    if (name === \"operator\") {\n      return operator ? count : -1;\n    }\n\n    count += operator.length;\n    count += operatorSpaces.after.length;\n\n    var valueSpaces = this._spacesFor(\"value\");\n\n    count += valueSpaces.before.length;\n    var value = this.stringifyProperty(\"value\");\n\n    if (name === \"value\") {\n      return value ? count : -1;\n    }\n\n    count += value.length;\n    count += valueSpaces.after.length;\n\n    var insensitiveSpaces = this._spacesFor(\"insensitive\");\n\n    count += insensitiveSpaces.before.length;\n\n    if (name === \"insensitive\") {\n      return this.insensitive ? count : -1;\n    }\n\n    return -1;\n  };\n\n  _proto.toString = function toString() {\n    var _this2 = this;\n\n    var selector = [this.rawSpaceBefore, '['];\n    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));\n\n    if (this.operator && (this.value || this.value === '')) {\n      selector.push(this._stringFor('operator'));\n      selector.push(this._stringFor('value'));\n      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {\n        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {\n          attrSpaces.before = \" \";\n        }\n\n        return defaultAttrConcat(attrValue, attrSpaces);\n      }));\n    }\n\n    selector.push(']');\n    selector.push(this.rawSpaceAfter);\n    return selector.join('');\n  };\n\n  _createClass(Attribute, [{\n    key: \"quoted\",\n    get: function get() {\n      var qm = this.quoteMark;\n      return qm === \"'\" || qm === '\"';\n    },\n    set: function set(value) {\n      warnOfDeprecatedQuotedAssignment();\n    }\n    /**\n     * returns a single (`'`) or double (`\"`) quote character if the value is quoted.\n     * returns `null` if the value is not quoted.\n     * returns `undefined` if the quotation state is unknown (this can happen when\n     * the attribute is constructed without specifying a quote mark.)\n     */\n\n  }, {\n    key: \"quoteMark\",\n    get: function get() {\n      return this._quoteMark;\n    }\n    /**\n     * Set the quote mark to be used by this attribute's value.\n     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute\n     * value is updated accordingly.\n     *\n     * @param {\"'\" | '\"' | null} quoteMark The quote mark or `null` if the value should be unquoted.\n     */\n    ,\n    set: function set(quoteMark) {\n      if (!this._constructed) {\n        this._quoteMark = quoteMark;\n        return;\n      }\n\n      if (this._quoteMark !== quoteMark) {\n        this._quoteMark = quoteMark;\n\n        this._syncRawValue();\n      }\n    }\n  }, {\n    key: \"qualifiedAttribute\",\n    get: function get() {\n      return this.qualifiedName(this.raws.attribute || this.attribute);\n    }\n  }, {\n    key: \"insensitiveFlag\",\n    get: function get() {\n      return this.insensitive ? 'i' : '';\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set:\n    /**\n     * Before 3.0, the value had to be set to an escaped value including any wrapped\n     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value\n     * is unescaped during parsing and any quote marks are removed.\n     *\n     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,\n     * a deprecation warning is raised when the new value contains any characters that would\n     * require escaping (including if it contains wrapped quotes).\n     *\n     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe\n     * how the new value is quoted.\n     */\n    function set(v) {\n      if (this._constructed) {\n        var _unescapeValue2 = unescapeValue(v),\n            deprecatedUsage = _unescapeValue2.deprecatedUsage,\n            unescaped = _unescapeValue2.unescaped,\n            quoteMark = _unescapeValue2.quoteMark;\n\n        if (deprecatedUsage) {\n          warnOfDeprecatedValueAssignment();\n        }\n\n        if (unescaped === this._value && quoteMark === this._quoteMark) {\n          return;\n        }\n\n        this._value = unescaped;\n        this._quoteMark = quoteMark;\n\n        this._syncRawValue();\n      } else {\n        this._value = v;\n      }\n    }\n  }, {\n    key: \"insensitive\",\n    get: function get() {\n      return this._insensitive;\n    }\n    /**\n     * Set the case insensitive flag.\n     * If the case insensitive flag changes, the raw (escaped) value at `attr.raws.insensitiveFlag`\n     * of the attribute is updated accordingly.\n     *\n     * @param {true | false} insensitive true if the attribute should match case-insensitively.\n     */\n    ,\n    set: function set(insensitive) {\n      if (!insensitive) {\n        this._insensitive = false; // \"i\" and \"I\" can be used in \"this.raws.insensitiveFlag\" to store the original notation.\n        // When setting `attr.insensitive = false` both should be erased to ensure correct serialization.\n\n        if (this.raws && (this.raws.insensitiveFlag === 'I' || this.raws.insensitiveFlag === 'i')) {\n          this.raws.insensitiveFlag = undefined;\n        }\n      }\n\n      this._insensitive = insensitive;\n    }\n  }, {\n    key: \"attribute\",\n    get: function get() {\n      return this._attribute;\n    },\n    set: function set(name) {\n      this._handleEscapes(\"attribute\", name);\n\n      this._attribute = name;\n    }\n  }]);\n\n  return Attribute;\n}(_namespace[\"default\"]);\n\nexports[\"default\"] = Attribute;\nAttribute.NO_QUOTE = null;\nAttribute.SINGLE_QUOTE = \"'\";\nAttribute.DOUBLE_QUOTE = '\"';\nvar CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {\n  \"'\": {\n    quotes: 'single',\n    wrap: true\n  },\n  '\"': {\n    quotes: 'double',\n    wrap: true\n  }\n}, _CSSESC_QUOTE_OPTIONS[null] = {\n  isIdentifier: true\n}, _CSSESC_QUOTE_OPTIONS);\n\nfunction defaultAttrConcat(attrValue, attrSpaces) {\n  return \"\" + attrSpaces.before + attrValue + attrSpaces.after;\n}","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\n\nvar _util = require(\"../util\");\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ClassName = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ClassName, _Node);\n\n  function ClassName(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.CLASS;\n    _this._constructed = true;\n    return _this;\n  }\n\n  var _proto = ClassName.prototype;\n\n  _proto.valueToString = function valueToString() {\n    return '.' + _Node.prototype.valueToString.call(this);\n  };\n\n  _createClass(ClassName, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(v) {\n      if (this._constructed) {\n        var escaped = (0, _cssesc[\"default\"])(v, {\n          isIdentifier: true\n        });\n\n        if (escaped !== v) {\n          (0, _util.ensureObject)(this, \"raws\");\n          this.raws.value = escaped;\n        } else if (this.raws) {\n          delete this.raws.value;\n        }\n      }\n\n      this._value = v;\n    }\n  }]);\n\n  return ClassName;\n}(_node[\"default\"]);\n\nexports[\"default\"] = ClassName;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Combinator = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Combinator, _Node);\n\n  function Combinator(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.COMBINATOR;\n    return _this;\n  }\n\n  return Combinator;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Combinator;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Comment, _Node);\n\n  function Comment(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.COMMENT;\n    return _this;\n  }\n\n  return Comment;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Comment;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;\n\nvar _attribute = _interopRequireDefault(require(\"./attribute\"));\n\nvar _className = _interopRequireDefault(require(\"./className\"));\n\nvar _combinator = _interopRequireDefault(require(\"./combinator\"));\n\nvar _comment = _interopRequireDefault(require(\"./comment\"));\n\nvar _id = _interopRequireDefault(require(\"./id\"));\n\nvar _nesting = _interopRequireDefault(require(\"./nesting\"));\n\nvar _pseudo = _interopRequireDefault(require(\"./pseudo\"));\n\nvar _root = _interopRequireDefault(require(\"./root\"));\n\nvar _selector = _interopRequireDefault(require(\"./selector\"));\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _tag = _interopRequireDefault(require(\"./tag\"));\n\nvar _universal = _interopRequireDefault(require(\"./universal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar attribute = function attribute(opts) {\n  return new _attribute[\"default\"](opts);\n};\n\nexports.attribute = attribute;\n\nvar className = function className(opts) {\n  return new _className[\"default\"](opts);\n};\n\nexports.className = className;\n\nvar combinator = function combinator(opts) {\n  return new _combinator[\"default\"](opts);\n};\n\nexports.combinator = combinator;\n\nvar comment = function comment(opts) {\n  return new _comment[\"default\"](opts);\n};\n\nexports.comment = comment;\n\nvar id = function id(opts) {\n  return new _id[\"default\"](opts);\n};\n\nexports.id = id;\n\nvar nesting = function nesting(opts) {\n  return new _nesting[\"default\"](opts);\n};\n\nexports.nesting = nesting;\n\nvar pseudo = function pseudo(opts) {\n  return new _pseudo[\"default\"](opts);\n};\n\nexports.pseudo = pseudo;\n\nvar root = function root(opts) {\n  return new _root[\"default\"](opts);\n};\n\nexports.root = root;\n\nvar selector = function selector(opts) {\n  return new _selector[\"default\"](opts);\n};\n\nexports.selector = selector;\n\nvar string = function string(opts) {\n  return new _string[\"default\"](opts);\n};\n\nexports.string = string;\n\nvar tag = function tag(opts) {\n  return new _tag[\"default\"](opts);\n};\n\nexports.tag = tag;\n\nvar universal = function universal(opts) {\n  return new _universal[\"default\"](opts);\n};\n\nexports.universal = universal;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nvar types = _interopRequireWildcard(require(\"./types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Container = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Container, _Node);\n\n  function Container(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n\n    if (!_this.nodes) {\n      _this.nodes = [];\n    }\n\n    return _this;\n  }\n\n  var _proto = Container.prototype;\n\n  _proto.append = function append(selector) {\n    selector.parent = this;\n    this.nodes.push(selector);\n    return this;\n  };\n\n  _proto.prepend = function prepend(selector) {\n    selector.parent = this;\n    this.nodes.unshift(selector);\n    return this;\n  };\n\n  _proto.at = function at(index) {\n    return this.nodes[index];\n  };\n\n  _proto.index = function index(child) {\n    if (typeof child === 'number') {\n      return child;\n    }\n\n    return this.nodes.indexOf(child);\n  };\n\n  _proto.removeChild = function removeChild(child) {\n    child = this.index(child);\n    this.at(child).parent = undefined;\n    this.nodes.splice(child, 1);\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n\n    return this;\n  };\n\n  _proto.removeAll = function removeAll() {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {\n      var node = _step.value;\n      node.parent = undefined;\n    }\n\n    this.nodes = [];\n    return this;\n  };\n\n  _proto.empty = function empty() {\n    return this.removeAll();\n  };\n\n  _proto.insertAfter = function insertAfter(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex + 1, 0, newNode);\n    newNode.parent = this;\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (oldIndex <= index) {\n        this.indexes[id] = index + 1;\n      }\n    }\n\n    return this;\n  };\n\n  _proto.insertBefore = function insertBefore(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex, 0, newNode);\n    newNode.parent = this;\n    var index;\n\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n\n      if (index <= oldIndex) {\n        this.indexes[id] = index + 1;\n      }\n    }\n\n    return this;\n  };\n\n  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {\n    var found = undefined;\n    this.each(function (node) {\n      if (node.atPosition) {\n        var foundChild = node.atPosition(line, col);\n\n        if (foundChild) {\n          found = foundChild;\n          return false;\n        }\n      } else if (node.isAtPosition(line, col)) {\n        found = node;\n        return false;\n      }\n    });\n    return found;\n  }\n  /**\n   * Return the most specific node at the line and column number given.\n   * The source location is based on the original parsed location, locations aren't\n   * updated as selector nodes are mutated.\n   * \n   * Note that this location is relative to the location of the first character\n   * of the selector, and not the location of the selector in the overall document\n   * when used in conjunction with postcss.\n   *\n   * If not found, returns undefined.\n   * @param {number} line The line number of the node to find. (1-based index)\n   * @param {number} col  The column number of the node to find. (1-based index)\n   */\n  ;\n\n  _proto.atPosition = function atPosition(line, col) {\n    if (this.isAtPosition(line, col)) {\n      return this._findChildAtPosition(line, col) || this;\n    } else {\n      return undefined;\n    }\n  };\n\n  _proto._inferEndPosition = function _inferEndPosition() {\n    if (this.last && this.last.source && this.last.source.end) {\n      this.source = this.source || {};\n      this.source.end = this.source.end || {};\n      Object.assign(this.source.end, this.last.source.end);\n    }\n  };\n\n  _proto.each = function each(callback) {\n    if (!this.lastEach) {\n      this.lastEach = 0;\n    }\n\n    if (!this.indexes) {\n      this.indexes = {};\n    }\n\n    this.lastEach++;\n    var id = this.lastEach;\n    this.indexes[id] = 0;\n\n    if (!this.length) {\n      return undefined;\n    }\n\n    var index, result;\n\n    while (this.indexes[id] < this.length) {\n      index = this.indexes[id];\n      result = callback(this.at(index), index);\n\n      if (result === false) {\n        break;\n      }\n\n      this.indexes[id] += 1;\n    }\n\n    delete this.indexes[id];\n\n    if (result === false) {\n      return false;\n    }\n  };\n\n  _proto.walk = function walk(callback) {\n    return this.each(function (node, i) {\n      var result = callback(node, i);\n\n      if (result !== false && node.length) {\n        result = node.walk(callback);\n      }\n\n      if (result === false) {\n        return false;\n      }\n    });\n  };\n\n  _proto.walkAttributes = function walkAttributes(callback) {\n    var _this2 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.ATTRIBUTE) {\n        return callback.call(_this2, selector);\n      }\n    });\n  };\n\n  _proto.walkClasses = function walkClasses(callback) {\n    var _this3 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.CLASS) {\n        return callback.call(_this3, selector);\n      }\n    });\n  };\n\n  _proto.walkCombinators = function walkCombinators(callback) {\n    var _this4 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.COMBINATOR) {\n        return callback.call(_this4, selector);\n      }\n    });\n  };\n\n  _proto.walkComments = function walkComments(callback) {\n    var _this5 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.COMMENT) {\n        return callback.call(_this5, selector);\n      }\n    });\n  };\n\n  _proto.walkIds = function walkIds(callback) {\n    var _this6 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.ID) {\n        return callback.call(_this6, selector);\n      }\n    });\n  };\n\n  _proto.walkNesting = function walkNesting(callback) {\n    var _this7 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.NESTING) {\n        return callback.call(_this7, selector);\n      }\n    });\n  };\n\n  _proto.walkPseudos = function walkPseudos(callback) {\n    var _this8 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.PSEUDO) {\n        return callback.call(_this8, selector);\n      }\n    });\n  };\n\n  _proto.walkTags = function walkTags(callback) {\n    var _this9 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.TAG) {\n        return callback.call(_this9, selector);\n      }\n    });\n  };\n\n  _proto.walkUniversals = function walkUniversals(callback) {\n    var _this10 = this;\n\n    return this.walk(function (selector) {\n      if (selector.type === types.UNIVERSAL) {\n        return callback.call(_this10, selector);\n      }\n    });\n  };\n\n  _proto.split = function split(callback) {\n    var _this11 = this;\n\n    var current = [];\n    return this.reduce(function (memo, node, index) {\n      var split = callback.call(_this11, node);\n      current.push(node);\n\n      if (split) {\n        memo.push(current);\n        current = [];\n      } else if (index === _this11.length - 1) {\n        memo.push(current);\n      }\n\n      return memo;\n    }, []);\n  };\n\n  _proto.map = function map(callback) {\n    return this.nodes.map(callback);\n  };\n\n  _proto.reduce = function reduce(callback, memo) {\n    return this.nodes.reduce(callback, memo);\n  };\n\n  _proto.every = function every(callback) {\n    return this.nodes.every(callback);\n  };\n\n  _proto.some = function some(callback) {\n    return this.nodes.some(callback);\n  };\n\n  _proto.filter = function filter(callback) {\n    return this.nodes.filter(callback);\n  };\n\n  _proto.sort = function sort(callback) {\n    return this.nodes.sort(callback);\n  };\n\n  _proto.toString = function toString() {\n    return this.map(String).join('');\n  };\n\n  _createClass(Container, [{\n    key: \"first\",\n    get: function get() {\n      return this.at(0);\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.at(this.length - 1);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.nodes.length;\n    }\n  }]);\n\n  return Container;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Container;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.isNode = isNode;\nexports.isPseudoElement = isPseudoElement;\nexports.isPseudoClass = isPseudoClass;\nexports.isContainer = isContainer;\nexports.isNamespace = isNamespace;\nexports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = exports.isPseudo = exports.isNesting = exports.isIdentifier = exports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;\n\nvar _types = require(\"./types\");\n\nvar _IS_TYPE;\n\nvar IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);\n\nfunction isNode(node) {\n  return typeof node === \"object\" && IS_TYPE[node.type];\n}\n\nfunction isNodeType(type, node) {\n  return isNode(node) && node.type === type;\n}\n\nvar isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);\nexports.isAttribute = isAttribute;\nvar isClassName = isNodeType.bind(null, _types.CLASS);\nexports.isClassName = isClassName;\nvar isCombinator = isNodeType.bind(null, _types.COMBINATOR);\nexports.isCombinator = isCombinator;\nvar isComment = isNodeType.bind(null, _types.COMMENT);\nexports.isComment = isComment;\nvar isIdentifier = isNodeType.bind(null, _types.ID);\nexports.isIdentifier = isIdentifier;\nvar isNesting = isNodeType.bind(null, _types.NESTING);\nexports.isNesting = isNesting;\nvar isPseudo = isNodeType.bind(null, _types.PSEUDO);\nexports.isPseudo = isPseudo;\nvar isRoot = isNodeType.bind(null, _types.ROOT);\nexports.isRoot = isRoot;\nvar isSelector = isNodeType.bind(null, _types.SELECTOR);\nexports.isSelector = isSelector;\nvar isString = isNodeType.bind(null, _types.STRING);\nexports.isString = isString;\nvar isTag = isNodeType.bind(null, _types.TAG);\nexports.isTag = isTag;\nvar isUniversal = isNodeType.bind(null, _types.UNIVERSAL);\nexports.isUniversal = isUniversal;\n\nfunction isPseudoElement(node) {\n  return isPseudo(node) && node.value && (node.value.startsWith(\"::\") || node.value.toLowerCase() === \":before\" || node.value.toLowerCase() === \":after\" || node.value.toLowerCase() === \":first-letter\" || node.value.toLowerCase() === \":first-line\");\n}\n\nfunction isPseudoClass(node) {\n  return isPseudo(node) && !isPseudoElement(node);\n}\n\nfunction isContainer(node) {\n  return !!(isNode(node) && node.walk);\n}\n\nfunction isNamespace(node) {\n  return isAttribute(node) || isTag(node);\n}","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ID = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ID, _Node);\n\n  function ID(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.ID;\n    return _this;\n  }\n\n  var _proto = ID.prototype;\n\n  _proto.valueToString = function valueToString() {\n    return '#' + _Node.prototype.valueToString.call(this);\n  };\n\n  return ID;\n}(_node[\"default\"]);\n\nexports[\"default\"] = ID;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\n\nvar _types = require(\"./types\");\n\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  exports[key] = _types[key];\n});\n\nvar _constructors = require(\"./constructors\");\n\nObject.keys(_constructors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _constructors[key]) return;\n  exports[key] = _constructors[key];\n});\n\nvar _guards = require(\"./guards\");\n\nObject.keys(_guards).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _guards[key]) return;\n  exports[key] = _guards[key];\n});","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\n\nvar _util = require(\"../util\");\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Namespace = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Namespace, _Node);\n\n  function Namespace() {\n    return _Node.apply(this, arguments) || this;\n  }\n\n  var _proto = Namespace.prototype;\n\n  _proto.qualifiedName = function qualifiedName(value) {\n    if (this.namespace) {\n      return this.namespaceString + \"|\" + value;\n    } else {\n      return value;\n    }\n  };\n\n  _proto.valueToString = function valueToString() {\n    return this.qualifiedName(_Node.prototype.valueToString.call(this));\n  };\n\n  _createClass(Namespace, [{\n    key: \"namespace\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      if (namespace === true || namespace === \"*\" || namespace === \"&\") {\n        this._namespace = namespace;\n\n        if (this.raws) {\n          delete this.raws.namespace;\n        }\n\n        return;\n      }\n\n      var escaped = (0, _cssesc[\"default\"])(namespace, {\n        isIdentifier: true\n      });\n      this._namespace = namespace;\n\n      if (escaped !== namespace) {\n        (0, _util.ensureObject)(this, \"raws\");\n        this.raws.namespace = escaped;\n      } else if (this.raws) {\n        delete this.raws.namespace;\n      }\n    }\n  }, {\n    key: \"ns\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      this.namespace = namespace;\n    }\n  }, {\n    key: \"namespaceString\",\n    get: function get() {\n      if (this.namespace) {\n        var ns = this.stringifyProperty(\"namespace\");\n\n        if (ns === true) {\n          return '';\n        } else {\n          return ns;\n        }\n      } else {\n        return '';\n      }\n    }\n  }]);\n\n  return Namespace;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Namespace;\n;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Nesting = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Nesting, _Node);\n\n  function Nesting(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.NESTING;\n    _this.value = '&';\n    return _this;\n  }\n\n  return Nesting;\n}(_node[\"default\"]);\n\nexports[\"default\"] = Nesting;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _util = require(\"../util\");\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar cloneNode = function cloneNode(obj, parent) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  var cloned = new obj.constructor();\n\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n\n    var value = obj[i];\n    var type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      cloned[i] = cloneNode(value, cloned);\n    }\n  }\n\n  return cloned;\n};\n\nvar Node = /*#__PURE__*/function () {\n  function Node(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    Object.assign(this, opts);\n    this.spaces = this.spaces || {};\n    this.spaces.before = this.spaces.before || '';\n    this.spaces.after = this.spaces.after || '';\n  }\n\n  var _proto = Node.prototype;\n\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    this.parent = undefined;\n    return this;\n  };\n\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var index in arguments) {\n        this.parent.insertBefore(this, arguments[index]);\n      }\n\n      this.remove();\n    }\n\n    return this;\n  };\n\n  _proto.next = function next() {\n    return this.parent.at(this.parent.index(this) + 1);\n  };\n\n  _proto.prev = function prev() {\n    return this.parent.at(this.parent.index(this) - 1);\n  };\n\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    var cloned = cloneNode(this);\n\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  }\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows non standard syntax to be appended to an existing property\n   * by specifying the escaped value. By specifying the escaped value,\n   * illegal characters are allowed to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped optional. the escaped value of the property.\n   */\n  ;\n\n  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n\n    var originalValue = this[name];\n    var originalEscaped = this.raws[name];\n    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\n\n    if (originalEscaped || valueEscaped !== value) {\n      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\n    } else {\n      delete this.raws[name]; // delete any escaped value that was created by the setter.\n    }\n  }\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows the escaped value to be specified directly, allowing illegal\n   * characters to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped the escaped value of the property.\n   */\n  ;\n\n  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n\n    this.raws[name] = valueEscaped;\n  }\n  /**\n   * When you want a value to passed through to CSS directly. This method\n   * deletes the corresponding raw value causing the stringifier to fallback\n   * to the unescaped value.\n   * @param {string} name the property to set.\n   * @param {any} value The value that is both escaped and unescaped.\n   */\n  ;\n\n  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n\n    if (this.raws) {\n      delete this.raws[name];\n    }\n  }\n  /**\n   *\n   * @param {number} line The number (starting with 1)\n   * @param {number} column The column number (starting with 1)\n   */\n  ;\n\n  _proto.isAtPosition = function isAtPosition(line, column) {\n    if (this.source && this.source.start && this.source.end) {\n      if (this.source.start.line > line) {\n        return false;\n      }\n\n      if (this.source.end.line < line) {\n        return false;\n      }\n\n      if (this.source.start.line === line && this.source.start.column > column) {\n        return false;\n      }\n\n      if (this.source.end.line === line && this.source.end.column < column) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return undefined;\n  };\n\n  _proto.stringifyProperty = function stringifyProperty(name) {\n    return this.raws && this.raws[name] || this[name];\n  };\n\n  _proto.valueToString = function valueToString() {\n    return String(this.stringifyProperty(\"value\"));\n  };\n\n  _proto.toString = function toString() {\n    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\n  };\n\n  _createClass(Node, [{\n    key: \"rawSpaceBefore\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\n\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces && this.spaces.before;\n      }\n\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.before = raw;\n    }\n  }, {\n    key: \"rawSpaceAfter\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\n\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces.after;\n      }\n\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.after = raw;\n    }\n  }]);\n\n  return Node;\n}();\n\nexports[\"default\"] = Node;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Pseudo = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Pseudo, _Container);\n\n  function Pseudo(opts) {\n    var _this;\n\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.PSEUDO;\n    return _this;\n  }\n\n  var _proto = Pseudo.prototype;\n\n  _proto.toString = function toString() {\n    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';\n    return [this.rawSpaceBefore, this.stringifyProperty(\"value\"), params, this.rawSpaceAfter].join('');\n  };\n\n  return Pseudo;\n}(_container[\"default\"]);\n\nexports[\"default\"] = Pseudo;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Root = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Root, _Container);\n\n  function Root(opts) {\n    var _this;\n\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.ROOT;\n    return _this;\n  }\n\n  var _proto = Root.prototype;\n\n  _proto.toString = function toString() {\n    var str = this.reduce(function (memo, selector) {\n      memo.push(String(selector));\n      return memo;\n    }, []).join(',');\n    return this.trailingComma ? str + ',' : str;\n  };\n\n  _proto.error = function error(message, options) {\n    if (this._error) {\n      return this._error(message, options);\n    } else {\n      return new Error(message);\n    }\n  };\n\n  _createClass(Root, [{\n    key: \"errorGenerator\",\n    set: function set(handler) {\n      this._error = handler;\n    }\n  }]);\n\n  return Root;\n}(_container[\"default\"]);\n\nexports[\"default\"] = Root;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _container = _interopRequireDefault(require(\"./container\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Selector = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Selector, _Container);\n\n  function Selector(opts) {\n    var _this;\n\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.SELECTOR;\n    return _this;\n  }\n\n  return Selector;\n}(_container[\"default\"]);\n\nexports[\"default\"] = Selector;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _node = _interopRequireDefault(require(\"./node\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar String = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(String, _Node);\n\n  function String(opts) {\n    var _this;\n\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.STRING;\n    return _this;\n  }\n\n  return String;\n}(_node[\"default\"]);\n\nexports[\"default\"] = String;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Tag = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Tag, _Namespace);\n\n  function Tag(opts) {\n    var _this;\n\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = _types.TAG;\n    return _this;\n  }\n\n  return Tag;\n}(_namespace[\"default\"]);\n\nexports[\"default\"] = Tag;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.UNIVERSAL = exports.ATTRIBUTE = exports.CLASS = exports.COMBINATOR = exports.COMMENT = exports.ID = exports.NESTING = exports.PSEUDO = exports.ROOT = exports.SELECTOR = exports.STRING = exports.TAG = void 0;\nvar TAG = 'tag';\nexports.TAG = TAG;\nvar STRING = 'string';\nexports.STRING = STRING;\nvar SELECTOR = 'selector';\nexports.SELECTOR = SELECTOR;\nvar ROOT = 'root';\nexports.ROOT = ROOT;\nvar PSEUDO = 'pseudo';\nexports.PSEUDO = PSEUDO;\nvar NESTING = 'nesting';\nexports.NESTING = NESTING;\nvar ID = 'id';\nexports.ID = ID;\nvar COMMENT = 'comment';\nexports.COMMENT = COMMENT;\nvar COMBINATOR = 'combinator';\nexports.COMBINATOR = COMBINATOR;\nvar CLASS = 'class';\nexports.CLASS = CLASS;\nvar ATTRIBUTE = 'attribute';\nexports.ATTRIBUTE = ATTRIBUTE;\nvar UNIVERSAL = 'universal';\nexports.UNIVERSAL = UNIVERSAL;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Universal = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Universal, _Namespace);\n\n  function Universal(opts) {\n    var _this;\n\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = _types.UNIVERSAL;\n    _this.value = '*';\n    return _this;\n  }\n\n  return Universal;\n}(_namespace[\"default\"]);\n\nexports[\"default\"] = Universal;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = sortAscending;\n\nfunction sortAscending(list) {\n  return list.sort(function (a, b) {\n    return a - b;\n  });\n}\n\n;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.combinator = exports.word = exports.comment = exports.str = exports.tab = exports.newline = exports.feed = exports.cr = exports.backslash = exports.bang = exports.slash = exports.doubleQuote = exports.singleQuote = exports.space = exports.greaterThan = exports.pipe = exports.equals = exports.plus = exports.caret = exports.tilde = exports.dollar = exports.closeSquare = exports.openSquare = exports.closeParenthesis = exports.openParenthesis = exports.semicolon = exports.colon = exports.comma = exports.at = exports.asterisk = exports.ampersand = void 0;\nvar ampersand = 38; // `&`.charCodeAt(0);\n\nexports.ampersand = ampersand;\nvar asterisk = 42; // `*`.charCodeAt(0);\n\nexports.asterisk = asterisk;\nvar at = 64; // `@`.charCodeAt(0);\n\nexports.at = at;\nvar comma = 44; // `,`.charCodeAt(0);\n\nexports.comma = comma;\nvar colon = 58; // `:`.charCodeAt(0);\n\nexports.colon = colon;\nvar semicolon = 59; // `;`.charCodeAt(0);\n\nexports.semicolon = semicolon;\nvar openParenthesis = 40; // `(`.charCodeAt(0);\n\nexports.openParenthesis = openParenthesis;\nvar closeParenthesis = 41; // `)`.charCodeAt(0);\n\nexports.closeParenthesis = closeParenthesis;\nvar openSquare = 91; // `[`.charCodeAt(0);\n\nexports.openSquare = openSquare;\nvar closeSquare = 93; // `]`.charCodeAt(0);\n\nexports.closeSquare = closeSquare;\nvar dollar = 36; // `$`.charCodeAt(0);\n\nexports.dollar = dollar;\nvar tilde = 126; // `~`.charCodeAt(0);\n\nexports.tilde = tilde;\nvar caret = 94; // `^`.charCodeAt(0);\n\nexports.caret = caret;\nvar plus = 43; // `+`.charCodeAt(0);\n\nexports.plus = plus;\nvar equals = 61; // `=`.charCodeAt(0);\n\nexports.equals = equals;\nvar pipe = 124; // `|`.charCodeAt(0);\n\nexports.pipe = pipe;\nvar greaterThan = 62; // `>`.charCodeAt(0);\n\nexports.greaterThan = greaterThan;\nvar space = 32; // ` `.charCodeAt(0);\n\nexports.space = space;\nvar singleQuote = 39; // `'`.charCodeAt(0);\n\nexports.singleQuote = singleQuote;\nvar doubleQuote = 34; // `\"`.charCodeAt(0);\n\nexports.doubleQuote = doubleQuote;\nvar slash = 47; // `/`.charCodeAt(0);\n\nexports.slash = slash;\nvar bang = 33; // `!`.charCodeAt(0);\n\nexports.bang = bang;\nvar backslash = 92; // '\\\\'.charCodeAt(0);\n\nexports.backslash = backslash;\nvar cr = 13; // '\\r'.charCodeAt(0);\n\nexports.cr = cr;\nvar feed = 12; // '\\f'.charCodeAt(0);\n\nexports.feed = feed;\nvar newline = 10; // '\\n'.charCodeAt(0);\n\nexports.newline = newline;\nvar tab = 9; // '\\t'.charCodeAt(0);\n// Expose aliases primarily for readability.\n\nexports.tab = tab;\nvar str = singleQuote; // No good single character representation!\n\nexports.str = str;\nvar comment = -1;\nexports.comment = comment;\nvar word = -2;\nexports.word = word;\nvar combinator = -3;\nexports.combinator = combinator;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = tokenize;\nexports.FIELDS = void 0;\n\nvar t = _interopRequireWildcard(require(\"./tokenTypes\"));\n\nvar _unescapable, _wordDelimiters;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);\nvar wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);\nvar hex = {};\nvar hexChars = \"0123456789abcdefABCDEF\";\n\nfor (var i = 0; i < hexChars.length; i++) {\n  hex[hexChars.charCodeAt(i)] = true;\n}\n/**\n *  Returns the last index of the bar css word\n * @param {string} css The string in which the word begins\n * @param {number} start The index into the string where word's first letter occurs\n */\n\n\nfunction consumeWord(css, start) {\n  var next = start;\n  var code;\n\n  do {\n    code = css.charCodeAt(next);\n\n    if (wordDelimiters[code]) {\n      return next - 1;\n    } else if (code === t.backslash) {\n      next = consumeEscape(css, next) + 1;\n    } else {\n      // All other characters are part of the word\n      next++;\n    }\n  } while (next < css.length);\n\n  return next - 1;\n}\n/**\n *  Returns the last index of the escape sequence\n * @param {string} css The string in which the sequence begins\n * @param {number} start The index into the string where escape character (`\\`) occurs.\n */\n\n\nfunction consumeEscape(css, start) {\n  var next = start;\n  var code = css.charCodeAt(next + 1);\n\n  if (unescapable[code]) {// just consume the escape char\n  } else if (hex[code]) {\n    var hexDigits = 0; // consume up to 6 hex chars\n\n    do {\n      next++;\n      hexDigits++;\n      code = css.charCodeAt(next + 1);\n    } while (hex[code] && hexDigits < 6); // if fewer than 6 hex chars, a trailing space ends the escape\n\n\n    if (hexDigits < 6 && code === t.space) {\n      next++;\n    }\n  } else {\n    // the next char is part of the current word\n    next++;\n  }\n\n  return next;\n}\n\nvar FIELDS = {\n  TYPE: 0,\n  START_LINE: 1,\n  START_COL: 2,\n  END_LINE: 3,\n  END_COL: 4,\n  START_POS: 5,\n  END_POS: 6\n};\nexports.FIELDS = FIELDS;\n\nfunction tokenize(input) {\n  var tokens = [];\n  var css = input.css.valueOf();\n  var _css = css,\n      length = _css.length;\n  var offset = -1;\n  var line = 1;\n  var start = 0;\n  var end = 0;\n  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;\n\n  function unclosed(what, fix) {\n    if (input.safe) {\n      // fyi: this is never set to true.\n      css += fix;\n      next = css.length - 1;\n    } else {\n      throw input.error('Unclosed ' + what, line, start - offset, start);\n    }\n  }\n\n  while (start < length) {\n    code = css.charCodeAt(start);\n\n    if (code === t.newline) {\n      offset = start;\n      line += 1;\n    }\n\n    switch (code) {\n      case t.space:\n      case t.tab:\n      case t.newline:\n      case t.cr:\n      case t.feed:\n        next = start;\n\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n\n          if (code === t.newline) {\n            offset = next;\n            line += 1;\n          }\n        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);\n\n        tokenType = t.space;\n        endLine = line;\n        endColumn = next - offset - 1;\n        end = next;\n        break;\n\n      case t.plus:\n      case t.greaterThan:\n      case t.tilde:\n      case t.pipe:\n        next = start;\n\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);\n\n        tokenType = t.combinator;\n        endLine = line;\n        endColumn = start - offset;\n        end = next;\n        break;\n      // Consume these characters as single tokens.\n\n      case t.asterisk:\n      case t.ampersand:\n      case t.bang:\n      case t.comma:\n      case t.equals:\n      case t.dollar:\n      case t.caret:\n      case t.openSquare:\n      case t.closeSquare:\n      case t.colon:\n      case t.semicolon:\n      case t.openParenthesis:\n      case t.closeParenthesis:\n        next = start;\n        tokenType = code;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n\n      case t.singleQuote:\n      case t.doubleQuote:\n        quote = code === t.singleQuote ? \"'\" : '\"';\n        next = start;\n\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n\n          if (next === -1) {\n            unclosed('quote', quote);\n          }\n\n          escapePos = next;\n\n          while (css.charCodeAt(escapePos - 1) === t.backslash) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n\n        tokenType = t.str;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n\n      default:\n        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {\n          next = css.indexOf('*/', start + 2) + 1;\n\n          if (next === 0) {\n            unclosed('comment', '*/');\n          }\n\n          content = css.slice(start, next + 1);\n          lines = content.split('\\n');\n          last = lines.length - 1;\n\n          if (last > 0) {\n            nextLine = line + last;\n            nextOffset = next - lines[last].length;\n          } else {\n            nextLine = line;\n            nextOffset = offset;\n          }\n\n          tokenType = t.comment;\n          line = nextLine;\n          endLine = nextLine;\n          endColumn = next - nextOffset;\n        } else if (code === t.slash) {\n          next = start;\n          tokenType = code;\n          endLine = line;\n          endColumn = start - offset;\n          end = next + 1;\n        } else {\n          next = consumeWord(css, start);\n          tokenType = t.word;\n          endLine = line;\n          endColumn = next - offset;\n        }\n\n        end = next + 1;\n        break;\n    } // Ensure that the token structure remains consistent\n\n\n    tokens.push([tokenType, // [0] Token type\n    line, // [1] Starting line\n    start - offset, // [2] Starting column\n    endLine, // [3] Ending line\n    endColumn, // [4] Ending column\n    start, // [5] Start position / Source index\n    end // [6] End position\n    ]); // Reset offset for the next token\n\n    if (nextOffset) {\n      offset = nextOffset;\n      nextOffset = null;\n    }\n\n    start = end;\n  }\n\n  return tokens;\n}","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = ensureObject;\n\nfunction ensureObject(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n\n  while (props.length > 0) {\n    var prop = props.shift();\n\n    if (!obj[prop]) {\n      obj[prop] = {};\n    }\n\n    obj = obj[prop];\n  }\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = getProp;\n\nfunction getProp(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n\n  while (props.length > 0) {\n    var prop = props.shift();\n\n    if (!obj[prop]) {\n      return undefined;\n    }\n\n    obj = obj[prop];\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.stripComments = exports.ensureObject = exports.getProp = exports.unesc = void 0;\n\nvar _unesc = _interopRequireDefault(require(\"./unesc\"));\n\nexports.unesc = _unesc[\"default\"];\n\nvar _getProp = _interopRequireDefault(require(\"./getProp\"));\n\nexports.getProp = _getProp[\"default\"];\n\nvar _ensureObject = _interopRequireDefault(require(\"./ensureObject\"));\n\nexports.ensureObject = _ensureObject[\"default\"];\n\nvar _stripComments = _interopRequireDefault(require(\"./stripComments\"));\n\nexports.stripComments = _stripComments[\"default\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stripComments;\n\nfunction stripComments(str) {\n  var s = \"\";\n  var commentStart = str.indexOf(\"/*\");\n  var lastEnd = 0;\n\n  while (commentStart >= 0) {\n    s = s + str.slice(lastEnd, commentStart);\n    var commentEnd = str.indexOf(\"*/\", commentStart + 2);\n\n    if (commentEnd < 0) {\n      return s;\n    }\n\n    lastEnd = commentEnd + 2;\n    commentStart = str.indexOf(\"/*\", lastEnd);\n  }\n\n  s = s + str.slice(lastEnd);\n  return s;\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = unesc;\n\n// Many thanks for this post which made this migration much easier.\n// https://mathiasbynens.be/notes/css-escapes\n\n/**\n * \n * @param {string} str \n * @returns {[string, number]|undefined}\n */\nfunction gobbleHex(str) {\n  var lower = str.toLowerCase();\n  var hex = '';\n  var spaceTerminated = false;\n\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\n    var code = lower.charCodeAt(i); // check to see if we are dealing with a valid hex char [a-f|0-9]\n\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57; // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n\n    spaceTerminated = code === 32;\n\n    if (!valid) {\n      break;\n    }\n\n    hex += lower[i];\n  }\n\n  if (hex.length === 0) {\n    return undefined;\n  }\n\n  var codePoint = parseInt(hex, 16);\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF; // Add special case for\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\n\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\n  }\n\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\n}\n\nvar CONTAINS_ESCAPE = /\\\\/;\n\nfunction unesc(str) {\n  var needToProcess = CONTAINS_ESCAPE.test(str);\n\n  if (!needToProcess) {\n    return str;\n  }\n\n  var ret = \"\";\n\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === \"\\\\\") {\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\n\n      if (gobbled !== undefined) {\n        ret += gobbled[0];\n        i += gobbled[1];\n        continue;\n      } // Retain a pair of \\\\ if double escaped `\\\\\\\\`\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\n\n\n      if (str[i + 1] === \"\\\\\") {\n        ret += \"\\\\\";\n        i++;\n        continue;\n      } // if \\\\ is at the end of the string retain it\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\n\n\n      if (str.length === i + 1) {\n        ret += str[i];\n      }\n\n      continue;\n    }\n\n    ret += str[i];\n  }\n\n  return ret;\n}\n\nmodule.exports = exports.default;","var parse = require(\"./parse\");\nvar walk = require(\"./walk\");\nvar stringify = require(\"./stringify\");\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value);\n    return this;\n  }\n  return new ValueParser(value);\n}\n\nValueParser.prototype.toString = function() {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : \"\";\n};\n\nValueParser.prototype.walk = function(cb, bubble) {\n  walk(this.nodes, cb, bubble);\n  return this;\n};\n\nValueParser.unit = require(\"./unit\");\n\nValueParser.walk = walk;\n\nValueParser.stringify = stringify;\n\nmodule.exports = ValueParser;\n","var openParentheses = \"(\".charCodeAt(0);\nvar closeParentheses = \")\".charCodeAt(0);\nvar singleQuote = \"'\".charCodeAt(0);\nvar doubleQuote = '\"'.charCodeAt(0);\nvar backslash = \"\\\\\".charCodeAt(0);\nvar slash = \"/\".charCodeAt(0);\nvar comma = \",\".charCodeAt(0);\nvar colon = \":\".charCodeAt(0);\nvar star = \"*\".charCodeAt(0);\nvar uLower = \"u\".charCodeAt(0);\nvar uUpper = \"U\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar isUnicodeRange = /^[a-f0-9?-]+$/i;\n\nmodule.exports = function(input) {\n  var tokens = [];\n  var value = input;\n\n  var next,\n    quote,\n    prev,\n    token,\n    escape,\n    escapePos,\n    whitespacePos,\n    parenthesesOpenPos;\n  var pos = 0;\n  var code = value.charCodeAt(pos);\n  var max = value.length;\n  var stack = [{ nodes: tokens }];\n  var balanced = 0;\n  var parent;\n\n  var name = \"\";\n  var before = \"\";\n  var after = \"\";\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = value.slice(pos, next);\n\n      prev = tokens[tokens.length - 1];\n      if (code === closeParentheses && balanced) {\n        after = token;\n      } else if (prev && prev.type === \"div\") {\n        prev.after = token;\n        prev.sourceEndIndex += token.length;\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent ||\n            (parent && parent.type === \"function\" && parent.value !== \"calc\")))\n      ) {\n        before = token;\n      } else {\n        tokens.push({\n          type: \"space\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos;\n      quote = code === singleQuote ? \"'\" : '\"';\n      token = {\n        type: \"string\",\n        sourceIndex: pos,\n        quote: quote\n      };\n      do {\n        escape = false;\n        next = value.indexOf(quote, next + 1);\n        if (~next) {\n          escapePos = next;\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1;\n            escape = !escape;\n          }\n        } else {\n          value += quote;\n          next = value.length - 1;\n          token.unclosed = true;\n        }\n      } while (escape);\n      token.value = value.slice(pos + 1, next);\n      token.sourceEndIndex = token.unclosed ? next : next + 1;\n      tokens.push(token);\n      pos = next + 1;\n      code = value.charCodeAt(pos);\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf(\"*/\", pos);\n\n      token = {\n        type: \"comment\",\n        sourceIndex: pos,\n        sourceEndIndex: next + 2\n      };\n\n      if (next === -1) {\n        token.unclosed = true;\n        next = value.length;\n        token.sourceEndIndex = next;\n      }\n\n      token.value = value.slice(pos + 2, next);\n      tokens.push(token);\n\n      pos = next + 2;\n      code = value.charCodeAt(pos);\n\n      // Operation within calc\n    } else if (\n      (code === slash || code === star) &&\n      parent &&\n      parent.type === \"function\" &&\n      parent.value === \"calc\"\n    ) {\n      token = value[pos];\n      tokens.push({\n        type: \"word\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token\n      });\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos];\n\n      tokens.push({\n        type: \"div\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: \"\"\n      });\n      before = \"\";\n\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      parenthesesOpenPos = pos;\n      token = {\n        type: \"function\",\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next)\n      };\n      pos = next;\n\n      if (name === \"url\" && code !== singleQuote && code !== doubleQuote) {\n        next -= 1;\n        do {\n          escape = false;\n          next = value.indexOf(\")\", next + 1);\n          if (~next) {\n            escapePos = next;\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1;\n              escape = !escape;\n            }\n          } else {\n            value += \")\";\n            next = value.length - 1;\n            token.unclosed = true;\n          }\n        } while (escape);\n        // Whitespaces before closed\n        whitespacePos = next;\n        do {\n          whitespacePos -= 1;\n          code = value.charCodeAt(whitespacePos);\n        } while (code <= 32);\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: \"word\",\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1)\n              }\n            ];\n          } else {\n            token.nodes = [];\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = \"\";\n            token.nodes.push({\n              type: \"space\",\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next)\n            });\n          } else {\n            token.after = value.slice(whitespacePos + 1, next);\n            token.sourceEndIndex = next;\n          }\n        } else {\n          token.after = \"\";\n          token.nodes = [];\n        }\n        pos = next + 1;\n        token.sourceEndIndex = token.unclosed ? next : pos;\n        code = value.charCodeAt(pos);\n        tokens.push(token);\n      } else {\n        balanced += 1;\n        token.after = \"\";\n        token.sourceEndIndex = pos + 1;\n        tokens.push(token);\n        stack.push(token);\n        tokens = token.nodes = [];\n        parent = token;\n      }\n      name = \"\";\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      parent.after = after;\n      parent.sourceEndIndex += after.length;\n      after = \"\";\n      balanced -= 1;\n      stack[stack.length - 1].sourceEndIndex = pos;\n      stack.pop();\n      parent = stack[balanced];\n      tokens = parent.nodes;\n\n      // Words\n    } else {\n      next = pos;\n      do {\n        if (code === backslash) {\n          next += 1;\n        }\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star &&\n            parent &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === slash &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === closeParentheses && balanced)\n        )\n      );\n      token = value.slice(pos, next);\n\n      if (openParentheses === code) {\n        name = token;\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: \"unicode-range\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      } else {\n        tokens.push({\n          type: \"word\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true;\n    stack[pos].sourceEndIndex = value.length;\n  }\n\n  return stack[0].nodes;\n};\n","function stringifyNode(node, custom) {\n  var type = node.type;\n  var value = node.value;\n  var buf;\n  var customResult;\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult;\n  } else if (type === \"word\" || type === \"space\") {\n    return value;\n  } else if (type === \"string\") {\n    buf = node.quote || \"\";\n    return buf + value + (node.unclosed ? \"\" : buf);\n  } else if (type === \"comment\") {\n    return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n  } else if (type === \"div\") {\n    return (node.before || \"\") + value + (node.after || \"\");\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom);\n    if (type !== \"function\") {\n      return buf;\n    }\n    return (\n      value +\n      \"(\" +\n      (node.before || \"\") +\n      buf +\n      (node.after || \"\") +\n      (node.unclosed ? \"\" : \")\")\n    );\n  }\n  return value;\n}\n\nfunction stringify(nodes, custom) {\n  var result, i;\n\n  if (Array.isArray(nodes)) {\n    result = \"\";\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result;\n    }\n    return result;\n  }\n  return stringifyNode(nodes, custom);\n}\n\nmodule.exports = stringify;\n","var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0);\n  var nextCode;\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    var nextNextCode = value.charCodeAt(2);\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true;\n  }\n\n  return false;\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var code;\n  var nextCode;\n  var nextNextCode;\n\n  if (length === 0 || !likeNumber(value)) {\n    return false;\n  }\n\n  code = value.charCodeAt(pos);\n\n  if (code === plus || code === minus) {\n    pos++;\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code < 48 || code > 57) {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  nextNextCode = value.charCodeAt(pos + 2);\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) &&\n        nextNextCode >= 48 &&\n        nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos)\n  };\n};\n","module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result;\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i];\n    if (!bubble) {\n      result = cb(node, i, nodes);\n    }\n\n    if (\n      result !== false &&\n      node.type === \"function\" &&\n      Array.isArray(node.nodes)\n    ) {\n      walk(node.nodes, cb, bubble);\n    }\n\n    if (bubble) {\n      cb(node, i, nodes);\n    }\n  }\n};\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule, Root\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, red, gray } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { line: origin.line, column: origin.column },\n        origin.endLine === undefined\n          ? origin.column\n          : { line: origin.endLine, column: origin.endColumn },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { line, column },\n        endLine === undefined ? column : { line: endLine, column: endColumn },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, endLine, endColumn, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  document: 'Document',\n  root: 'Root',\n  atrule: 'AtRule',\n  rule: 'Rule',\n  decl: 'Declaration',\n  comment: 'Comment'\n}\n\nconst PLUGIN_PROPS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true,\n  Document: true,\n  Root: true,\n  Declaration: true,\n  Rule: true,\n  AtRule: true,\n  Comment: true,\n  DeclarationExit: true,\n  RuleExit: true,\n  AtRuleExit: true,\n  CommentExit: true,\n  RootExit: true,\n  DocumentExit: true,\n  OnceExit: true\n}\n\nconst NOT_VISITORS = {\n  postcssPlugin: true,\n  prepare: true,\n  Once: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    node,\n    events,\n    eventIndex: 0,\n    visitors: [],\n    visitorIndex: 0,\n    iterator: 0\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, result: this.result, postcss }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  toString() {\n    return this.css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  toFileUrl(path) {\n    if (pathToFileURL) {\n      return pathToFileURL(path).toString()\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get messages() {\n    return []\n  }\n\n  warnings() {\n    return []\n  }\n\n  toString() {\n    return this._css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { start, end } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { line: start.line, column: start.column },\n        { line: end.line, column: end.column },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  rangeBy(opts) {\n    let start = {\n      line: this.source.start.line,\n      column: this.source.start.column\n    }\n    let end = this.source.end\n      ? {\n          line: this.source.end.line,\n          column: this.source.end.column + 1\n        }\n      : {\n          line: start.line,\n          column: start.column + 1\n        }\n\n    if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(index + opts.word.length)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          line: opts.start.line,\n          column: opts.start.column\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          line: opts.end.line,\n          column: opts.end.column\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { line: start.line, column: start.column + 1 }\n    }\n\n    return { start, end }\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      offset,\n      line: pos.line,\n      column: pos.col\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      start: this.getPosition(offset),\n      input: this.input\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { value, raw }\n    }\n    node[prop] = value\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.21'\n    this.plugins = this.normalize(plugins)\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet tokenizer = require('./tokenize')\n\nlet Input\n\nfunction registerInput(dependant) {\n  Input = dependant\n}\n\nconst HIGHLIGHT_THEME = {\n  'brackets': pico.cyan,\n  'at-word': pico.cyan,\n  'comment': pico.gray,\n  'string': pico.green,\n  'class': pico.yellow,\n  'hash': pico.magenta,\n  'call': pico.cyan,\n  '(': pico.cyan,\n  ')': pico.cyan,\n  '{': pico.yellow,\n  '}': pico.yellow,\n  '[': pico.yellow,\n  ']': pico.yellow,\n  ':': pico.yellow,\n  ';': pico.yellow\n}\n\nfunction getTokenType([type, value], processor) {\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class'\n    }\n    if (value[0] === '#') {\n      return 'hash'\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken()\n    processor.back(next)\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\n  }\n\n  return type\n}\n\nfunction terminalHighlight(css) {\n  let processor = tokenizer(new Input(css), { ignoreErrors: true })\n  let result = ''\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken()\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)]\n    if (color) {\n      result += token[1]\n        .split(/\\r?\\n/)\n        .map(i => color(i))\n        .join('\\n')\n    } else {\n      result += token[1]\n    }\n  }\n  return result\n}\n\nterminalHighlight.registerInput = registerInput\n\nmodule.exports = terminalHighlight\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n","/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        plugin: this.plugin,\n        index: this.index,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tfor (const [key, value] of this.oldCache.entries()) {\n\t\t\t\t\tthis.onEviction(key, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis.oldCache.delete(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n}\n\nmodule.exports = QuickLRU;\n","var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n","var fs = require('fs');\nvar getHomedir = require('./homedir');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(null);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n","module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n","var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = parseInt(current[i] || 0, 10);\n        var ver = parseInt(versionParts[i] || 0, 10);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        }\n        return false;\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n","'use strict';\n\nvar os = require('os');\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n    var home = process.env.HOME;\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n    if (process.platform === 'win32') {\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n    }\n\n    if (process.platform === 'darwin') {\n        return home || (user ? '/Users/' + user : null);\n    }\n\n    if (process.platform === 'linux') {\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\n    }\n\n    return home || null;\n};\n","var isCoreModule = require('is-core-module');\n\nmodule.exports = function isCore(x) {\n    return isCoreModule(x);\n};\n","var path = require('path');\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n","module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n","var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n","'use strict'\n\nfunction reusify (Constructor) {\n  var head = new Constructor()\n  var tail = head\n\n  function get () {\n    var current = head\n\n    if (current.next) {\n      head = current.next\n    } else {\n      head = new Constructor()\n      tail = head\n    }\n\n    current.next = null\n\n    return current\n  }\n\n  function release (obj) {\n    tail.next = obj\n    tail = obj\n  }\n\n  return {\n    get: get,\n    release: release\n  }\n}\n\nmodule.exports = reusify\n","/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallel\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallel (tasks, cb) {\n  let results, pending, keys\n  let isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (--pending === 0 || err) {\n      done(err)\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) { each(key, err, result) })\n    })\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n    })\n  }\n\n  isSync = false\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\nfunction SortTemplate(comparator) {\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot, false) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n  return doQuickSort;\n}\n\nfunction cloneSort(comparator) {\n  let template = SortTemplate.toString();\n  let templateFn = new Function(`return ${template}`)();\n  return templateFn(comparator);\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\n\nlet sortCache = new WeakMap();\nexports.quickSort = function (ary, comparator, start = 0) {\n  let doQuickSort = sortCache.get(comparator);\n  if (doQuickSort === void 0) {\n    doQuickSort = cloneSort(comparator);\n    sortCache.set(comparator, doQuickSort);\n  }\n  doQuickSort(ary, comparator, start, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    var boundCallback = aCallback.bind(context);\n    var names = this._names;\n    var sources = this._sources;\n    var sourceMapURL = this._sourceMapURL;\n\n    for (var i = 0, n = mappings.length; i < n; i++) {\n      var mapping = mappings[i];\n      var source = mapping.source === null ? null : sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, sourceMapURL);\n      boundCallback({\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : names.at(mapping.name)\n      });\n    }\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\n\nconst compareGenerated = util.compareByGeneratedPositionsDeflatedNoLine;\nfunction sortGenerated(array, start) {\n  let l = array.length;\n  let n = array.length - start;\n  if (n <= 1) {\n    return;\n  } else if (n == 2) {\n    let a = array[start];\n    let b = array[start + 1];\n    if (compareGenerated(a, b) > 0) {\n      array[start] = b;\n      array[start + 1] = a;\n    }\n  } else if (n < 20) {\n    for (let i = start; i < l; i++) {\n      for (let j = i; j > start; j--) {\n        let a = array[j - 1];\n        let b = array[j];\n        if (compareGenerated(a, b) <= 0) {\n          break;\n        }\n        array[j - 1] = b;\n        array[j] = a;\n      }\n    }\n  } else {\n    quickSort(array, compareGenerated, start);\n  }\n}\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    let subarrayStart = 0;\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n\n        sortGenerated(generatedMappings, subarrayStart);\n        subarrayStart = generatedMappings.length;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = [];\n        while (index < end) {\n          base64VLQ.decode(aStr, index, temp);\n          value = temp.value;\n          index = temp.rest;\n          segment.push(value);\n        }\n\n        if (segment.length === 2) {\n          throw new Error('Found a source, but no line and column');\n        }\n\n        if (segment.length === 3) {\n          throw new Error('Found a source and line, but no column');\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          let currentSource = mapping.source;\n          while (originalMappings.length <= currentSource) {\n            originalMappings.push(null);\n          }\n          if (originalMappings[currentSource] === null) {\n            originalMappings[currentSource] = [];\n          }\n          originalMappings[currentSource].push(mapping);\n        }\n      }\n    }\n\n    sortGenerated(generatedMappings, subarrayStart);\n    this.__generatedMappings = generatedMappings;\n\n    for (var i = 0; i < originalMappings.length; i++) {\n      if (originalMappings[i] != null) {\n        quickSort(originalMappings[i], util.compareByOriginalPositionsNoSource);\n      }\n    }\n    this.__originalMappings = [].concat(...originalMappings);\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _default = [\n    \"preflight\",\n    \"container\",\n    \"accessibility\",\n    \"pointerEvents\",\n    \"visibility\",\n    \"position\",\n    \"inset\",\n    \"isolation\",\n    \"zIndex\",\n    \"order\",\n    \"gridColumn\",\n    \"gridColumnStart\",\n    \"gridColumnEnd\",\n    \"gridRow\",\n    \"gridRowStart\",\n    \"gridRowEnd\",\n    \"float\",\n    \"clear\",\n    \"margin\",\n    \"boxSizing\",\n    \"display\",\n    \"aspectRatio\",\n    \"height\",\n    \"maxHeight\",\n    \"minHeight\",\n    \"width\",\n    \"minWidth\",\n    \"maxWidth\",\n    \"flex\",\n    \"flexShrink\",\n    \"flexGrow\",\n    \"flexBasis\",\n    \"tableLayout\",\n    \"borderCollapse\",\n    \"borderSpacing\",\n    \"transformOrigin\",\n    \"translate\",\n    \"rotate\",\n    \"skew\",\n    \"scale\",\n    \"transform\",\n    \"animation\",\n    \"cursor\",\n    \"touchAction\",\n    \"userSelect\",\n    \"resize\",\n    \"scrollSnapType\",\n    \"scrollSnapAlign\",\n    \"scrollSnapStop\",\n    \"scrollMargin\",\n    \"scrollPadding\",\n    \"listStylePosition\",\n    \"listStyleType\",\n    \"appearance\",\n    \"columns\",\n    \"breakBefore\",\n    \"breakInside\",\n    \"breakAfter\",\n    \"gridAutoColumns\",\n    \"gridAutoFlow\",\n    \"gridAutoRows\",\n    \"gridTemplateColumns\",\n    \"gridTemplateRows\",\n    \"flexDirection\",\n    \"flexWrap\",\n    \"placeContent\",\n    \"placeItems\",\n    \"alignContent\",\n    \"alignItems\",\n    \"justifyContent\",\n    \"justifyItems\",\n    \"gap\",\n    \"space\",\n    \"divideWidth\",\n    \"divideStyle\",\n    \"divideColor\",\n    \"divideOpacity\",\n    \"placeSelf\",\n    \"alignSelf\",\n    \"justifySelf\",\n    \"overflow\",\n    \"overscrollBehavior\",\n    \"scrollBehavior\",\n    \"textOverflow\",\n    \"whitespace\",\n    \"wordBreak\",\n    \"borderRadius\",\n    \"borderWidth\",\n    \"borderStyle\",\n    \"borderColor\",\n    \"borderOpacity\",\n    \"backgroundColor\",\n    \"backgroundOpacity\",\n    \"backgroundImage\",\n    \"gradientColorStops\",\n    \"boxDecorationBreak\",\n    \"backgroundSize\",\n    \"backgroundAttachment\",\n    \"backgroundClip\",\n    \"backgroundPosition\",\n    \"backgroundRepeat\",\n    \"backgroundOrigin\",\n    \"fill\",\n    \"stroke\",\n    \"strokeWidth\",\n    \"objectFit\",\n    \"objectPosition\",\n    \"padding\",\n    \"textAlign\",\n    \"textIndent\",\n    \"verticalAlign\",\n    \"fontFamily\",\n    \"fontSize\",\n    \"fontWeight\",\n    \"textTransform\",\n    \"fontStyle\",\n    \"fontVariantNumeric\",\n    \"lineHeight\",\n    \"letterSpacing\",\n    \"textColor\",\n    \"textOpacity\",\n    \"textDecoration\",\n    \"textDecorationColor\",\n    \"textDecorationStyle\",\n    \"textDecorationThickness\",\n    \"textUnderlineOffset\",\n    \"fontSmoothing\",\n    \"placeholderColor\",\n    \"placeholderOpacity\",\n    \"caretColor\",\n    \"accentColor\",\n    \"opacity\",\n    \"backgroundBlendMode\",\n    \"mixBlendMode\",\n    \"boxShadow\",\n    \"boxShadowColor\",\n    \"outlineStyle\",\n    \"outlineWidth\",\n    \"outlineOffset\",\n    \"outlineColor\",\n    \"ringWidth\",\n    \"ringColor\",\n    \"ringOpacity\",\n    \"ringOffsetWidth\",\n    \"ringOffsetColor\",\n    \"blur\",\n    \"brightness\",\n    \"contrast\",\n    \"dropShadow\",\n    \"grayscale\",\n    \"hueRotate\",\n    \"invert\",\n    \"saturate\",\n    \"sepia\",\n    \"filter\",\n    \"backdropBlur\",\n    \"backdropBrightness\",\n    \"backdropContrast\",\n    \"backdropGrayscale\",\n    \"backdropHueRotate\",\n    \"backdropInvert\",\n    \"backdropOpacity\",\n    \"backdropSaturate\",\n    \"backdropSepia\",\n    \"backdropFilter\",\n    \"transitionProperty\",\n    \"transitionDelay\",\n    \"transitionDuration\",\n    \"transitionTimingFunction\",\n    \"willChange\",\n    \"content\"\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    variantPlugins: ()=>variantPlugins,\n    corePlugins: ()=>corePlugins\n});\nconst _fs = /*#__PURE__*/ _interopRequireDefault(require(\"fs\"));\nconst _path = /*#__PURE__*/ _interopRequireWildcard(require(\"path\"));\nconst _postcss = /*#__PURE__*/ _interopRequireDefault(require(\"postcss\"));\nconst _createUtilityPlugin = /*#__PURE__*/ _interopRequireDefault(require(\"./util/createUtilityPlugin\"));\nconst _buildMediaQuery = /*#__PURE__*/ _interopRequireDefault(require(\"./util/buildMediaQuery\"));\nconst _escapeClassName = /*#__PURE__*/ _interopRequireDefault(require(\"./util/escapeClassName\"));\nconst _parseAnimationValue = /*#__PURE__*/ _interopRequireDefault(require(\"./util/parseAnimationValue\"));\nconst _flattenColorPalette = /*#__PURE__*/ _interopRequireDefault(require(\"./util/flattenColorPalette\"));\nconst _withAlphaVariable = /*#__PURE__*/ _interopRequireWildcard(require(\"./util/withAlphaVariable\"));\nconst _toColorValue = /*#__PURE__*/ _interopRequireDefault(require(\"./util/toColorValue\"));\nconst _isPlainObject = /*#__PURE__*/ _interopRequireDefault(require(\"./util/isPlainObject\"));\nconst _transformThemeValue = /*#__PURE__*/ _interopRequireDefault(require(\"./util/transformThemeValue\"));\nconst _packageJson = require(\"../package.json\");\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"./util/log\"));\nconst _normalizeScreens = require(\"./util/normalizeScreens\");\nconst _parseBoxShadowValue = require(\"./util/parseBoxShadowValue\");\nconst _removeAlphaVariables = require(\"./util/removeAlphaVariables\");\nconst _featureFlags = require(\"./featureFlags\");\nconst _dataTypes = require(\"./util/dataTypes\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nlet variantPlugins = {\n    pseudoElementVariants: ({ addVariant  })=>{\n        addVariant(\"first-letter\", \"&::first-letter\");\n        addVariant(\"first-line\", \"&::first-line\");\n        addVariant(\"marker\", [\n            ({ container  })=>{\n                (0, _removeAlphaVariables.removeAlphaVariables)(container, [\n                    \"--tw-text-opacity\"\n                ]);\n                return \"& *::marker\";\n            },\n            ({ container  })=>{\n                (0, _removeAlphaVariables.removeAlphaVariables)(container, [\n                    \"--tw-text-opacity\"\n                ]);\n                return \"&::marker\";\n            }\n        ]);\n        addVariant(\"selection\", [\n            \"& *::selection\",\n            \"&::selection\"\n        ]);\n        addVariant(\"file\", \"&::file-selector-button\");\n        addVariant(\"placeholder\", \"&::placeholder\");\n        addVariant(\"backdrop\", \"&::backdrop\");\n        addVariant(\"before\", ({ container  })=>{\n            container.walkRules((rule)=>{\n                let foundContent = false;\n                rule.walkDecls(\"content\", ()=>{\n                    foundContent = true;\n                });\n                if (!foundContent) {\n                    rule.prepend(_postcss.default.decl({\n                        prop: \"content\",\n                        value: \"var(--tw-content)\"\n                    }));\n                }\n            });\n            return \"&::before\";\n        });\n        addVariant(\"after\", ({ container  })=>{\n            container.walkRules((rule)=>{\n                let foundContent = false;\n                rule.walkDecls(\"content\", ()=>{\n                    foundContent = true;\n                });\n                if (!foundContent) {\n                    rule.prepend(_postcss.default.decl({\n                        prop: \"content\",\n                        value: \"var(--tw-content)\"\n                    }));\n                }\n            });\n            return \"&::after\";\n        });\n    },\n    pseudoClassVariants: ({ addVariant , matchVariant , config  })=>{\n        let pseudoVariants = [\n            // Positional\n            [\n                \"first\",\n                \"&:first-child\"\n            ],\n            [\n                \"last\",\n                \"&:last-child\"\n            ],\n            [\n                \"only\",\n                \"&:only-child\"\n            ],\n            [\n                \"odd\",\n                \"&:nth-child(odd)\"\n            ],\n            [\n                \"even\",\n                \"&:nth-child(even)\"\n            ],\n            \"first-of-type\",\n            \"last-of-type\",\n            \"only-of-type\",\n            // State\n            [\n                \"visited\",\n                ({ container  })=>{\n                    (0, _removeAlphaVariables.removeAlphaVariables)(container, [\n                        \"--tw-text-opacity\",\n                        \"--tw-border-opacity\",\n                        \"--tw-bg-opacity\"\n                    ]);\n                    return \"&:visited\";\n                }\n            ],\n            \"target\",\n            [\n                \"open\",\n                \"&[open]\"\n            ],\n            // Forms\n            \"default\",\n            \"checked\",\n            \"indeterminate\",\n            \"placeholder-shown\",\n            \"autofill\",\n            \"optional\",\n            \"required\",\n            \"valid\",\n            \"invalid\",\n            \"in-range\",\n            \"out-of-range\",\n            \"read-only\",\n            // Content\n            \"empty\",\n            // Interactive\n            \"focus-within\",\n            [\n                \"hover\",\n                !(0, _featureFlags.flagEnabled)(config(), \"hoverOnlyWhenSupported\") ? \"&:hover\" : \"@media (hover: hover) and (pointer: fine) { &:hover }\"\n            ],\n            \"focus\",\n            \"focus-visible\",\n            \"active\",\n            \"enabled\",\n            \"disabled\"\n        ].map((variant)=>Array.isArray(variant) ? variant : [\n                variant,\n                `&:${variant}`\n            ]);\n        for (let [variantName, state] of pseudoVariants){\n            addVariant(variantName, (ctx)=>{\n                let result = typeof state === \"function\" ? state(ctx) : state;\n                return result;\n            });\n        }\n        let variants = {\n            group: (_, { modifier  })=>modifier ? [\n                    `:merge(.group\\\\/${(0, _escapeClassName.default)(modifier)})`,\n                    \" &\"\n                ] : [\n                    `:merge(.group)`,\n                    \" &\"\n                ],\n            peer: (_, { modifier  })=>modifier ? [\n                    `:merge(.peer\\\\/${(0, _escapeClassName.default)(modifier)})`,\n                    \" ~ &\"\n                ] : [\n                    `:merge(.peer)`,\n                    \" ~ &\"\n                ]\n        };\n        for (let [name, fn] of Object.entries(variants)){\n            matchVariant(name, (value = \"\", extra)=>{\n                let result = (0, _dataTypes.normalize)(typeof value === \"function\" ? value(extra) : value);\n                if (!result.includes(\"&\")) result = \"&\" + result;\n                let [a, b] = fn(\"\", extra);\n                let start = null;\n                let end = null;\n                let quotes = 0;\n                for(let i = 0; i < result.length; ++i){\n                    let c = result[i];\n                    if (c === \"&\") {\n                        start = i;\n                    } else if (c === \"'\" || c === '\"') {\n                        quotes += 1;\n                    } else if (start !== null && c === \" \" && !quotes) {\n                        end = i;\n                    }\n                }\n                if (start !== null && end === null) {\n                    end = result.length;\n                }\n                // Basically this but can handle quotes:\n                // result.replace(/&(\\S+)?/g, (_, pseudo = '') => a + pseudo + b)\n                return result.slice(0, start) + a + result.slice(start + 1, end) + b + result.slice(end);\n            }, {\n                values: Object.fromEntries(pseudoVariants)\n            });\n        }\n    },\n    directionVariants: ({ addVariant  })=>{\n        addVariant(\"ltr\", ()=>{\n            _log.default.warn(\"rtl-experimental\", [\n                \"The RTL features in Tailwind CSS are currently in preview.\",\n                \"Preview features are not covered by semver, and may be improved in breaking ways at any time.\"\n            ]);\n            return '[dir=\"ltr\"] &';\n        });\n        addVariant(\"rtl\", ()=>{\n            _log.default.warn(\"rtl-experimental\", [\n                \"The RTL features in Tailwind CSS are currently in preview.\",\n                \"Preview features are not covered by semver, and may be improved in breaking ways at any time.\"\n            ]);\n            return '[dir=\"rtl\"] &';\n        });\n    },\n    reducedMotionVariants: ({ addVariant  })=>{\n        addVariant(\"motion-safe\", \"@media (prefers-reduced-motion: no-preference)\");\n        addVariant(\"motion-reduce\", \"@media (prefers-reduced-motion: reduce)\");\n    },\n    darkVariants: ({ config , addVariant  })=>{\n        let [mode, className = \".dark\"] = [].concat(config(\"darkMode\", \"media\"));\n        if (mode === false) {\n            mode = \"media\";\n            _log.default.warn(\"darkmode-false\", [\n                \"The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.\",\n                \"Change `darkMode` to `media` or remove it entirely.\",\n                \"https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration\"\n            ]);\n        }\n        if (mode === \"class\") {\n            addVariant(\"dark\", `${className} &`);\n        } else if (mode === \"media\") {\n            addVariant(\"dark\", \"@media (prefers-color-scheme: dark)\");\n        }\n    },\n    printVariant: ({ addVariant  })=>{\n        addVariant(\"print\", \"@media print\");\n    },\n    screenVariants: ({ theme , addVariant , matchVariant  })=>{\n        var _theme;\n        let rawScreens = (_theme = theme(\"screens\")) !== null && _theme !== void 0 ? _theme : {};\n        let areSimpleScreens = Object.values(rawScreens).every((v)=>typeof v === \"string\");\n        let screens = (0, _normalizeScreens.normalizeScreens)(theme(\"screens\"));\n        /** @type {Set<string>} */ let unitCache = new Set([]);\n        /** @param {string} value */ function units(value) {\n            var _value_match;\n            var _value_match_;\n            return (_value_match_ = (_value_match = value.match(/(\\D+)$/)) === null || _value_match === void 0 ? void 0 : _value_match[1]) !== null && _value_match_ !== void 0 ? _value_match_ : \"(none)\";\n        }\n        /** @param {string} value */ function recordUnits(value) {\n            if (value !== undefined) {\n                unitCache.add(units(value));\n            }\n        }\n        /** @param {string} value */ function canUseUnits(value) {\n            recordUnits(value);\n            // If the cache was empty it'll become 1 because we've just added the current unit\n            // If the cache was not empty and the units are the same the size doesn't change\n            // Otherwise, if the units are different from what is already known the size will always be > 1\n            return unitCache.size === 1;\n        }\n        for (const screen of screens){\n            for (const value of screen.values){\n                recordUnits(value.min);\n                recordUnits(value.max);\n            }\n        }\n        let screensUseConsistentUnits = unitCache.size <= 1;\n        /**\n     * @typedef {import('./util/normalizeScreens').Screen} Screen\n     */ /**\n     * @param {'min' | 'max'} type\n     * @returns {Record<string, Screen>}\n     */ function buildScreenValues(type) {\n            return Object.fromEntries(screens.filter((screen)=>(0, _normalizeScreens.isScreenSortable)(screen).result).map((screen)=>{\n                let { min , max  } = screen.values[0];\n                if (type === \"min\" && min !== undefined) {\n                    return screen;\n                } else if (type === \"min\" && max !== undefined) {\n                    return {\n                        ...screen,\n                        not: !screen.not\n                    };\n                } else if (type === \"max\" && max !== undefined) {\n                    return screen;\n                } else if (type === \"max\" && min !== undefined) {\n                    return {\n                        ...screen,\n                        not: !screen.not\n                    };\n                }\n            }).map((screen)=>[\n                    screen.name,\n                    screen\n                ]));\n        }\n        /**\n     * @param {'min' | 'max'} type\n     * @returns {(a: { value: string | Screen }, z: { value: string | Screen }) => number}\n     */ function buildSort(type) {\n            return (a, z)=>(0, _normalizeScreens.compareScreens)(type, a.value, z.value);\n        }\n        let maxSort = buildSort(\"max\");\n        let minSort = buildSort(\"min\");\n        /** @param {'min'|'max'} type */ function buildScreenVariant(type) {\n            return (value)=>{\n                if (!areSimpleScreens) {\n                    _log.default.warn(\"complex-screen-config\", [\n                        \"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing objects.\"\n                    ]);\n                    return [];\n                } else if (!screensUseConsistentUnits) {\n                    _log.default.warn(\"mixed-screen-units\", [\n                        \"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.\"\n                    ]);\n                    return [];\n                } else if (typeof value === \"string\" && !canUseUnits(value)) {\n                    _log.default.warn(\"minmax-have-mixed-units\", [\n                        \"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.\"\n                    ]);\n                    return [];\n                }\n                return [\n                    `@media ${(0, _buildMediaQuery.default)((0, _normalizeScreens.toScreen)(value, type))}`\n                ];\n            };\n        }\n        matchVariant(\"max\", buildScreenVariant(\"max\"), {\n            sort: maxSort,\n            values: areSimpleScreens ? buildScreenValues(\"max\") : {}\n        });\n        // screens and min-* are sorted together when they can be\n        let id = \"min-screens\";\n        for (let screen1 of screens){\n            addVariant(screen1.name, `@media ${(0, _buildMediaQuery.default)(screen1)}`, {\n                id,\n                sort: areSimpleScreens && screensUseConsistentUnits ? minSort : undefined,\n                value: screen1\n            });\n        }\n        matchVariant(\"min\", buildScreenVariant(\"min\"), {\n            id,\n            sort: minSort\n        });\n    },\n    supportsVariants: ({ matchVariant , theme  })=>{\n        var _theme;\n        matchVariant(\"supports\", (value = \"\")=>{\n            let check = (0, _dataTypes.normalize)(value);\n            let isRaw = /^\\w*\\s*\\(/.test(check);\n            // Chrome has a bug where `(condtion1)or(condition2)` is not valid\n            // But `(condition1) or (condition2)` is supported.\n            check = isRaw ? check.replace(/\\b(and|or|not)\\b/g, \" $1 \") : check;\n            if (isRaw) {\n                return `@supports ${check}`;\n            }\n            if (!check.includes(\":\")) {\n                check = `${check}: var(--tw)`;\n            }\n            if (!(check.startsWith(\"(\") && check.endsWith(\")\"))) {\n                check = `(${check})`;\n            }\n            return `@supports ${check}`;\n        }, {\n            values: (_theme = theme(\"supports\")) !== null && _theme !== void 0 ? _theme : {}\n        });\n    },\n    ariaVariants: ({ matchVariant , theme  })=>{\n        var _theme;\n        matchVariant(\"aria\", (value)=>`&[aria-${(0, _dataTypes.normalize)(value)}]`, {\n            values: (_theme = theme(\"aria\")) !== null && _theme !== void 0 ? _theme : {}\n        });\n        var _theme1;\n        matchVariant(\"group-aria\", (value, { modifier  })=>modifier ? `:merge(.group\\\\/${modifier})[aria-${(0, _dataTypes.normalize)(value)}] &` : `:merge(.group)[aria-${(0, _dataTypes.normalize)(value)}] &`, {\n            values: (_theme1 = theme(\"aria\")) !== null && _theme1 !== void 0 ? _theme1 : {}\n        });\n        var _theme2;\n        matchVariant(\"peer-aria\", (value, { modifier  })=>modifier ? `:merge(.peer\\\\/${modifier})[aria-${(0, _dataTypes.normalize)(value)}] ~ &` : `:merge(.peer)[aria-${(0, _dataTypes.normalize)(value)}] ~ &`, {\n            values: (_theme2 = theme(\"aria\")) !== null && _theme2 !== void 0 ? _theme2 : {}\n        });\n    },\n    dataVariants: ({ matchVariant , theme  })=>{\n        var _theme;\n        matchVariant(\"data\", (value)=>`&[data-${(0, _dataTypes.normalize)(value)}]`, {\n            values: (_theme = theme(\"data\")) !== null && _theme !== void 0 ? _theme : {}\n        });\n        var _theme1;\n        matchVariant(\"group-data\", (value, { modifier  })=>modifier ? `:merge(.group\\\\/${modifier})[data-${(0, _dataTypes.normalize)(value)}] &` : `:merge(.group)[data-${(0, _dataTypes.normalize)(value)}] &`, {\n            values: (_theme1 = theme(\"data\")) !== null && _theme1 !== void 0 ? _theme1 : {}\n        });\n        var _theme2;\n        matchVariant(\"peer-data\", (value, { modifier  })=>modifier ? `:merge(.peer\\\\/${modifier})[data-${(0, _dataTypes.normalize)(value)}] ~ &` : `:merge(.peer)[data-${(0, _dataTypes.normalize)(value)}] ~ &`, {\n            values: (_theme2 = theme(\"data\")) !== null && _theme2 !== void 0 ? _theme2 : {}\n        });\n    },\n    orientationVariants: ({ addVariant  })=>{\n        addVariant(\"portrait\", \"@media (orientation: portrait)\");\n        addVariant(\"landscape\", \"@media (orientation: landscape)\");\n    },\n    prefersContrastVariants: ({ addVariant  })=>{\n        addVariant(\"contrast-more\", \"@media (prefers-contrast: more)\");\n        addVariant(\"contrast-less\", \"@media (prefers-contrast: less)\");\n    }\n};\nlet cssTransformValue = [\n    \"translate(var(--tw-translate-x), var(--tw-translate-y))\",\n    \"rotate(var(--tw-rotate))\",\n    \"skewX(var(--tw-skew-x))\",\n    \"skewY(var(--tw-skew-y))\",\n    \"scaleX(var(--tw-scale-x))\",\n    \"scaleY(var(--tw-scale-y))\"\n].join(\" \");\nlet cssFilterValue = [\n    \"var(--tw-blur)\",\n    \"var(--tw-brightness)\",\n    \"var(--tw-contrast)\",\n    \"var(--tw-grayscale)\",\n    \"var(--tw-hue-rotate)\",\n    \"var(--tw-invert)\",\n    \"var(--tw-saturate)\",\n    \"var(--tw-sepia)\",\n    \"var(--tw-drop-shadow)\"\n].join(\" \");\nlet cssBackdropFilterValue = [\n    \"var(--tw-backdrop-blur)\",\n    \"var(--tw-backdrop-brightness)\",\n    \"var(--tw-backdrop-contrast)\",\n    \"var(--tw-backdrop-grayscale)\",\n    \"var(--tw-backdrop-hue-rotate)\",\n    \"var(--tw-backdrop-invert)\",\n    \"var(--tw-backdrop-opacity)\",\n    \"var(--tw-backdrop-saturate)\",\n    \"var(--tw-backdrop-sepia)\"\n].join(\" \");\nlet corePlugins = {\n    preflight: ({ addBase  })=>{\n        let preflightStyles = _postcss.default.parse(_fs.default.readFileSync(_path.join(__dirname, \"./css/preflight.css\"), \"utf8\"));\n        addBase([\n            _postcss.default.comment({\n                text: `! tailwindcss v${_packageJson.version} | MIT License | https://tailwindcss.com`\n            }),\n            ...preflightStyles.nodes\n        ]);\n    },\n    container: (()=>{\n        function extractMinWidths(breakpoints = []) {\n            return breakpoints.flatMap((breakpoint)=>breakpoint.values.map((breakpoint)=>breakpoint.min)).filter((v)=>v !== undefined);\n        }\n        function mapMinWidthsToPadding(minWidths, screens, paddings) {\n            if (typeof paddings === \"undefined\") {\n                return [];\n            }\n            if (!(typeof paddings === \"object\" && paddings !== null)) {\n                return [\n                    {\n                        screen: \"DEFAULT\",\n                        minWidth: 0,\n                        padding: paddings\n                    }\n                ];\n            }\n            let mapping = [];\n            if (paddings.DEFAULT) {\n                mapping.push({\n                    screen: \"DEFAULT\",\n                    minWidth: 0,\n                    padding: paddings.DEFAULT\n                });\n            }\n            for (let minWidth of minWidths){\n                for (let screen of screens){\n                    for (let { min  } of screen.values){\n                        if (min === minWidth) {\n                            mapping.push({\n                                minWidth,\n                                padding: paddings[screen.name]\n                            });\n                        }\n                    }\n                }\n            }\n            return mapping;\n        }\n        return function({ addComponents , theme  }) {\n            let screens = (0, _normalizeScreens.normalizeScreens)(theme(\"container.screens\", theme(\"screens\")));\n            let minWidths = extractMinWidths(screens);\n            let paddings = mapMinWidthsToPadding(minWidths, screens, theme(\"container.padding\"));\n            let generatePaddingFor = (minWidth)=>{\n                let paddingConfig = paddings.find((padding)=>padding.minWidth === minWidth);\n                if (!paddingConfig) {\n                    return {};\n                }\n                return {\n                    paddingRight: paddingConfig.padding,\n                    paddingLeft: paddingConfig.padding\n                };\n            };\n            let atRules = Array.from(new Set(minWidths.slice().sort((a, z)=>parseInt(a) - parseInt(z)))).map((minWidth)=>({\n                    [`@media (min-width: ${minWidth})`]: {\n                        \".container\": {\n                            \"max-width\": minWidth,\n                            ...generatePaddingFor(minWidth)\n                        }\n                    }\n                }));\n            addComponents([\n                {\n                    \".container\": Object.assign({\n                        width: \"100%\"\n                    }, theme(\"container.center\", false) ? {\n                        marginRight: \"auto\",\n                        marginLeft: \"auto\"\n                    } : {}, generatePaddingFor(0))\n                },\n                ...atRules\n            ]);\n        };\n    })(),\n    accessibility: ({ addUtilities  })=>{\n        addUtilities({\n            \".sr-only\": {\n                position: \"absolute\",\n                width: \"1px\",\n                height: \"1px\",\n                padding: \"0\",\n                margin: \"-1px\",\n                overflow: \"hidden\",\n                clip: \"rect(0, 0, 0, 0)\",\n                whiteSpace: \"nowrap\",\n                borderWidth: \"0\"\n            },\n            \".not-sr-only\": {\n                position: \"static\",\n                width: \"auto\",\n                height: \"auto\",\n                padding: \"0\",\n                margin: \"0\",\n                overflow: \"visible\",\n                clip: \"auto\",\n                whiteSpace: \"normal\"\n            }\n        });\n    },\n    pointerEvents: ({ addUtilities  })=>{\n        addUtilities({\n            \".pointer-events-none\": {\n                \"pointer-events\": \"none\"\n            },\n            \".pointer-events-auto\": {\n                \"pointer-events\": \"auto\"\n            }\n        });\n    },\n    visibility: ({ addUtilities  })=>{\n        addUtilities({\n            \".visible\": {\n                visibility: \"visible\"\n            },\n            \".invisible\": {\n                visibility: \"hidden\"\n            },\n            \".collapse\": {\n                visibility: \"collapse\"\n            }\n        });\n    },\n    position: ({ addUtilities  })=>{\n        addUtilities({\n            \".static\": {\n                position: \"static\"\n            },\n            \".fixed\": {\n                position: \"fixed\"\n            },\n            \".absolute\": {\n                position: \"absolute\"\n            },\n            \".relative\": {\n                position: \"relative\"\n            },\n            \".sticky\": {\n                position: \"sticky\"\n            }\n        });\n    },\n    inset: (0, _createUtilityPlugin.default)(\"inset\", [\n        [\n            \"inset\",\n            [\n                \"top\",\n                \"right\",\n                \"bottom\",\n                \"left\"\n            ]\n        ],\n        [\n            [\n                \"inset-x\",\n                [\n                    \"left\",\n                    \"right\"\n                ]\n            ],\n            [\n                \"inset-y\",\n                [\n                    \"top\",\n                    \"bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"top\",\n                [\n                    \"top\"\n                ]\n            ],\n            [\n                \"right\",\n                [\n                    \"right\"\n                ]\n            ],\n            [\n                \"bottom\",\n                [\n                    \"bottom\"\n                ]\n            ],\n            [\n                \"left\",\n                [\n                    \"left\"\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    isolation: ({ addUtilities  })=>{\n        addUtilities({\n            \".isolate\": {\n                isolation: \"isolate\"\n            },\n            \".isolation-auto\": {\n                isolation: \"auto\"\n            }\n        });\n    },\n    zIndex: (0, _createUtilityPlugin.default)(\"zIndex\", [\n        [\n            \"z\",\n            [\n                \"zIndex\"\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    order: (0, _createUtilityPlugin.default)(\"order\", undefined, {\n        supportsNegativeValues: true\n    }),\n    gridColumn: (0, _createUtilityPlugin.default)(\"gridColumn\", [\n        [\n            \"col\",\n            [\n                \"gridColumn\"\n            ]\n        ]\n    ]),\n    gridColumnStart: (0, _createUtilityPlugin.default)(\"gridColumnStart\", [\n        [\n            \"col-start\",\n            [\n                \"gridColumnStart\"\n            ]\n        ]\n    ]),\n    gridColumnEnd: (0, _createUtilityPlugin.default)(\"gridColumnEnd\", [\n        [\n            \"col-end\",\n            [\n                \"gridColumnEnd\"\n            ]\n        ]\n    ]),\n    gridRow: (0, _createUtilityPlugin.default)(\"gridRow\", [\n        [\n            \"row\",\n            [\n                \"gridRow\"\n            ]\n        ]\n    ]),\n    gridRowStart: (0, _createUtilityPlugin.default)(\"gridRowStart\", [\n        [\n            \"row-start\",\n            [\n                \"gridRowStart\"\n            ]\n        ]\n    ]),\n    gridRowEnd: (0, _createUtilityPlugin.default)(\"gridRowEnd\", [\n        [\n            \"row-end\",\n            [\n                \"gridRowEnd\"\n            ]\n        ]\n    ]),\n    float: ({ addUtilities  })=>{\n        addUtilities({\n            \".float-right\": {\n                float: \"right\"\n            },\n            \".float-left\": {\n                float: \"left\"\n            },\n            \".float-none\": {\n                float: \"none\"\n            }\n        });\n    },\n    clear: ({ addUtilities  })=>{\n        addUtilities({\n            \".clear-left\": {\n                clear: \"left\"\n            },\n            \".clear-right\": {\n                clear: \"right\"\n            },\n            \".clear-both\": {\n                clear: \"both\"\n            },\n            \".clear-none\": {\n                clear: \"none\"\n            }\n        });\n    },\n    margin: (0, _createUtilityPlugin.default)(\"margin\", [\n        [\n            \"m\",\n            [\n                \"margin\"\n            ]\n        ],\n        [\n            [\n                \"mx\",\n                [\n                    \"margin-left\",\n                    \"margin-right\"\n                ]\n            ],\n            [\n                \"my\",\n                [\n                    \"margin-top\",\n                    \"margin-bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"mt\",\n                [\n                    \"margin-top\"\n                ]\n            ],\n            [\n                \"mr\",\n                [\n                    \"margin-right\"\n                ]\n            ],\n            [\n                \"mb\",\n                [\n                    \"margin-bottom\"\n                ]\n            ],\n            [\n                \"ml\",\n                [\n                    \"margin-left\"\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    boxSizing: ({ addUtilities  })=>{\n        addUtilities({\n            \".box-border\": {\n                \"box-sizing\": \"border-box\"\n            },\n            \".box-content\": {\n                \"box-sizing\": \"content-box\"\n            }\n        });\n    },\n    display: ({ addUtilities  })=>{\n        addUtilities({\n            \".block\": {\n                display: \"block\"\n            },\n            \".inline-block\": {\n                display: \"inline-block\"\n            },\n            \".inline\": {\n                display: \"inline\"\n            },\n            \".flex\": {\n                display: \"flex\"\n            },\n            \".inline-flex\": {\n                display: \"inline-flex\"\n            },\n            \".table\": {\n                display: \"table\"\n            },\n            \".inline-table\": {\n                display: \"inline-table\"\n            },\n            \".table-caption\": {\n                display: \"table-caption\"\n            },\n            \".table-cell\": {\n                display: \"table-cell\"\n            },\n            \".table-column\": {\n                display: \"table-column\"\n            },\n            \".table-column-group\": {\n                display: \"table-column-group\"\n            },\n            \".table-footer-group\": {\n                display: \"table-footer-group\"\n            },\n            \".table-header-group\": {\n                display: \"table-header-group\"\n            },\n            \".table-row-group\": {\n                display: \"table-row-group\"\n            },\n            \".table-row\": {\n                display: \"table-row\"\n            },\n            \".flow-root\": {\n                display: \"flow-root\"\n            },\n            \".grid\": {\n                display: \"grid\"\n            },\n            \".inline-grid\": {\n                display: \"inline-grid\"\n            },\n            \".contents\": {\n                display: \"contents\"\n            },\n            \".list-item\": {\n                display: \"list-item\"\n            },\n            \".hidden\": {\n                display: \"none\"\n            }\n        });\n    },\n    aspectRatio: (0, _createUtilityPlugin.default)(\"aspectRatio\", [\n        [\n            \"aspect\",\n            [\n                \"aspect-ratio\"\n            ]\n        ]\n    ]),\n    height: (0, _createUtilityPlugin.default)(\"height\", [\n        [\n            \"h\",\n            [\n                \"height\"\n            ]\n        ]\n    ]),\n    maxHeight: (0, _createUtilityPlugin.default)(\"maxHeight\", [\n        [\n            \"max-h\",\n            [\n                \"maxHeight\"\n            ]\n        ]\n    ]),\n    minHeight: (0, _createUtilityPlugin.default)(\"minHeight\", [\n        [\n            \"min-h\",\n            [\n                \"minHeight\"\n            ]\n        ]\n    ]),\n    width: (0, _createUtilityPlugin.default)(\"width\", [\n        [\n            \"w\",\n            [\n                \"width\"\n            ]\n        ]\n    ]),\n    minWidth: (0, _createUtilityPlugin.default)(\"minWidth\", [\n        [\n            \"min-w\",\n            [\n                \"minWidth\"\n            ]\n        ]\n    ]),\n    maxWidth: (0, _createUtilityPlugin.default)(\"maxWidth\", [\n        [\n            \"max-w\",\n            [\n                \"maxWidth\"\n            ]\n        ]\n    ]),\n    flex: (0, _createUtilityPlugin.default)(\"flex\"),\n    flexShrink: (0, _createUtilityPlugin.default)(\"flexShrink\", [\n        [\n            \"flex-shrink\",\n            [\n                \"flex-shrink\"\n            ]\n        ],\n        [\n            \"shrink\",\n            [\n                \"flex-shrink\"\n            ]\n        ]\n    ]),\n    flexGrow: (0, _createUtilityPlugin.default)(\"flexGrow\", [\n        [\n            \"flex-grow\",\n            [\n                \"flex-grow\"\n            ]\n        ],\n        [\n            \"grow\",\n            [\n                \"flex-grow\"\n            ]\n        ]\n    ]),\n    flexBasis: (0, _createUtilityPlugin.default)(\"flexBasis\", [\n        [\n            \"basis\",\n            [\n                \"flex-basis\"\n            ]\n        ]\n    ]),\n    tableLayout: ({ addUtilities  })=>{\n        addUtilities({\n            \".table-auto\": {\n                \"table-layout\": \"auto\"\n            },\n            \".table-fixed\": {\n                \"table-layout\": \"fixed\"\n            }\n        });\n    },\n    borderCollapse: ({ addUtilities  })=>{\n        addUtilities({\n            \".border-collapse\": {\n                \"border-collapse\": \"collapse\"\n            },\n            \".border-separate\": {\n                \"border-collapse\": \"separate\"\n            }\n        });\n    },\n    borderSpacing: ({ addDefaults , matchUtilities , theme  })=>{\n        addDefaults(\"border-spacing\", {\n            \"--tw-border-spacing-x\": 0,\n            \"--tw-border-spacing-y\": 0\n        });\n        matchUtilities({\n            \"border-spacing\": (value)=>{\n                return {\n                    \"--tw-border-spacing-x\": value,\n                    \"--tw-border-spacing-y\": value,\n                    \"@defaults border-spacing\": {},\n                    \"border-spacing\": \"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"\n                };\n            },\n            \"border-spacing-x\": (value)=>{\n                return {\n                    \"--tw-border-spacing-x\": value,\n                    \"@defaults border-spacing\": {},\n                    \"border-spacing\": \"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"\n                };\n            },\n            \"border-spacing-y\": (value)=>{\n                return {\n                    \"--tw-border-spacing-y\": value,\n                    \"@defaults border-spacing\": {},\n                    \"border-spacing\": \"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"\n                };\n            }\n        }, {\n            values: theme(\"borderSpacing\")\n        });\n    },\n    transformOrigin: (0, _createUtilityPlugin.default)(\"transformOrigin\", [\n        [\n            \"origin\",\n            [\n                \"transformOrigin\"\n            ]\n        ]\n    ]),\n    translate: (0, _createUtilityPlugin.default)(\"translate\", [\n        [\n            [\n                \"translate-x\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-translate-x\",\n                    [\n                        \"transform\",\n                        cssTransformValue\n                    ]\n                ]\n            ],\n            [\n                \"translate-y\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-translate-y\",\n                    [\n                        \"transform\",\n                        cssTransformValue\n                    ]\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    rotate: (0, _createUtilityPlugin.default)(\"rotate\", [\n        [\n            \"rotate\",\n            [\n                [\n                    \"@defaults transform\",\n                    {}\n                ],\n                \"--tw-rotate\",\n                [\n                    \"transform\",\n                    cssTransformValue\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    skew: (0, _createUtilityPlugin.default)(\"skew\", [\n        [\n            [\n                \"skew-x\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-skew-x\",\n                    [\n                        \"transform\",\n                        cssTransformValue\n                    ]\n                ]\n            ],\n            [\n                \"skew-y\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-skew-y\",\n                    [\n                        \"transform\",\n                        cssTransformValue\n                    ]\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    scale: (0, _createUtilityPlugin.default)(\"scale\", [\n        [\n            \"scale\",\n            [\n                [\n                    \"@defaults transform\",\n                    {}\n                ],\n                \"--tw-scale-x\",\n                \"--tw-scale-y\",\n                [\n                    \"transform\",\n                    cssTransformValue\n                ]\n            ]\n        ],\n        [\n            [\n                \"scale-x\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-scale-x\",\n                    [\n                        \"transform\",\n                        cssTransformValue\n                    ]\n                ]\n            ],\n            [\n                \"scale-y\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-scale-y\",\n                    [\n                        \"transform\",\n                        cssTransformValue\n                    ]\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    transform: ({ addDefaults , addUtilities  })=>{\n        addDefaults(\"transform\", {\n            \"--tw-translate-x\": \"0\",\n            \"--tw-translate-y\": \"0\",\n            \"--tw-rotate\": \"0\",\n            \"--tw-skew-x\": \"0\",\n            \"--tw-skew-y\": \"0\",\n            \"--tw-scale-x\": \"1\",\n            \"--tw-scale-y\": \"1\"\n        });\n        addUtilities({\n            \".transform\": {\n                \"@defaults transform\": {},\n                transform: cssTransformValue\n            },\n            \".transform-cpu\": {\n                transform: cssTransformValue\n            },\n            \".transform-gpu\": {\n                transform: cssTransformValue.replace(\"translate(var(--tw-translate-x), var(--tw-translate-y))\", \"translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)\")\n            },\n            \".transform-none\": {\n                transform: \"none\"\n            }\n        });\n    },\n    animation: ({ matchUtilities , theme , config  })=>{\n        let prefixName = (name)=>`${config(\"prefix\")}${(0, _escapeClassName.default)(name)}`;\n        var _theme;\n        let keyframes = Object.fromEntries(Object.entries((_theme = theme(\"keyframes\")) !== null && _theme !== void 0 ? _theme : {}).map(([key, value])=>{\n            return [\n                key,\n                {\n                    [`@keyframes ${prefixName(key)}`]: value\n                }\n            ];\n        }));\n        matchUtilities({\n            animate: (value)=>{\n                let animations = (0, _parseAnimationValue.default)(value);\n                return [\n                    ...animations.flatMap((animation)=>keyframes[animation.name]),\n                    {\n                        animation: animations.map(({ name , value  })=>{\n                            if (name === undefined || keyframes[name] === undefined) {\n                                return value;\n                            }\n                            return value.replace(name, prefixName(name));\n                        }).join(\", \")\n                    }\n                ];\n            }\n        }, {\n            values: theme(\"animation\")\n        });\n    },\n    cursor: (0, _createUtilityPlugin.default)(\"cursor\"),\n    touchAction: ({ addDefaults , addUtilities  })=>{\n        addDefaults(\"touch-action\", {\n            \"--tw-pan-x\": \" \",\n            \"--tw-pan-y\": \" \",\n            \"--tw-pinch-zoom\": \" \"\n        });\n        let cssTouchActionValue = \"var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)\";\n        addUtilities({\n            \".touch-auto\": {\n                \"touch-action\": \"auto\"\n            },\n            \".touch-none\": {\n                \"touch-action\": \"none\"\n            },\n            \".touch-pan-x\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-x\": \"pan-x\",\n                \"touch-action\": cssTouchActionValue\n            },\n            \".touch-pan-left\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-x\": \"pan-left\",\n                \"touch-action\": cssTouchActionValue\n            },\n            \".touch-pan-right\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-x\": \"pan-right\",\n                \"touch-action\": cssTouchActionValue\n            },\n            \".touch-pan-y\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-y\": \"pan-y\",\n                \"touch-action\": cssTouchActionValue\n            },\n            \".touch-pan-up\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-y\": \"pan-up\",\n                \"touch-action\": cssTouchActionValue\n            },\n            \".touch-pan-down\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-y\": \"pan-down\",\n                \"touch-action\": cssTouchActionValue\n            },\n            \".touch-pinch-zoom\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pinch-zoom\": \"pinch-zoom\",\n                \"touch-action\": cssTouchActionValue\n            },\n            \".touch-manipulation\": {\n                \"touch-action\": \"manipulation\"\n            }\n        });\n    },\n    userSelect: ({ addUtilities  })=>{\n        addUtilities({\n            \".select-none\": {\n                \"user-select\": \"none\"\n            },\n            \".select-text\": {\n                \"user-select\": \"text\"\n            },\n            \".select-all\": {\n                \"user-select\": \"all\"\n            },\n            \".select-auto\": {\n                \"user-select\": \"auto\"\n            }\n        });\n    },\n    resize: ({ addUtilities  })=>{\n        addUtilities({\n            \".resize-none\": {\n                resize: \"none\"\n            },\n            \".resize-y\": {\n                resize: \"vertical\"\n            },\n            \".resize-x\": {\n                resize: \"horizontal\"\n            },\n            \".resize\": {\n                resize: \"both\"\n            }\n        });\n    },\n    scrollSnapType: ({ addDefaults , addUtilities  })=>{\n        addDefaults(\"scroll-snap-type\", {\n            \"--tw-scroll-snap-strictness\": \"proximity\"\n        });\n        addUtilities({\n            \".snap-none\": {\n                \"scroll-snap-type\": \"none\"\n            },\n            \".snap-x\": {\n                \"@defaults scroll-snap-type\": {},\n                \"scroll-snap-type\": \"x var(--tw-scroll-snap-strictness)\"\n            },\n            \".snap-y\": {\n                \"@defaults scroll-snap-type\": {},\n                \"scroll-snap-type\": \"y var(--tw-scroll-snap-strictness)\"\n            },\n            \".snap-both\": {\n                \"@defaults scroll-snap-type\": {},\n                \"scroll-snap-type\": \"both var(--tw-scroll-snap-strictness)\"\n            },\n            \".snap-mandatory\": {\n                \"--tw-scroll-snap-strictness\": \"mandatory\"\n            },\n            \".snap-proximity\": {\n                \"--tw-scroll-snap-strictness\": \"proximity\"\n            }\n        });\n    },\n    scrollSnapAlign: ({ addUtilities  })=>{\n        addUtilities({\n            \".snap-start\": {\n                \"scroll-snap-align\": \"start\"\n            },\n            \".snap-end\": {\n                \"scroll-snap-align\": \"end\"\n            },\n            \".snap-center\": {\n                \"scroll-snap-align\": \"center\"\n            },\n            \".snap-align-none\": {\n                \"scroll-snap-align\": \"none\"\n            }\n        });\n    },\n    scrollSnapStop: ({ addUtilities  })=>{\n        addUtilities({\n            \".snap-normal\": {\n                \"scroll-snap-stop\": \"normal\"\n            },\n            \".snap-always\": {\n                \"scroll-snap-stop\": \"always\"\n            }\n        });\n    },\n    scrollMargin: (0, _createUtilityPlugin.default)(\"scrollMargin\", [\n        [\n            \"scroll-m\",\n            [\n                \"scroll-margin\"\n            ]\n        ],\n        [\n            [\n                \"scroll-mx\",\n                [\n                    \"scroll-margin-left\",\n                    \"scroll-margin-right\"\n                ]\n            ],\n            [\n                \"scroll-my\",\n                [\n                    \"scroll-margin-top\",\n                    \"scroll-margin-bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"scroll-mt\",\n                [\n                    \"scroll-margin-top\"\n                ]\n            ],\n            [\n                \"scroll-mr\",\n                [\n                    \"scroll-margin-right\"\n                ]\n            ],\n            [\n                \"scroll-mb\",\n                [\n                    \"scroll-margin-bottom\"\n                ]\n            ],\n            [\n                \"scroll-ml\",\n                [\n                    \"scroll-margin-left\"\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    scrollPadding: (0, _createUtilityPlugin.default)(\"scrollPadding\", [\n        [\n            \"scroll-p\",\n            [\n                \"scroll-padding\"\n            ]\n        ],\n        [\n            [\n                \"scroll-px\",\n                [\n                    \"scroll-padding-left\",\n                    \"scroll-padding-right\"\n                ]\n            ],\n            [\n                \"scroll-py\",\n                [\n                    \"scroll-padding-top\",\n                    \"scroll-padding-bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"scroll-pt\",\n                [\n                    \"scroll-padding-top\"\n                ]\n            ],\n            [\n                \"scroll-pr\",\n                [\n                    \"scroll-padding-right\"\n                ]\n            ],\n            [\n                \"scroll-pb\",\n                [\n                    \"scroll-padding-bottom\"\n                ]\n            ],\n            [\n                \"scroll-pl\",\n                [\n                    \"scroll-padding-left\"\n                ]\n            ]\n        ]\n    ]),\n    listStylePosition: ({ addUtilities  })=>{\n        addUtilities({\n            \".list-inside\": {\n                \"list-style-position\": \"inside\"\n            },\n            \".list-outside\": {\n                \"list-style-position\": \"outside\"\n            }\n        });\n    },\n    listStyleType: (0, _createUtilityPlugin.default)(\"listStyleType\", [\n        [\n            \"list\",\n            [\n                \"listStyleType\"\n            ]\n        ]\n    ]),\n    appearance: ({ addUtilities  })=>{\n        addUtilities({\n            \".appearance-none\": {\n                appearance: \"none\"\n            }\n        });\n    },\n    columns: (0, _createUtilityPlugin.default)(\"columns\", [\n        [\n            \"columns\",\n            [\n                \"columns\"\n            ]\n        ]\n    ]),\n    breakBefore: ({ addUtilities  })=>{\n        addUtilities({\n            \".break-before-auto\": {\n                \"break-before\": \"auto\"\n            },\n            \".break-before-avoid\": {\n                \"break-before\": \"avoid\"\n            },\n            \".break-before-all\": {\n                \"break-before\": \"all\"\n            },\n            \".break-before-avoid-page\": {\n                \"break-before\": \"avoid-page\"\n            },\n            \".break-before-page\": {\n                \"break-before\": \"page\"\n            },\n            \".break-before-left\": {\n                \"break-before\": \"left\"\n            },\n            \".break-before-right\": {\n                \"break-before\": \"right\"\n            },\n            \".break-before-column\": {\n                \"break-before\": \"column\"\n            }\n        });\n    },\n    breakInside: ({ addUtilities  })=>{\n        addUtilities({\n            \".break-inside-auto\": {\n                \"break-inside\": \"auto\"\n            },\n            \".break-inside-avoid\": {\n                \"break-inside\": \"avoid\"\n            },\n            \".break-inside-avoid-page\": {\n                \"break-inside\": \"avoid-page\"\n            },\n            \".break-inside-avoid-column\": {\n                \"break-inside\": \"avoid-column\"\n            }\n        });\n    },\n    breakAfter: ({ addUtilities  })=>{\n        addUtilities({\n            \".break-after-auto\": {\n                \"break-after\": \"auto\"\n            },\n            \".break-after-avoid\": {\n                \"break-after\": \"avoid\"\n            },\n            \".break-after-all\": {\n                \"break-after\": \"all\"\n            },\n            \".break-after-avoid-page\": {\n                \"break-after\": \"avoid-page\"\n            },\n            \".break-after-page\": {\n                \"break-after\": \"page\"\n            },\n            \".break-after-left\": {\n                \"break-after\": \"left\"\n            },\n            \".break-after-right\": {\n                \"break-after\": \"right\"\n            },\n            \".break-after-column\": {\n                \"break-after\": \"column\"\n            }\n        });\n    },\n    gridAutoColumns: (0, _createUtilityPlugin.default)(\"gridAutoColumns\", [\n        [\n            \"auto-cols\",\n            [\n                \"gridAutoColumns\"\n            ]\n        ]\n    ]),\n    gridAutoFlow: ({ addUtilities  })=>{\n        addUtilities({\n            \".grid-flow-row\": {\n                gridAutoFlow: \"row\"\n            },\n            \".grid-flow-col\": {\n                gridAutoFlow: \"column\"\n            },\n            \".grid-flow-dense\": {\n                gridAutoFlow: \"dense\"\n            },\n            \".grid-flow-row-dense\": {\n                gridAutoFlow: \"row dense\"\n            },\n            \".grid-flow-col-dense\": {\n                gridAutoFlow: \"column dense\"\n            }\n        });\n    },\n    gridAutoRows: (0, _createUtilityPlugin.default)(\"gridAutoRows\", [\n        [\n            \"auto-rows\",\n            [\n                \"gridAutoRows\"\n            ]\n        ]\n    ]),\n    gridTemplateColumns: (0, _createUtilityPlugin.default)(\"gridTemplateColumns\", [\n        [\n            \"grid-cols\",\n            [\n                \"gridTemplateColumns\"\n            ]\n        ]\n    ]),\n    gridTemplateRows: (0, _createUtilityPlugin.default)(\"gridTemplateRows\", [\n        [\n            \"grid-rows\",\n            [\n                \"gridTemplateRows\"\n            ]\n        ]\n    ]),\n    flexDirection: ({ addUtilities  })=>{\n        addUtilities({\n            \".flex-row\": {\n                \"flex-direction\": \"row\"\n            },\n            \".flex-row-reverse\": {\n                \"flex-direction\": \"row-reverse\"\n            },\n            \".flex-col\": {\n                \"flex-direction\": \"column\"\n            },\n            \".flex-col-reverse\": {\n                \"flex-direction\": \"column-reverse\"\n            }\n        });\n    },\n    flexWrap: ({ addUtilities  })=>{\n        addUtilities({\n            \".flex-wrap\": {\n                \"flex-wrap\": \"wrap\"\n            },\n            \".flex-wrap-reverse\": {\n                \"flex-wrap\": \"wrap-reverse\"\n            },\n            \".flex-nowrap\": {\n                \"flex-wrap\": \"nowrap\"\n            }\n        });\n    },\n    placeContent: ({ addUtilities  })=>{\n        addUtilities({\n            \".place-content-center\": {\n                \"place-content\": \"center\"\n            },\n            \".place-content-start\": {\n                \"place-content\": \"start\"\n            },\n            \".place-content-end\": {\n                \"place-content\": \"end\"\n            },\n            \".place-content-between\": {\n                \"place-content\": \"space-between\"\n            },\n            \".place-content-around\": {\n                \"place-content\": \"space-around\"\n            },\n            \".place-content-evenly\": {\n                \"place-content\": \"space-evenly\"\n            },\n            \".place-content-baseline\": {\n                \"place-content\": \"baseline\"\n            },\n            \".place-content-stretch\": {\n                \"place-content\": \"stretch\"\n            }\n        });\n    },\n    placeItems: ({ addUtilities  })=>{\n        addUtilities({\n            \".place-items-start\": {\n                \"place-items\": \"start\"\n            },\n            \".place-items-end\": {\n                \"place-items\": \"end\"\n            },\n            \".place-items-center\": {\n                \"place-items\": \"center\"\n            },\n            \".place-items-baseline\": {\n                \"place-items\": \"baseline\"\n            },\n            \".place-items-stretch\": {\n                \"place-items\": \"stretch\"\n            }\n        });\n    },\n    alignContent: ({ addUtilities  })=>{\n        addUtilities({\n            \".content-center\": {\n                \"align-content\": \"center\"\n            },\n            \".content-start\": {\n                \"align-content\": \"flex-start\"\n            },\n            \".content-end\": {\n                \"align-content\": \"flex-end\"\n            },\n            \".content-between\": {\n                \"align-content\": \"space-between\"\n            },\n            \".content-around\": {\n                \"align-content\": \"space-around\"\n            },\n            \".content-evenly\": {\n                \"align-content\": \"space-evenly\"\n            },\n            \".content-baseline\": {\n                \"align-content\": \"baseline\"\n            }\n        });\n    },\n    alignItems: ({ addUtilities  })=>{\n        addUtilities({\n            \".items-start\": {\n                \"align-items\": \"flex-start\"\n            },\n            \".items-end\": {\n                \"align-items\": \"flex-end\"\n            },\n            \".items-center\": {\n                \"align-items\": \"center\"\n            },\n            \".items-baseline\": {\n                \"align-items\": \"baseline\"\n            },\n            \".items-stretch\": {\n                \"align-items\": \"stretch\"\n            }\n        });\n    },\n    justifyContent: ({ addUtilities  })=>{\n        addUtilities({\n            \".justify-start\": {\n                \"justify-content\": \"flex-start\"\n            },\n            \".justify-end\": {\n                \"justify-content\": \"flex-end\"\n            },\n            \".justify-center\": {\n                \"justify-content\": \"center\"\n            },\n            \".justify-between\": {\n                \"justify-content\": \"space-between\"\n            },\n            \".justify-around\": {\n                \"justify-content\": \"space-around\"\n            },\n            \".justify-evenly\": {\n                \"justify-content\": \"space-evenly\"\n            }\n        });\n    },\n    justifyItems: ({ addUtilities  })=>{\n        addUtilities({\n            \".justify-items-start\": {\n                \"justify-items\": \"start\"\n            },\n            \".justify-items-end\": {\n                \"justify-items\": \"end\"\n            },\n            \".justify-items-center\": {\n                \"justify-items\": \"center\"\n            },\n            \".justify-items-stretch\": {\n                \"justify-items\": \"stretch\"\n            }\n        });\n    },\n    gap: (0, _createUtilityPlugin.default)(\"gap\", [\n        [\n            \"gap\",\n            [\n                \"gap\"\n            ]\n        ],\n        [\n            [\n                \"gap-x\",\n                [\n                    \"columnGap\"\n                ]\n            ],\n            [\n                \"gap-y\",\n                [\n                    \"rowGap\"\n                ]\n            ]\n        ]\n    ]),\n    space: ({ matchUtilities , addUtilities , theme  })=>{\n        matchUtilities({\n            \"space-x\": (value)=>{\n                value = value === \"0\" ? \"0px\" : value;\n                return {\n                    \"& > :not([hidden]) ~ :not([hidden])\": {\n                        \"--tw-space-x-reverse\": \"0\",\n                        \"margin-right\": `calc(${value} * var(--tw-space-x-reverse))`,\n                        \"margin-left\": `calc(${value} * calc(1 - var(--tw-space-x-reverse)))`\n                    }\n                };\n            },\n            \"space-y\": (value)=>{\n                value = value === \"0\" ? \"0px\" : value;\n                return {\n                    \"& > :not([hidden]) ~ :not([hidden])\": {\n                        \"--tw-space-y-reverse\": \"0\",\n                        \"margin-top\": `calc(${value} * calc(1 - var(--tw-space-y-reverse)))`,\n                        \"margin-bottom\": `calc(${value} * var(--tw-space-y-reverse))`\n                    }\n                };\n            }\n        }, {\n            values: theme(\"space\"),\n            supportsNegativeValues: true\n        });\n        addUtilities({\n            \".space-y-reverse > :not([hidden]) ~ :not([hidden])\": {\n                \"--tw-space-y-reverse\": \"1\"\n            },\n            \".space-x-reverse > :not([hidden]) ~ :not([hidden])\": {\n                \"--tw-space-x-reverse\": \"1\"\n            }\n        });\n    },\n    divideWidth: ({ matchUtilities , addUtilities , theme  })=>{\n        matchUtilities({\n            \"divide-x\": (value)=>{\n                value = value === \"0\" ? \"0px\" : value;\n                return {\n                    \"& > :not([hidden]) ~ :not([hidden])\": {\n                        \"@defaults border-width\": {},\n                        \"--tw-divide-x-reverse\": \"0\",\n                        \"border-right-width\": `calc(${value} * var(--tw-divide-x-reverse))`,\n                        \"border-left-width\": `calc(${value} * calc(1 - var(--tw-divide-x-reverse)))`\n                    }\n                };\n            },\n            \"divide-y\": (value)=>{\n                value = value === \"0\" ? \"0px\" : value;\n                return {\n                    \"& > :not([hidden]) ~ :not([hidden])\": {\n                        \"@defaults border-width\": {},\n                        \"--tw-divide-y-reverse\": \"0\",\n                        \"border-top-width\": `calc(${value} * calc(1 - var(--tw-divide-y-reverse)))`,\n                        \"border-bottom-width\": `calc(${value} * var(--tw-divide-y-reverse))`\n                    }\n                };\n            }\n        }, {\n            values: theme(\"divideWidth\"),\n            type: [\n                \"line-width\",\n                \"length\",\n                \"any\"\n            ]\n        });\n        addUtilities({\n            \".divide-y-reverse > :not([hidden]) ~ :not([hidden])\": {\n                \"@defaults border-width\": {},\n                \"--tw-divide-y-reverse\": \"1\"\n            },\n            \".divide-x-reverse > :not([hidden]) ~ :not([hidden])\": {\n                \"@defaults border-width\": {},\n                \"--tw-divide-x-reverse\": \"1\"\n            }\n        });\n    },\n    divideStyle: ({ addUtilities  })=>{\n        addUtilities({\n            \".divide-solid > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"solid\"\n            },\n            \".divide-dashed > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"dashed\"\n            },\n            \".divide-dotted > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"dotted\"\n            },\n            \".divide-double > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"double\"\n            },\n            \".divide-none > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"none\"\n            }\n        });\n    },\n    divideColor: ({ matchUtilities , theme , corePlugins  })=>{\n        matchUtilities({\n            divide: (value)=>{\n                if (!corePlugins(\"divideOpacity\")) {\n                    return {\n                        [\"& > :not([hidden]) ~ :not([hidden])\"]: {\n                            \"border-color\": (0, _toColorValue.default)(value)\n                        }\n                    };\n                }\n                return {\n                    [\"& > :not([hidden]) ~ :not([hidden])\"]: (0, _withAlphaVariable.default)({\n                        color: value,\n                        property: \"border-color\",\n                        variable: \"--tw-divide-opacity\"\n                    })\n                };\n            }\n        }, {\n            values: (({ DEFAULT: _ , ...colors })=>colors)((0, _flattenColorPalette.default)(theme(\"divideColor\"))),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    divideOpacity: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"divide-opacity\": (value)=>{\n                return {\n                    [`& > :not([hidden]) ~ :not([hidden])`]: {\n                        \"--tw-divide-opacity\": value\n                    }\n                };\n            }\n        }, {\n            values: theme(\"divideOpacity\")\n        });\n    },\n    placeSelf: ({ addUtilities  })=>{\n        addUtilities({\n            \".place-self-auto\": {\n                \"place-self\": \"auto\"\n            },\n            \".place-self-start\": {\n                \"place-self\": \"start\"\n            },\n            \".place-self-end\": {\n                \"place-self\": \"end\"\n            },\n            \".place-self-center\": {\n                \"place-self\": \"center\"\n            },\n            \".place-self-stretch\": {\n                \"place-self\": \"stretch\"\n            }\n        });\n    },\n    alignSelf: ({ addUtilities  })=>{\n        addUtilities({\n            \".self-auto\": {\n                \"align-self\": \"auto\"\n            },\n            \".self-start\": {\n                \"align-self\": \"flex-start\"\n            },\n            \".self-end\": {\n                \"align-self\": \"flex-end\"\n            },\n            \".self-center\": {\n                \"align-self\": \"center\"\n            },\n            \".self-stretch\": {\n                \"align-self\": \"stretch\"\n            },\n            \".self-baseline\": {\n                \"align-self\": \"baseline\"\n            }\n        });\n    },\n    justifySelf: ({ addUtilities  })=>{\n        addUtilities({\n            \".justify-self-auto\": {\n                \"justify-self\": \"auto\"\n            },\n            \".justify-self-start\": {\n                \"justify-self\": \"start\"\n            },\n            \".justify-self-end\": {\n                \"justify-self\": \"end\"\n            },\n            \".justify-self-center\": {\n                \"justify-self\": \"center\"\n            },\n            \".justify-self-stretch\": {\n                \"justify-self\": \"stretch\"\n            }\n        });\n    },\n    overflow: ({ addUtilities  })=>{\n        addUtilities({\n            \".overflow-auto\": {\n                overflow: \"auto\"\n            },\n            \".overflow-hidden\": {\n                overflow: \"hidden\"\n            },\n            \".overflow-clip\": {\n                overflow: \"clip\"\n            },\n            \".overflow-visible\": {\n                overflow: \"visible\"\n            },\n            \".overflow-scroll\": {\n                overflow: \"scroll\"\n            },\n            \".overflow-x-auto\": {\n                \"overflow-x\": \"auto\"\n            },\n            \".overflow-y-auto\": {\n                \"overflow-y\": \"auto\"\n            },\n            \".overflow-x-hidden\": {\n                \"overflow-x\": \"hidden\"\n            },\n            \".overflow-y-hidden\": {\n                \"overflow-y\": \"hidden\"\n            },\n            \".overflow-x-clip\": {\n                \"overflow-x\": \"clip\"\n            },\n            \".overflow-y-clip\": {\n                \"overflow-y\": \"clip\"\n            },\n            \".overflow-x-visible\": {\n                \"overflow-x\": \"visible\"\n            },\n            \".overflow-y-visible\": {\n                \"overflow-y\": \"visible\"\n            },\n            \".overflow-x-scroll\": {\n                \"overflow-x\": \"scroll\"\n            },\n            \".overflow-y-scroll\": {\n                \"overflow-y\": \"scroll\"\n            }\n        });\n    },\n    overscrollBehavior: ({ addUtilities  })=>{\n        addUtilities({\n            \".overscroll-auto\": {\n                \"overscroll-behavior\": \"auto\"\n            },\n            \".overscroll-contain\": {\n                \"overscroll-behavior\": \"contain\"\n            },\n            \".overscroll-none\": {\n                \"overscroll-behavior\": \"none\"\n            },\n            \".overscroll-y-auto\": {\n                \"overscroll-behavior-y\": \"auto\"\n            },\n            \".overscroll-y-contain\": {\n                \"overscroll-behavior-y\": \"contain\"\n            },\n            \".overscroll-y-none\": {\n                \"overscroll-behavior-y\": \"none\"\n            },\n            \".overscroll-x-auto\": {\n                \"overscroll-behavior-x\": \"auto\"\n            },\n            \".overscroll-x-contain\": {\n                \"overscroll-behavior-x\": \"contain\"\n            },\n            \".overscroll-x-none\": {\n                \"overscroll-behavior-x\": \"none\"\n            }\n        });\n    },\n    scrollBehavior: ({ addUtilities  })=>{\n        addUtilities({\n            \".scroll-auto\": {\n                \"scroll-behavior\": \"auto\"\n            },\n            \".scroll-smooth\": {\n                \"scroll-behavior\": \"smooth\"\n            }\n        });\n    },\n    textOverflow: ({ addUtilities  })=>{\n        addUtilities({\n            \".truncate\": {\n                overflow: \"hidden\",\n                \"text-overflow\": \"ellipsis\",\n                \"white-space\": \"nowrap\"\n            },\n            \".overflow-ellipsis\": {\n                \"text-overflow\": \"ellipsis\"\n            },\n            \".text-ellipsis\": {\n                \"text-overflow\": \"ellipsis\"\n            },\n            \".text-clip\": {\n                \"text-overflow\": \"clip\"\n            }\n        });\n    },\n    whitespace: ({ addUtilities  })=>{\n        addUtilities({\n            \".whitespace-normal\": {\n                \"white-space\": \"normal\"\n            },\n            \".whitespace-nowrap\": {\n                \"white-space\": \"nowrap\"\n            },\n            \".whitespace-pre\": {\n                \"white-space\": \"pre\"\n            },\n            \".whitespace-pre-line\": {\n                \"white-space\": \"pre-line\"\n            },\n            \".whitespace-pre-wrap\": {\n                \"white-space\": \"pre-wrap\"\n            }\n        });\n    },\n    wordBreak: ({ addUtilities  })=>{\n        addUtilities({\n            \".break-normal\": {\n                \"overflow-wrap\": \"normal\",\n                \"word-break\": \"normal\"\n            },\n            \".break-words\": {\n                \"overflow-wrap\": \"break-word\"\n            },\n            \".break-all\": {\n                \"word-break\": \"break-all\"\n            },\n            \".break-keep\": {\n                \"word-break\": \"keep-all\"\n            }\n        });\n    },\n    borderRadius: (0, _createUtilityPlugin.default)(\"borderRadius\", [\n        [\n            \"rounded\",\n            [\n                \"border-radius\"\n            ]\n        ],\n        [\n            [\n                \"rounded-t\",\n                [\n                    \"border-top-left-radius\",\n                    \"border-top-right-radius\"\n                ]\n            ],\n            [\n                \"rounded-r\",\n                [\n                    \"border-top-right-radius\",\n                    \"border-bottom-right-radius\"\n                ]\n            ],\n            [\n                \"rounded-b\",\n                [\n                    \"border-bottom-right-radius\",\n                    \"border-bottom-left-radius\"\n                ]\n            ],\n            [\n                \"rounded-l\",\n                [\n                    \"border-top-left-radius\",\n                    \"border-bottom-left-radius\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"rounded-tl\",\n                [\n                    \"border-top-left-radius\"\n                ]\n            ],\n            [\n                \"rounded-tr\",\n                [\n                    \"border-top-right-radius\"\n                ]\n            ],\n            [\n                \"rounded-br\",\n                [\n                    \"border-bottom-right-radius\"\n                ]\n            ],\n            [\n                \"rounded-bl\",\n                [\n                    \"border-bottom-left-radius\"\n                ]\n            ]\n        ]\n    ]),\n    borderWidth: (0, _createUtilityPlugin.default)(\"borderWidth\", [\n        [\n            \"border\",\n            [\n                [\n                    \"@defaults border-width\",\n                    {}\n                ],\n                \"border-width\"\n            ]\n        ],\n        [\n            [\n                \"border-x\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-left-width\",\n                    \"border-right-width\"\n                ]\n            ],\n            [\n                \"border-y\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-top-width\",\n                    \"border-bottom-width\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"border-t\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-top-width\"\n                ]\n            ],\n            [\n                \"border-r\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-right-width\"\n                ]\n            ],\n            [\n                \"border-b\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-bottom-width\"\n                ]\n            ],\n            [\n                \"border-l\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-left-width\"\n                ]\n            ]\n        ]\n    ], {\n        type: [\n            \"line-width\",\n            \"length\"\n        ]\n    }),\n    borderStyle: ({ addUtilities  })=>{\n        addUtilities({\n            \".border-solid\": {\n                \"border-style\": \"solid\"\n            },\n            \".border-dashed\": {\n                \"border-style\": \"dashed\"\n            },\n            \".border-dotted\": {\n                \"border-style\": \"dotted\"\n            },\n            \".border-double\": {\n                \"border-style\": \"double\"\n            },\n            \".border-hidden\": {\n                \"border-style\": \"hidden\"\n            },\n            \".border-none\": {\n                \"border-style\": \"none\"\n            }\n        });\n    },\n    borderColor: ({ matchUtilities , theme , corePlugins  })=>{\n        matchUtilities({\n            border: (value)=>{\n                if (!corePlugins(\"borderOpacity\")) {\n                    return {\n                        \"border-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: \"border-color\",\n                    variable: \"--tw-border-opacity\"\n                });\n            }\n        }, {\n            values: (({ DEFAULT: _ , ...colors })=>colors)((0, _flattenColorPalette.default)(theme(\"borderColor\"))),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n        matchUtilities({\n            \"border-x\": (value)=>{\n                if (!corePlugins(\"borderOpacity\")) {\n                    return {\n                        \"border-left-color\": (0, _toColorValue.default)(value),\n                        \"border-right-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: [\n                        \"border-left-color\",\n                        \"border-right-color\"\n                    ],\n                    variable: \"--tw-border-opacity\"\n                });\n            },\n            \"border-y\": (value)=>{\n                if (!corePlugins(\"borderOpacity\")) {\n                    return {\n                        \"border-top-color\": (0, _toColorValue.default)(value),\n                        \"border-bottom-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: [\n                        \"border-top-color\",\n                        \"border-bottom-color\"\n                    ],\n                    variable: \"--tw-border-opacity\"\n                });\n            }\n        }, {\n            values: (({ DEFAULT: _ , ...colors })=>colors)((0, _flattenColorPalette.default)(theme(\"borderColor\"))),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n        matchUtilities({\n            \"border-t\": (value)=>{\n                if (!corePlugins(\"borderOpacity\")) {\n                    return {\n                        \"border-top-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: \"border-top-color\",\n                    variable: \"--tw-border-opacity\"\n                });\n            },\n            \"border-r\": (value)=>{\n                if (!corePlugins(\"borderOpacity\")) {\n                    return {\n                        \"border-right-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: \"border-right-color\",\n                    variable: \"--tw-border-opacity\"\n                });\n            },\n            \"border-b\": (value)=>{\n                if (!corePlugins(\"borderOpacity\")) {\n                    return {\n                        \"border-bottom-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: \"border-bottom-color\",\n                    variable: \"--tw-border-opacity\"\n                });\n            },\n            \"border-l\": (value)=>{\n                if (!corePlugins(\"borderOpacity\")) {\n                    return {\n                        \"border-left-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: \"border-left-color\",\n                    variable: \"--tw-border-opacity\"\n                });\n            }\n        }, {\n            values: (({ DEFAULT: _ , ...colors })=>colors)((0, _flattenColorPalette.default)(theme(\"borderColor\"))),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    borderOpacity: (0, _createUtilityPlugin.default)(\"borderOpacity\", [\n        [\n            \"border-opacity\",\n            [\n                \"--tw-border-opacity\"\n            ]\n        ]\n    ]),\n    backgroundColor: ({ matchUtilities , theme , corePlugins  })=>{\n        matchUtilities({\n            bg: (value)=>{\n                if (!corePlugins(\"backgroundOpacity\")) {\n                    return {\n                        \"background-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: \"background-color\",\n                    variable: \"--tw-bg-opacity\"\n                });\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"backgroundColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    backgroundOpacity: (0, _createUtilityPlugin.default)(\"backgroundOpacity\", [\n        [\n            \"bg-opacity\",\n            [\n                \"--tw-bg-opacity\"\n            ]\n        ]\n    ]),\n    backgroundImage: (0, _createUtilityPlugin.default)(\"backgroundImage\", [\n        [\n            \"bg\",\n            [\n                \"background-image\"\n            ]\n        ]\n    ], {\n        type: [\n            \"lookup\",\n            \"image\",\n            \"url\"\n        ]\n    }),\n    gradientColorStops: (()=>{\n        function transparentTo(value) {\n            return (0, _withAlphaVariable.withAlphaValue)(value, 0, \"rgb(255 255 255 / 0)\");\n        }\n        return function({ matchUtilities , theme  }) {\n            let options = {\n                values: (0, _flattenColorPalette.default)(theme(\"gradientColorStops\")),\n                type: [\n                    \"color\",\n                    \"any\"\n                ]\n            };\n            matchUtilities({\n                from: (value)=>{\n                    let transparentToValue = transparentTo(value);\n                    return {\n                        \"--tw-gradient-from\": (0, _toColorValue.default)(value, \"from\"),\n                        \"--tw-gradient-to\": transparentToValue,\n                        \"--tw-gradient-stops\": `var(--tw-gradient-from), var(--tw-gradient-to)`\n                    };\n                }\n            }, options);\n            matchUtilities({\n                via: (value)=>{\n                    let transparentToValue = transparentTo(value);\n                    return {\n                        \"--tw-gradient-to\": transparentToValue,\n                        \"--tw-gradient-stops\": `var(--tw-gradient-from), ${(0, _toColorValue.default)(value, \"via\")}, var(--tw-gradient-to)`\n                    };\n                }\n            }, options);\n            matchUtilities({\n                to: (value)=>({\n                        \"--tw-gradient-to\": (0, _toColorValue.default)(value, \"to\")\n                    })\n            }, options);\n        };\n    })(),\n    boxDecorationBreak: ({ addUtilities  })=>{\n        addUtilities({\n            \".decoration-slice\": {\n                \"box-decoration-break\": \"slice\"\n            },\n            \".decoration-clone\": {\n                \"box-decoration-break\": \"clone\"\n            },\n            \".box-decoration-slice\": {\n                \"box-decoration-break\": \"slice\"\n            },\n            \".box-decoration-clone\": {\n                \"box-decoration-break\": \"clone\"\n            }\n        });\n    },\n    backgroundSize: (0, _createUtilityPlugin.default)(\"backgroundSize\", [\n        [\n            \"bg\",\n            [\n                \"background-size\"\n            ]\n        ]\n    ], {\n        type: [\n            \"lookup\",\n            \"length\",\n            \"percentage\",\n            \"size\"\n        ]\n    }),\n    backgroundAttachment: ({ addUtilities  })=>{\n        addUtilities({\n            \".bg-fixed\": {\n                \"background-attachment\": \"fixed\"\n            },\n            \".bg-local\": {\n                \"background-attachment\": \"local\"\n            },\n            \".bg-scroll\": {\n                \"background-attachment\": \"scroll\"\n            }\n        });\n    },\n    backgroundClip: ({ addUtilities  })=>{\n        addUtilities({\n            \".bg-clip-border\": {\n                \"background-clip\": \"border-box\"\n            },\n            \".bg-clip-padding\": {\n                \"background-clip\": \"padding-box\"\n            },\n            \".bg-clip-content\": {\n                \"background-clip\": \"content-box\"\n            },\n            \".bg-clip-text\": {\n                \"background-clip\": \"text\"\n            }\n        });\n    },\n    backgroundPosition: (0, _createUtilityPlugin.default)(\"backgroundPosition\", [\n        [\n            \"bg\",\n            [\n                \"background-position\"\n            ]\n        ]\n    ], {\n        type: [\n            \"lookup\",\n            [\n                \"position\",\n                {\n                    preferOnConflict: true\n                }\n            ]\n        ]\n    }),\n    backgroundRepeat: ({ addUtilities  })=>{\n        addUtilities({\n            \".bg-repeat\": {\n                \"background-repeat\": \"repeat\"\n            },\n            \".bg-no-repeat\": {\n                \"background-repeat\": \"no-repeat\"\n            },\n            \".bg-repeat-x\": {\n                \"background-repeat\": \"repeat-x\"\n            },\n            \".bg-repeat-y\": {\n                \"background-repeat\": \"repeat-y\"\n            },\n            \".bg-repeat-round\": {\n                \"background-repeat\": \"round\"\n            },\n            \".bg-repeat-space\": {\n                \"background-repeat\": \"space\"\n            }\n        });\n    },\n    backgroundOrigin: ({ addUtilities  })=>{\n        addUtilities({\n            \".bg-origin-border\": {\n                \"background-origin\": \"border-box\"\n            },\n            \".bg-origin-padding\": {\n                \"background-origin\": \"padding-box\"\n            },\n            \".bg-origin-content\": {\n                \"background-origin\": \"content-box\"\n            }\n        });\n    },\n    fill: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            fill: (value)=>{\n                return {\n                    fill: (0, _toColorValue.default)(value)\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"fill\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    stroke: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            stroke: (value)=>{\n                return {\n                    stroke: (0, _toColorValue.default)(value)\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"stroke\")),\n            type: [\n                \"color\",\n                \"url\",\n                \"any\"\n            ]\n        });\n    },\n    strokeWidth: (0, _createUtilityPlugin.default)(\"strokeWidth\", [\n        [\n            \"stroke\",\n            [\n                \"stroke-width\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"number\",\n            \"percentage\"\n        ]\n    }),\n    objectFit: ({ addUtilities  })=>{\n        addUtilities({\n            \".object-contain\": {\n                \"object-fit\": \"contain\"\n            },\n            \".object-cover\": {\n                \"object-fit\": \"cover\"\n            },\n            \".object-fill\": {\n                \"object-fit\": \"fill\"\n            },\n            \".object-none\": {\n                \"object-fit\": \"none\"\n            },\n            \".object-scale-down\": {\n                \"object-fit\": \"scale-down\"\n            }\n        });\n    },\n    objectPosition: (0, _createUtilityPlugin.default)(\"objectPosition\", [\n        [\n            \"object\",\n            [\n                \"object-position\"\n            ]\n        ]\n    ]),\n    padding: (0, _createUtilityPlugin.default)(\"padding\", [\n        [\n            \"p\",\n            [\n                \"padding\"\n            ]\n        ],\n        [\n            [\n                \"px\",\n                [\n                    \"padding-left\",\n                    \"padding-right\"\n                ]\n            ],\n            [\n                \"py\",\n                [\n                    \"padding-top\",\n                    \"padding-bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"pt\",\n                [\n                    \"padding-top\"\n                ]\n            ],\n            [\n                \"pr\",\n                [\n                    \"padding-right\"\n                ]\n            ],\n            [\n                \"pb\",\n                [\n                    \"padding-bottom\"\n                ]\n            ],\n            [\n                \"pl\",\n                [\n                    \"padding-left\"\n                ]\n            ]\n        ]\n    ]),\n    textAlign: ({ addUtilities  })=>{\n        addUtilities({\n            \".text-left\": {\n                \"text-align\": \"left\"\n            },\n            \".text-center\": {\n                \"text-align\": \"center\"\n            },\n            \".text-right\": {\n                \"text-align\": \"right\"\n            },\n            \".text-justify\": {\n                \"text-align\": \"justify\"\n            },\n            \".text-start\": {\n                \"text-align\": \"start\"\n            },\n            \".text-end\": {\n                \"text-align\": \"end\"\n            }\n        });\n    },\n    textIndent: (0, _createUtilityPlugin.default)(\"textIndent\", [\n        [\n            \"indent\",\n            [\n                \"text-indent\"\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    verticalAlign: ({ addUtilities , matchUtilities  })=>{\n        addUtilities({\n            \".align-baseline\": {\n                \"vertical-align\": \"baseline\"\n            },\n            \".align-top\": {\n                \"vertical-align\": \"top\"\n            },\n            \".align-middle\": {\n                \"vertical-align\": \"middle\"\n            },\n            \".align-bottom\": {\n                \"vertical-align\": \"bottom\"\n            },\n            \".align-text-top\": {\n                \"vertical-align\": \"text-top\"\n            },\n            \".align-text-bottom\": {\n                \"vertical-align\": \"text-bottom\"\n            },\n            \".align-sub\": {\n                \"vertical-align\": \"sub\"\n            },\n            \".align-super\": {\n                \"vertical-align\": \"super\"\n            }\n        });\n        matchUtilities({\n            align: (value)=>({\n                    \"vertical-align\": value\n                })\n        });\n    },\n    fontFamily: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            font: (value)=>{\n                let [families, options = {}] = Array.isArray(value) && (0, _isPlainObject.default)(value[1]) ? value : [\n                    value\n                ];\n                let { fontFeatureSettings  } = options;\n                return {\n                    \"font-family\": Array.isArray(families) ? families.join(\", \") : families,\n                    ...fontFeatureSettings === undefined ? {} : {\n                        \"font-feature-settings\": fontFeatureSettings\n                    }\n                };\n            }\n        }, {\n            values: theme(\"fontFamily\"),\n            type: [\n                \"lookup\",\n                \"generic-name\",\n                \"family-name\"\n            ]\n        });\n    },\n    fontSize: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            text: (value)=>{\n                let [fontSize, options] = Array.isArray(value) ? value : [\n                    value\n                ];\n                let { lineHeight , letterSpacing , fontWeight  } = (0, _isPlainObject.default)(options) ? options : {\n                    lineHeight: options\n                };\n                return {\n                    \"font-size\": fontSize,\n                    ...lineHeight === undefined ? {} : {\n                        \"line-height\": lineHeight\n                    },\n                    ...letterSpacing === undefined ? {} : {\n                        \"letter-spacing\": letterSpacing\n                    },\n                    ...fontWeight === undefined ? {} : {\n                        \"font-weight\": fontWeight\n                    }\n                };\n            }\n        }, {\n            values: theme(\"fontSize\"),\n            type: [\n                \"absolute-size\",\n                \"relative-size\",\n                \"length\",\n                \"percentage\"\n            ]\n        });\n    },\n    fontWeight: (0, _createUtilityPlugin.default)(\"fontWeight\", [\n        [\n            \"font\",\n            [\n                \"fontWeight\"\n            ]\n        ]\n    ], {\n        type: [\n            \"lookup\",\n            \"number\",\n            \"any\"\n        ]\n    }),\n    textTransform: ({ addUtilities  })=>{\n        addUtilities({\n            \".uppercase\": {\n                \"text-transform\": \"uppercase\"\n            },\n            \".lowercase\": {\n                \"text-transform\": \"lowercase\"\n            },\n            \".capitalize\": {\n                \"text-transform\": \"capitalize\"\n            },\n            \".normal-case\": {\n                \"text-transform\": \"none\"\n            }\n        });\n    },\n    fontStyle: ({ addUtilities  })=>{\n        addUtilities({\n            \".italic\": {\n                \"font-style\": \"italic\"\n            },\n            \".not-italic\": {\n                \"font-style\": \"normal\"\n            }\n        });\n    },\n    fontVariantNumeric: ({ addDefaults , addUtilities  })=>{\n        let cssFontVariantNumericValue = \"var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)\";\n        addDefaults(\"font-variant-numeric\", {\n            \"--tw-ordinal\": \" \",\n            \"--tw-slashed-zero\": \" \",\n            \"--tw-numeric-figure\": \" \",\n            \"--tw-numeric-spacing\": \" \",\n            \"--tw-numeric-fraction\": \" \"\n        });\n        addUtilities({\n            \".normal-nums\": {\n                \"font-variant-numeric\": \"normal\"\n            },\n            \".ordinal\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-ordinal\": \"ordinal\",\n                \"font-variant-numeric\": cssFontVariantNumericValue\n            },\n            \".slashed-zero\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-slashed-zero\": \"slashed-zero\",\n                \"font-variant-numeric\": cssFontVariantNumericValue\n            },\n            \".lining-nums\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-figure\": \"lining-nums\",\n                \"font-variant-numeric\": cssFontVariantNumericValue\n            },\n            \".oldstyle-nums\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-figure\": \"oldstyle-nums\",\n                \"font-variant-numeric\": cssFontVariantNumericValue\n            },\n            \".proportional-nums\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-spacing\": \"proportional-nums\",\n                \"font-variant-numeric\": cssFontVariantNumericValue\n            },\n            \".tabular-nums\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-spacing\": \"tabular-nums\",\n                \"font-variant-numeric\": cssFontVariantNumericValue\n            },\n            \".diagonal-fractions\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-fraction\": \"diagonal-fractions\",\n                \"font-variant-numeric\": cssFontVariantNumericValue\n            },\n            \".stacked-fractions\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-fraction\": \"stacked-fractions\",\n                \"font-variant-numeric\": cssFontVariantNumericValue\n            }\n        });\n    },\n    lineHeight: (0, _createUtilityPlugin.default)(\"lineHeight\", [\n        [\n            \"leading\",\n            [\n                \"lineHeight\"\n            ]\n        ]\n    ]),\n    letterSpacing: (0, _createUtilityPlugin.default)(\"letterSpacing\", [\n        [\n            \"tracking\",\n            [\n                \"letterSpacing\"\n            ]\n        ]\n    ], {\n        supportsNegativeValues: true\n    }),\n    textColor: ({ matchUtilities , theme , corePlugins  })=>{\n        matchUtilities({\n            text: (value)=>{\n                if (!corePlugins(\"textOpacity\")) {\n                    return {\n                        color: (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: \"color\",\n                    variable: \"--tw-text-opacity\"\n                });\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"textColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    textOpacity: (0, _createUtilityPlugin.default)(\"textOpacity\", [\n        [\n            \"text-opacity\",\n            [\n                \"--tw-text-opacity\"\n            ]\n        ]\n    ]),\n    textDecoration: ({ addUtilities  })=>{\n        addUtilities({\n            \".underline\": {\n                \"text-decoration-line\": \"underline\"\n            },\n            \".overline\": {\n                \"text-decoration-line\": \"overline\"\n            },\n            \".line-through\": {\n                \"text-decoration-line\": \"line-through\"\n            },\n            \".no-underline\": {\n                \"text-decoration-line\": \"none\"\n            }\n        });\n    },\n    textDecorationColor: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            decoration: (value)=>{\n                return {\n                    \"text-decoration-color\": (0, _toColorValue.default)(value)\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"textDecorationColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    textDecorationStyle: ({ addUtilities  })=>{\n        addUtilities({\n            \".decoration-solid\": {\n                \"text-decoration-style\": \"solid\"\n            },\n            \".decoration-double\": {\n                \"text-decoration-style\": \"double\"\n            },\n            \".decoration-dotted\": {\n                \"text-decoration-style\": \"dotted\"\n            },\n            \".decoration-dashed\": {\n                \"text-decoration-style\": \"dashed\"\n            },\n            \".decoration-wavy\": {\n                \"text-decoration-style\": \"wavy\"\n            }\n        });\n    },\n    textDecorationThickness: (0, _createUtilityPlugin.default)(\"textDecorationThickness\", [\n        [\n            \"decoration\",\n            [\n                \"text-decoration-thickness\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"percentage\"\n        ]\n    }),\n    textUnderlineOffset: (0, _createUtilityPlugin.default)(\"textUnderlineOffset\", [\n        [\n            \"underline-offset\",\n            [\n                \"text-underline-offset\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"percentage\",\n            \"any\"\n        ]\n    }),\n    fontSmoothing: ({ addUtilities  })=>{\n        addUtilities({\n            \".antialiased\": {\n                \"-webkit-font-smoothing\": \"antialiased\",\n                \"-moz-osx-font-smoothing\": \"grayscale\"\n            },\n            \".subpixel-antialiased\": {\n                \"-webkit-font-smoothing\": \"auto\",\n                \"-moz-osx-font-smoothing\": \"auto\"\n            }\n        });\n    },\n    placeholderColor: ({ matchUtilities , theme , corePlugins  })=>{\n        matchUtilities({\n            placeholder: (value)=>{\n                if (!corePlugins(\"placeholderOpacity\")) {\n                    return {\n                        \"&::placeholder\": {\n                            color: (0, _toColorValue.default)(value)\n                        }\n                    };\n                }\n                return {\n                    \"&::placeholder\": (0, _withAlphaVariable.default)({\n                        color: value,\n                        property: \"color\",\n                        variable: \"--tw-placeholder-opacity\"\n                    })\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"placeholderColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    placeholderOpacity: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"placeholder-opacity\": (value)=>{\n                return {\n                    [\"&::placeholder\"]: {\n                        \"--tw-placeholder-opacity\": value\n                    }\n                };\n            }\n        }, {\n            values: theme(\"placeholderOpacity\")\n        });\n    },\n    caretColor: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            caret: (value)=>{\n                return {\n                    \"caret-color\": (0, _toColorValue.default)(value)\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"caretColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    accentColor: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            accent: (value)=>{\n                return {\n                    \"accent-color\": (0, _toColorValue.default)(value)\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"accentColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    opacity: (0, _createUtilityPlugin.default)(\"opacity\", [\n        [\n            \"opacity\",\n            [\n                \"opacity\"\n            ]\n        ]\n    ]),\n    backgroundBlendMode: ({ addUtilities  })=>{\n        addUtilities({\n            \".bg-blend-normal\": {\n                \"background-blend-mode\": \"normal\"\n            },\n            \".bg-blend-multiply\": {\n                \"background-blend-mode\": \"multiply\"\n            },\n            \".bg-blend-screen\": {\n                \"background-blend-mode\": \"screen\"\n            },\n            \".bg-blend-overlay\": {\n                \"background-blend-mode\": \"overlay\"\n            },\n            \".bg-blend-darken\": {\n                \"background-blend-mode\": \"darken\"\n            },\n            \".bg-blend-lighten\": {\n                \"background-blend-mode\": \"lighten\"\n            },\n            \".bg-blend-color-dodge\": {\n                \"background-blend-mode\": \"color-dodge\"\n            },\n            \".bg-blend-color-burn\": {\n                \"background-blend-mode\": \"color-burn\"\n            },\n            \".bg-blend-hard-light\": {\n                \"background-blend-mode\": \"hard-light\"\n            },\n            \".bg-blend-soft-light\": {\n                \"background-blend-mode\": \"soft-light\"\n            },\n            \".bg-blend-difference\": {\n                \"background-blend-mode\": \"difference\"\n            },\n            \".bg-blend-exclusion\": {\n                \"background-blend-mode\": \"exclusion\"\n            },\n            \".bg-blend-hue\": {\n                \"background-blend-mode\": \"hue\"\n            },\n            \".bg-blend-saturation\": {\n                \"background-blend-mode\": \"saturation\"\n            },\n            \".bg-blend-color\": {\n                \"background-blend-mode\": \"color\"\n            },\n            \".bg-blend-luminosity\": {\n                \"background-blend-mode\": \"luminosity\"\n            }\n        });\n    },\n    mixBlendMode: ({ addUtilities  })=>{\n        addUtilities({\n            \".mix-blend-normal\": {\n                \"mix-blend-mode\": \"normal\"\n            },\n            \".mix-blend-multiply\": {\n                \"mix-blend-mode\": \"multiply\"\n            },\n            \".mix-blend-screen\": {\n                \"mix-blend-mode\": \"screen\"\n            },\n            \".mix-blend-overlay\": {\n                \"mix-blend-mode\": \"overlay\"\n            },\n            \".mix-blend-darken\": {\n                \"mix-blend-mode\": \"darken\"\n            },\n            \".mix-blend-lighten\": {\n                \"mix-blend-mode\": \"lighten\"\n            },\n            \".mix-blend-color-dodge\": {\n                \"mix-blend-mode\": \"color-dodge\"\n            },\n            \".mix-blend-color-burn\": {\n                \"mix-blend-mode\": \"color-burn\"\n            },\n            \".mix-blend-hard-light\": {\n                \"mix-blend-mode\": \"hard-light\"\n            },\n            \".mix-blend-soft-light\": {\n                \"mix-blend-mode\": \"soft-light\"\n            },\n            \".mix-blend-difference\": {\n                \"mix-blend-mode\": \"difference\"\n            },\n            \".mix-blend-exclusion\": {\n                \"mix-blend-mode\": \"exclusion\"\n            },\n            \".mix-blend-hue\": {\n                \"mix-blend-mode\": \"hue\"\n            },\n            \".mix-blend-saturation\": {\n                \"mix-blend-mode\": \"saturation\"\n            },\n            \".mix-blend-color\": {\n                \"mix-blend-mode\": \"color\"\n            },\n            \".mix-blend-luminosity\": {\n                \"mix-blend-mode\": \"luminosity\"\n            },\n            \".mix-blend-plus-lighter\": {\n                \"mix-blend-mode\": \"plus-lighter\"\n            }\n        });\n    },\n    boxShadow: (()=>{\n        let transformValue = (0, _transformThemeValue.default)(\"boxShadow\");\n        let defaultBoxShadow = [\n            `var(--tw-ring-offset-shadow, 0 0 #0000)`,\n            `var(--tw-ring-shadow, 0 0 #0000)`,\n            `var(--tw-shadow)`\n        ].join(\", \");\n        return function({ matchUtilities , addDefaults , theme  }) {\n            addDefaults(\" box-shadow\", {\n                \"--tw-ring-offset-shadow\": \"0 0 #0000\",\n                \"--tw-ring-shadow\": \"0 0 #0000\",\n                \"--tw-shadow\": \"0 0 #0000\",\n                \"--tw-shadow-colored\": \"0 0 #0000\"\n            });\n            matchUtilities({\n                shadow: (value)=>{\n                    value = transformValue(value);\n                    let ast = (0, _parseBoxShadowValue.parseBoxShadowValue)(value);\n                    for (let shadow of ast){\n                        // Don't override color if the whole shadow is a variable\n                        if (!shadow.valid) {\n                            continue;\n                        }\n                        shadow.color = \"var(--tw-shadow-color)\";\n                    }\n                    return {\n                        \"@defaults box-shadow\": {},\n                        \"--tw-shadow\": value === \"none\" ? \"0 0 #0000\" : value,\n                        \"--tw-shadow-colored\": value === \"none\" ? \"0 0 #0000\" : (0, _parseBoxShadowValue.formatBoxShadowValue)(ast),\n                        \"box-shadow\": defaultBoxShadow\n                    };\n                }\n            }, {\n                values: theme(\"boxShadow\"),\n                type: [\n                    \"shadow\"\n                ]\n            });\n        };\n    })(),\n    boxShadowColor: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            shadow: (value)=>{\n                return {\n                    \"--tw-shadow-color\": (0, _toColorValue.default)(value),\n                    \"--tw-shadow\": \"var(--tw-shadow-colored)\"\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"boxShadowColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    outlineStyle: ({ addUtilities  })=>{\n        addUtilities({\n            \".outline-none\": {\n                outline: \"2px solid transparent\",\n                \"outline-offset\": \"2px\"\n            },\n            \".outline\": {\n                \"outline-style\": \"solid\"\n            },\n            \".outline-dashed\": {\n                \"outline-style\": \"dashed\"\n            },\n            \".outline-dotted\": {\n                \"outline-style\": \"dotted\"\n            },\n            \".outline-double\": {\n                \"outline-style\": \"double\"\n            }\n        });\n    },\n    outlineWidth: (0, _createUtilityPlugin.default)(\"outlineWidth\", [\n        [\n            \"outline\",\n            [\n                \"outline-width\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"number\",\n            \"percentage\"\n        ]\n    }),\n    outlineOffset: (0, _createUtilityPlugin.default)(\"outlineOffset\", [\n        [\n            \"outline-offset\",\n            [\n                \"outline-offset\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"number\",\n            \"percentage\",\n            \"any\"\n        ],\n        supportsNegativeValues: true\n    }),\n    outlineColor: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            outline: (value)=>{\n                return {\n                    \"outline-color\": (0, _toColorValue.default)(value)\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"outlineColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    ringWidth: ({ matchUtilities , addDefaults , addUtilities , theme , config  })=>{\n        let ringColorDefault = (()=>{\n            var _theme, _theme1;\n            if ((0, _featureFlags.flagEnabled)(config(), \"respectDefaultRingColorOpacity\")) {\n                return theme(\"ringColor.DEFAULT\");\n            }\n            let ringOpacityDefault = theme(\"ringOpacity.DEFAULT\", \"0.5\");\n            if (!((_theme = theme(\"ringColor\")) === null || _theme === void 0 ? void 0 : _theme.DEFAULT)) {\n                return `rgb(147 197 253 / ${ringOpacityDefault})`;\n            }\n            return (0, _withAlphaVariable.withAlphaValue)((_theme1 = theme(\"ringColor\")) === null || _theme1 === void 0 ? void 0 : _theme1.DEFAULT, ringOpacityDefault, `rgb(147 197 253 / ${ringOpacityDefault})`);\n        })();\n        addDefaults(\"ring-width\", {\n            \"--tw-ring-inset\": \" \",\n            \"--tw-ring-offset-width\": theme(\"ringOffsetWidth.DEFAULT\", \"0px\"),\n            \"--tw-ring-offset-color\": theme(\"ringOffsetColor.DEFAULT\", \"#fff\"),\n            \"--tw-ring-color\": ringColorDefault,\n            \"--tw-ring-offset-shadow\": \"0 0 #0000\",\n            \"--tw-ring-shadow\": \"0 0 #0000\",\n            \"--tw-shadow\": \"0 0 #0000\",\n            \"--tw-shadow-colored\": \"0 0 #0000\"\n        });\n        matchUtilities({\n            ring: (value)=>{\n                return {\n                    \"@defaults ring-width\": {},\n                    \"--tw-ring-offset-shadow\": `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,\n                    \"--tw-ring-shadow\": `var(--tw-ring-inset) 0 0 0 calc(${value} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n                    \"box-shadow\": [\n                        `var(--tw-ring-offset-shadow)`,\n                        `var(--tw-ring-shadow)`,\n                        `var(--tw-shadow, 0 0 #0000)`\n                    ].join(\", \")\n                };\n            }\n        }, {\n            values: theme(\"ringWidth\"),\n            type: \"length\"\n        });\n        addUtilities({\n            \".ring-inset\": {\n                \"@defaults ring-width\": {},\n                \"--tw-ring-inset\": \"inset\"\n            }\n        });\n    },\n    ringColor: ({ matchUtilities , theme , corePlugins  })=>{\n        matchUtilities({\n            ring: (value)=>{\n                if (!corePlugins(\"ringOpacity\")) {\n                    return {\n                        \"--tw-ring-color\": (0, _toColorValue.default)(value)\n                    };\n                }\n                return (0, _withAlphaVariable.default)({\n                    color: value,\n                    property: \"--tw-ring-color\",\n                    variable: \"--tw-ring-opacity\"\n                });\n            }\n        }, {\n            values: Object.fromEntries(Object.entries((0, _flattenColorPalette.default)(theme(\"ringColor\"))).filter(([modifier])=>modifier !== \"DEFAULT\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    ringOpacity: (helpers)=>{\n        let { config  } = helpers;\n        return (0, _createUtilityPlugin.default)(\"ringOpacity\", [\n            [\n                \"ring-opacity\",\n                [\n                    \"--tw-ring-opacity\"\n                ]\n            ]\n        ], {\n            filterDefault: !(0, _featureFlags.flagEnabled)(config(), \"respectDefaultRingColorOpacity\")\n        })(helpers);\n    },\n    ringOffsetWidth: (0, _createUtilityPlugin.default)(\"ringOffsetWidth\", [\n        [\n            \"ring-offset\",\n            [\n                \"--tw-ring-offset-width\"\n            ]\n        ]\n    ], {\n        type: \"length\"\n    }),\n    ringOffsetColor: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"ring-offset\": (value)=>{\n                return {\n                    \"--tw-ring-offset-color\": (0, _toColorValue.default)(value)\n                };\n            }\n        }, {\n            values: (0, _flattenColorPalette.default)(theme(\"ringOffsetColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    blur: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            blur: (value)=>{\n                return {\n                    \"--tw-blur\": `blur(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"blur\")\n        });\n    },\n    brightness: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            brightness: (value)=>{\n                return {\n                    \"--tw-brightness\": `brightness(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"brightness\")\n        });\n    },\n    contrast: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            contrast: (value)=>{\n                return {\n                    \"--tw-contrast\": `contrast(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"contrast\")\n        });\n    },\n    dropShadow: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"drop-shadow\": (value)=>{\n                return {\n                    \"--tw-drop-shadow\": Array.isArray(value) ? value.map((v)=>`drop-shadow(${v})`).join(\" \") : `drop-shadow(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"dropShadow\")\n        });\n    },\n    grayscale: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            grayscale: (value)=>{\n                return {\n                    \"--tw-grayscale\": `grayscale(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"grayscale\")\n        });\n    },\n    hueRotate: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"hue-rotate\": (value)=>{\n                return {\n                    \"--tw-hue-rotate\": `hue-rotate(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"hueRotate\"),\n            supportsNegativeValues: true\n        });\n    },\n    invert: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            invert: (value)=>{\n                return {\n                    \"--tw-invert\": `invert(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"invert\")\n        });\n    },\n    saturate: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            saturate: (value)=>{\n                return {\n                    \"--tw-saturate\": `saturate(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"saturate\")\n        });\n    },\n    sepia: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            sepia: (value)=>{\n                return {\n                    \"--tw-sepia\": `sepia(${value})`,\n                    \"@defaults filter\": {},\n                    filter: cssFilterValue\n                };\n            }\n        }, {\n            values: theme(\"sepia\")\n        });\n    },\n    filter: ({ addDefaults , addUtilities  })=>{\n        addDefaults(\"filter\", {\n            \"--tw-blur\": \" \",\n            \"--tw-brightness\": \" \",\n            \"--tw-contrast\": \" \",\n            \"--tw-grayscale\": \" \",\n            \"--tw-hue-rotate\": \" \",\n            \"--tw-invert\": \" \",\n            \"--tw-saturate\": \" \",\n            \"--tw-sepia\": \" \",\n            \"--tw-drop-shadow\": \" \"\n        });\n        addUtilities({\n            \".filter\": {\n                \"@defaults filter\": {},\n                filter: cssFilterValue\n            },\n            \".filter-none\": {\n                filter: \"none\"\n            }\n        });\n    },\n    backdropBlur: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-blur\": (value)=>{\n                return {\n                    \"--tw-backdrop-blur\": `blur(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropBlur\")\n        });\n    },\n    backdropBrightness: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-brightness\": (value)=>{\n                return {\n                    \"--tw-backdrop-brightness\": `brightness(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropBrightness\")\n        });\n    },\n    backdropContrast: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-contrast\": (value)=>{\n                return {\n                    \"--tw-backdrop-contrast\": `contrast(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropContrast\")\n        });\n    },\n    backdropGrayscale: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-grayscale\": (value)=>{\n                return {\n                    \"--tw-backdrop-grayscale\": `grayscale(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropGrayscale\")\n        });\n    },\n    backdropHueRotate: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-hue-rotate\": (value)=>{\n                return {\n                    \"--tw-backdrop-hue-rotate\": `hue-rotate(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropHueRotate\"),\n            supportsNegativeValues: true\n        });\n    },\n    backdropInvert: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-invert\": (value)=>{\n                return {\n                    \"--tw-backdrop-invert\": `invert(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropInvert\")\n        });\n    },\n    backdropOpacity: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-opacity\": (value)=>{\n                return {\n                    \"--tw-backdrop-opacity\": `opacity(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropOpacity\")\n        });\n    },\n    backdropSaturate: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-saturate\": (value)=>{\n                return {\n                    \"--tw-backdrop-saturate\": `saturate(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropSaturate\")\n        });\n    },\n    backdropSepia: ({ matchUtilities , theme  })=>{\n        matchUtilities({\n            \"backdrop-sepia\": (value)=>{\n                return {\n                    \"--tw-backdrop-sepia\": `sepia(${value})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": cssBackdropFilterValue\n                };\n            }\n        }, {\n            values: theme(\"backdropSepia\")\n        });\n    },\n    backdropFilter: ({ addDefaults , addUtilities  })=>{\n        addDefaults(\"backdrop-filter\", {\n            \"--tw-backdrop-blur\": \" \",\n            \"--tw-backdrop-brightness\": \" \",\n            \"--tw-backdrop-contrast\": \" \",\n            \"--tw-backdrop-grayscale\": \" \",\n            \"--tw-backdrop-hue-rotate\": \" \",\n            \"--tw-backdrop-invert\": \" \",\n            \"--tw-backdrop-opacity\": \" \",\n            \"--tw-backdrop-saturate\": \" \",\n            \"--tw-backdrop-sepia\": \" \"\n        });\n        addUtilities({\n            \".backdrop-filter\": {\n                \"@defaults backdrop-filter\": {},\n                \"backdrop-filter\": cssBackdropFilterValue\n            },\n            \".backdrop-filter-none\": {\n                \"backdrop-filter\": \"none\"\n            }\n        });\n    },\n    transitionProperty: ({ matchUtilities , theme  })=>{\n        let defaultTimingFunction = theme(\"transitionTimingFunction.DEFAULT\");\n        let defaultDuration = theme(\"transitionDuration.DEFAULT\");\n        matchUtilities({\n            transition: (value)=>{\n                return {\n                    \"transition-property\": value,\n                    ...value === \"none\" ? {} : {\n                        \"transition-timing-function\": defaultTimingFunction,\n                        \"transition-duration\": defaultDuration\n                    }\n                };\n            }\n        }, {\n            values: theme(\"transitionProperty\")\n        });\n    },\n    transitionDelay: (0, _createUtilityPlugin.default)(\"transitionDelay\", [\n        [\n            \"delay\",\n            [\n                \"transitionDelay\"\n            ]\n        ]\n    ]),\n    transitionDuration: (0, _createUtilityPlugin.default)(\"transitionDuration\", [\n        [\n            \"duration\",\n            [\n                \"transitionDuration\"\n            ]\n        ]\n    ], {\n        filterDefault: true\n    }),\n    transitionTimingFunction: (0, _createUtilityPlugin.default)(\"transitionTimingFunction\", [\n        [\n            \"ease\",\n            [\n                \"transitionTimingFunction\"\n            ]\n        ]\n    ], {\n        filterDefault: true\n    }),\n    willChange: (0, _createUtilityPlugin.default)(\"willChange\", [\n        [\n            \"will-change\",\n            [\n                \"will-change\"\n            ]\n        ]\n    ]),\n    content: (0, _createUtilityPlugin.default)(\"content\", [\n        [\n            \"content\",\n            [\n                \"--tw-content\",\n                [\n                    \"content\",\n                    \"var(--tw-content)\"\n                ]\n            ]\n        ]\n    ])\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    flagEnabled: ()=>flagEnabled,\n    issueFlagNotices: ()=>issueFlagNotices,\n    default: ()=>_default\n});\nconst _picocolors = /*#__PURE__*/ _interopRequireDefault(require(\"picocolors\"));\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"./util/log\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet defaults = {\n    optimizeUniversalDefaults: false,\n    generalizedModifiers: true\n};\nlet featureFlags = {\n    future: [\n        \"hoverOnlyWhenSupported\",\n        \"respectDefaultRingColorOpacity\",\n        \"disableColorOpacityUtilitiesByDefault\",\n        \"relativeContentPathsByDefault\"\n    ],\n    experimental: [\n        \"optimizeUniversalDefaults\",\n        \"generalizedModifiers\"\n    ]\n};\nfunction flagEnabled(config, flag) {\n    if (featureFlags.future.includes(flag)) {\n        var _config_future;\n        var _config_future_flag, _ref;\n        return config.future === \"all\" || ((_ref = (_config_future_flag = config === null || config === void 0 ? void 0 : (_config_future = config.future) === null || _config_future === void 0 ? void 0 : _config_future[flag]) !== null && _config_future_flag !== void 0 ? _config_future_flag : defaults[flag]) !== null && _ref !== void 0 ? _ref : false);\n    }\n    if (featureFlags.experimental.includes(flag)) {\n        var _config_experimental;\n        var _config_experimental_flag, _ref1;\n        return config.experimental === \"all\" || ((_ref1 = (_config_experimental_flag = config === null || config === void 0 ? void 0 : (_config_experimental = config.experimental) === null || _config_experimental === void 0 ? void 0 : _config_experimental[flag]) !== null && _config_experimental_flag !== void 0 ? _config_experimental_flag : defaults[flag]) !== null && _ref1 !== void 0 ? _ref1 : false);\n    }\n    return false;\n}\nfunction experimentalFlagsEnabled(config) {\n    if (config.experimental === \"all\") {\n        return featureFlags.experimental;\n    }\n    var _config_experimental;\n    return Object.keys((_config_experimental = config === null || config === void 0 ? void 0 : config.experimental) !== null && _config_experimental !== void 0 ? _config_experimental : {}).filter((flag)=>featureFlags.experimental.includes(flag) && config.experimental[flag]);\n}\nfunction issueFlagNotices(config) {\n    if (process.env.JEST_WORKER_ID !== undefined) {\n        return;\n    }\n    if (experimentalFlagsEnabled(config).length > 0) {\n        let changes = experimentalFlagsEnabled(config).map((s)=>_picocolors.default.yellow(s)).join(\", \");\n        _log.default.warn(\"experimental-flags-enabled\", [\n            `You have enabled experimental features: ${changes}`,\n            \"Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.\"\n        ]);\n    }\n}\nconst _default = featureFlags;\n","\"use strict\";\nif (process.env.OXIDE) {\n    module.exports = require(\"./oxide/postcss-plugin\");\n} else {\n    module.exports = require(\"./plugin\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"hasContentChanged\", {\n    enumerable: true,\n    get: ()=>hasContentChanged\n});\nconst _crypto = /*#__PURE__*/ _interopRequireDefault(require(\"crypto\"));\nconst _sharedState = /*#__PURE__*/ _interopRequireWildcard(require(\"./sharedState\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n/**\n * Calculate the hash of a string.\n *\n * This doesn't need to be cryptographically secure or\n * anything like that since it's used only to detect\n * when the CSS changes to invalidate the context.\n *\n * This is wrapped in a try/catch because it's really dependent\n * on how Node itself is build and the environment and OpenSSL\n * version / build that is installed on the user's machine.\n *\n * Based on the environment this can just outright fail.\n *\n * See https://github.com/nodejs/node/issues/40455\n *\n * @param {string} str\n */ function getHash(str) {\n    try {\n        return _crypto.default.createHash(\"md5\").update(str, \"utf-8\").digest(\"binary\");\n    } catch (err) {\n        return \"\";\n    }\n}\nfunction hasContentChanged(sourcePath, root) {\n    let css = root.toString();\n    // We only care about files with @tailwind directives\n    // Other files use an existing context\n    if (!css.includes(\"@tailwind\")) {\n        return false;\n    }\n    let existingHash = _sharedState.sourceHashMap.get(sourcePath);\n    let rootHash = getHash(css);\n    let didChange = existingHash !== rootHash;\n    _sharedState.sourceHashMap.set(sourcePath, rootHash);\n    return didChange;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>collapseAdjacentRules\n});\nlet comparisonMap = {\n    atrule: [\n        \"name\",\n        \"params\"\n    ],\n    rule: [\n        \"selector\"\n    ]\n};\nlet types = new Set(Object.keys(comparisonMap));\nfunction collapseAdjacentRules() {\n    function collapseRulesIn(root) {\n        let currentRule = null;\n        root.each((node)=>{\n            if (!types.has(node.type)) {\n                currentRule = null;\n                return;\n            }\n            if (currentRule === null) {\n                currentRule = node;\n                return;\n            }\n            let properties = comparisonMap[node.type];\n            var _node_property, _currentRule_property;\n            if (node.type === \"atrule\" && node.name === \"font-face\") {\n                currentRule = node;\n            } else if (properties.every((property)=>((_node_property = node[property]) !== null && _node_property !== void 0 ? _node_property : \"\").replace(/\\s+/g, \" \") === ((_currentRule_property = currentRule[property]) !== null && _currentRule_property !== void 0 ? _currentRule_property : \"\").replace(/\\s+/g, \" \"))) {\n                // An AtRule may not have children (for example if we encounter duplicate @import url(…) rules)\n                if (node.nodes) {\n                    currentRule.append(node.nodes);\n                }\n                node.remove();\n            } else {\n                currentRule = node;\n            }\n        });\n        // After we've collapsed adjacent rules & at-rules, we need to collapse\n        // adjacent rules & at-rules that are children of at-rules.\n        // We do not care about nesting rules because Tailwind CSS\n        // explicitly does not handle rule nesting on its own as\n        // the user is expected to use a nesting plugin\n        root.each((node)=>{\n            if (node.type === \"atrule\") {\n                collapseRulesIn(node);\n            }\n        });\n    }\n    return (root)=>{\n        collapseRulesIn(root);\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>collapseDuplicateDeclarations\n});\nfunction collapseDuplicateDeclarations() {\n    return (root)=>{\n        root.walkRules((node)=>{\n            let seen = new Map();\n            let droppable = new Set([]);\n            let byProperty = new Map();\n            node.walkDecls((decl)=>{\n                // This could happen if we have nested selectors. In that case the\n                // parent will loop over all its declarations but also the declarations\n                // of nested rules. With this we ensure that we are shallowly checking\n                // declarations.\n                if (decl.parent !== node) {\n                    return;\n                }\n                if (seen.has(decl.prop)) {\n                    // Exact same value as what we have seen so far\n                    if (seen.get(decl.prop).value === decl.value) {\n                        // Keep the last one, drop the one we've seen so far\n                        droppable.add(seen.get(decl.prop));\n                        // Override the existing one with the new value. This is necessary\n                        // so that if we happen to have more than one declaration with the\n                        // same value, that we keep removing the previous one. Otherwise we\n                        // will only remove the *first* one.\n                        seen.set(decl.prop, decl);\n                        return;\n                    }\n                    // Not the same value, so we need to check if we can merge it so\n                    // let's collect it first.\n                    if (!byProperty.has(decl.prop)) {\n                        byProperty.set(decl.prop, new Set());\n                    }\n                    byProperty.get(decl.prop).add(seen.get(decl.prop));\n                    byProperty.get(decl.prop).add(decl);\n                }\n                seen.set(decl.prop, decl);\n            });\n            // Drop all the duplicate declarations with the exact same value we've\n            // already seen so far.\n            for (let decl of droppable){\n                decl.remove();\n            }\n            // Analyze the declarations based on its unit, drop all the declarations\n            // with the same unit but the last one in the list.\n            for (let declarations of byProperty.values()){\n                let byUnit = new Map();\n                for (let decl1 of declarations){\n                    let unit = resolveUnit(decl1.value);\n                    if (unit === null) {\n                        continue;\n                    }\n                    if (!byUnit.has(unit)) {\n                        byUnit.set(unit, new Set());\n                    }\n                    byUnit.get(unit).add(decl1);\n                }\n                for (let declarations1 of byUnit.values()){\n                    // Get all but the last one\n                    let removableDeclarations = Array.from(declarations1).slice(0, -1);\n                    for (let decl2 of removableDeclarations){\n                        decl2.remove();\n                    }\n                }\n            }\n        });\n    };\n}\nlet UNITLESS_NUMBER = Symbol(\"unitless-number\");\nfunction resolveUnit(input) {\n    let result = /^-?\\d*.?\\d+([\\w%]+)?$/g.exec(input);\n    if (result) {\n        var _result_;\n        return (_result_ = result[1]) !== null && _result_ !== void 0 ? _result_ : UNITLESS_NUMBER;\n    }\n    return null;\n}\n","// @ts-check\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    parseCandidateFiles: ()=>parseCandidateFiles,\n    resolvedChangedContent: ()=>resolvedChangedContent\n});\nconst _fs = /*#__PURE__*/ _interopRequireDefault(require(\"fs\"));\nconst _path = /*#__PURE__*/ _interopRequireDefault(require(\"path\"));\nconst _isGlob = /*#__PURE__*/ _interopRequireDefault(require(\"is-glob\"));\nconst _fastGlob = /*#__PURE__*/ _interopRequireDefault(require(\"fast-glob\"));\nconst _normalizePath = /*#__PURE__*/ _interopRequireDefault(require(\"normalize-path\"));\nconst _parseGlob = require(\"../util/parseGlob\");\nconst _sharedState = require(\"./sharedState\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction parseCandidateFiles(context, tailwindConfig) {\n    let files = tailwindConfig.content.files;\n    // Normalize the file globs\n    files = files.filter((filePath)=>typeof filePath === \"string\");\n    files = files.map(_normalizePath.default);\n    // Split into included and excluded globs\n    let tasks = _fastGlob.default.generateTasks(files);\n    /** @type {ContentPath[]} */ let included = [];\n    /** @type {ContentPath[]} */ let excluded = [];\n    for (const task of tasks){\n        included.push(...task.positive.map((filePath)=>parseFilePath(filePath, false)));\n        excluded.push(...task.negative.map((filePath)=>parseFilePath(filePath, true)));\n    }\n    let paths = [\n        ...included,\n        ...excluded\n    ];\n    // Resolve paths relative to the config file or cwd\n    paths = resolveRelativePaths(context, paths);\n    // Resolve symlinks if possible\n    paths = paths.flatMap(resolvePathSymlinks);\n    // Update cached patterns\n    paths = paths.map(resolveGlobPattern);\n    return paths;\n}\n/**\n *\n * @param {string} filePath\n * @param {boolean} ignore\n * @returns {ContentPath}\n */ function parseFilePath(filePath, ignore) {\n    let contentPath = {\n        original: filePath,\n        base: filePath,\n        ignore,\n        pattern: filePath,\n        glob: null\n    };\n    if ((0, _isGlob.default)(filePath)) {\n        Object.assign(contentPath, (0, _parseGlob.parseGlob)(filePath));\n    }\n    return contentPath;\n}\n/**\n *\n * @param {ContentPath} contentPath\n * @returns {ContentPath}\n */ function resolveGlobPattern(contentPath) {\n    // This is required for Windows support to properly pick up Glob paths.\n    // Afaik, this technically shouldn't be needed but there's probably\n    // some internal, direct path matching with a normalized path in\n    // a package which can't handle mixed directory separators\n    let base = (0, _normalizePath.default)(contentPath.base);\n    // If the user's file path contains any special characters (like parens) for instance fast-glob\n    // is like \"OOOH SHINY\" and treats them as such. So we have to escape the base path to fix this\n    base = _fastGlob.default.escapePath(base);\n    contentPath.pattern = contentPath.glob ? `${base}/${contentPath.glob}` : base;\n    contentPath.pattern = contentPath.ignore ? `!${contentPath.pattern}` : contentPath.pattern;\n    return contentPath;\n}\n/**\n * Resolve each path relative to the config file (when possible) if the experimental flag is enabled\n * Otherwise, resolve relative to the current working directory\n *\n * @param {any} context\n * @param {ContentPath[]} contentPaths\n * @returns {ContentPath[]}\n */ function resolveRelativePaths(context, contentPaths) {\n    let resolveFrom = [];\n    // Resolve base paths relative to the config file (when possible) if the experimental flag is enabled\n    if (context.userConfigPath && context.tailwindConfig.content.relative) {\n        resolveFrom = [\n            _path.default.dirname(context.userConfigPath)\n        ];\n    }\n    return contentPaths.map((contentPath)=>{\n        contentPath.base = _path.default.resolve(...resolveFrom, contentPath.base);\n        return contentPath;\n    });\n}\n/**\n * Resolve the symlink for the base directory / file in each path\n * These are added as additional dependencies to watch for changes because\n * some tools (like webpack) will only watch the actual file or directory\n * but not the symlink itself even in projects that use monorepos.\n *\n * @param {ContentPath} contentPath\n * @returns {ContentPath[]}\n */ function resolvePathSymlinks(contentPath) {\n    let paths = [\n        contentPath\n    ];\n    try {\n        let resolvedPath = _fs.default.realpathSync(contentPath.base);\n        if (resolvedPath !== contentPath.base) {\n            paths.push({\n                ...contentPath,\n                base: resolvedPath\n            });\n        }\n    } catch  {\n    // TODO: log this?\n    }\n    return paths;\n}\nfunction resolvedChangedContent(context, candidateFiles, fileModifiedMap) {\n    let changedContent = context.tailwindConfig.content.files.filter((item)=>typeof item.raw === \"string\").map(({ raw , extension =\"html\"  })=>({\n            content: raw,\n            extension\n        }));\n    let [changedFiles, mTimesToCommit] = resolveChangedFiles(candidateFiles, fileModifiedMap);\n    for (let changedFile of changedFiles){\n        let extension = _path.default.extname(changedFile).slice(1);\n        changedContent.push({\n            file: changedFile,\n            extension\n        });\n    }\n    return [\n        changedContent,\n        mTimesToCommit\n    ];\n}\n/**\n *\n * @param {ContentPath[]} candidateFiles\n * @param {Map<string, number>} fileModifiedMap\n * @returns {[Set<string>, Map<string, number>]}\n */ function resolveChangedFiles(candidateFiles, fileModifiedMap) {\n    let paths = candidateFiles.map((contentPath)=>contentPath.pattern);\n    let mTimesToCommit = new Map();\n    let changedFiles = new Set();\n    _sharedState.env.DEBUG && console.time(\"Finding changed files\");\n    let files = _fastGlob.default.sync(paths, {\n        absolute: true\n    });\n    for (let file of files){\n        let prevModified = fileModifiedMap.get(file) || -Infinity;\n        let modified = _fs.default.statSync(file).mtimeMs;\n        if (modified > prevModified) {\n            changedFiles.add(file);\n            mTimesToCommit.set(file, modified);\n        }\n    }\n    _sharedState.env.DEBUG && console.timeEnd(\"Finding changed files\");\n    return [\n        changedFiles,\n        mTimesToCommit\n    ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"defaultExtractor\", {\n    enumerable: true,\n    get: ()=>defaultExtractor\n});\nconst _featureFlags = require(\"../featureFlags\");\nconst _regex = /*#__PURE__*/ _interopRequireWildcard(require(\"./regex\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction defaultExtractor(context) {\n    let patterns = Array.from(buildRegExps(context));\n    /**\n   * @param {string} content\n   */ return (content)=>{\n        /** @type {(string|string)[]} */ let results = [];\n        for (let pattern of patterns){\n            var _content_match;\n            results = [\n                ...results,\n                ...(_content_match = content.match(pattern)) !== null && _content_match !== void 0 ? _content_match : []\n            ];\n        }\n        return results.filter((v)=>v !== undefined).map(clipAtBalancedParens);\n    };\n}\nfunction* buildRegExps(context) {\n    let separator = context.tailwindConfig.separator;\n    let variantGroupingEnabled = (0, _featureFlags.flagEnabled)(context.tailwindConfig, \"variantGrouping\");\n    let prefix = context.tailwindConfig.prefix !== \"\" ? _regex.optional(_regex.pattern([\n        /-?/,\n        _regex.escape(context.tailwindConfig.prefix)\n    ])) : \"\";\n    let utility = _regex.any([\n        // Arbitrary properties (without square brackets)\n        /\\[[^\\s:'\"`]+:[^\\s\\[\\]]+\\]/,\n        // Arbitrary properties with balanced square brackets\n        // This is a targeted fix to continue to allow theme()\n        // with square brackets to work in arbitrary properties\n        // while fixing a problem with the regex matching too much\n        /\\[[^\\s:'\"`]+:[^\\s]+?\\[[^\\s]+?\\][^\\s]+?\\]/,\n        // Utilities\n        _regex.pattern([\n            // Utility Name / Group Name\n            /-?(?:\\w+)/,\n            // Normal/Arbitrary values\n            _regex.optional(_regex.any([\n                _regex.pattern([\n                    // Arbitrary values\n                    /-(?:\\w+-)*\\[[^\\s:]+\\]/,\n                    // Not immediately followed by an `{[(`\n                    /(?![{([]])/,\n                    // optionally followed by an opacity modifier\n                    /(?:\\/[^\\s'\"`\\\\><$]*)?/\n                ]),\n                _regex.pattern([\n                    // Arbitrary values\n                    /-(?:\\w+-)*\\[[^\\s]+\\]/,\n                    // Not immediately followed by an `{[(`\n                    /(?![{([]])/,\n                    // optionally followed by an opacity modifier\n                    /(?:\\/[^\\s'\"`\\\\$]*)?/\n                ]),\n                // Normal values w/o quotes — may include an opacity modifier\n                /[-\\/][^\\s'\"`\\\\$={><]*/\n            ]))\n        ])\n    ]);\n    let variantPatterns = [\n        // Without quotes\n        _regex.any([\n            // This is here to provide special support for the `@` variant\n            _regex.pattern([\n                /@\\[[^\\s\"'`]+\\](\\/[^\\s\"'`]+)?/,\n                separator\n            ]),\n            _regex.pattern([\n                /([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]/,\n                separator\n            ]),\n            _regex.pattern([\n                /[^\\s\"'`\\[\\\\]+/,\n                separator\n            ])\n        ]),\n        // With quotes allowed\n        _regex.any([\n            _regex.pattern([\n                /([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]/,\n                separator\n            ]),\n            _regex.pattern([\n                /[^\\s`\\[\\\\]+/,\n                separator\n            ])\n        ])\n    ];\n    for (const variantPattern of variantPatterns){\n        yield _regex.pattern([\n            // Variants\n            \"((?=((\",\n            variantPattern,\n            \")+))\\\\2)?\",\n            // Important (optional)\n            /!?/,\n            prefix,\n            variantGroupingEnabled ? _regex.any([\n                // Or any of those things but grouped separated by commas\n                _regex.pattern([\n                    /\\(/,\n                    utility,\n                    _regex.zeroOrMore([\n                        /,/,\n                        utility\n                    ]),\n                    /\\)/\n                ]),\n                // Arbitrary properties, constrained utilities, arbitrary values, etc…\n                utility\n            ]) : utility\n        ]);\n    }\n    // 5. Inner matches\n    yield /[^<>\"'`\\s.(){}[\\]#=%$]*[^<>\"'`\\s.(){}[\\]#=%:$]/g;\n}\n// We want to capture any \"special\" characters\n// AND the characters immediately following them (if there is one)\nlet SPECIALS = /([\\[\\]'\"`])([^\\[\\]'\"`])?/g;\nlet ALLOWED_CLASS_CHARACTERS = /[^\"'`\\s<>\\]]+/;\n/**\n * Clips a string ensuring that parentheses, quotes, etc… are balanced\n * Used for arbitrary values only\n *\n * We will go past the end of the balanced parens until we find a non-class character\n *\n * Depth matching behavior:\n * w-[calc(100%-theme('spacing[some_key][1.5]'))]']\n *   ┬    ┬          ┬┬       ┬        ┬┬   ┬┬┬┬┬┬┬\n *   1    2          3        4        34   3 210 END\n *   ╰────┴──────────┴────────┴────────┴┴───┴─┴┴┴\n *\n * @param {string} input\n */ function clipAtBalancedParens(input) {\n    // We are care about this for arbitrary values\n    if (!input.includes(\"-[\")) {\n        return input;\n    }\n    let depth = 0;\n    let openStringTypes = [];\n    // Find all parens, brackets, quotes, etc\n    // Stop when we end at a balanced pair\n    // This is naive and will treat mismatched parens as balanced\n    // This shouldn't be a problem in practice though\n    let matches = input.matchAll(SPECIALS);\n    // We can't use lookbehind assertions because we have to support Safari\n    // So, instead, we've emulated it using capture groups and we'll re-work the matches to accommodate\n    matches = Array.from(matches).flatMap((match)=>{\n        const [, ...groups] = match;\n        return groups.map((group, idx)=>Object.assign([], match, {\n                index: match.index + idx,\n                0: group\n            }));\n    });\n    for (let match of matches){\n        let char = match[0];\n        let inStringType = openStringTypes[openStringTypes.length - 1];\n        if (char === inStringType) {\n            openStringTypes.pop();\n        } else if (char === \"'\" || char === '\"' || char === \"`\") {\n            openStringTypes.push(char);\n        }\n        if (inStringType) {\n            continue;\n        } else if (char === \"[\") {\n            depth++;\n            continue;\n        } else if (char === \"]\") {\n            depth--;\n            continue;\n        }\n        // We've gone one character past the point where we should stop\n        // This means that there was an extra closing `]`\n        // We'll clip to just before it\n        if (depth < 0) {\n            return input.substring(0, match.index - 1);\n        }\n        // We've finished balancing the brackets but there still may be characters that can be included\n        // For example in the class `text-[#336699]/[.35]`\n        // The depth goes to `0` at the closing `]` but goes up again at the `[`\n        // If we're at zero and encounter a non-class character then we clip the class there\n        if (depth === 0 && !ALLOWED_CLASS_CHARACTERS.test(char)) {\n            return input.substring(0, match.index);\n        }\n    }\n    return input;\n} // Regular utilities\n // {{modifier}:}*{namespace}{-{suffix}}*{/{opacityModifier}}?\n // Arbitrary values\n // {{modifier}:}*{namespace}-[{arbitraryValue}]{/{opacityModifier}}?\n // arbitraryValue: no whitespace, balanced quotes unless within quotes, balanced brackets unless within quotes\n // Arbitrary properties\n // {{modifier}:}*[{validCssPropertyName}:{arbitraryValue}]\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nfunction isRoot(node) {\n    return node.type === \"root\";\n}\nfunction isAtLayer(node) {\n    return node.type === \"atrule\" && node.name === \"layer\";\n}\nfunction _default(_context) {\n    return (root, result)=>{\n        let found = false;\n        root.walkAtRules(\"tailwind\", (node)=>{\n            if (found) return false;\n            if (node.parent && !(isRoot(node.parent) || isAtLayer(node.parent))) {\n                found = true;\n                node.warn(result, [\n                    \"Nested @tailwind rules were detected, but are not supported.\",\n                    \"Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix\",\n                    \"Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy\"\n                ].join(\"\\n\"));\n                return false;\n            }\n        });\n        root.walkRules((rule)=>{\n            if (found) return false;\n            rule.walkRules((nestedRule)=>{\n                found = true;\n                nestedRule.warn(result, [\n                    \"Nested CSS was detected, but CSS nesting has not been configured correctly.\",\n                    \"Please enable a CSS nesting plugin *before* Tailwind in your configuration.\",\n                    \"See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting\"\n                ].join(\"\\n\"));\n                return false;\n            });\n        });\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _dlv = /*#__PURE__*/ _interopRequireDefault(require(\"dlv\"));\nconst _didyoumean = /*#__PURE__*/ _interopRequireDefault(require(\"didyoumean\"));\nconst _transformThemeValue = /*#__PURE__*/ _interopRequireDefault(require(\"../util/transformThemeValue\"));\nconst _postcssValueParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-value-parser\"));\nconst _normalizeScreens = require(\"../util/normalizeScreens\");\nconst _buildMediaQuery = /*#__PURE__*/ _interopRequireDefault(require(\"../util/buildMediaQuery\"));\nconst _toPath = require(\"../util/toPath\");\nconst _withAlphaVariable = require(\"../util/withAlphaVariable\");\nconst _pluginUtils = require(\"../util/pluginUtils\");\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"../util/log\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isObject(input) {\n    return typeof input === \"object\" && input !== null;\n}\nfunction findClosestExistingPath(theme, path) {\n    let parts = (0, _toPath.toPath)(path);\n    do {\n        parts.pop();\n        if ((0, _dlv.default)(theme, parts) !== undefined) break;\n    }while (parts.length);\n    return parts.length ? parts : undefined;\n}\nfunction pathToString(path) {\n    if (typeof path === \"string\") return path;\n    return path.reduce((acc, cur, i)=>{\n        if (cur.includes(\".\")) return `${acc}[${cur}]`;\n        return i === 0 ? cur : `${acc}.${cur}`;\n    }, \"\");\n}\nfunction list(items) {\n    return items.map((key)=>`'${key}'`).join(\", \");\n}\nfunction listKeys(obj) {\n    return list(Object.keys(obj));\n}\nfunction validatePath(config, path, defaultValue, themeOpts = {}) {\n    const pathString = Array.isArray(path) ? pathToString(path) : path.replace(/^['\"]+|['\"]+$/g, \"\");\n    const pathSegments = Array.isArray(path) ? path : (0, _toPath.toPath)(pathString);\n    const value = (0, _dlv.default)(config.theme, pathSegments, defaultValue);\n    if (value === undefined) {\n        let error = `'${pathString}' does not exist in your theme config.`;\n        const parentSegments = pathSegments.slice(0, -1);\n        const parentValue = (0, _dlv.default)(config.theme, parentSegments);\n        if (isObject(parentValue)) {\n            const validKeys = Object.keys(parentValue).filter((key)=>validatePath(config, [\n                    ...parentSegments,\n                    key\n                ]).isValid);\n            const suggestion = (0, _didyoumean.default)(pathSegments[pathSegments.length - 1], validKeys);\n            if (suggestion) {\n                error += ` Did you mean '${pathToString([\n                    ...parentSegments,\n                    suggestion\n                ])}'?`;\n            } else if (validKeys.length > 0) {\n                error += ` '${pathToString(parentSegments)}' has the following valid keys: ${list(validKeys)}`;\n            }\n        } else {\n            const closestPath = findClosestExistingPath(config.theme, pathString);\n            if (closestPath) {\n                const closestValue = (0, _dlv.default)(config.theme, closestPath);\n                if (isObject(closestValue)) {\n                    error += ` '${pathToString(closestPath)}' has the following keys: ${listKeys(closestValue)}`;\n                } else {\n                    error += ` '${pathToString(closestPath)}' is not an object.`;\n                }\n            } else {\n                error += ` Your theme has the following top-level keys: ${listKeys(config.theme)}`;\n            }\n        }\n        return {\n            isValid: false,\n            error\n        };\n    }\n    if (!(typeof value === \"string\" || typeof value === \"number\" || typeof value === \"function\" || value instanceof String || value instanceof Number || Array.isArray(value))) {\n        let error1 = `'${pathString}' was found but does not resolve to a string.`;\n        if (isObject(value)) {\n            let validKeys1 = Object.keys(value).filter((key)=>validatePath(config, [\n                    ...pathSegments,\n                    key\n                ]).isValid);\n            if (validKeys1.length) {\n                error1 += ` Did you mean something like '${pathToString([\n                    ...pathSegments,\n                    validKeys1[0]\n                ])}'?`;\n            }\n        }\n        return {\n            isValid: false,\n            error: error1\n        };\n    }\n    const [themeSection] = pathSegments;\n    return {\n        isValid: true,\n        value: (0, _transformThemeValue.default)(themeSection)(value, themeOpts)\n    };\n}\nfunction extractArgs(node, vNodes, functions) {\n    vNodes = vNodes.map((vNode)=>resolveVNode(node, vNode, functions));\n    let args = [\n        \"\"\n    ];\n    for (let vNode of vNodes){\n        if (vNode.type === \"div\" && vNode.value === \",\") {\n            args.push(\"\");\n        } else {\n            args[args.length - 1] += _postcssValueParser.default.stringify(vNode);\n        }\n    }\n    return args;\n}\nfunction resolveVNode(node, vNode, functions) {\n    if (vNode.type === \"function\" && functions[vNode.value] !== undefined) {\n        let args = extractArgs(node, vNode.nodes, functions);\n        vNode.type = \"word\";\n        vNode.value = functions[vNode.value](node, ...args);\n    }\n    return vNode;\n}\nfunction resolveFunctions(node, input, functions) {\n    return (0, _postcssValueParser.default)(input).walk((vNode)=>{\n        resolveVNode(node, vNode, functions);\n    }).toString();\n}\nlet nodeTypePropertyMap = {\n    atrule: \"params\",\n    decl: \"value\"\n};\n/**\n * @param {string} path\n * @returns {Iterable<[path: string, alpha: string|undefined]>}\n */ function* toPaths(path) {\n    // Strip quotes from beginning and end of string\n    // This allows the alpha value to be present inside of quotes\n    path = path.replace(/^['\"]+|['\"]+$/g, \"\");\n    let matches = path.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]+))$/);\n    let alpha = undefined;\n    yield [\n        path,\n        undefined\n    ];\n    if (matches) {\n        path = matches[1];\n        alpha = matches[2];\n        yield [\n            path,\n            alpha\n        ];\n    }\n}\n/**\n *\n * @param {any} config\n * @param {string} path\n * @param {any} defaultValue\n */ function resolvePath(config, path, defaultValue) {\n    const results = Array.from(toPaths(path)).map(([path, alpha])=>{\n        return Object.assign(validatePath(config, path, defaultValue, {\n            opacityValue: alpha\n        }), {\n            resolvedPath: path,\n            alpha\n        });\n    });\n    var _results_find;\n    return (_results_find = results.find((result)=>result.isValid)) !== null && _results_find !== void 0 ? _results_find : results[0];\n}\nfunction _default(context) {\n    let config = context.tailwindConfig;\n    let functions = {\n        theme: (node, path, ...defaultValue)=>{\n            let { isValid , value , error , alpha  } = resolvePath(config, path, defaultValue.length ? defaultValue : undefined);\n            if (!isValid) {\n                var _parentNode_raws_tailwind;\n                let parentNode = node.parent;\n                let candidate = (_parentNode_raws_tailwind = parentNode === null || parentNode === void 0 ? void 0 : parentNode.raws.tailwind) === null || _parentNode_raws_tailwind === void 0 ? void 0 : _parentNode_raws_tailwind.candidate;\n                if (parentNode && candidate !== undefined) {\n                    // Remove this utility from any caches\n                    context.markInvalidUtilityNode(parentNode);\n                    // Remove the CSS node from the markup\n                    parentNode.remove();\n                    // Show a warning\n                    _log.default.warn(\"invalid-theme-key-in-class\", [\n                        `The utility \\`${candidate}\\` contains an invalid theme value and was not generated.`\n                    ]);\n                    return;\n                }\n                throw node.error(error);\n            }\n            let maybeColor = (0, _pluginUtils.parseColorFormat)(value);\n            let isColorFunction = maybeColor !== undefined && typeof maybeColor === \"function\";\n            if (alpha !== undefined || isColorFunction) {\n                if (alpha === undefined) {\n                    alpha = 1.0;\n                }\n                value = (0, _withAlphaVariable.withAlphaValue)(maybeColor, alpha, maybeColor);\n            }\n            return value;\n        },\n        screen: (node, screen)=>{\n            screen = screen.replace(/^['\"]+/g, \"\").replace(/['\"]+$/g, \"\");\n            let screens = (0, _normalizeScreens.normalizeScreens)(config.theme.screens);\n            let screenDefinition = screens.find(({ name  })=>name === screen);\n            if (!screenDefinition) {\n                throw node.error(`The '${screen}' screen does not exist in your theme.`);\n            }\n            return (0, _buildMediaQuery.default)(screenDefinition);\n        }\n    };\n    return (root)=>{\n        root.walk((node)=>{\n            let property = nodeTypePropertyMap[node.type];\n            if (property === undefined) {\n                return;\n            }\n            node[property] = resolveFunctions(node, node[property], functions);\n        });\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>expandApplyAtRules\n});\nconst _postcss = /*#__PURE__*/ _interopRequireDefault(require(\"postcss\"));\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nconst _generateRules = require(\"./generateRules\");\nconst _escapeClassName = /*#__PURE__*/ _interopRequireDefault(require(\"../util/escapeClassName\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/** @typedef {Map<string, [any, import('postcss').Rule[]]>} ApplyCache */ function extractClasses(node) {\n    /** @type {Map<string, Set<string>>} */ let groups = new Map();\n    let container = _postcss.default.root({\n        nodes: [\n            node.clone()\n        ]\n    });\n    container.walkRules((rule)=>{\n        (0, _postcssSelectorParser.default)((selectors)=>{\n            selectors.walkClasses((classSelector)=>{\n                let parentSelector = classSelector.parent.toString();\n                let classes = groups.get(parentSelector);\n                if (!classes) {\n                    groups.set(parentSelector, classes = new Set());\n                }\n                classes.add(classSelector.value);\n            });\n        }).processSync(rule.selector);\n    });\n    let normalizedGroups = Array.from(groups.values(), (classes)=>Array.from(classes));\n    let classes = normalizedGroups.flat();\n    return Object.assign(classes, {\n        groups: normalizedGroups\n    });\n}\nlet selectorExtractor = (0, _postcssSelectorParser.default)();\n/**\n * @param {string} ruleSelectors\n */ function extractSelectors(ruleSelectors) {\n    return selectorExtractor.astSync(ruleSelectors);\n}\nfunction extractBaseCandidates(candidates, separator) {\n    let baseClasses = new Set();\n    for (let candidate of candidates){\n        baseClasses.add(candidate.split(separator).pop());\n    }\n    return Array.from(baseClasses);\n}\nfunction prefix(context, selector) {\n    let prefix = context.tailwindConfig.prefix;\n    return typeof prefix === \"function\" ? prefix(selector) : prefix + selector;\n}\nfunction* pathToRoot(node) {\n    yield node;\n    while(node.parent){\n        yield node.parent;\n        node = node.parent;\n    }\n}\n/**\n * Only clone the node itself and not its children\n *\n * @param {*} node\n * @param {*} overrides\n * @returns\n */ function shallowClone(node, overrides = {}) {\n    let children = node.nodes;\n    node.nodes = [];\n    let tmp = node.clone(overrides);\n    node.nodes = children;\n    return tmp;\n}\n/**\n * Clone just the nodes all the way to the top that are required to represent\n * this singular rule in the tree.\n *\n * For example, if we have CSS like this:\n * ```css\n * @media (min-width: 768px) {\n *   @supports (display: grid) {\n *     .foo {\n *       display: grid;\n *       grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n *     }\n *   }\n *\n *   @supports (backdrop-filter: blur(1px)) {\n *     .bar {\n *       backdrop-filter: blur(1px);\n *     }\n *   }\n *\n *   .baz {\n *     color: orange;\n *   }\n * }\n * ```\n *\n * And we're cloning `.bar` it'll return a cloned version of what's required for just that single node:\n *\n * ```css\n * @media (min-width: 768px) {\n *   @supports (backdrop-filter: blur(1px)) {\n *     .bar {\n *       backdrop-filter: blur(1px);\n *     }\n *   }\n * }\n * ```\n *\n * @param {import('postcss').Node} node\n */ function nestedClone(node) {\n    for (let parent of pathToRoot(node)){\n        if (node === parent) {\n            continue;\n        }\n        if (parent.type === \"root\") {\n            break;\n        }\n        node = shallowClone(parent, {\n            nodes: [\n                node\n            ]\n        });\n    }\n    return node;\n}\n/**\n * @param {import('postcss').Root} root\n */ function buildLocalApplyCache(root, context) {\n    /** @type {ApplyCache} */ let cache = new Map();\n    root.walkRules((rule)=>{\n        // Ignore rules generated by Tailwind\n        for (let node of pathToRoot(rule)){\n            var _node_raws_tailwind;\n            if (((_node_raws_tailwind = node.raws.tailwind) === null || _node_raws_tailwind === void 0 ? void 0 : _node_raws_tailwind.layer) !== undefined) {\n                return;\n            }\n        }\n        // Clone what's required to represent this singular rule in the tree\n        let container = nestedClone(rule);\n        let sort = context.offsets.create(\"user\");\n        for (let className of extractClasses(rule)){\n            let list = cache.get(className) || [];\n            cache.set(className, list);\n            list.push([\n                {\n                    layer: \"user\",\n                    sort,\n                    important: false\n                },\n                container\n            ]);\n        }\n    });\n    return cache;\n}\n/**\n * @returns {ApplyCache}\n */ function buildApplyCache(applyCandidates, context) {\n    for (let candidate of applyCandidates){\n        if (context.notClassCache.has(candidate) || context.applyClassCache.has(candidate)) {\n            continue;\n        }\n        if (context.classCache.has(candidate)) {\n            context.applyClassCache.set(candidate, context.classCache.get(candidate).map(([meta, rule])=>[\n                    meta,\n                    rule.clone()\n                ]));\n            continue;\n        }\n        let matches = Array.from((0, _generateRules.resolveMatches)(candidate, context));\n        if (matches.length === 0) {\n            context.notClassCache.add(candidate);\n            continue;\n        }\n        context.applyClassCache.set(candidate, matches);\n    }\n    return context.applyClassCache;\n}\n/**\n * Build a cache only when it's first used\n *\n * @param {() => ApplyCache} buildCacheFn\n * @returns {ApplyCache}\n */ function lazyCache(buildCacheFn) {\n    let cache = null;\n    return {\n        get: (name)=>{\n            cache = cache || buildCacheFn();\n            return cache.get(name);\n        },\n        has: (name)=>{\n            cache = cache || buildCacheFn();\n            return cache.has(name);\n        }\n    };\n}\n/**\n * Take a series of multiple caches and merge\n * them so they act like one large cache\n *\n * @param {ApplyCache[]} caches\n * @returns {ApplyCache}\n */ function combineCaches(caches) {\n    return {\n        get: (name)=>caches.flatMap((cache)=>cache.get(name) || []),\n        has: (name)=>caches.some((cache)=>cache.has(name))\n    };\n}\nfunction extractApplyCandidates(params) {\n    let candidates = params.split(/[\\s\\t\\n]+/g);\n    if (candidates[candidates.length - 1] === \"!important\") {\n        return [\n            candidates.slice(0, -1),\n            true\n        ];\n    }\n    return [\n        candidates,\n        false\n    ];\n}\nfunction processApply(root, context, localCache) {\n    let applyCandidates = new Set();\n    // Collect all @apply rules and candidates\n    let applies = [];\n    root.walkAtRules(\"apply\", (rule)=>{\n        let [candidates] = extractApplyCandidates(rule.params);\n        for (let util of candidates){\n            applyCandidates.add(util);\n        }\n        applies.push(rule);\n    });\n    // Start the @apply process if we have rules with @apply in them\n    if (applies.length === 0) {\n        return;\n    }\n    // Fill up some caches!\n    let applyClassCache = combineCaches([\n        localCache,\n        buildApplyCache(applyCandidates, context)\n    ]);\n    /**\n   * When we have an apply like this:\n   *\n   * .abc {\n   *    @apply hover:font-bold;\n   * }\n   *\n   * What we essentially will do is resolve to this:\n   *\n   * .abc {\n   *    @apply .hover\\:font-bold:hover {\n   *      font-weight: 500;\n   *    }\n   * }\n   *\n   * Notice that the to-be-applied class is `.hover\\:font-bold:hover` and that the utility candidate was `hover:font-bold`.\n   * What happens in this function is that we prepend a `.` and escape the candidate.\n   * This will result in `.hover\\:font-bold`\n   * Which means that we can replace `.hover\\:font-bold` with `.abc` in `.hover\\:font-bold:hover` resulting in `.abc:hover`\n   *\n   * @param {string} selector\n   * @param {string} utilitySelectors\n   * @param {string} candidate\n   */ function replaceSelector(selector, utilitySelectors, candidate) {\n        let selectorList = extractSelectors(selector);\n        let utilitySelectorsList = extractSelectors(utilitySelectors);\n        let candidateList = extractSelectors(`.${(0, _escapeClassName.default)(candidate)}`);\n        let candidateClass = candidateList.nodes[0].nodes[0];\n        selectorList.each((sel)=>{\n            /** @type {Set<import('postcss-selector-parser').Selector>} */ let replaced = new Set();\n            utilitySelectorsList.each((utilitySelector)=>{\n                let hasReplaced = false;\n                utilitySelector = utilitySelector.clone();\n                utilitySelector.walkClasses((node)=>{\n                    if (node.value !== candidateClass.value) {\n                        return;\n                    }\n                    // Don't replace multiple instances of the same class\n                    // This is theoretically correct but only partially\n                    // We'd need to generate every possible permutation of the replacement\n                    // For example with `.foo + .foo { … }` and `section { @apply foo; }`\n                    // We'd need to generate all of these:\n                    // - `.foo + .foo`\n                    // - `.foo + section`\n                    // - `section + .foo`\n                    // - `section + section`\n                    if (hasReplaced) {\n                        return;\n                    }\n                    // Since you can only `@apply` class names this is sufficient\n                    // We want to replace the matched class name with the selector the user is using\n                    // Ex: Replace `.text-blue-500` with `.foo.bar:is(.something-cool)`\n                    node.replaceWith(...sel.nodes.map((node)=>node.clone()));\n                    // Record that we did something and we want to use this new selector\n                    replaced.add(utilitySelector);\n                    hasReplaced = true;\n                });\n            });\n            // Sort tag names before class names (but only sort each group (separated by a combinator)\n            // separately and not in total)\n            // This happens when replacing `.bar` in `.foo.bar` with a tag like `section`\n            for (let sel1 of replaced){\n                let groups = [\n                    []\n                ];\n                for (let node of sel1.nodes){\n                    if (node.type === \"combinator\") {\n                        groups.push(node);\n                        groups.push([]);\n                    } else {\n                        let last = groups[groups.length - 1];\n                        last.push(node);\n                    }\n                }\n                sel1.nodes = [];\n                for (let group of groups){\n                    if (Array.isArray(group)) {\n                        group.sort((a, b)=>{\n                            if (a.type === \"tag\" && b.type === \"class\") {\n                                return -1;\n                            } else if (a.type === \"class\" && b.type === \"tag\") {\n                                return 1;\n                            } else if (a.type === \"class\" && b.type === \"pseudo\" && b.value.startsWith(\"::\")) {\n                                return -1;\n                            } else if (a.type === \"pseudo\" && a.value.startsWith(\"::\") && b.type === \"class\") {\n                                return 1;\n                            }\n                            return 0;\n                        });\n                    }\n                    sel1.nodes = sel1.nodes.concat(group);\n                }\n            }\n            sel.replaceWith(...replaced);\n        });\n        return selectorList.toString();\n    }\n    let perParentApplies = new Map();\n    // Collect all apply candidates and their rules\n    for (let apply of applies){\n        let [candidates] = perParentApplies.get(apply.parent) || [\n            [],\n            apply.source\n        ];\n        perParentApplies.set(apply.parent, [\n            candidates,\n            apply.source\n        ]);\n        let [applyCandidates1, important] = extractApplyCandidates(apply.params);\n        if (apply.parent.type === \"atrule\") {\n            if (apply.parent.name === \"screen\") {\n                let screenType = apply.parent.params;\n                throw apply.error(`@apply is not supported within nested at-rules like @screen. We suggest you write this as @apply ${applyCandidates1.map((c)=>`${screenType}:${c}`).join(\" \")} instead.`);\n            }\n            throw apply.error(`@apply is not supported within nested at-rules like @${apply.parent.name}. You can fix this by un-nesting @${apply.parent.name}.`);\n        }\n        for (let applyCandidate of applyCandidates1){\n            if ([\n                prefix(context, \"group\"),\n                prefix(context, \"peer\")\n            ].includes(applyCandidate)) {\n                // TODO: Link to specific documentation page with error code.\n                throw apply.error(`@apply should not be used with the '${applyCandidate}' utility`);\n            }\n            if (!applyClassCache.has(applyCandidate)) {\n                throw apply.error(`The \\`${applyCandidate}\\` class does not exist. If \\`${applyCandidate}\\` is a custom class, make sure it is defined within a \\`@layer\\` directive.`);\n            }\n            let rules = applyClassCache.get(applyCandidate);\n            candidates.push([\n                applyCandidate,\n                important,\n                rules\n            ]);\n        }\n    }\n    for (let [parent, [candidates1, atApplySource]] of perParentApplies){\n        let siblings = [];\n        for (let [applyCandidate1, important1, rules1] of candidates1){\n            let potentialApplyCandidates = [\n                applyCandidate1,\n                ...extractBaseCandidates([\n                    applyCandidate1\n                ], context.tailwindConfig.separator)\n            ];\n            for (let [meta, node] of rules1){\n                let parentClasses = extractClasses(parent);\n                let nodeClasses = extractClasses(node);\n                // When we encounter a rule like `.dark .a, .b { … }` we only want to be left with `[.dark, .a]` if the base applyCandidate is `.a` or with `[.b]` if the base applyCandidate is `.b`\n                // So we've split them into groups\n                nodeClasses = nodeClasses.groups.filter((classList)=>classList.some((className)=>potentialApplyCandidates.includes(className))).flat();\n                // Add base utility classes from the @apply node to the list of\n                // classes to check whether it intersects and therefore results in a\n                // circular dependency or not.\n                //\n                // E.g.:\n                // .foo {\n                //   @apply hover:a; // This applies \"a\" but with a modifier\n                // }\n                //\n                // We only have to do that with base classes of the `node`, not of the `parent`\n                // E.g.:\n                // .hover\\:foo {\n                //   @apply bar;\n                // }\n                // .bar {\n                //   @apply foo;\n                // }\n                //\n                // This should not result in a circular dependency because we are\n                // just applying `.foo` and the rule above is `.hover\\:foo` which is\n                // unrelated. However, if we were to apply `hover:foo` then we _did_\n                // have to include this one.\n                nodeClasses = nodeClasses.concat(extractBaseCandidates(nodeClasses, context.tailwindConfig.separator));\n                let intersects = parentClasses.some((selector)=>nodeClasses.includes(selector));\n                if (intersects) {\n                    throw node.error(`You cannot \\`@apply\\` the \\`${applyCandidate1}\\` utility here because it creates a circular dependency.`);\n                }\n                let root1 = _postcss.default.root({\n                    nodes: [\n                        node.clone()\n                    ]\n                });\n                // Make sure every node in the entire tree points back at the @apply rule that generated it\n                root1.walk((node)=>{\n                    node.source = atApplySource;\n                });\n                let canRewriteSelector = node.type !== \"atrule\" || node.type === \"atrule\" && node.name !== \"keyframes\";\n                if (canRewriteSelector) {\n                    root1.walkRules((rule)=>{\n                        // Let's imagine you have the following structure:\n                        //\n                        // .foo {\n                        //   @apply bar;\n                        // }\n                        //\n                        // @supports (a: b) {\n                        //   .bar {\n                        //     color: blue\n                        //   }\n                        //\n                        //   .something-unrelated {}\n                        // }\n                        //\n                        // In this case we want to apply `.bar` but it happens to be in\n                        // an atrule node. We clone that node instead of the nested one\n                        // because we still want that @supports rule to be there once we\n                        // applied everything.\n                        //\n                        // However it happens to be that the `.something-unrelated` is\n                        // also in that same shared @supports atrule. This is not good,\n                        // and this should not be there. The good part is that this is\n                        // a clone already and it can be safely removed. The question is\n                        // how do we know we can remove it. Basically what we can do is\n                        // match it against the applyCandidate that you want to apply. If\n                        // it doesn't match the we can safely delete it.\n                        //\n                        // If we didn't do this, then the `replaceSelector` function\n                        // would have replaced this with something that didn't exist and\n                        // therefore it removed the selector altogether. In this specific\n                        // case it would result in `{}` instead of `.something-unrelated {}`\n                        if (!extractClasses(rule).some((candidate)=>candidate === applyCandidate1)) {\n                            rule.remove();\n                            return;\n                        }\n                        // Strip the important selector from the parent selector if at the beginning\n                        let importantSelector = typeof context.tailwindConfig.important === \"string\" ? context.tailwindConfig.important : null;\n                        // We only want to move the \"important\" selector if this is a Tailwind-generated utility\n                        // We do *not* want to do this for user CSS that happens to be structured the same\n                        let isGenerated = parent.raws.tailwind !== undefined;\n                        let parentSelector = isGenerated && importantSelector && parent.selector.indexOf(importantSelector) === 0 ? parent.selector.slice(importantSelector.length) : parent.selector;\n                        rule.selector = replaceSelector(parentSelector, rule.selector, applyCandidate1);\n                        // And then re-add it if it was removed\n                        if (importantSelector && parentSelector !== parent.selector) {\n                            rule.selector = `${importantSelector} ${rule.selector}`;\n                        }\n                        rule.walkDecls((d)=>{\n                            d.important = meta.important || important1;\n                        });\n                    });\n                }\n                // It could be that the node we were inserted was removed because the class didn't match\n                // If that was the *only* rule in the parent, then we have nothing add so we skip it\n                if (!root1.nodes[0]) {\n                    continue;\n                }\n                // Insert it\n                siblings.push([\n                    meta.sort,\n                    root1.nodes[0]\n                ]);\n            }\n        }\n        // Inject the rules, sorted, correctly\n        let nodes = context.offsets.sort(siblings).map((s)=>s[1]);\n        // `parent` refers to the node at `.abc` in: .abc { @apply mt-2 }\n        parent.after(nodes);\n    }\n    for (let apply1 of applies){\n        // If there are left-over declarations, just remove the @apply\n        if (apply1.parent.nodes.length > 1) {\n            apply1.remove();\n        } else {\n            // The node is empty, drop the full node\n            apply1.parent.remove();\n        }\n    }\n    // Do it again, in case we have other `@apply` rules\n    processApply(root, context, localCache);\n}\nfunction expandApplyAtRules(context) {\n    return (root)=>{\n        // Build a cache of the user's CSS so we can use it to resolve classes used by @apply\n        let localCache = lazyCache(()=>buildLocalApplyCache(root, context));\n        processApply(root, context, localCache);\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>expandTailwindAtRules\n});\nconst _fs = /*#__PURE__*/ _interopRequireDefault(require(\"fs\"));\nconst _quickLru = /*#__PURE__*/ _interopRequireDefault(require(\"quick-lru\"));\nconst _sharedState = /*#__PURE__*/ _interopRequireWildcard(require(\"./sharedState\"));\nconst _generateRules = require(\"./generateRules\");\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"../util/log\"));\nconst _cloneNodes = /*#__PURE__*/ _interopRequireDefault(require(\"../util/cloneNodes\"));\nconst _defaultExtractor = require(\"./defaultExtractor\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nlet env = _sharedState.env;\nconst builtInExtractors = {\n    DEFAULT: _defaultExtractor.defaultExtractor\n};\nconst builtInTransformers = {\n    DEFAULT: (content)=>content,\n    svelte: (content)=>content.replace(/(?:^|\\s)class:/g, \" \")\n};\nfunction getExtractor(context, fileExtension) {\n    let extractors = context.tailwindConfig.content.extract;\n    return extractors[fileExtension] || extractors.DEFAULT || builtInExtractors[fileExtension] || builtInExtractors.DEFAULT(context);\n}\nfunction getTransformer(tailwindConfig, fileExtension) {\n    let transformers = tailwindConfig.content.transform;\n    return transformers[fileExtension] || transformers.DEFAULT || builtInTransformers[fileExtension] || builtInTransformers.DEFAULT;\n}\nlet extractorCache = new WeakMap();\n// Scans template contents for possible classes. This is a hot path on initial build but\n// not too important for subsequent builds. The faster the better though — if we can speed\n// up these regexes by 50% that could cut initial build time by like 20%.\nfunction getClassCandidates(content, extractor, candidates, seen) {\n    if (!extractorCache.has(extractor)) {\n        extractorCache.set(extractor, new _quickLru.default({\n            maxSize: 25000\n        }));\n    }\n    for (let line of content.split(\"\\n\")){\n        line = line.trim();\n        if (seen.has(line)) {\n            continue;\n        }\n        seen.add(line);\n        if (extractorCache.get(extractor).has(line)) {\n            for (let match of extractorCache.get(extractor).get(line)){\n                candidates.add(match);\n            }\n        } else {\n            let extractorMatches = extractor(line).filter((s)=>s !== \"!*\");\n            let lineMatchesSet = new Set(extractorMatches);\n            for (let match1 of lineMatchesSet){\n                candidates.add(match1);\n            }\n            extractorCache.get(extractor).set(line, lineMatchesSet);\n        }\n    }\n}\n/**\n *\n * @param {[import('./offsets.js').RuleOffset, import('postcss').Node][]} rules\n * @param {*} context\n */ function buildStylesheet(rules, context) {\n    let sortedRules = context.offsets.sort(rules);\n    let returnValue = {\n        base: new Set(),\n        defaults: new Set(),\n        components: new Set(),\n        utilities: new Set(),\n        variants: new Set()\n    };\n    for (let [sort, rule] of sortedRules){\n        returnValue[sort.layer].add(rule);\n    }\n    return returnValue;\n}\nfunction expandTailwindAtRules(context) {\n    return (root)=>{\n        let layerNodes = {\n            base: null,\n            components: null,\n            utilities: null,\n            variants: null\n        };\n        root.walkAtRules((rule)=>{\n            // Make sure this file contains Tailwind directives. If not, we can save\n            // a lot of work and bail early. Also we don't have to register our touch\n            // file as a dependency since the output of this CSS does not depend on\n            // the source of any templates. Think Vue <style> blocks for example.\n            if (rule.name === \"tailwind\") {\n                if (Object.keys(layerNodes).includes(rule.params)) {\n                    layerNodes[rule.params] = rule;\n                }\n            }\n        });\n        if (Object.values(layerNodes).every((n)=>n === null)) {\n            return root;\n        }\n        var _context_candidates;\n        // ---\n        // Find potential rules in changed files\n        let candidates = new Set([\n            ...(_context_candidates = context.candidates) !== null && _context_candidates !== void 0 ? _context_candidates : [],\n            _sharedState.NOT_ON_DEMAND\n        ]);\n        let seen = new Set();\n        env.DEBUG && console.time(\"Reading changed files\");\n        if (env.OXIDE) {\n            // TODO: Pass through or implement `extractor`\n            for (let candidate of require(\"@tailwindcss/oxide\").parseCandidateStringsFromFiles(context.changedContent)){\n                candidates.add(candidate);\n            }\n        // for (let { file, content, extension } of context.changedContent) {\n        //   let transformer = getTransformer(context.tailwindConfig, extension)\n        //   let extractor = getExtractor(context, extension)\n        //   getClassCandidatesOxide(file, transformer(content), extractor, candidates, seen)\n        // }\n        } else {\n            for (let { file , content , extension  } of context.changedContent){\n                let transformer = getTransformer(context.tailwindConfig, extension);\n                let extractor = getExtractor(context, extension);\n                content = file ? _fs.default.readFileSync(file, \"utf8\") : content;\n                getClassCandidates(transformer(content), extractor, candidates, seen);\n            }\n        }\n        env.DEBUG && console.timeEnd(\"Reading changed files\");\n        // ---\n        // Generate the actual CSS\n        let classCacheCount = context.classCache.size;\n        env.DEBUG && console.time(\"Generate rules\");\n        env.DEBUG && console.time(\"Sorting candidates\");\n        let sortedCandidates = env.OXIDE ? candidates : new Set([\n            ...candidates\n        ].sort((a, z)=>{\n            if (a === z) return 0;\n            if (a < z) return -1;\n            return 1;\n        }));\n        env.DEBUG && console.timeEnd(\"Sorting candidates\");\n        (0, _generateRules.generateRules)(sortedCandidates, context);\n        env.DEBUG && console.timeEnd(\"Generate rules\");\n        // We only ever add to the classCache, so if it didn't grow, there is nothing new.\n        env.DEBUG && console.time(\"Build stylesheet\");\n        if (context.stylesheetCache === null || context.classCache.size !== classCacheCount) {\n            context.stylesheetCache = buildStylesheet([\n                ...context.ruleCache\n            ], context);\n        }\n        env.DEBUG && console.timeEnd(\"Build stylesheet\");\n        let { defaults: defaultNodes , base: baseNodes , components: componentNodes , utilities: utilityNodes , variants: screenNodes  } = context.stylesheetCache;\n        // ---\n        // Replace any Tailwind directives with generated CSS\n        if (layerNodes.base) {\n            layerNodes.base.before((0, _cloneNodes.default)([\n                ...baseNodes,\n                ...defaultNodes\n            ], layerNodes.base.source, {\n                layer: \"base\"\n            }));\n            layerNodes.base.remove();\n        }\n        if (layerNodes.components) {\n            layerNodes.components.before((0, _cloneNodes.default)([\n                ...componentNodes\n            ], layerNodes.components.source, {\n                layer: \"components\"\n            }));\n            layerNodes.components.remove();\n        }\n        if (layerNodes.utilities) {\n            layerNodes.utilities.before((0, _cloneNodes.default)([\n                ...utilityNodes\n            ], layerNodes.utilities.source, {\n                layer: \"utilities\"\n            }));\n            layerNodes.utilities.remove();\n        }\n        // We do post-filtering to not alter the emitted order of the variants\n        const variantNodes = Array.from(screenNodes).filter((node)=>{\n            var _node_raws_tailwind;\n            const parentLayer = (_node_raws_tailwind = node.raws.tailwind) === null || _node_raws_tailwind === void 0 ? void 0 : _node_raws_tailwind.parentLayer;\n            if (parentLayer === \"components\") {\n                return layerNodes.components !== null;\n            }\n            if (parentLayer === \"utilities\") {\n                return layerNodes.utilities !== null;\n            }\n            return true;\n        });\n        if (layerNodes.variants) {\n            layerNodes.variants.before((0, _cloneNodes.default)(variantNodes, layerNodes.variants.source, {\n                layer: \"variants\"\n            }));\n            layerNodes.variants.remove();\n        } else if (variantNodes.length > 0) {\n            root.append((0, _cloneNodes.default)(variantNodes, root.source, {\n                layer: \"variants\"\n            }));\n        }\n        // If we've got a utility layer and no utilities are generated there's likely something wrong\n        const hasUtilityVariants = variantNodes.some((node)=>{\n            var _node_raws_tailwind;\n            return ((_node_raws_tailwind = node.raws.tailwind) === null || _node_raws_tailwind === void 0 ? void 0 : _node_raws_tailwind.parentLayer) === \"utilities\";\n        });\n        if (layerNodes.utilities && utilityNodes.size === 0 && !hasUtilityVariants) {\n            _log.default.warn(\"content-problems\", [\n                \"No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.\",\n                \"https://tailwindcss.com/docs/content-configuration\"\n            ]);\n        }\n        // ---\n        if (env.DEBUG) {\n            console.log(\"Potential classes: \", candidates.size);\n            console.log(\"Active contexts: \", _sharedState.contextSourcesMap.size);\n        }\n        // Clear the cache for the changed files\n        context.changedContent = [];\n        // Cleanup any leftover @layer atrules\n        root.walkAtRules(\"layer\", (rule)=>{\n            if (Object.keys(layerNodes).includes(rule.params)) {\n                rule.remove();\n            }\n        });\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"findAtConfigPath\", {\n    enumerable: true,\n    get: ()=>findAtConfigPath\n});\nconst _fs = /*#__PURE__*/ _interopRequireDefault(require(\"fs\"));\nconst _path = /*#__PURE__*/ _interopRequireDefault(require(\"path\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction findAtConfigPath(root, result) {\n    let configPath = null;\n    let relativeTo = null;\n    root.walkAtRules(\"config\", (rule)=>{\n        var _rule_source;\n        var _rule_source_input_file, _ref;\n        relativeTo = (_ref = (_rule_source_input_file = (_rule_source = rule.source) === null || _rule_source === void 0 ? void 0 : _rule_source.input.file) !== null && _rule_source_input_file !== void 0 ? _rule_source_input_file : result.opts.from) !== null && _ref !== void 0 ? _ref : null;\n        if (relativeTo === null) {\n            throw rule.error(\"The `@config` directive cannot be used without setting `from` in your PostCSS config.\");\n        }\n        if (configPath) {\n            throw rule.error(\"Only one `@config` directive is allowed per file.\");\n        }\n        let matches = rule.params.match(/(['\"])(.*?)\\1/);\n        if (!matches) {\n            throw rule.error(\"A path is required when using the `@config` directive.\");\n        }\n        let inputPath = matches[2];\n        if (_path.default.isAbsolute(inputPath)) {\n            throw rule.error(\"The `@config` directive cannot be used with an absolute path.\");\n        }\n        configPath = _path.default.resolve(_path.default.dirname(relativeTo), inputPath);\n        if (!_fs.default.existsSync(configPath)) {\n            throw rule.error(`The config file at \"${inputPath}\" does not exist. Make sure the path is correct and the file exists.`);\n        }\n        rule.remove();\n    });\n    return configPath ? configPath : null;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getClassNameFromSelector: ()=>getClassNameFromSelector,\n    resolveMatches: ()=>resolveMatches,\n    generateRules: ()=>generateRules\n});\nconst _postcss = /*#__PURE__*/ _interopRequireDefault(require(\"postcss\"));\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nconst _parseObjectStyles = /*#__PURE__*/ _interopRequireDefault(require(\"../util/parseObjectStyles\"));\nconst _isPlainObject = /*#__PURE__*/ _interopRequireDefault(require(\"../util/isPlainObject\"));\nconst _prefixSelector = /*#__PURE__*/ _interopRequireDefault(require(\"../util/prefixSelector\"));\nconst _pluginUtils = require(\"../util/pluginUtils\");\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"../util/log\"));\nconst _sharedState = /*#__PURE__*/ _interopRequireWildcard(require(\"./sharedState\"));\nconst _formatVariantSelector = require(\"../util/formatVariantSelector\");\nconst _nameClass = require(\"../util/nameClass\");\nconst _dataTypes = require(\"../util/dataTypes\");\nconst _setupContextUtils = require(\"./setupContextUtils\");\nconst _isSyntacticallyValidPropertyValue = /*#__PURE__*/ _interopRequireDefault(require(\"../util/isSyntacticallyValidPropertyValue\"));\nconst _splitAtTopLevelOnlyJs = require(\"../util/splitAtTopLevelOnly.js\");\nconst _featureFlags = require(\"../featureFlags\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nlet classNameParser = (0, _postcssSelectorParser.default)((selectors)=>{\n    return selectors.first.filter(({ type  })=>type === \"class\").pop().value;\n});\nfunction getClassNameFromSelector(selector) {\n    return classNameParser.transformSync(selector);\n}\n// Generate match permutations for a class candidate, like:\n// ['ring-offset-blue', '100']\n// ['ring-offset', 'blue-100']\n// ['ring', 'offset-blue-100']\n// Example with dynamic classes:\n// ['grid-cols', '[[linename],1fr,auto]']\n// ['grid', 'cols-[[linename],1fr,auto]']\nfunction* candidatePermutations(candidate) {\n    let lastIndex = Infinity;\n    while(lastIndex >= 0){\n        let dashIdx;\n        let wasSlash = false;\n        if (lastIndex === Infinity && candidate.endsWith(\"]\")) {\n            let bracketIdx = candidate.indexOf(\"[\");\n            // If character before `[` isn't a dash or a slash, this isn't a dynamic class\n            // eg. string[]\n            if (candidate[bracketIdx - 1] === \"-\") {\n                dashIdx = bracketIdx - 1;\n            } else if (candidate[bracketIdx - 1] === \"/\") {\n                dashIdx = bracketIdx - 1;\n                wasSlash = true;\n            } else {\n                dashIdx = -1;\n            }\n        } else if (lastIndex === Infinity && candidate.includes(\"/\")) {\n            dashIdx = candidate.lastIndexOf(\"/\");\n            wasSlash = true;\n        } else {\n            dashIdx = candidate.lastIndexOf(\"-\", lastIndex);\n        }\n        if (dashIdx < 0) {\n            break;\n        }\n        let prefix = candidate.slice(0, dashIdx);\n        let modifier = candidate.slice(wasSlash ? dashIdx : dashIdx + 1);\n        lastIndex = dashIdx - 1;\n        // TODO: This feels a bit hacky\n        if (prefix === \"\" || modifier === \"/\") {\n            continue;\n        }\n        yield [\n            prefix,\n            modifier\n        ];\n    }\n}\nfunction applyPrefix(matches, context) {\n    if (matches.length === 0 || context.tailwindConfig.prefix === \"\") {\n        return matches;\n    }\n    for (let match of matches){\n        let [meta] = match;\n        if (meta.options.respectPrefix) {\n            let container = _postcss.default.root({\n                nodes: [\n                    match[1].clone()\n                ]\n            });\n            let classCandidate = match[1].raws.tailwind.classCandidate;\n            container.walkRules((r)=>{\n                // If this is a negative utility with a dash *before* the prefix we\n                // have to ensure that the generated selector matches the candidate\n                // Not doing this will cause `-tw-top-1` to generate the class `.tw--top-1`\n                // The disconnect between candidate <-> class can cause @apply to hard crash.\n                let shouldPrependNegative = classCandidate.startsWith(\"-\");\n                r.selector = (0, _prefixSelector.default)(context.tailwindConfig.prefix, r.selector, shouldPrependNegative);\n            });\n            match[1] = container.nodes[0];\n        }\n    }\n    return matches;\n}\nfunction applyImportant(matches, classCandidate) {\n    if (matches.length === 0) {\n        return matches;\n    }\n    let result = [];\n    for (let [meta, rule] of matches){\n        let container = _postcss.default.root({\n            nodes: [\n                rule.clone()\n            ]\n        });\n        container.walkRules((r)=>{\n            let ast = (0, _postcssSelectorParser.default)().astSync(r.selector);\n            // Remove extraneous selectors that do not include the base candidate\n            ast.each((sel)=>(0, _formatVariantSelector.eliminateIrrelevantSelectors)(sel, classCandidate));\n            // Update all instances of the base candidate to include the important marker\n            (0, _pluginUtils.updateAllClasses)(ast, (className)=>className === classCandidate ? `!${className}` : className);\n            r.selector = ast.toString();\n            r.walkDecls((d)=>d.important = true);\n        });\n        result.push([\n            {\n                ...meta,\n                important: true\n            },\n            container.nodes[0]\n        ]);\n    }\n    return result;\n}\n// Takes a list of rule tuples and applies a variant like `hover`, sm`,\n// whatever to it. We used to do some extra caching here to avoid generating\n// a variant of the same rule more than once, but this was never hit because\n// we cache at the entire selector level further up the tree.\n//\n// Technically you can get a cache hit if you have `hover:focus:text-center`\n// and `focus:hover:text-center` in the same project, but it doesn't feel\n// worth the complexity for that case.\nfunction applyVariant(variant, matches, context) {\n    if (matches.length === 0) {\n        return matches;\n    }\n    /** @type {{modifier: string | null, value: string | null}} */ let args = {\n        modifier: null,\n        value: _sharedState.NONE\n    };\n    // Retrieve \"modifier\"\n    {\n        let [baseVariant, ...modifiers] = (0, _splitAtTopLevelOnlyJs.splitAtTopLevelOnly)(variant, \"/\");\n        // This is a hack to support variants with `/` in them, like `ar-1/10/20:text-red-500`\n        // In this case 1/10 is a value but /20 is a modifier\n        if (modifiers.length > 1) {\n            baseVariant = baseVariant + \"/\" + modifiers.slice(0, -1).join(\"/\");\n            modifiers = modifiers.slice(-1);\n        }\n        if (modifiers.length && !context.variantMap.has(variant)) {\n            variant = baseVariant;\n            args.modifier = modifiers[0];\n            if (!(0, _featureFlags.flagEnabled)(context.tailwindConfig, \"generalizedModifiers\")) {\n                return [];\n            }\n        }\n    }\n    // Retrieve \"arbitrary value\"\n    if (variant.endsWith(\"]\") && !variant.startsWith(\"[\")) {\n        // We either have:\n        //   @[200px]\n        //   group-[:hover]\n        //\n        // But we don't want:\n        //   @-[200px]        (`-` is incorrect)\n        //   group[:hover]    (`-` is missing)\n        let match = /(.)(-?)\\[(.*)\\]/g.exec(variant);\n        if (match) {\n            let [, char, seperator, value] = match;\n            // @-[200px] case\n            if (char === \"@\" && seperator === \"-\") return [];\n            // group[:hover] case\n            if (char !== \"@\" && seperator === \"\") return [];\n            variant = variant.replace(`${seperator}[${value}]`, \"\");\n            args.value = value;\n        }\n    }\n    // Register arbitrary variants\n    if (isArbitraryValue(variant) && !context.variantMap.has(variant)) {\n        let selector = (0, _dataTypes.normalize)(variant.slice(1, -1));\n        if (!(0, _setupContextUtils.isValidVariantFormatString)(selector)) {\n            return [];\n        }\n        let fn = (0, _setupContextUtils.parseVariant)(selector);\n        let sort = context.offsets.recordVariant(variant);\n        context.variantMap.set(variant, [\n            [\n                sort,\n                fn\n            ]\n        ]);\n    }\n    if (context.variantMap.has(variant)) {\n        let isArbitraryVariant = isArbitraryValue(variant);\n        let variantFunctionTuples = context.variantMap.get(variant).slice();\n        let result = [];\n        for (let [meta, rule] of matches){\n            // Don't generate variants for user css\n            if (meta.layer === \"user\") {\n                continue;\n            }\n            let container = _postcss.default.root({\n                nodes: [\n                    rule.clone()\n                ]\n            });\n            for (let [variantSort, variantFunction, containerFromArray] of variantFunctionTuples){\n                let clone = (containerFromArray !== null && containerFromArray !== void 0 ? containerFromArray : container).clone();\n                let collectedFormats = [];\n                function prepareBackup() {\n                    // Already prepared, chicken out\n                    if (clone.raws.neededBackup) {\n                        return;\n                    }\n                    clone.raws.neededBackup = true;\n                    clone.walkRules((rule)=>rule.raws.originalSelector = rule.selector);\n                }\n                function modifySelectors(modifierFunction) {\n                    prepareBackup();\n                    clone.each((rule)=>{\n                        if (rule.type !== \"rule\") {\n                            return;\n                        }\n                        rule.selectors = rule.selectors.map((selector)=>{\n                            return modifierFunction({\n                                get className () {\n                                    return getClassNameFromSelector(selector);\n                                },\n                                selector\n                            });\n                        });\n                    });\n                    return clone;\n                }\n                let ruleWithVariant = variantFunction({\n                    // Public API\n                    get container () {\n                        prepareBackup();\n                        return clone;\n                    },\n                    separator: context.tailwindConfig.separator,\n                    modifySelectors,\n                    // Private API for now\n                    wrap (wrapper) {\n                        let nodes = clone.nodes;\n                        clone.removeAll();\n                        wrapper.append(nodes);\n                        clone.append(wrapper);\n                    },\n                    format (selectorFormat) {\n                        collectedFormats.push({\n                            format: selectorFormat,\n                            isArbitraryVariant\n                        });\n                    },\n                    args\n                });\n                // It can happen that a list of format strings is returned from within the function. In that\n                // case, we have to process them as well. We can use the existing `variantSort`.\n                if (Array.isArray(ruleWithVariant)) {\n                    for (let [idx, variantFunction1] of ruleWithVariant.entries()){\n                        // This is a little bit scary since we are pushing to an array of items that we are\n                        // currently looping over. However, you can also think of it like a processing queue\n                        // where you keep handling jobs until everything is done and each job can queue more\n                        // jobs if needed.\n                        variantFunctionTuples.push([\n                            context.offsets.applyParallelOffset(variantSort, idx),\n                            variantFunction1,\n                            // If the clone has been modified we have to pass that back\n                            // though so each rule can use the modified container\n                            clone.clone()\n                        ]);\n                    }\n                    continue;\n                }\n                if (typeof ruleWithVariant === \"string\") {\n                    collectedFormats.push({\n                        format: ruleWithVariant,\n                        isArbitraryVariant\n                    });\n                }\n                if (ruleWithVariant === null) {\n                    continue;\n                }\n                // We had to backup selectors, therefore we assume that somebody touched\n                // `container` or `modifySelectors`. Let's see if they did, so that we\n                // can restore the selectors, and collect the format strings.\n                if (clone.raws.neededBackup) {\n                    delete clone.raws.neededBackup;\n                    clone.walkRules((rule)=>{\n                        let before = rule.raws.originalSelector;\n                        if (!before) return;\n                        delete rule.raws.originalSelector;\n                        if (before === rule.selector) return; // No mutation happened\n                        let modified = rule.selector;\n                        // Rebuild the base selector, this is what plugin authors would do\n                        // as well. E.g.: `${variant}${separator}${className}`.\n                        // However, plugin authors probably also prepend or append certain\n                        // classes, pseudos, ids, ...\n                        let rebuiltBase = (0, _postcssSelectorParser.default)((selectors)=>{\n                            selectors.walkClasses((classNode)=>{\n                                classNode.value = `${variant}${context.tailwindConfig.separator}${classNode.value}`;\n                            });\n                        }).processSync(before);\n                        // Now that we know the original selector, the new selector, and\n                        // the rebuild part in between, we can replace the part that plugin\n                        // authors need to rebuild with `&`, and eventually store it in the\n                        // collectedFormats. Similar to what `format('...')` would do.\n                        //\n                        // E.g.:\n                        //                   variant: foo\n                        //                  selector: .markdown > p\n                        //      modified (by plugin): .foo .foo\\\\:markdown > p\n                        //    rebuiltBase (internal): .foo\\\\:markdown > p\n                        //                    format: .foo &\n                        collectedFormats.push({\n                            format: modified.replace(rebuiltBase, \"&\"),\n                            isArbitraryVariant\n                        });\n                        rule.selector = before;\n                    });\n                }\n                // This tracks the originating layer for the variant\n                // For example:\n                // .sm:underline {} is a variant of something in the utilities layer\n                // .sm:container {} is a variant of the container component\n                clone.nodes[0].raws.tailwind = {\n                    ...clone.nodes[0].raws.tailwind,\n                    parentLayer: meta.layer\n                };\n                var _meta_collectedFormats;\n                let withOffset = [\n                    {\n                        ...meta,\n                        sort: context.offsets.applyVariantOffset(meta.sort, variantSort, Object.assign(args, context.variantOptions.get(variant))),\n                        collectedFormats: ((_meta_collectedFormats = meta.collectedFormats) !== null && _meta_collectedFormats !== void 0 ? _meta_collectedFormats : []).concat(collectedFormats)\n                    },\n                    clone.nodes[0]\n                ];\n                result.push(withOffset);\n            }\n        }\n        return result;\n    }\n    return [];\n}\nfunction parseRules(rule, cache, options = {}) {\n    // PostCSS node\n    if (!(0, _isPlainObject.default)(rule) && !Array.isArray(rule)) {\n        return [\n            [\n                rule\n            ],\n            options\n        ];\n    }\n    // Tuple\n    if (Array.isArray(rule)) {\n        return parseRules(rule[0], cache, rule[1]);\n    }\n    // Simple object\n    if (!cache.has(rule)) {\n        cache.set(rule, (0, _parseObjectStyles.default)(rule));\n    }\n    return [\n        cache.get(rule),\n        options\n    ];\n}\nconst IS_VALID_PROPERTY_NAME = /^[a-z_-]/;\nfunction isValidPropName(name) {\n    return IS_VALID_PROPERTY_NAME.test(name);\n}\n/**\n * @param {string} declaration\n * @returns {boolean}\n */ function looksLikeUri(declaration) {\n    // Quick bailout for obvious non-urls\n    // This doesn't support schemes that don't use a leading // but that's unlikely to be a problem\n    if (!declaration.includes(\"://\")) {\n        return false;\n    }\n    try {\n        const url = new URL(declaration);\n        return url.scheme !== \"\" && url.host !== \"\";\n    } catch (err) {\n        // Definitely not a valid url\n        return false;\n    }\n}\nfunction isParsableNode(node) {\n    let isParsable = true;\n    node.walkDecls((decl)=>{\n        if (!isParsableCssValue(decl.prop, decl.value)) {\n            isParsable = false;\n            return false;\n        }\n    });\n    return isParsable;\n}\nfunction isParsableCssValue(property, value) {\n    // We don't want to to treat [https://example.com] as a custom property\n    // Even though, according to the CSS grammar, it's a totally valid CSS declaration\n    // So we short-circuit here by checking if the custom property looks like a url\n    if (looksLikeUri(`${property}:${value}`)) {\n        return false;\n    }\n    try {\n        _postcss.default.parse(`a{${property}:${value}}`).toResult();\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\nfunction extractArbitraryProperty(classCandidate, context) {\n    var _classCandidate_match;\n    let [, property, value] = (_classCandidate_match = classCandidate.match(/^\\[([a-zA-Z0-9-_]+):(\\S+)\\]$/)) !== null && _classCandidate_match !== void 0 ? _classCandidate_match : [];\n    if (value === undefined) {\n        return null;\n    }\n    if (!isValidPropName(property)) {\n        return null;\n    }\n    if (!(0, _isSyntacticallyValidPropertyValue.default)(value)) {\n        return null;\n    }\n    let normalized = (0, _dataTypes.normalize)(value);\n    if (!isParsableCssValue(property, normalized)) {\n        return null;\n    }\n    let sort = context.offsets.arbitraryProperty();\n    return [\n        [\n            {\n                sort,\n                layer: \"utilities\"\n            },\n            ()=>({\n                    [(0, _nameClass.asClass)(classCandidate)]: {\n                        [property]: normalized\n                    }\n                })\n        ]\n    ];\n}\nfunction* resolveMatchedPlugins(classCandidate, context) {\n    if (context.candidateRuleMap.has(classCandidate)) {\n        yield [\n            context.candidateRuleMap.get(classCandidate),\n            \"DEFAULT\"\n        ];\n    }\n    yield* function*(arbitraryPropertyRule) {\n        if (arbitraryPropertyRule !== null) {\n            yield [\n                arbitraryPropertyRule,\n                \"DEFAULT\"\n            ];\n        }\n    }(extractArbitraryProperty(classCandidate, context));\n    let candidatePrefix = classCandidate;\n    let negative = false;\n    const twConfigPrefix = context.tailwindConfig.prefix;\n    const twConfigPrefixLen = twConfigPrefix.length;\n    const hasMatchingPrefix = candidatePrefix.startsWith(twConfigPrefix) || candidatePrefix.startsWith(`-${twConfigPrefix}`);\n    if (candidatePrefix[twConfigPrefixLen] === \"-\" && hasMatchingPrefix) {\n        negative = true;\n        candidatePrefix = twConfigPrefix + candidatePrefix.slice(twConfigPrefixLen + 1);\n    }\n    if (negative && context.candidateRuleMap.has(candidatePrefix)) {\n        yield [\n            context.candidateRuleMap.get(candidatePrefix),\n            \"-DEFAULT\"\n        ];\n    }\n    for (let [prefix, modifier] of candidatePermutations(candidatePrefix)){\n        if (context.candidateRuleMap.has(prefix)) {\n            yield [\n                context.candidateRuleMap.get(prefix),\n                negative ? `-${modifier}` : modifier\n            ];\n        }\n    }\n}\nfunction splitWithSeparator(input, separator) {\n    if (input === _sharedState.NOT_ON_DEMAND) {\n        return [\n            _sharedState.NOT_ON_DEMAND\n        ];\n    }\n    return (0, _splitAtTopLevelOnlyJs.splitAtTopLevelOnly)(input, separator);\n}\nfunction* recordCandidates(matches, classCandidate) {\n    for (const match of matches){\n        var _match__options;\n        var _match__options_preserveSource;\n        match[1].raws.tailwind = {\n            ...match[1].raws.tailwind,\n            classCandidate,\n            preserveSource: (_match__options_preserveSource = (_match__options = match[0].options) === null || _match__options === void 0 ? void 0 : _match__options.preserveSource) !== null && _match__options_preserveSource !== void 0 ? _match__options_preserveSource : false\n        };\n        yield match;\n    }\n}\nfunction* resolveMatches(candidate, context, original = candidate) {\n    let separator = context.tailwindConfig.separator;\n    let [classCandidate, ...variants] = splitWithSeparator(candidate, separator).reverse();\n    let important = false;\n    if (classCandidate.startsWith(\"!\")) {\n        important = true;\n        classCandidate = classCandidate.slice(1);\n    }\n    if ((0, _featureFlags.flagEnabled)(context.tailwindConfig, \"variantGrouping\")) {\n        if (classCandidate.startsWith(\"(\") && classCandidate.endsWith(\")\")) {\n            let base = variants.slice().reverse().join(separator);\n            for (let part of (0, _splitAtTopLevelOnlyJs.splitAtTopLevelOnly)(classCandidate.slice(1, -1), \",\")){\n                yield* resolveMatches(base + separator + part, context, original);\n            }\n        }\n    }\n    // TODO: Reintroduce this in ways that doesn't break on false positives\n    // function sortAgainst(toSort, against) {\n    //   return toSort.slice().sort((a, z) => {\n    //     return bigSign(against.get(a)[0] - against.get(z)[0])\n    //   })\n    // }\n    // let sorted = sortAgainst(variants, context.variantMap)\n    // if (sorted.toString() !== variants.toString()) {\n    //   let corrected = sorted.reverse().concat(classCandidate).join(':')\n    //   throw new Error(`Class ${candidate} should be written as ${corrected}`)\n    // }\n    for (let matchedPlugins of resolveMatchedPlugins(classCandidate, context)){\n        let matches = [];\n        let typesByMatches = new Map();\n        let [plugins, modifier] = matchedPlugins;\n        let isOnlyPlugin = plugins.length === 1;\n        for (let [sort, plugin] of plugins){\n            let matchesPerPlugin = [];\n            if (typeof plugin === \"function\") {\n                for (let ruleSet of [].concat(plugin(modifier, {\n                    isOnlyPlugin\n                }))){\n                    let [rules, options] = parseRules(ruleSet, context.postCssNodeCache);\n                    for (let rule of rules){\n                        matchesPerPlugin.push([\n                            {\n                                ...sort,\n                                options: {\n                                    ...sort.options,\n                                    ...options\n                                }\n                            },\n                            rule\n                        ]);\n                    }\n                }\n            } else if (modifier === \"DEFAULT\" || modifier === \"-DEFAULT\") {\n                let ruleSet1 = plugin;\n                let [rules1, options1] = parseRules(ruleSet1, context.postCssNodeCache);\n                for (let rule1 of rules1){\n                    matchesPerPlugin.push([\n                        {\n                            ...sort,\n                            options: {\n                                ...sort.options,\n                                ...options1\n                            }\n                        },\n                        rule1\n                    ]);\n                }\n            }\n            if (matchesPerPlugin.length > 0) {\n                var _sort_options;\n                var _sort_options_types, _sort_options1;\n                let matchingTypes = Array.from((0, _pluginUtils.getMatchingTypes)((_sort_options_types = (_sort_options = sort.options) === null || _sort_options === void 0 ? void 0 : _sort_options.types) !== null && _sort_options_types !== void 0 ? _sort_options_types : [], modifier, (_sort_options1 = sort.options) !== null && _sort_options1 !== void 0 ? _sort_options1 : {}, context.tailwindConfig)).map(([_, type])=>type);\n                if (matchingTypes.length > 0) {\n                    typesByMatches.set(matchesPerPlugin, matchingTypes);\n                }\n                matches.push(matchesPerPlugin);\n            }\n        }\n        if (isArbitraryValue(modifier)) {\n            if (matches.length > 1) {\n                // Partition plugins in 2 categories so that we can start searching in the plugins that\n                // don't have `any` as a type first.\n                let [withAny, withoutAny] = matches.reduce((group, plugin)=>{\n                    let hasAnyType = plugin.some(([{ options  }])=>options.types.some(({ type  })=>type === \"any\"));\n                    if (hasAnyType) {\n                        group[0].push(plugin);\n                    } else {\n                        group[1].push(plugin);\n                    }\n                    return group;\n                }, [\n                    [],\n                    []\n                ]);\n                function findFallback(matches) {\n                    // If only a single plugin matches, let's take that one\n                    if (matches.length === 1) {\n                        return matches[0];\n                    }\n                    // Otherwise, find the plugin that creates a valid rule given the arbitrary value, and\n                    // also has the correct type which preferOnConflicts the plugin in case of clashes.\n                    return matches.find((rules)=>{\n                        let matchingTypes = typesByMatches.get(rules);\n                        return rules.some(([{ options  }, rule])=>{\n                            if (!isParsableNode(rule)) {\n                                return false;\n                            }\n                            return options.types.some(({ type , preferOnConflict  })=>matchingTypes.includes(type) && preferOnConflict);\n                        });\n                    });\n                }\n                var _findFallback;\n                // Try to find a fallback plugin, because we already know that multiple plugins matched for\n                // the given arbitrary value.\n                let fallback = (_findFallback = findFallback(withoutAny)) !== null && _findFallback !== void 0 ? _findFallback : findFallback(withAny);\n                if (fallback) {\n                    matches = [\n                        fallback\n                    ];\n                } else {\n                    var _typesByMatches_get;\n                    let typesPerPlugin = matches.map((match)=>new Set([\n                            ...(_typesByMatches_get = typesByMatches.get(match)) !== null && _typesByMatches_get !== void 0 ? _typesByMatches_get : []\n                        ]));\n                    // Remove duplicates, so that we can detect proper unique types for each plugin.\n                    for (let pluginTypes of typesPerPlugin){\n                        for (let type of pluginTypes){\n                            let removeFromOwnGroup = false;\n                            for (let otherGroup of typesPerPlugin){\n                                if (pluginTypes === otherGroup) continue;\n                                if (otherGroup.has(type)) {\n                                    otherGroup.delete(type);\n                                    removeFromOwnGroup = true;\n                                }\n                            }\n                            if (removeFromOwnGroup) pluginTypes.delete(type);\n                        }\n                    }\n                    let messages = [];\n                    for (let [idx, group] of typesPerPlugin.entries()){\n                        for (let type1 of group){\n                            let rules2 = matches[idx].map(([, rule])=>rule).flat().map((rule)=>rule.toString().split(\"\\n\").slice(1, -1) // Remove selector and closing '}'\n                                .map((line)=>line.trim()).map((x)=>`      ${x}`) // Re-indent\n                                .join(\"\\n\")).join(\"\\n\\n\");\n                            messages.push(`  Use \\`${candidate.replace(\"[\", `[${type1}:`)}\\` for \\`${rules2.trim()}\\``);\n                            break;\n                        }\n                    }\n                    _log.default.warn([\n                        `The class \\`${candidate}\\` is ambiguous and matches multiple utilities.`,\n                        ...messages,\n                        `If this is content and not a class, replace it with \\`${candidate.replace(\"[\", \"&lsqb;\").replace(\"]\", \"&rsqb;\")}\\` to silence this warning.`\n                    ]);\n                    continue;\n                }\n            }\n            matches = matches.map((list)=>list.filter((match)=>isParsableNode(match[1])));\n        }\n        matches = matches.flat();\n        matches = Array.from(recordCandidates(matches, classCandidate));\n        matches = applyPrefix(matches, context);\n        if (important) {\n            matches = applyImportant(matches, classCandidate);\n        }\n        for (let variant of variants){\n            matches = applyVariant(variant, matches, context);\n        }\n        for (let match of matches){\n            match[1].raws.tailwind = {\n                ...match[1].raws.tailwind,\n                candidate\n            };\n            // Apply final format selector\n            match = applyFinalFormat(match, {\n                context,\n                candidate,\n                original\n            });\n            // Skip rules with invalid selectors\n            // This will cause the candidate to be added to the \"not class\"\n            // cache skipping it entirely for future builds\n            if (match === null) {\n                continue;\n            }\n            yield match;\n        }\n    }\n}\nfunction applyFinalFormat(match, { context , candidate , original  }) {\n    if (!match[0].collectedFormats) {\n        return match;\n    }\n    let isValid = true;\n    let finalFormat;\n    try {\n        finalFormat = (0, _formatVariantSelector.formatVariantSelector)(match[0].collectedFormats, {\n            context,\n            candidate\n        });\n    } catch  {\n        // The format selector we produced is invalid\n        // This could be because:\n        // - A bug exists\n        // - A plugin introduced an invalid variant selector (ex: `addVariant('foo', '&;foo')`)\n        // - The user used an invalid arbitrary variant (ex: `[&;foo]:underline`)\n        // Either way the build will fail because of this\n        // We would rather that the build pass \"silently\" given that this could\n        // happen because of picking up invalid things when scanning content\n        // So we'll throw out the candidate instead\n        return null;\n    }\n    let container = _postcss.default.root({\n        nodes: [\n            match[1].clone()\n        ]\n    });\n    container.walkRules((rule)=>{\n        if (inKeyframes(rule)) {\n            return;\n        }\n        try {\n            rule.selector = (0, _formatVariantSelector.finalizeSelector)(rule.selector, finalFormat, {\n                candidate: original,\n                context\n            });\n        } catch  {\n            // If this selector is invalid we also want to skip it\n            // But it's likely that being invalid here means there's a bug in a plugin rather than too loosely matching content\n            isValid = false;\n            return false;\n        }\n    });\n    if (!isValid) {\n        return null;\n    }\n    match[1] = container.nodes[0];\n    return match;\n}\nfunction inKeyframes(rule) {\n    return rule.parent && rule.parent.type === \"atrule\" && rule.parent.name === \"keyframes\";\n}\nfunction getImportantStrategy(important) {\n    if (important === true) {\n        return (rule)=>{\n            if (inKeyframes(rule)) {\n                return;\n            }\n            rule.walkDecls((d)=>{\n                if (d.parent.type === \"rule\" && !inKeyframes(d.parent)) {\n                    d.important = true;\n                }\n            });\n        };\n    }\n    if (typeof important === \"string\") {\n        return (rule)=>{\n            if (inKeyframes(rule)) {\n                return;\n            }\n            rule.selectors = rule.selectors.map((selector)=>{\n                return `${important} ${selector}`;\n            });\n        };\n    }\n}\nfunction generateRules(candidates, context) {\n    let allRules = [];\n    let strategy = getImportantStrategy(context.tailwindConfig.important);\n    for (let candidate of candidates){\n        if (context.notClassCache.has(candidate)) {\n            continue;\n        }\n        if (context.candidateRuleCache.has(candidate)) {\n            allRules = allRules.concat(Array.from(context.candidateRuleCache.get(candidate)));\n            continue;\n        }\n        let matches = Array.from(resolveMatches(candidate, context));\n        if (matches.length === 0) {\n            context.notClassCache.add(candidate);\n            continue;\n        }\n        context.classCache.set(candidate, matches);\n        var _context_candidateRuleCache_get;\n        let rules = (_context_candidateRuleCache_get = context.candidateRuleCache.get(candidate)) !== null && _context_candidateRuleCache_get !== void 0 ? _context_candidateRuleCache_get : new Set();\n        context.candidateRuleCache.set(candidate, rules);\n        for (const match of matches){\n            let [{ sort , options  }, rule] = match;\n            if (options.respectImportant && strategy) {\n                let container = _postcss.default.root({\n                    nodes: [\n                        rule.clone()\n                    ]\n                });\n                container.walkRules(strategy);\n                rule = container.nodes[0];\n            }\n            let newEntry = [\n                sort,\n                rule\n            ];\n            rules.add(newEntry);\n            context.ruleCache.add(newEntry);\n            allRules.push(newEntry);\n        }\n    }\n    return allRules;\n}\nfunction isArbitraryValue(input) {\n    return input.startsWith(\"[\") && input.endsWith(\"]\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>getModuleDependencies\n});\nconst _fs = /*#__PURE__*/ _interopRequireDefault(require(\"fs\"));\nconst _path = /*#__PURE__*/ _interopRequireDefault(require(\"path\"));\nconst _resolve = /*#__PURE__*/ _interopRequireDefault(require(\"resolve\"));\nconst _detective = /*#__PURE__*/ _interopRequireDefault(require(\"detective\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction createModule(file) {\n    const source = _fs.default.readFileSync(file, \"utf-8\");\n    const requires = (0, _detective.default)(source);\n    return {\n        file,\n        requires\n    };\n}\nfunction getModuleDependencies(entryFile) {\n    const rootModule = createModule(entryFile);\n    const modules = [\n        rootModule\n    ];\n    // Iterate over the modules, even when new\n    // ones are being added\n    for (const mdl of modules){\n        mdl.requires.filter((dep)=>{\n            // Only track local modules, not node_modules\n            return dep.startsWith(\"./\") || dep.startsWith(\"../\");\n        }).forEach((dep)=>{\n            try {\n                const basedir = _path.default.dirname(mdl.file);\n                const depPath = _resolve.default.sync(dep, {\n                    basedir\n                });\n                const depModule = createModule(depPath);\n                modules.push(depModule);\n            } catch (_err) {\n            // eslint-disable-next-line no-empty\n            }\n        });\n    }\n    return modules;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>normalizeTailwindDirectives\n});\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"../util/log\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction normalizeTailwindDirectives(root) {\n    let tailwindDirectives = new Set();\n    let layerDirectives = new Set();\n    let applyDirectives = new Set();\n    root.walkAtRules((atRule)=>{\n        if (atRule.name === \"apply\") {\n            applyDirectives.add(atRule);\n        }\n        if (atRule.name === \"import\") {\n            if (atRule.params === '\"tailwindcss/base\"' || atRule.params === \"'tailwindcss/base'\") {\n                atRule.name = \"tailwind\";\n                atRule.params = \"base\";\n            } else if (atRule.params === '\"tailwindcss/components\"' || atRule.params === \"'tailwindcss/components'\") {\n                atRule.name = \"tailwind\";\n                atRule.params = \"components\";\n            } else if (atRule.params === '\"tailwindcss/utilities\"' || atRule.params === \"'tailwindcss/utilities'\") {\n                atRule.name = \"tailwind\";\n                atRule.params = \"utilities\";\n            } else if (atRule.params === '\"tailwindcss/screens\"' || atRule.params === \"'tailwindcss/screens'\" || atRule.params === '\"tailwindcss/variants\"' || atRule.params === \"'tailwindcss/variants'\") {\n                atRule.name = \"tailwind\";\n                atRule.params = \"variants\";\n            }\n        }\n        if (atRule.name === \"tailwind\") {\n            if (atRule.params === \"screens\") {\n                atRule.params = \"variants\";\n            }\n            tailwindDirectives.add(atRule.params);\n        }\n        if ([\n            \"layer\",\n            \"responsive\",\n            \"variants\"\n        ].includes(atRule.name)) {\n            if ([\n                \"responsive\",\n                \"variants\"\n            ].includes(atRule.name)) {\n                _log.default.warn(`${atRule.name}-at-rule-deprecated`, [\n                    `The \\`@${atRule.name}\\` directive has been deprecated in Tailwind CSS v3.0.`,\n                    `Use \\`@layer utilities\\` or \\`@layer components\\` instead.`,\n                    \"https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer\"\n                ]);\n            }\n            layerDirectives.add(atRule);\n        }\n    });\n    if (!tailwindDirectives.has(\"base\") || !tailwindDirectives.has(\"components\") || !tailwindDirectives.has(\"utilities\")) {\n        for (let rule of layerDirectives){\n            if (rule.name === \"layer\" && [\n                \"base\",\n                \"components\",\n                \"utilities\"\n            ].includes(rule.params)) {\n                if (!tailwindDirectives.has(rule.params)) {\n                    throw rule.error(`\\`@layer ${rule.params}\\` is used but no matching \\`@tailwind ${rule.params}\\` directive is present.`);\n                }\n            } else if (rule.name === \"responsive\") {\n                if (!tailwindDirectives.has(\"utilities\")) {\n                    throw rule.error(\"`@responsive` is used but `@tailwind utilities` is missing.\");\n                }\n            } else if (rule.name === \"variants\") {\n                if (!tailwindDirectives.has(\"utilities\")) {\n                    throw rule.error(\"`@variants` is used but `@tailwind utilities` is missing.\");\n                }\n            }\n        }\n    }\n    return {\n        tailwindDirectives,\n        applyDirectives\n    };\n}\n","// @ts-check\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"Offsets\", {\n    enumerable: true,\n    get: ()=>Offsets\n});\nconst _bigSign = /*#__PURE__*/ _interopRequireDefault(require(\"../util/bigSign\"));\nconst _remapBitfieldJs = require(\"./remap-bitfield.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nclass Offsets {\n    constructor(){\n        /**\n     * Offsets for the next rule in a given layer\n     *\n     * @type {Record<Layer, bigint>}\n     */ this.offsets = {\n            defaults: 0n,\n            base: 0n,\n            components: 0n,\n            utilities: 0n,\n            variants: 0n,\n            user: 0n\n        };\n        /**\n     * Positions for a given layer\n     *\n     * @type {Record<Layer, bigint>}\n     */ this.layerPositions = {\n            defaults: 0n,\n            base: 1n,\n            components: 2n,\n            utilities: 3n,\n            // There isn't technically a \"user\" layer, but we need to give it a position\n            // Because it's used for ordering user-css from @apply\n            user: 4n,\n            variants: 5n\n        };\n        /**\n     * The total number of functions currently registered across all variants (including arbitrary variants)\n     *\n     * @type {bigint}\n     */ this.reservedVariantBits = 0n;\n        /**\n     * Positions for a given variant\n     *\n     * @type {Map<string, bigint>}\n     */ this.variantOffsets = new Map();\n    }\n    /**\n   * @param {Layer} layer\n   * @returns {RuleOffset}\n   */ create(layer) {\n        return {\n            layer,\n            parentLayer: layer,\n            arbitrary: 0n,\n            variants: 0n,\n            parallelIndex: 0n,\n            index: this.offsets[layer]++,\n            options: []\n        };\n    }\n    /**\n   * @returns {RuleOffset}\n   */ arbitraryProperty() {\n        return {\n            ...this.create(\"utilities\"),\n            arbitrary: 1n\n        };\n    }\n    /**\n   * Get the offset for a variant\n   *\n   * @param {string} variant\n   * @param {number} index\n   * @returns {RuleOffset}\n   */ forVariant(variant, index = 0) {\n        let offset = this.variantOffsets.get(variant);\n        if (offset === undefined) {\n            throw new Error(`Cannot find offset for unknown variant ${variant}`);\n        }\n        return {\n            ...this.create(\"variants\"),\n            variants: offset << BigInt(index)\n        };\n    }\n    /**\n   * @param {RuleOffset} rule\n   * @param {RuleOffset} variant\n   * @param {VariantOption} options\n   * @returns {RuleOffset}\n   */ applyVariantOffset(rule, variant, options) {\n        options.variant = variant.variants;\n        return {\n            ...rule,\n            layer: \"variants\",\n            parentLayer: rule.layer === \"variants\" ? rule.parentLayer : rule.layer,\n            variants: rule.variants | variant.variants,\n            options: options.sort ? [].concat(options, rule.options) : rule.options,\n            // TODO: Technically this is wrong. We should be handling parallel index on a per variant basis.\n            // We'll take the max of all the parallel indexes for now.\n            // @ts-ignore\n            parallelIndex: max([\n                rule.parallelIndex,\n                variant.parallelIndex\n            ])\n        };\n    }\n    /**\n   * @param {RuleOffset} offset\n   * @param {number} parallelIndex\n   * @returns {RuleOffset}\n   */ applyParallelOffset(offset, parallelIndex) {\n        return {\n            ...offset,\n            parallelIndex: BigInt(parallelIndex)\n        };\n    }\n    /**\n   * Each variant gets 1 bit per function / rule registered.\n   * This is because multiple variants can be applied to a single rule and we need to know which ones are present and which ones are not.\n   * Additionally, every unique group of variants is grouped together in the stylesheet.\n   *\n   * This grouping is order-independent. For instance, we do not differentiate between `hover:focus` and `focus:hover`.\n   *\n   * @param {string[]} variants\n   * @param {(name: string) => number} getLength\n   */ recordVariants(variants, getLength) {\n        for (let variant of variants){\n            this.recordVariant(variant, getLength(variant));\n        }\n    }\n    /**\n   * The same as `recordVariants` but for a single arbitrary variant at runtime.\n   * @param {string} variant\n   * @param {number} fnCount\n   *\n   * @returns {RuleOffset} The highest offset for this variant\n   */ recordVariant(variant, fnCount = 1) {\n        this.variantOffsets.set(variant, 1n << this.reservedVariantBits);\n        // Ensure space is reserved for each \"function\" in the parallel variant\n        // by offsetting the next variant by the number of parallel variants\n        // in the one we just added.\n        // Single functions that return parallel variants are NOT handled separately here\n        // They're offset by 1 (or the number of functions) as usual\n        // And each rule returned is tracked separately since the functions are evaluated lazily.\n        // @see `RuleOffset.parallelIndex`\n        this.reservedVariantBits += BigInt(fnCount);\n        return {\n            ...this.create(\"variants\"),\n            variants: this.variantOffsets.get(variant)\n        };\n    }\n    /**\n   * @param {RuleOffset} a\n   * @param {RuleOffset} b\n   * @returns {bigint}\n   */ compare(a, b) {\n        // Sort layers together\n        if (a.layer !== b.layer) {\n            return this.layerPositions[a.layer] - this.layerPositions[b.layer];\n        }\n        // When sorting the `variants` layer, we need to sort based on the parent layer as well within\n        // this variants layer.\n        if (a.parentLayer !== b.parentLayer) {\n            return this.layerPositions[a.parentLayer] - this.layerPositions[b.parentLayer];\n        }\n        // Sort based on the sorting function\n        for (let aOptions of a.options){\n            for (let bOptions of b.options){\n                if (aOptions.id !== bOptions.id) continue;\n                if (!aOptions.sort || !bOptions.sort) continue;\n                var _max;\n                let maxFnVariant = (_max = max([\n                    aOptions.variant,\n                    bOptions.variant\n                ])) !== null && _max !== void 0 ? _max : 0n;\n                // Create a mask of 0s from bits 1..N where N represents the mask of the Nth bit\n                let mask = ~(maxFnVariant | maxFnVariant - 1n);\n                let aVariantsAfterFn = a.variants & mask;\n                let bVariantsAfterFn = b.variants & mask;\n                // If the variants the same, we _can_ sort them\n                if (aVariantsAfterFn !== bVariantsAfterFn) {\n                    continue;\n                }\n                let result = aOptions.sort({\n                    value: aOptions.value,\n                    modifier: aOptions.modifier\n                }, {\n                    value: bOptions.value,\n                    modifier: bOptions.modifier\n                });\n                if (result !== 0) return result;\n            }\n        }\n        // Sort variants in the order they were registered\n        if (a.variants !== b.variants) {\n            return a.variants - b.variants;\n        }\n        // Make sure each rule returned by a parallel variant is sorted in ascending order\n        if (a.parallelIndex !== b.parallelIndex) {\n            return a.parallelIndex - b.parallelIndex;\n        }\n        // Always sort arbitrary properties after other utilities\n        if (a.arbitrary !== b.arbitrary) {\n            return a.arbitrary - b.arbitrary;\n        }\n        // Sort utilities, components, etc… in the order they were registered\n        return a.index - b.index;\n    }\n    /**\n   * Arbitrary variants are recorded in the order they're encountered.\n   * This means that the order is not stable between environments and sets of content files.\n   *\n   * In order to make the order stable, we need to remap the arbitrary variant offsets to\n   * be in alphabetical order starting from the offset of the first arbitrary variant.\n   */ recalculateVariantOffsets() {\n        // Sort the variants by their name\n        let variants = Array.from(this.variantOffsets.entries()).filter(([v])=>v.startsWith(\"[\")).sort(([a], [z])=>fastCompare(a, z));\n        // Sort the list of offsets\n        // This is not necessarily a discrete range of numbers which is why\n        // we're using sort instead of creating a range from min/max\n        let newOffsets = variants.map(([, offset])=>offset).sort((a, z)=>(0, _bigSign.default)(a - z));\n        // Create a map from the old offsets to the new offsets in the new sort order\n        /** @type {[bigint, bigint][]} */ let mapping = variants.map(([, oldOffset], i)=>[\n                oldOffset,\n                newOffsets[i]\n            ]);\n        // Remove any variants that will not move letting us skip\n        // remapping if everything happens to be in order\n        return mapping.filter(([a, z])=>a !== z);\n    }\n    /**\n   * @template T\n   * @param {[RuleOffset, T][]} list\n   * @returns {[RuleOffset, T][]}\n   */ remapArbitraryVariantOffsets(list) {\n        let mapping = this.recalculateVariantOffsets();\n        // No arbitrary variants? Nothing to do.\n        // Everyhing already in order? Nothing to do.\n        if (mapping.length === 0) {\n            return list;\n        }\n        // Remap every variant offset in the list\n        return list.map((item)=>{\n            let [offset, rule] = item;\n            offset = {\n                ...offset,\n                variants: (0, _remapBitfieldJs.remapBitfield)(offset.variants, mapping)\n            };\n            return [\n                offset,\n                rule\n            ];\n        });\n    }\n    /**\n   * @template T\n   * @param {[RuleOffset, T][]} list\n   * @returns {[RuleOffset, T][]}\n   */ sort(list) {\n        list = this.remapArbitraryVariantOffsets(list);\n        return list.sort(([a], [b])=>(0, _bigSign.default)(this.compare(a, b)));\n    }\n}\n/**\n *\n * @param {bigint[]} nums\n * @returns {bigint|null}\n */ function max(nums) {\n    let max = null;\n    for (const num of nums){\n        max = max !== null && max !== void 0 ? max : num;\n        max = max > num ? max : num;\n    }\n    return max;\n}\n/**\n * A fast ASCII order string comparison function.\n *\n * Using `.sort()` without a custom compare function is faster\n * But you can only use that if you're sorting an array of\n * only strings. If you're sorting strings inside objects\n * or arrays, you need must use a custom compare function.\n *\n * @param {string} a\n * @param {string} b\n */ function fastCompare(a, b) {\n    let aLen = a.length;\n    let bLen = b.length;\n    let minLen = aLen < bLen ? aLen : bLen;\n    for(let i = 0; i < minLen; i++){\n        let cmp = a.charCodeAt(i) - b.charCodeAt(i);\n        if (cmp !== 0) return cmp;\n    }\n    return aLen - bLen;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>expandApplyAtRules\n});\nfunction partitionRules(root) {\n    if (!root.walkAtRules) return;\n    let applyParents = new Set();\n    root.walkAtRules(\"apply\", (rule)=>{\n        applyParents.add(rule.parent);\n    });\n    if (applyParents.size === 0) {\n        return;\n    }\n    for (let rule of applyParents){\n        let nodeGroups = [];\n        let lastGroup = [];\n        for (let node of rule.nodes){\n            if (node.type === \"atrule\" && node.name === \"apply\") {\n                if (lastGroup.length > 0) {\n                    nodeGroups.push(lastGroup);\n                    lastGroup = [];\n                }\n                nodeGroups.push([\n                    node\n                ]);\n            } else {\n                lastGroup.push(node);\n            }\n        }\n        if (lastGroup.length > 0) {\n            nodeGroups.push(lastGroup);\n        }\n        if (nodeGroups.length === 1) {\n            continue;\n        }\n        for (let group of [\n            ...nodeGroups\n        ].reverse()){\n            let clone = rule.clone({\n                nodes: []\n            });\n            clone.append(group);\n            rule.after(clone);\n        }\n        rule.remove();\n    }\n}\nfunction expandApplyAtRules() {\n    return (root)=>{\n        partitionRules(root);\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    pattern: ()=>pattern,\n    withoutCapturing: ()=>withoutCapturing,\n    any: ()=>any,\n    optional: ()=>optional,\n    zeroOrMore: ()=>zeroOrMore,\n    nestedBrackets: ()=>nestedBrackets,\n    escape: ()=>escape\n});\nconst REGEX_SPECIAL = /[\\\\^$.*+?()[\\]{}|]/g;\nconst REGEX_HAS_SPECIAL = RegExp(REGEX_SPECIAL.source);\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */ function toSource(source) {\n    source = Array.isArray(source) ? source : [\n        source\n    ];\n    source = source.map((item)=>item instanceof RegExp ? item.source : item);\n    return source.join(\"\");\n}\nfunction pattern(source) {\n    return new RegExp(toSource(source), \"g\");\n}\nfunction withoutCapturing(source) {\n    return new RegExp(`(?:${toSource(source)})`, \"g\");\n}\nfunction any(sources) {\n    return `(?:${sources.map(toSource).join(\"|\")})`;\n}\nfunction optional(source) {\n    return `(?:${toSource(source)})?`;\n}\nfunction zeroOrMore(source) {\n    return `(?:${toSource(source)})*`;\n}\nfunction nestedBrackets(open, close, depth = 1) {\n    return withoutCapturing([\n        escape(open),\n        /[^\\s]*/,\n        depth === 1 ? `[^${escape(open)}${escape(close)}\\s]*` : any([\n            `[^${escape(open)}${escape(close)}\\s]*`,\n            nestedBrackets(open, close, depth - 1)\n        ]),\n        /[^\\s]*/,\n        escape(close)\n    ]);\n}\nfunction escape(string) {\n    return string && REGEX_HAS_SPECIAL.test(string) ? string.replace(REGEX_SPECIAL, \"\\\\$&\") : string || \"\";\n}\n","// @ts-check\n/**\n * We must remap all the old bits to new bits for each set variant\n * Only arbitrary variants are considered as those are the only\n * ones that need to be re-sorted at this time\n *\n * An iterated process that removes and sets individual bits simultaneously\n * will not work because we may have a new bit that is also a later old bit\n * This means that we would be removing a previously set bit which we don't\n * want to do\n *\n * For example (assume `bN` = `1<<N`)\n * Given the \"total\" mapping `[[b1, b3], [b2, b4], [b3, b1], [b4, b2]]`\n * The mapping is \"total\" because:\n * 1. Every input and output is accounted for\n * 2. All combinations are unique\n * 3. No one input maps to multiple outputs and vice versa\n * And, given an offset with all bits set:\n * V = b1 | b2 | b3 | b4\n *\n * Let's explore the issue with removing and setting bits simultaneously:\n * V & ~b1 | b3 = b2 | b3 | b4\n * V & ~b2 | b4 = b3 | b4\n * V & ~b3 | b1 = b1 | b4\n * V & ~b4 | b2 = b1 | b2\n *\n * As you can see, we end up with the wrong result.\n * This is because we're removing a bit that was previously set.\n * And, thus the final result is missing b3 and b4.\n *\n * Now, let's explore the issue with removing the bits first:\n * V & ~b1 = b2 | b3 | b4\n * V & ~b2 = b3 | b4\n * V & ~b3 = b4\n * V & ~b4 = 0\n *\n * And then setting the bits:\n * V | b3 = b3\n * V | b4 = b3 | b4\n * V | b1 = b1 | b3 | b4\n * V | b2 = b1 | b2 | b3 | b4\n *\n * We get the correct result because we're not removing any bits that were\n * previously set thus properly remapping the bits to the new order\n *\n * To collect this into a single operation that can be done simultaneously\n * we must first create a mask for the old bits that are set and a mask for\n * the new bits that are set. Then we can remove the old bits and set the new\n * bits simultaneously in a \"single\" operation like so:\n * OldMask = b1 | b2 | b3 | b4\n * NewMask = b3 | b4 | b1 | b2\n *\n * So this:\n * V & ~oldMask | newMask\n *\n * Expands to this:\n * V & ~b1 & ~b2 & ~b3 & ~b4 | b3 | b4 | b1 | b2\n *\n * Which becomes this:\n * b1 | b2 | b3 | b4\n *\n * Which is the correct result!\n *\n * @param {bigint} num\n * @param {[bigint, bigint][]} mapping\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"remapBitfield\", {\n    enumerable: true,\n    get: ()=>remapBitfield\n});\nfunction remapBitfield(num, mapping) {\n    // Create masks for the old and new bits that are set\n    let oldMask = 0n;\n    let newMask = 0n;\n    for (let [oldBit, newBit] of mapping){\n        if (num & oldBit) {\n            oldMask = oldMask | oldBit;\n            newMask = newMask | newBit;\n        }\n    }\n    // Remove all old bits\n    // Set all new bits\n    return num & ~oldMask | newMask;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    elementSelectorParser: ()=>elementSelectorParser,\n    default: ()=>resolveDefaultsAtRules\n});\nconst _postcss = /*#__PURE__*/ _interopRequireDefault(require(\"postcss\"));\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nconst _featureFlags = require(\"../featureFlags\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet getNode = {\n    id (node) {\n        return _postcssSelectorParser.default.attribute({\n            attribute: \"id\",\n            operator: \"=\",\n            value: node.value,\n            quoteMark: '\"'\n        });\n    }\n};\nfunction minimumImpactSelector(nodes) {\n    let rest = nodes.filter((node)=>{\n        // Keep non-pseudo nodes\n        if (node.type !== \"pseudo\") return true;\n        // Keep pseudo nodes that have subnodes\n        // E.g.: `:not()` contains subnodes inside the parentheses\n        if (node.nodes.length > 0) return true;\n        // Keep pseudo `elements`\n        // This implicitly means that we ignore pseudo `classes`\n        return node.value.startsWith(\"::\") || [\n            \":before\",\n            \":after\",\n            \":first-line\",\n            \":first-letter\"\n        ].includes(node.value);\n    }).reverse();\n    let searchFor = new Set([\n        \"tag\",\n        \"class\",\n        \"id\",\n        \"attribute\"\n    ]);\n    let splitPointIdx = rest.findIndex((n)=>searchFor.has(n.type));\n    if (splitPointIdx === -1) return rest.reverse().join(\"\").trim();\n    let node = rest[splitPointIdx];\n    let bestNode = getNode[node.type] ? getNode[node.type](node) : node;\n    rest = rest.slice(0, splitPointIdx);\n    let combinatorIdx = rest.findIndex((n)=>n.type === \"combinator\" && n.value === \">\");\n    if (combinatorIdx !== -1) {\n        rest.splice(0, combinatorIdx);\n        rest.unshift(_postcssSelectorParser.default.universal());\n    }\n    return [\n        bestNode,\n        ...rest.reverse()\n    ].join(\"\").trim();\n}\nlet elementSelectorParser = (0, _postcssSelectorParser.default)((selectors)=>{\n    return selectors.map((s)=>{\n        let nodes = s.split((n)=>n.type === \"combinator\" && n.value === \" \").pop();\n        return minimumImpactSelector(nodes);\n    });\n});\nlet cache = new Map();\nfunction extractElementSelector(selector) {\n    if (!cache.has(selector)) {\n        cache.set(selector, elementSelectorParser.transformSync(selector));\n    }\n    return cache.get(selector);\n}\nfunction resolveDefaultsAtRules({ tailwindConfig  }) {\n    return (root)=>{\n        let variableNodeMap = new Map();\n        /** @type {Set<import('postcss').AtRule>} */ let universals = new Set();\n        root.walkAtRules(\"defaults\", (rule)=>{\n            if (rule.nodes && rule.nodes.length > 0) {\n                universals.add(rule);\n                return;\n            }\n            let variable = rule.params;\n            if (!variableNodeMap.has(variable)) {\n                variableNodeMap.set(variable, new Set());\n            }\n            variableNodeMap.get(variable).add(rule.parent);\n            rule.remove();\n        });\n        if ((0, _featureFlags.flagEnabled)(tailwindConfig, \"optimizeUniversalDefaults\")) {\n            for (let universal of universals){\n                /** @type {Map<string, Set<string>>} */ let selectorGroups = new Map();\n                var _variableNodeMap_get;\n                let rules = (_variableNodeMap_get = variableNodeMap.get(universal.params)) !== null && _variableNodeMap_get !== void 0 ? _variableNodeMap_get : [];\n                for (let rule of rules){\n                    for (let selector of extractElementSelector(rule.selector)){\n                        // If selector contains a vendor prefix after a pseudo element or class,\n                        // we consider them separately because merging the declarations into\n                        // a single rule will cause browsers that do not understand the\n                        // vendor prefix to throw out the whole rule\n                        let selectorGroupName = selector.includes(\":-\") || selector.includes(\"::-\") ? selector : \"__DEFAULT__\";\n                        var _selectorGroups_get;\n                        let selectors = (_selectorGroups_get = selectorGroups.get(selectorGroupName)) !== null && _selectorGroups_get !== void 0 ? _selectorGroups_get : new Set();\n                        selectorGroups.set(selectorGroupName, selectors);\n                        selectors.add(selector);\n                    }\n                }\n                if ((0, _featureFlags.flagEnabled)(tailwindConfig, \"optimizeUniversalDefaults\")) {\n                    if (selectorGroups.size === 0) {\n                        universal.remove();\n                        continue;\n                    }\n                    for (let [, selectors1] of selectorGroups){\n                        let universalRule = _postcss.default.rule({\n                            source: universal.source\n                        });\n                        universalRule.selectors = [\n                            ...selectors1\n                        ];\n                        universalRule.append(universal.nodes.map((node)=>node.clone()));\n                        universal.before(universalRule);\n                    }\n                }\n                universal.remove();\n            }\n        } else if (universals.size) {\n            let universalRule1 = _postcss.default.rule({\n                selectors: [\n                    \"*\",\n                    \"::before\",\n                    \"::after\"\n                ]\n            });\n            for (let universal1 of universals){\n                universalRule1.append(universal1.nodes);\n                if (!universalRule1.parent) {\n                    universal1.before(universalRule1);\n                }\n                if (!universalRule1.source) {\n                    universalRule1.source = universal1.source;\n                }\n                universal1.remove();\n            }\n            let backdropRule = universalRule1.clone({\n                selectors: [\n                    \"::backdrop\"\n                ]\n            });\n            universalRule1.after(backdropRule);\n        }\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    isValidVariantFormatString: ()=>isValidVariantFormatString,\n    parseVariant: ()=>parseVariant,\n    getFileModifiedMap: ()=>getFileModifiedMap,\n    createContext: ()=>createContext,\n    getContext: ()=>getContext\n});\nconst _fs = /*#__PURE__*/ _interopRequireDefault(require(\"fs\"));\nconst _url = /*#__PURE__*/ _interopRequireDefault(require(\"url\"));\nconst _postcss = /*#__PURE__*/ _interopRequireDefault(require(\"postcss\"));\nconst _dlv = /*#__PURE__*/ _interopRequireDefault(require(\"dlv\"));\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nconst _transformThemeValue = /*#__PURE__*/ _interopRequireDefault(require(\"../util/transformThemeValue\"));\nconst _parseObjectStyles = /*#__PURE__*/ _interopRequireDefault(require(\"../util/parseObjectStyles\"));\nconst _prefixSelector = /*#__PURE__*/ _interopRequireDefault(require(\"../util/prefixSelector\"));\nconst _isPlainObject = /*#__PURE__*/ _interopRequireDefault(require(\"../util/isPlainObject\"));\nconst _escapeClassName = /*#__PURE__*/ _interopRequireDefault(require(\"../util/escapeClassName\"));\nconst _nameClass = /*#__PURE__*/ _interopRequireWildcard(require(\"../util/nameClass\"));\nconst _pluginUtils = require(\"../util/pluginUtils\");\nconst _corePlugins = require(\"../corePlugins\");\nconst _sharedState = /*#__PURE__*/ _interopRequireWildcard(require(\"./sharedState\"));\nconst _toPath = require(\"../util/toPath\");\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"../util/log\"));\nconst _negateValue = /*#__PURE__*/ _interopRequireDefault(require(\"../util/negateValue\"));\nconst _isSyntacticallyValidPropertyValue = /*#__PURE__*/ _interopRequireDefault(require(\"../util/isSyntacticallyValidPropertyValue\"));\nconst _generateRules = require(\"./generateRules\");\nconst _cacheInvalidationJs = require(\"./cacheInvalidation.js\");\nconst _offsetsJs = require(\"./offsets.js\");\nconst _featureFlagsJs = require(\"../featureFlags.js\");\nconst _formatVariantSelector = require(\"../util/formatVariantSelector\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst VARIANT_TYPES = {\n    AddVariant: Symbol.for(\"ADD_VARIANT\"),\n    MatchVariant: Symbol.for(\"MATCH_VARIANT\")\n};\nconst VARIANT_INFO = {\n    Base: 1 << 0,\n    Dynamic: 1 << 1\n};\nfunction prefix(context, selector) {\n    let prefix = context.tailwindConfig.prefix;\n    return typeof prefix === \"function\" ? prefix(selector) : prefix + selector;\n}\nfunction normalizeOptionTypes({ type =\"any\" , ...options }) {\n    let types = [].concat(type);\n    return {\n        ...options,\n        types: types.map((type)=>{\n            if (Array.isArray(type)) {\n                return {\n                    type: type[0],\n                    ...type[1]\n                };\n            }\n            return {\n                type,\n                preferOnConflict: false\n            };\n        })\n    };\n}\nfunction parseVariantFormatString(input) {\n    /** @type {string[]} */ let parts = [];\n    // When parsing whitespace around special characters are insignificant\n    // However, _inside_ of a variant they could be\n    // Because the selector could look like this\n    // @media { &[data-name=\"foo bar\"] }\n    // This is why we do not skip whitespace\n    let current = \"\";\n    let depth = 0;\n    for(let idx = 0; idx < input.length; idx++){\n        let char = input[idx];\n        if (char === \"\\\\\") {\n            // Escaped characters are not special\n            current += \"\\\\\" + input[++idx];\n        } else if (char === \"{\") {\n            // Nested rule: start\n            ++depth;\n            parts.push(current.trim());\n            current = \"\";\n        } else if (char === \"}\") {\n            // Nested rule: end\n            if (--depth < 0) {\n                throw new Error(`Your { and } are unbalanced.`);\n            }\n            parts.push(current.trim());\n            current = \"\";\n        } else {\n            // Normal character\n            current += char;\n        }\n    }\n    if (current.length > 0) {\n        parts.push(current.trim());\n    }\n    parts = parts.filter((part)=>part !== \"\");\n    return parts;\n}\nfunction insertInto(list, value, { before =[]  } = {}) {\n    before = [].concat(before);\n    if (before.length <= 0) {\n        list.push(value);\n        return;\n    }\n    let idx = list.length - 1;\n    for (let other of before){\n        let iidx = list.indexOf(other);\n        if (iidx === -1) continue;\n        idx = Math.min(idx, iidx);\n    }\n    list.splice(idx, 0, value);\n}\nfunction parseStyles(styles) {\n    if (!Array.isArray(styles)) {\n        return parseStyles([\n            styles\n        ]);\n    }\n    return styles.flatMap((style)=>{\n        let isNode = !Array.isArray(style) && !(0, _isPlainObject.default)(style);\n        return isNode ? style : (0, _parseObjectStyles.default)(style);\n    });\n}\nfunction getClasses(selector, mutate) {\n    let parser = (0, _postcssSelectorParser.default)((selectors)=>{\n        let allClasses = [];\n        if (mutate) {\n            mutate(selectors);\n        }\n        selectors.walkClasses((classNode)=>{\n            allClasses.push(classNode.value);\n        });\n        return allClasses;\n    });\n    return parser.transformSync(selector);\n}\nfunction extractCandidates(node, state = {\n    containsNonOnDemandable: false\n}, depth = 0) {\n    let classes = [];\n    // Handle normal rules\n    if (node.type === \"rule\") {\n        // Ignore everything inside a :not(...). This allows you to write code like\n        // `div:not(.foo)`. If `.foo` is never found in your code, then we used to\n        // not generated it. But now we will ignore everything inside a `:not`, so\n        // that it still gets generated.\n        function ignoreNot(selectors) {\n            selectors.walkPseudos((pseudo)=>{\n                if (pseudo.value === \":not\") {\n                    pseudo.remove();\n                }\n            });\n        }\n        for (let selector of node.selectors){\n            let classCandidates = getClasses(selector, ignoreNot);\n            // At least one of the selectors contains non-\"on-demandable\" candidates.\n            if (classCandidates.length === 0) {\n                state.containsNonOnDemandable = true;\n            }\n            for (let classCandidate of classCandidates){\n                classes.push(classCandidate);\n            }\n        }\n    } else if (node.type === \"atrule\") {\n        node.walkRules((rule)=>{\n            for (let classCandidate of rule.selectors.flatMap((selector)=>getClasses(selector))){\n                classes.push(classCandidate);\n            }\n        });\n    }\n    if (depth === 0) {\n        return [\n            state.containsNonOnDemandable || classes.length === 0,\n            classes\n        ];\n    }\n    return classes;\n}\nfunction withIdentifiers(styles) {\n    return parseStyles(styles).flatMap((node)=>{\n        let nodeMap = new Map();\n        let [containsNonOnDemandableSelectors, candidates] = extractCandidates(node);\n        // If this isn't \"on-demandable\", assign it a universal candidate to always include it.\n        if (containsNonOnDemandableSelectors) {\n            candidates.unshift(_sharedState.NOT_ON_DEMAND);\n        }\n        // However, it could be that it also contains \"on-demandable\" candidates.\n        // E.g.: `span, .foo {}`, in that case it should still be possible to use\n        // `@apply foo` for example.\n        return candidates.map((c)=>{\n            if (!nodeMap.has(node)) {\n                nodeMap.set(node, node);\n            }\n            return [\n                c,\n                nodeMap.get(node)\n            ];\n        });\n    });\n}\nfunction isValidVariantFormatString(format) {\n    return format.startsWith(\"@\") || format.includes(\"&\");\n}\nfunction parseVariant(variant) {\n    variant = variant.replace(/\\n+/g, \"\").replace(/\\s{1,}/g, \" \").trim();\n    let fns = parseVariantFormatString(variant).map((str)=>{\n        if (!str.startsWith(\"@\")) {\n            return ({ format  })=>format(str);\n        }\n        let [, name, params] = /@(.*?)( .+|[({].*)/g.exec(str);\n        return ({ wrap  })=>wrap(_postcss.default.atRule({\n                name,\n                params: params.trim()\n            }));\n    }).reverse();\n    return (api)=>{\n        for (let fn of fns){\n            fn(api);\n        }\n    };\n}\n/**\n *\n * @param {any} tailwindConfig\n * @param {any} context\n * @param {object} param2\n * @param {Offsets} param2.offsets\n */ function buildPluginApi(tailwindConfig, context, { variantList , variantMap , offsets , classList  }) {\n    function getConfigValue(path, defaultValue) {\n        return path ? (0, _dlv.default)(tailwindConfig, path, defaultValue) : tailwindConfig;\n    }\n    function applyConfiguredPrefix(selector) {\n        return (0, _prefixSelector.default)(tailwindConfig.prefix, selector);\n    }\n    function prefixIdentifier(identifier, options) {\n        if (identifier === _sharedState.NOT_ON_DEMAND) {\n            return _sharedState.NOT_ON_DEMAND;\n        }\n        if (!options.respectPrefix) {\n            return identifier;\n        }\n        return context.tailwindConfig.prefix + identifier;\n    }\n    function resolveThemeValue(path, defaultValue, opts = {}) {\n        let parts = (0, _toPath.toPath)(path);\n        let value = getConfigValue([\n            \"theme\",\n            ...parts\n        ], defaultValue);\n        return (0, _transformThemeValue.default)(parts[0])(value, opts);\n    }\n    let variantIdentifier = 0;\n    let api = {\n        postcss: _postcss.default,\n        prefix: applyConfiguredPrefix,\n        e: _escapeClassName.default,\n        config: getConfigValue,\n        theme: resolveThemeValue,\n        corePlugins: (path)=>{\n            if (Array.isArray(tailwindConfig.corePlugins)) {\n                return tailwindConfig.corePlugins.includes(path);\n            }\n            return getConfigValue([\n                \"corePlugins\",\n                path\n            ], true);\n        },\n        variants: ()=>{\n            // Preserved for backwards compatibility but not used in v3.0+\n            return [];\n        },\n        addBase (base) {\n            for (let [identifier, rule] of withIdentifiers(base)){\n                let prefixedIdentifier = prefixIdentifier(identifier, {});\n                let offset = offsets.create(\"base\");\n                if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n                    context.candidateRuleMap.set(prefixedIdentifier, []);\n                }\n                context.candidateRuleMap.get(prefixedIdentifier).push([\n                    {\n                        sort: offset,\n                        layer: \"base\"\n                    },\n                    rule\n                ]);\n            }\n        },\n        /**\n     * @param {string} group\n     * @param {Record<string, string | string[]>} declarations\n     */ addDefaults (group, declarations) {\n            const groups = {\n                [`@defaults ${group}`]: declarations\n            };\n            for (let [identifier, rule] of withIdentifiers(groups)){\n                let prefixedIdentifier = prefixIdentifier(identifier, {});\n                if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n                    context.candidateRuleMap.set(prefixedIdentifier, []);\n                }\n                context.candidateRuleMap.get(prefixedIdentifier).push([\n                    {\n                        sort: offsets.create(\"defaults\"),\n                        layer: \"defaults\"\n                    },\n                    rule\n                ]);\n            }\n        },\n        addComponents (components, options) {\n            let defaultOptions = {\n                preserveSource: false,\n                respectPrefix: true,\n                respectImportant: false\n            };\n            options = Object.assign({}, defaultOptions, Array.isArray(options) ? {} : options);\n            for (let [identifier, rule] of withIdentifiers(components)){\n                let prefixedIdentifier = prefixIdentifier(identifier, options);\n                classList.add(prefixedIdentifier);\n                if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n                    context.candidateRuleMap.set(prefixedIdentifier, []);\n                }\n                context.candidateRuleMap.get(prefixedIdentifier).push([\n                    {\n                        sort: offsets.create(\"components\"),\n                        layer: \"components\",\n                        options\n                    },\n                    rule\n                ]);\n            }\n        },\n        addUtilities (utilities, options) {\n            let defaultOptions = {\n                preserveSource: false,\n                respectPrefix: true,\n                respectImportant: true\n            };\n            options = Object.assign({}, defaultOptions, Array.isArray(options) ? {} : options);\n            for (let [identifier, rule] of withIdentifiers(utilities)){\n                let prefixedIdentifier = prefixIdentifier(identifier, options);\n                classList.add(prefixedIdentifier);\n                if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n                    context.candidateRuleMap.set(prefixedIdentifier, []);\n                }\n                context.candidateRuleMap.get(prefixedIdentifier).push([\n                    {\n                        sort: offsets.create(\"utilities\"),\n                        layer: \"utilities\",\n                        options\n                    },\n                    rule\n                ]);\n            }\n        },\n        matchUtilities: function(utilities, options) {\n            let defaultOptions = {\n                respectPrefix: true,\n                respectImportant: true,\n                modifiers: false\n            };\n            options = normalizeOptionTypes({\n                ...defaultOptions,\n                ...options\n            });\n            let offset = offsets.create(\"utilities\");\n            for(let identifier in utilities){\n                let prefixedIdentifier = prefixIdentifier(identifier, options);\n                let rule = utilities[identifier];\n                classList.add([\n                    prefixedIdentifier,\n                    options\n                ]);\n                function wrapped(modifier, { isOnlyPlugin  }) {\n                    let [value, coercedType, utilityModifier] = (0, _pluginUtils.coerceValue)(options.types, modifier, options, tailwindConfig);\n                    if (value === undefined) {\n                        return [];\n                    }\n                    if (!options.types.some(({ type  })=>type === coercedType)) {\n                        if (isOnlyPlugin) {\n                            _log.default.warn([\n                                `Unnecessary typehint \\`${coercedType}\\` in \\`${identifier}-${modifier}\\`.`,\n                                `You can safely update it to \\`${identifier}-${modifier.replace(coercedType + \":\", \"\")}\\`.`\n                            ]);\n                        } else {\n                            return [];\n                        }\n                    }\n                    if (!(0, _isSyntacticallyValidPropertyValue.default)(value)) {\n                        return [];\n                    }\n                    let extras = {\n                        get modifier () {\n                            if (!options.modifiers) {\n                                _log.default.warn(`modifier-used-without-options-for-${identifier}`, [\n                                    \"Your plugin must set `modifiers: true` in its options to support modifiers.\"\n                                ]);\n                            }\n                            return utilityModifier;\n                        }\n                    };\n                    let modifiersEnabled = (0, _featureFlagsJs.flagEnabled)(tailwindConfig, \"generalizedModifiers\");\n                    let ruleSets = [].concat(modifiersEnabled ? rule(value, extras) : rule(value)).filter(Boolean).map((declaration)=>({\n                            [(0, _nameClass.default)(identifier, modifier)]: declaration\n                        }));\n                    return ruleSets;\n                }\n                let withOffsets = [\n                    {\n                        sort: offset,\n                        layer: \"utilities\",\n                        options\n                    },\n                    wrapped\n                ];\n                if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n                    context.candidateRuleMap.set(prefixedIdentifier, []);\n                }\n                context.candidateRuleMap.get(prefixedIdentifier).push(withOffsets);\n            }\n        },\n        matchComponents: function(components, options) {\n            let defaultOptions = {\n                respectPrefix: true,\n                respectImportant: false,\n                modifiers: false\n            };\n            options = normalizeOptionTypes({\n                ...defaultOptions,\n                ...options\n            });\n            let offset = offsets.create(\"components\");\n            for(let identifier in components){\n                let prefixedIdentifier = prefixIdentifier(identifier, options);\n                let rule = components[identifier];\n                classList.add([\n                    prefixedIdentifier,\n                    options\n                ]);\n                function wrapped(modifier, { isOnlyPlugin  }) {\n                    let [value, coercedType, utilityModifier] = (0, _pluginUtils.coerceValue)(options.types, modifier, options, tailwindConfig);\n                    if (value === undefined) {\n                        return [];\n                    }\n                    if (!options.types.some(({ type  })=>type === coercedType)) {\n                        if (isOnlyPlugin) {\n                            _log.default.warn([\n                                `Unnecessary typehint \\`${coercedType}\\` in \\`${identifier}-${modifier}\\`.`,\n                                `You can safely update it to \\`${identifier}-${modifier.replace(coercedType + \":\", \"\")}\\`.`\n                            ]);\n                        } else {\n                            return [];\n                        }\n                    }\n                    if (!(0, _isSyntacticallyValidPropertyValue.default)(value)) {\n                        return [];\n                    }\n                    let extras = {\n                        get modifier () {\n                            if (!options.modifiers) {\n                                _log.default.warn(`modifier-used-without-options-for-${identifier}`, [\n                                    \"Your plugin must set `modifiers: true` in its options to support modifiers.\"\n                                ]);\n                            }\n                            return utilityModifier;\n                        }\n                    };\n                    let modifiersEnabled = (0, _featureFlagsJs.flagEnabled)(tailwindConfig, \"generalizedModifiers\");\n                    let ruleSets = [].concat(modifiersEnabled ? rule(value, extras) : rule(value)).filter(Boolean).map((declaration)=>({\n                            [(0, _nameClass.default)(identifier, modifier)]: declaration\n                        }));\n                    return ruleSets;\n                }\n                let withOffsets = [\n                    {\n                        sort: offset,\n                        layer: \"components\",\n                        options\n                    },\n                    wrapped\n                ];\n                if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n                    context.candidateRuleMap.set(prefixedIdentifier, []);\n                }\n                context.candidateRuleMap.get(prefixedIdentifier).push(withOffsets);\n            }\n        },\n        addVariant (variantName, variantFunctions, options = {}) {\n            variantFunctions = [].concat(variantFunctions).map((variantFunction)=>{\n                if (typeof variantFunction !== \"string\") {\n                    // Safelist public API functions\n                    return (api = {})=>{\n                        let { args , modifySelectors , container , separator , wrap , format  } = api;\n                        let result = variantFunction(Object.assign({\n                            modifySelectors,\n                            container,\n                            separator\n                        }, options.type === VARIANT_TYPES.MatchVariant && {\n                            args,\n                            wrap,\n                            format\n                        }));\n                        if (typeof result === \"string\" && !isValidVariantFormatString(result)) {\n                            throw new Error(`Your custom variant \\`${variantName}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`);\n                        }\n                        if (Array.isArray(result)) {\n                            return result.filter((variant)=>typeof variant === \"string\").map((variant)=>parseVariant(variant));\n                        }\n                        // result may be undefined with legacy variants that use APIs like `modifySelectors`\n                        // result may also be a postcss node if someone was returning the result from `modifySelectors`\n                        return result && typeof result === \"string\" && parseVariant(result)(api);\n                    };\n                }\n                if (!isValidVariantFormatString(variantFunction)) {\n                    throw new Error(`Your custom variant \\`${variantName}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`);\n                }\n                return parseVariant(variantFunction);\n            });\n            insertInto(variantList, variantName, options);\n            variantMap.set(variantName, variantFunctions);\n            context.variantOptions.set(variantName, options);\n        },\n        matchVariant (variant, variantFn, options) {\n            var _options_id;\n            // A unique identifier that \"groups\" these variants together.\n            // This is for internal use only which is why it is not present in the types\n            let id = (_options_id = options === null || options === void 0 ? void 0 : options.id) !== null && _options_id !== void 0 ? _options_id : ++variantIdentifier;\n            let isSpecial = variant === \"@\";\n            let modifiersEnabled = (0, _featureFlagsJs.flagEnabled)(tailwindConfig, \"generalizedModifiers\");\n            var _options_values;\n            for (let [key, value] of Object.entries((_options_values = options === null || options === void 0 ? void 0 : options.values) !== null && _options_values !== void 0 ? _options_values : {})){\n                if (key === \"DEFAULT\") continue;\n                api.addVariant(isSpecial ? `${variant}${key}` : `${variant}-${key}`, ({ args , container  })=>{\n                    return variantFn(value, modifiersEnabled ? {\n                        modifier: args === null || args === void 0 ? void 0 : args.modifier,\n                        container\n                    } : {\n                        container\n                    });\n                }, {\n                    ...options,\n                    value,\n                    id,\n                    type: VARIANT_TYPES.MatchVariant,\n                    variantInfo: VARIANT_INFO.Base\n                });\n            }\n            var _options_values1;\n            let hasDefault = \"DEFAULT\" in ((_options_values1 = options === null || options === void 0 ? void 0 : options.values) !== null && _options_values1 !== void 0 ? _options_values1 : {});\n            api.addVariant(variant, ({ args , container  })=>{\n                if ((args === null || args === void 0 ? void 0 : args.value) === _sharedState.NONE && !hasDefault) {\n                    return null;\n                }\n                var // (JetBrains) plugins.\n                _args_value;\n                return variantFn((args === null || args === void 0 ? void 0 : args.value) === _sharedState.NONE ? options.values.DEFAULT : (_args_value = args === null || args === void 0 ? void 0 : args.value) !== null && _args_value !== void 0 ? _args_value : typeof args === \"string\" ? args : \"\", modifiersEnabled ? {\n                    modifier: args === null || args === void 0 ? void 0 : args.modifier,\n                    container\n                } : {\n                    container\n                });\n            }, {\n                ...options,\n                id,\n                type: VARIANT_TYPES.MatchVariant,\n                variantInfo: VARIANT_INFO.Dynamic\n            });\n        }\n    };\n    return api;\n}\nlet fileModifiedMapCache = new WeakMap();\nfunction getFileModifiedMap(context) {\n    if (!fileModifiedMapCache.has(context)) {\n        fileModifiedMapCache.set(context, new Map());\n    }\n    return fileModifiedMapCache.get(context);\n}\nfunction trackModified(files, fileModifiedMap) {\n    let changed = false;\n    let mtimesToCommit = new Map();\n    for (let file of files){\n        var _fs_statSync;\n        if (!file) continue;\n        let parsed = _url.default.parse(file);\n        let pathname = parsed.hash ? parsed.href.replace(parsed.hash, \"\") : parsed.href;\n        pathname = parsed.search ? pathname.replace(parsed.search, \"\") : pathname;\n        let newModified = (_fs_statSync = _fs.default.statSync(decodeURIComponent(pathname), {\n            throwIfNoEntry: false\n        })) === null || _fs_statSync === void 0 ? void 0 : _fs_statSync.mtimeMs;\n        if (!newModified) {\n            continue;\n        }\n        if (!fileModifiedMap.has(file) || newModified > fileModifiedMap.get(file)) {\n            changed = true;\n        }\n        mtimesToCommit.set(file, newModified);\n    }\n    return [\n        changed,\n        mtimesToCommit\n    ];\n}\nfunction extractVariantAtRules(node) {\n    node.walkAtRules((atRule)=>{\n        if ([\n            \"responsive\",\n            \"variants\"\n        ].includes(atRule.name)) {\n            extractVariantAtRules(atRule);\n            atRule.before(atRule.nodes);\n            atRule.remove();\n        }\n    });\n}\nfunction collectLayerPlugins(root) {\n    let layerPlugins = [];\n    root.each((node)=>{\n        if (node.type === \"atrule\" && [\n            \"responsive\",\n            \"variants\"\n        ].includes(node.name)) {\n            node.name = \"layer\";\n            node.params = \"utilities\";\n        }\n    });\n    // Walk @layer rules and treat them like plugins\n    root.walkAtRules(\"layer\", (layerRule)=>{\n        extractVariantAtRules(layerRule);\n        if (layerRule.params === \"base\") {\n            for (let node of layerRule.nodes){\n                layerPlugins.push(function({ addBase  }) {\n                    addBase(node, {\n                        respectPrefix: false\n                    });\n                });\n            }\n            layerRule.remove();\n        } else if (layerRule.params === \"components\") {\n            for (let node1 of layerRule.nodes){\n                layerPlugins.push(function({ addComponents  }) {\n                    addComponents(node1, {\n                        respectPrefix: false,\n                        preserveSource: true\n                    });\n                });\n            }\n            layerRule.remove();\n        } else if (layerRule.params === \"utilities\") {\n            for (let node2 of layerRule.nodes){\n                layerPlugins.push(function({ addUtilities  }) {\n                    addUtilities(node2, {\n                        respectPrefix: false,\n                        preserveSource: true\n                    });\n                });\n            }\n            layerRule.remove();\n        }\n    });\n    return layerPlugins;\n}\nfunction resolvePlugins(context, root) {\n    let corePluginList = Object.entries({\n        ..._corePlugins.variantPlugins,\n        ..._corePlugins.corePlugins\n    }).map(([name, plugin])=>{\n        if (!context.tailwindConfig.corePlugins.includes(name)) {\n            return null;\n        }\n        return plugin;\n    }).filter(Boolean);\n    let userPlugins = context.tailwindConfig.plugins.map((plugin)=>{\n        if (plugin.__isOptionsFunction) {\n            plugin = plugin();\n        }\n        return typeof plugin === \"function\" ? plugin : plugin.handler;\n    });\n    let layerPlugins = collectLayerPlugins(root);\n    // TODO: This is a workaround for backwards compatibility, since custom variants\n    // were historically sorted before screen/stackable variants.\n    let beforeVariants = [\n        _corePlugins.variantPlugins[\"pseudoElementVariants\"],\n        _corePlugins.variantPlugins[\"pseudoClassVariants\"],\n        _corePlugins.variantPlugins[\"ariaVariants\"],\n        _corePlugins.variantPlugins[\"dataVariants\"]\n    ];\n    let afterVariants = [\n        _corePlugins.variantPlugins[\"supportsVariants\"],\n        _corePlugins.variantPlugins[\"directionVariants\"],\n        _corePlugins.variantPlugins[\"reducedMotionVariants\"],\n        _corePlugins.variantPlugins[\"prefersContrastVariants\"],\n        _corePlugins.variantPlugins[\"darkVariants\"],\n        _corePlugins.variantPlugins[\"printVariant\"],\n        _corePlugins.variantPlugins[\"screenVariants\"],\n        _corePlugins.variantPlugins[\"orientationVariants\"]\n    ];\n    return [\n        ...corePluginList,\n        ...beforeVariants,\n        ...userPlugins,\n        ...afterVariants,\n        ...layerPlugins\n    ];\n}\nfunction registerPlugins(plugins, context) {\n    let variantList = [];\n    let variantMap = new Map();\n    context.variantMap = variantMap;\n    let offsets = new _offsetsJs.Offsets();\n    context.offsets = offsets;\n    let classList = new Set();\n    let pluginApi = buildPluginApi(context.tailwindConfig, context, {\n        variantList,\n        variantMap,\n        offsets,\n        classList\n    });\n    for (let plugin of plugins){\n        if (Array.isArray(plugin)) {\n            for (let pluginItem of plugin){\n                pluginItem(pluginApi);\n            }\n        } else {\n            plugin === null || plugin === void 0 ? void 0 : plugin(pluginApi);\n        }\n    }\n    // Make sure to record bit masks for every variant\n    offsets.recordVariants(variantList, (variant)=>variantMap.get(variant).length);\n    // Build variantMap\n    for (let [variantName, variantFunctions] of variantMap.entries()){\n        context.variantMap.set(variantName, variantFunctions.map((variantFunction, idx)=>[\n                offsets.forVariant(variantName, idx),\n                variantFunction\n            ]));\n    }\n    var _context_tailwindConfig_safelist;\n    let safelist = ((_context_tailwindConfig_safelist = context.tailwindConfig.safelist) !== null && _context_tailwindConfig_safelist !== void 0 ? _context_tailwindConfig_safelist : []).filter(Boolean);\n    if (safelist.length > 0) {\n        let checks = [];\n        for (let value of safelist){\n            if (typeof value === \"string\") {\n                context.changedContent.push({\n                    content: value,\n                    extension: \"html\"\n                });\n                continue;\n            }\n            if (value instanceof RegExp) {\n                _log.default.warn(\"root-regex\", [\n                    \"Regular expressions in `safelist` work differently in Tailwind CSS v3.0.\",\n                    \"Update your `safelist` configuration to eliminate this warning.\",\n                    \"https://tailwindcss.com/docs/content-configuration#safelisting-classes\"\n                ]);\n                continue;\n            }\n            checks.push(value);\n        }\n        if (checks.length > 0) {\n            let patternMatchingCount = new Map();\n            let prefixLength = context.tailwindConfig.prefix.length;\n            let checkImportantUtils = checks.some((check)=>check.pattern.source.includes(\"!\"));\n            for (let util of classList){\n                let utils = Array.isArray(util) ? (()=>{\n                    let [utilName, options] = util;\n                    var _options_values;\n                    let values = Object.keys((_options_values = options === null || options === void 0 ? void 0 : options.values) !== null && _options_values !== void 0 ? _options_values : {});\n                    let classes = values.map((value)=>(0, _nameClass.formatClass)(utilName, value));\n                    if (options === null || options === void 0 ? void 0 : options.supportsNegativeValues) {\n                        // This is the normal negated version\n                        // e.g. `-inset-1` or `-tw-inset-1`\n                        classes = [\n                            ...classes,\n                            ...classes.map((cls)=>\"-\" + cls)\n                        ];\n                        // This is the negated version *after* the prefix\n                        // e.g. `tw--inset-1`\n                        // The prefix is already attached to util name\n                        // So we add the negative after the prefix\n                        classes = [\n                            ...classes,\n                            ...classes.map((cls)=>cls.slice(0, prefixLength) + \"-\" + cls.slice(prefixLength))\n                        ];\n                    }\n                    if (options.types.some(({ type  })=>type === \"color\")) {\n                        classes = [\n                            ...classes,\n                            ...classes.flatMap((cls)=>Object.keys(context.tailwindConfig.theme.opacity).map((opacity)=>`${cls}/${opacity}`))\n                        ];\n                    }\n                    if (checkImportantUtils && (options === null || options === void 0 ? void 0 : options.respectImportant)) {\n                        classes = [\n                            ...classes,\n                            ...classes.map((cls)=>\"!\" + cls)\n                        ];\n                    }\n                    return classes;\n                })() : [\n                    util\n                ];\n                for (let util1 of utils){\n                    for (let { pattern , variants =[]  } of checks){\n                        // RegExp with the /g flag are stateful, so let's reset the last\n                        // index pointer to reset the state.\n                        pattern.lastIndex = 0;\n                        if (!patternMatchingCount.has(pattern)) {\n                            patternMatchingCount.set(pattern, 0);\n                        }\n                        if (!pattern.test(util1)) continue;\n                        patternMatchingCount.set(pattern, patternMatchingCount.get(pattern) + 1);\n                        context.changedContent.push({\n                            content: util1,\n                            extension: \"html\"\n                        });\n                        for (let variant of variants){\n                            context.changedContent.push({\n                                content: variant + context.tailwindConfig.separator + util1,\n                                extension: \"html\"\n                            });\n                        }\n                    }\n                }\n            }\n            for (let [regex, count] of patternMatchingCount.entries()){\n                if (count !== 0) continue;\n                _log.default.warn([\n                    `The safelist pattern \\`${regex}\\` doesn't match any Tailwind CSS classes.`,\n                    \"Fix this pattern or remove it from your `safelist` configuration.\",\n                    \"https://tailwindcss.com/docs/content-configuration#safelisting-classes\"\n                ]);\n            }\n        }\n    }\n    var _context_tailwindConfig_darkMode, _concat_;\n    let darkClassName = (_concat_ = [].concat((_context_tailwindConfig_darkMode = context.tailwindConfig.darkMode) !== null && _context_tailwindConfig_darkMode !== void 0 ? _context_tailwindConfig_darkMode : \"media\")[1]) !== null && _concat_ !== void 0 ? _concat_ : \"dark\";\n    // A list of utilities that are used by certain Tailwind CSS utilities but\n    // that don't exist on their own. This will result in them \"not existing\" and\n    // sorting could be weird since you still require them in order to make the\n    // host utilities work properly. (Thanks Biology)\n    let parasiteUtilities = [\n        prefix(context, darkClassName),\n        prefix(context, \"group\"),\n        prefix(context, \"peer\")\n    ];\n    context.getClassOrder = function getClassOrder(classes) {\n        // Non-util classes won't be generated, so we default them to null\n        let sortedClassNames = new Map(classes.map((className)=>[\n                className,\n                null\n            ]));\n        // Sort all classes in order\n        // Non-tailwind classes won't be generated and will be left as `null`\n        let rules = (0, _generateRules.generateRules)(new Set(classes), context);\n        rules = context.offsets.sort(rules);\n        let idx = BigInt(parasiteUtilities.length);\n        for (const [, rule] of rules){\n            sortedClassNames.set(rule.raws.tailwind.candidate, idx++);\n        }\n        return classes.map((className)=>{\n            var _sortedClassNames_get;\n            let order = (_sortedClassNames_get = sortedClassNames.get(className)) !== null && _sortedClassNames_get !== void 0 ? _sortedClassNames_get : null;\n            let parasiteIndex = parasiteUtilities.indexOf(className);\n            if (order === null && parasiteIndex !== -1) {\n                // This will make sure that it is at the very beginning of the\n                // `components` layer which technically means 'before any\n                // components'.\n                order = BigInt(parasiteIndex);\n            }\n            return [\n                className,\n                order\n            ];\n        });\n    };\n    // Generate a list of strings for autocompletion purposes, e.g.\n    // ['uppercase', 'lowercase', ...]\n    context.getClassList = function getClassList(options = {}) {\n        let output = [];\n        for (let util of classList){\n            if (Array.isArray(util)) {\n                var _utilOptions_types;\n                let [utilName, utilOptions] = util;\n                let negativeClasses = [];\n                var _utilOptions_modifiers;\n                let modifiers = Object.keys((_utilOptions_modifiers = utilOptions === null || utilOptions === void 0 ? void 0 : utilOptions.modifiers) !== null && _utilOptions_modifiers !== void 0 ? _utilOptions_modifiers : {});\n                if (utilOptions === null || utilOptions === void 0 ? void 0 : (_utilOptions_types = utilOptions.types) === null || _utilOptions_types === void 0 ? void 0 : _utilOptions_types.some(({ type  })=>type === \"color\")) {\n                    var _context_tailwindConfig_theme_opacity;\n                    modifiers.push(...Object.keys((_context_tailwindConfig_theme_opacity = context.tailwindConfig.theme.opacity) !== null && _context_tailwindConfig_theme_opacity !== void 0 ? _context_tailwindConfig_theme_opacity : {}));\n                }\n                let metadata = {\n                    modifiers\n                };\n                let includeMetadata = options.includeMetadata && modifiers.length > 0;\n                var _utilOptions_values;\n                for (let [key, value] of Object.entries((_utilOptions_values = utilOptions === null || utilOptions === void 0 ? void 0 : utilOptions.values) !== null && _utilOptions_values !== void 0 ? _utilOptions_values : {})){\n                    // Ignore undefined and null values\n                    if (value == null) {\n                        continue;\n                    }\n                    let cls = (0, _nameClass.formatClass)(utilName, key);\n                    output.push(includeMetadata ? [\n                        cls,\n                        metadata\n                    ] : cls);\n                    if ((utilOptions === null || utilOptions === void 0 ? void 0 : utilOptions.supportsNegativeValues) && (0, _negateValue.default)(value)) {\n                        let cls1 = (0, _nameClass.formatClass)(utilName, `-${key}`);\n                        negativeClasses.push(includeMetadata ? [\n                            cls1,\n                            metadata\n                        ] : cls1);\n                    }\n                }\n                output.push(...negativeClasses);\n            } else {\n                output.push(util);\n            }\n        }\n        return output;\n    };\n    // Generate a list of available variants with meta information of the type of variant.\n    context.getVariants = function getVariants() {\n        let result = [];\n        for (let [name, options] of context.variantOptions.entries()){\n            if (options.variantInfo === VARIANT_INFO.Base) continue;\n            var _options_values;\n            result.push({\n                name,\n                isArbitrary: options.type === Symbol.for(\"MATCH_VARIANT\"),\n                values: Object.keys((_options_values = options.values) !== null && _options_values !== void 0 ? _options_values : {}),\n                hasDash: name !== \"@\",\n                selectors ({ modifier , value  } = {}) {\n                    let candidate = \"__TAILWIND_PLACEHOLDER__\";\n                    let rule = _postcss.default.rule({\n                        selector: `.${candidate}`\n                    });\n                    let container = _postcss.default.root({\n                        nodes: [\n                            rule.clone()\n                        ]\n                    });\n                    let before = container.toString();\n                    var _context_variantMap_get;\n                    let fns = ((_context_variantMap_get = context.variantMap.get(name)) !== null && _context_variantMap_get !== void 0 ? _context_variantMap_get : []).flatMap(([_, fn])=>fn);\n                    let formatStrings = [];\n                    for (let fn of fns){\n                        var _options_values;\n                        let localFormatStrings = [];\n                        var _options_values_value;\n                        let api = {\n                            args: {\n                                modifier,\n                                value: (_options_values_value = (_options_values = options.values) === null || _options_values === void 0 ? void 0 : _options_values[value]) !== null && _options_values_value !== void 0 ? _options_values_value : value\n                            },\n                            separator: context.tailwindConfig.separator,\n                            modifySelectors (modifierFunction) {\n                                // Run the modifierFunction over each rule\n                                container.each((rule)=>{\n                                    if (rule.type !== \"rule\") {\n                                        return;\n                                    }\n                                    rule.selectors = rule.selectors.map((selector)=>{\n                                        return modifierFunction({\n                                            get className () {\n                                                return (0, _generateRules.getClassNameFromSelector)(selector);\n                                            },\n                                            selector\n                                        });\n                                    });\n                                });\n                                return container;\n                            },\n                            format (str) {\n                                localFormatStrings.push(str);\n                            },\n                            wrap (wrapper) {\n                                localFormatStrings.push(`@${wrapper.name} ${wrapper.params} { & }`);\n                            },\n                            container\n                        };\n                        let ruleWithVariant = fn(api);\n                        if (localFormatStrings.length > 0) {\n                            formatStrings.push(localFormatStrings);\n                        }\n                        if (Array.isArray(ruleWithVariant)) {\n                            for (let variantFunction of ruleWithVariant){\n                                localFormatStrings = [];\n                                variantFunction(api);\n                                formatStrings.push(localFormatStrings);\n                            }\n                        }\n                    }\n                    // Reverse engineer the result of the `container`\n                    let manualFormatStrings = [];\n                    let after = container.toString();\n                    if (before !== after) {\n                        // Figure out all selectors\n                        container.walkRules((rule)=>{\n                            let modified = rule.selector;\n                            // Rebuild the base selector, this is what plugin authors would do\n                            // as well. E.g.: `${variant}${separator}${className}`.\n                            // However, plugin authors probably also prepend or append certain\n                            // classes, pseudos, ids, ...\n                            let rebuiltBase = (0, _postcssSelectorParser.default)((selectors)=>{\n                                selectors.walkClasses((classNode)=>{\n                                    classNode.value = `${name}${context.tailwindConfig.separator}${classNode.value}`;\n                                });\n                            }).processSync(modified);\n                            // Now that we know the original selector, the new selector, and\n                            // the rebuild part in between, we can replace the part that plugin\n                            // authors need to rebuild with `&`, and eventually store it in the\n                            // collectedFormats. Similar to what `format('...')` would do.\n                            //\n                            // E.g.:\n                            //                   variant: foo\n                            //                  selector: .markdown > p\n                            //      modified (by plugin): .foo .foo\\\\:markdown > p\n                            //    rebuiltBase (internal): .foo\\\\:markdown > p\n                            //                    format: .foo &\n                            manualFormatStrings.push(modified.replace(rebuiltBase, \"&\").replace(candidate, \"&\"));\n                        });\n                        // Figure out all atrules\n                        container.walkAtRules((atrule)=>{\n                            manualFormatStrings.push(`@${atrule.name} (${atrule.params}) { & }`);\n                        });\n                    }\n                    var _options_values1;\n                    let isArbitraryVariant = !(value in ((_options_values1 = options.values) !== null && _options_values1 !== void 0 ? _options_values1 : {}));\n                    formatStrings = formatStrings.map((format)=>format.map((str)=>({\n                                format: str,\n                                isArbitraryVariant\n                            })));\n                    manualFormatStrings = manualFormatStrings.map((format)=>({\n                            format,\n                            isArbitraryVariant\n                        }));\n                    let opts = {\n                        candidate,\n                        context\n                    };\n                    let result = formatStrings.map((formats)=>(0, _formatVariantSelector.finalizeSelector)(`.${candidate}`, (0, _formatVariantSelector.formatVariantSelector)(formats, opts), opts).replace(`.${candidate}`, \"&\").replace(\"{ & }\", \"\").trim());\n                    if (manualFormatStrings.length > 0) {\n                        result.push((0, _formatVariantSelector.formatVariantSelector)(manualFormatStrings, opts).toString().replace(`.${candidate}`, \"&\"));\n                    }\n                    return result;\n                }\n            });\n        }\n        return result;\n    };\n}\n/**\n * Mark as class as retroactively invalid\n *\n *\n * @param {string} candidate\n */ function markInvalidUtilityCandidate(context, candidate) {\n    if (!context.classCache.has(candidate)) {\n        return;\n    }\n    // Mark this as not being a real utility\n    context.notClassCache.add(candidate);\n    // Remove it from any candidate-specific caches\n    context.classCache.delete(candidate);\n    context.applyClassCache.delete(candidate);\n    context.candidateRuleMap.delete(candidate);\n    context.candidateRuleCache.delete(candidate);\n    // Ensure the stylesheet gets rebuilt\n    context.stylesheetCache = null;\n}\n/**\n * Mark as class as retroactively invalid\n *\n * @param {import('postcss').Node} node\n */ function markInvalidUtilityNode(context, node) {\n    let candidate = node.raws.tailwind.candidate;\n    if (!candidate) {\n        return;\n    }\n    for (const entry of context.ruleCache){\n        if (entry[1].raws.tailwind.candidate === candidate) {\n            context.ruleCache.delete(entry);\n        // context.postCssNodeCache.delete(node)\n        }\n    }\n    markInvalidUtilityCandidate(context, candidate);\n}\nfunction createContext(tailwindConfig, changedContent = [], root = _postcss.default.root()) {\n    var _tailwindConfig_blocklist;\n    let context = {\n        disposables: [],\n        ruleCache: new Set(),\n        candidateRuleCache: new Map(),\n        classCache: new Map(),\n        applyClassCache: new Map(),\n        // Seed the not class cache with the blocklist (which is only strings)\n        notClassCache: new Set((_tailwindConfig_blocklist = tailwindConfig.blocklist) !== null && _tailwindConfig_blocklist !== void 0 ? _tailwindConfig_blocklist : []),\n        postCssNodeCache: new Map(),\n        candidateRuleMap: new Map(),\n        tailwindConfig,\n        changedContent: changedContent,\n        variantMap: new Map(),\n        stylesheetCache: null,\n        variantOptions: new Map(),\n        markInvalidUtilityCandidate: (candidate)=>markInvalidUtilityCandidate(context, candidate),\n        markInvalidUtilityNode: (node)=>markInvalidUtilityNode(context, node)\n    };\n    let resolvedPlugins = resolvePlugins(context, root);\n    registerPlugins(resolvedPlugins, context);\n    return context;\n}\nlet contextMap = _sharedState.contextMap;\nlet configContextMap = _sharedState.configContextMap;\nlet contextSourcesMap = _sharedState.contextSourcesMap;\nfunction getContext(root, result, tailwindConfig, userConfigPath, tailwindConfigHash, contextDependencies) {\n    let sourcePath = result.opts.from;\n    let isConfigFile = userConfigPath !== null;\n    _sharedState.env.DEBUG && console.log(\"Source path:\", sourcePath);\n    let existingContext;\n    if (isConfigFile && contextMap.has(sourcePath)) {\n        existingContext = contextMap.get(sourcePath);\n    } else if (configContextMap.has(tailwindConfigHash)) {\n        let context = configContextMap.get(tailwindConfigHash);\n        contextSourcesMap.get(context).add(sourcePath);\n        contextMap.set(sourcePath, context);\n        existingContext = context;\n    }\n    let cssDidChange = (0, _cacheInvalidationJs.hasContentChanged)(sourcePath, root);\n    // If there's already a context in the cache and we don't need to\n    // reset the context, return the cached context.\n    if (existingContext) {\n        let [contextDependenciesChanged, mtimesToCommit] = trackModified([\n            ...contextDependencies\n        ], getFileModifiedMap(existingContext));\n        if (!contextDependenciesChanged && !cssDidChange) {\n            return [\n                existingContext,\n                false,\n                mtimesToCommit\n            ];\n        }\n    }\n    // If this source is in the context map, get the old context.\n    // Remove this source from the context sources for the old context,\n    // and clean up that context if no one else is using it. This can be\n    // called by many processes in rapid succession, so we check for presence\n    // first because the first process to run this code will wipe it out first.\n    if (contextMap.has(sourcePath)) {\n        let oldContext = contextMap.get(sourcePath);\n        if (contextSourcesMap.has(oldContext)) {\n            contextSourcesMap.get(oldContext).delete(sourcePath);\n            if (contextSourcesMap.get(oldContext).size === 0) {\n                contextSourcesMap.delete(oldContext);\n                for (let [tailwindConfigHash1, context1] of configContextMap){\n                    if (context1 === oldContext) {\n                        configContextMap.delete(tailwindConfigHash1);\n                    }\n                }\n                for (let disposable of oldContext.disposables.splice(0)){\n                    disposable(oldContext);\n                }\n            }\n        }\n    }\n    _sharedState.env.DEBUG && console.log(\"Setting up new context...\");\n    let context2 = createContext(tailwindConfig, [], root);\n    Object.assign(context2, {\n        userConfigPath\n    });\n    let [, mtimesToCommit1] = trackModified([\n        ...contextDependencies\n    ], getFileModifiedMap(context2));\n    // ---\n    // Update all context tracking state\n    configContextMap.set(tailwindConfigHash, context2);\n    contextMap.set(sourcePath, context2);\n    if (!contextSourcesMap.has(context2)) {\n        contextSourcesMap.set(context2, new Set());\n    }\n    contextSourcesMap.get(context2).add(sourcePath);\n    return [\n        context2,\n        true,\n        mtimesToCommit1\n    ];\n}\n",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    env: ()=>env,\n    contextMap: ()=>contextMap,\n    configContextMap: ()=>configContextMap,\n    contextSourcesMap: ()=>contextSourcesMap,\n    sourceHashMap: ()=>sourceHashMap,\n    NOT_ON_DEMAND: ()=>NOT_ON_DEMAND,\n    NONE: ()=>NONE,\n    resolveDebug: ()=>resolveDebug\n});\nconst _packageJson = /*#__PURE__*/ _interopRequireDefault(require(\"../../package.json\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet OXIDE_DEFAULT_ENABLED = _packageJson.default.tailwindcss.engine === \"oxide\";\nconst env = {\n    NODE_ENV: process.env.NODE_ENV,\n    DEBUG: resolveDebug(process.env.DEBUG),\n    ENGINE: _packageJson.default.tailwindcss.engine,\n    OXIDE: resolveBoolean(process.env.OXIDE, OXIDE_DEFAULT_ENABLED)\n};\nconst contextMap = new Map();\nconst configContextMap = new Map();\nconst contextSourcesMap = new Map();\nconst sourceHashMap = new Map();\nconst NOT_ON_DEMAND = new String(\"*\");\nconst NONE = Symbol(\"__NONE__\");\nfunction resolveBoolean(value, defaultValue) {\n    if (value === undefined) {\n        return defaultValue;\n    }\n    if (value === \"0\" || value === \"false\") {\n        return false;\n    }\n    return true;\n}\nfunction resolveDebug(debug) {\n    if (debug === undefined) {\n        return false;\n    }\n    // Environment variables are strings, so convert to boolean\n    if (debug === \"true\" || debug === \"1\") {\n        return true;\n    }\n    if (debug === \"false\" || debug === \"0\") {\n        return false;\n    }\n    // Keep the debug convention into account:\n    // DEBUG=* -> This enables all debug modes\n    // DEBUG=projectA,projectB,projectC -> This enables debug for projectA, projectB and projectC\n    // DEBUG=projectA:* -> This enables all debug modes for projectA (if you have sub-types)\n    // DEBUG=projectA,-projectB -> This enables debug for projectA and explicitly disables it for projectB\n    if (debug === \"*\") {\n        return true;\n    }\n    let debuggers = debug.split(\",\").map((d)=>d.split(\":\")[0]);\n    // Ignoring tailwindcss\n    if (debuggers.includes(\"-tailwindcss\")) {\n        return false;\n    }\n    // Including tailwindcss\n    if (debuggers.includes(\"tailwindcss\")) {\n        return true;\n    }\n    return false;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _normalizeScreens = require(\"../util/normalizeScreens\");\nconst _buildMediaQuery = /*#__PURE__*/ _interopRequireDefault(require(\"../util/buildMediaQuery\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _default({ tailwindConfig: { theme  }  }) {\n    return function(css) {\n        css.walkAtRules(\"screen\", (atRule)=>{\n            let screen = atRule.params;\n            let screens = (0, _normalizeScreens.normalizeScreens)(theme.screens);\n            let screenDefinition = screens.find(({ name  })=>name === screen);\n            if (!screenDefinition) {\n                throw atRule.error(`No \\`${screen}\\` screen found.`);\n            }\n            atRule.name = \"media\";\n            atRule.params = (0, _buildMediaQuery.default)(screenDefinition);\n        });\n    };\n}\n","\"use strict\";\nmodule.exports = require(\"../plugin.js\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nconst _setupTrackingContext = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/setupTrackingContext\"));\nconst _processTailwindFeatures = /*#__PURE__*/ _interopRequireDefault(require(\"./processTailwindFeatures\"));\nconst _sharedState = require(\"./lib/sharedState\");\nconst _findAtConfigPath = require(\"./lib/findAtConfigPath\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nmodule.exports = function tailwindcss(configOrPath) {\n    return {\n        postcssPlugin: \"tailwindcss\",\n        plugins: [\n            _sharedState.env.DEBUG && function(root) {\n                console.log(\"\\n\");\n                console.time(\"JIT TOTAL\");\n                return root;\n            },\n            function(root, result) {\n                var _findAtConfigPath1;\n                // Use the path for the `@config` directive if it exists, otherwise use the\n                // path for the file being processed\n                configOrPath = (_findAtConfigPath1 = (0, _findAtConfigPath.findAtConfigPath)(root, result)) !== null && _findAtConfigPath1 !== void 0 ? _findAtConfigPath1 : configOrPath;\n                let context = (0, _setupTrackingContext.default)(configOrPath);\n                if (root.type === \"document\") {\n                    let roots = root.nodes.filter((node)=>node.type === \"root\");\n                    for (const root1 of roots){\n                        if (root1.type === \"root\") {\n                            (0, _processTailwindFeatures.default)(context)(root1, result);\n                        }\n                    }\n                    return;\n                }\n                (0, _processTailwindFeatures.default)(context)(root, result);\n            },\n            _sharedState.env.OXIDE && function lightningCssPlugin(_root, result) {\n                let postcss = require(\"postcss\");\n                let lightningcss = require(\"lightningcss\");\n                let browserslist = require(\"browserslist\");\n                try {\n                    let transformed = lightningcss.transform({\n                        filename: result.opts.from,\n                        code: Buffer.from(result.root.toString()),\n                        minify: false,\n                        sourceMap: !!result.map,\n                        inputSourceMap: result.map ? result.map.toString() : undefined,\n                        targets: typeof process !== \"undefined\" && process.env.JEST_WORKER_ID ? {\n                            chrome: 106 << 16\n                        } : lightningcss.browserslistToTargets(browserslist(require(\"../package.json\").browserslist)),\n                        drafts: {\n                            nesting: true,\n                            customMedia: true\n                        }\n                    });\n                    var _result_map;\n                    result.map = Object.assign((_result_map = result.map) !== null && _result_map !== void 0 ? _result_map : {}, {\n                        toJSON () {\n                            return transformed.map.toJSON();\n                        },\n                        toString () {\n                            return transformed.map.toString();\n                        }\n                    });\n                    result.root = postcss.parse(transformed.code.toString(\"utf8\"));\n                } catch (err) {\n                    if (typeof process !== \"undefined\" && process.env.JEST_WORKER_ID) {\n                        let lines = err.source.split(\"\\n\");\n                        err = new Error([\n                            \"Error formatting using Lightning CSS:\",\n                            \"\",\n                            ...[\n                                \"```css\",\n                                ...lines.slice(Math.max(err.loc.line - 3, 0), err.loc.line),\n                                \" \".repeat(err.loc.column - 1) + \"^-- \" + err.toString(),\n                                ...lines.slice(err.loc.line, err.loc.line + 2),\n                                \"```\"\n                            ]\n                        ].join(\"\\n\"));\n                    }\n                    if (Error.captureStackTrace) {\n                        Error.captureStackTrace(err, lightningCssPlugin);\n                    }\n                    throw err;\n                }\n            },\n            _sharedState.env.DEBUG && function(root) {\n                console.timeEnd(\"JIT TOTAL\");\n                console.log(\"\\n\");\n                return root;\n            }\n        ].filter(Boolean)\n    };\n};\nmodule.exports.postcss = true;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>processTailwindFeatures\n});\nconst _normalizeTailwindDirectives = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/normalizeTailwindDirectives\"));\nconst _expandTailwindAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/expandTailwindAtRules\"));\nconst _expandApplyAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/expandApplyAtRules\"));\nconst _evaluateTailwindFunctions = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/evaluateTailwindFunctions\"));\nconst _substituteScreenAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/substituteScreenAtRules\"));\nconst _resolveDefaultsAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/resolveDefaultsAtRules\"));\nconst _collapseAdjacentRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/collapseAdjacentRules\"));\nconst _collapseDuplicateDeclarations = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/collapseDuplicateDeclarations\"));\nconst _partitionApplyAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/partitionApplyAtRules\"));\nconst _detectNesting = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/detectNesting\"));\nconst _setupContextUtils = require(\"./lib/setupContextUtils\");\nconst _featureFlags = require(\"./featureFlags\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction processTailwindFeatures(setupContext) {\n    return function(root, result) {\n        let { tailwindDirectives , applyDirectives  } = (0, _normalizeTailwindDirectives.default)(root);\n        (0, _detectNesting.default)()(root, result);\n        // Partition apply rules that are found in the css\n        // itself.\n        (0, _partitionApplyAtRules.default)()(root, result);\n        let context = setupContext({\n            tailwindDirectives,\n            applyDirectives,\n            registerDependency (dependency) {\n                result.messages.push({\n                    plugin: \"tailwindcss\",\n                    parent: result.opts.from,\n                    ...dependency\n                });\n            },\n            createContext (tailwindConfig, changedContent) {\n                return (0, _setupContextUtils.createContext)(tailwindConfig, changedContent, root);\n            }\n        })(root, result);\n        if (context.tailwindConfig.separator === \"-\") {\n            throw new Error(\"The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.\");\n        }\n        (0, _featureFlags.issueFlagNotices)(context.tailwindConfig);\n        (0, _expandTailwindAtRules.default)(context)(root, result);\n        // Partition apply rules that are generated by\n        // addComponents, addUtilities and so on.\n        (0, _partitionApplyAtRules.default)()(root, result);\n        (0, _expandApplyAtRules.default)(context)(root, result);\n        (0, _evaluateTailwindFunctions.default)(context)(root, result);\n        (0, _substituteScreenAtRules.default)(context)(root, result);\n        (0, _resolveDefaultsAtRules.default)(context)(root, result);\n        (0, _collapseAdjacentRules.default)(context)(root, result);\n        (0, _collapseDuplicateDeclarations.default)(context)(root, result);\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"../util/log\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction warn({ version , from , to  }) {\n    _log.default.warn(`${from}-color-renamed`, [\n        `As of Tailwind CSS ${version}, \\`${from}\\` has been renamed to \\`${to}\\`.`,\n        \"Update your configuration file to silence this warning.\"\n    ]);\n}\nconst _default = {\n    inherit: \"inherit\",\n    current: \"currentColor\",\n    transparent: \"transparent\",\n    black: \"#000\",\n    white: \"#fff\",\n    slate: {\n        50: \"#f8fafc\",\n        100: \"#f1f5f9\",\n        200: \"#e2e8f0\",\n        300: \"#cbd5e1\",\n        400: \"#94a3b8\",\n        500: \"#64748b\",\n        600: \"#475569\",\n        700: \"#334155\",\n        800: \"#1e293b\",\n        900: \"#0f172a\"\n    },\n    gray: {\n        50: \"#f9fafb\",\n        100: \"#f3f4f6\",\n        200: \"#e5e7eb\",\n        300: \"#d1d5db\",\n        400: \"#9ca3af\",\n        500: \"#6b7280\",\n        600: \"#4b5563\",\n        700: \"#374151\",\n        800: \"#1f2937\",\n        900: \"#111827\"\n    },\n    zinc: {\n        50: \"#fafafa\",\n        100: \"#f4f4f5\",\n        200: \"#e4e4e7\",\n        300: \"#d4d4d8\",\n        400: \"#a1a1aa\",\n        500: \"#71717a\",\n        600: \"#52525b\",\n        700: \"#3f3f46\",\n        800: \"#27272a\",\n        900: \"#18181b\"\n    },\n    neutral: {\n        50: \"#fafafa\",\n        100: \"#f5f5f5\",\n        200: \"#e5e5e5\",\n        300: \"#d4d4d4\",\n        400: \"#a3a3a3\",\n        500: \"#737373\",\n        600: \"#525252\",\n        700: \"#404040\",\n        800: \"#262626\",\n        900: \"#171717\"\n    },\n    stone: {\n        50: \"#fafaf9\",\n        100: \"#f5f5f4\",\n        200: \"#e7e5e4\",\n        300: \"#d6d3d1\",\n        400: \"#a8a29e\",\n        500: \"#78716c\",\n        600: \"#57534e\",\n        700: \"#44403c\",\n        800: \"#292524\",\n        900: \"#1c1917\"\n    },\n    red: {\n        50: \"#fef2f2\",\n        100: \"#fee2e2\",\n        200: \"#fecaca\",\n        300: \"#fca5a5\",\n        400: \"#f87171\",\n        500: \"#ef4444\",\n        600: \"#dc2626\",\n        700: \"#b91c1c\",\n        800: \"#991b1b\",\n        900: \"#7f1d1d\"\n    },\n    orange: {\n        50: \"#fff7ed\",\n        100: \"#ffedd5\",\n        200: \"#fed7aa\",\n        300: \"#fdba74\",\n        400: \"#fb923c\",\n        500: \"#f97316\",\n        600: \"#ea580c\",\n        700: \"#c2410c\",\n        800: \"#9a3412\",\n        900: \"#7c2d12\"\n    },\n    amber: {\n        50: \"#fffbeb\",\n        100: \"#fef3c7\",\n        200: \"#fde68a\",\n        300: \"#fcd34d\",\n        400: \"#fbbf24\",\n        500: \"#f59e0b\",\n        600: \"#d97706\",\n        700: \"#b45309\",\n        800: \"#92400e\",\n        900: \"#78350f\"\n    },\n    yellow: {\n        50: \"#fefce8\",\n        100: \"#fef9c3\",\n        200: \"#fef08a\",\n        300: \"#fde047\",\n        400: \"#facc15\",\n        500: \"#eab308\",\n        600: \"#ca8a04\",\n        700: \"#a16207\",\n        800: \"#854d0e\",\n        900: \"#713f12\"\n    },\n    lime: {\n        50: \"#f7fee7\",\n        100: \"#ecfccb\",\n        200: \"#d9f99d\",\n        300: \"#bef264\",\n        400: \"#a3e635\",\n        500: \"#84cc16\",\n        600: \"#65a30d\",\n        700: \"#4d7c0f\",\n        800: \"#3f6212\",\n        900: \"#365314\"\n    },\n    green: {\n        50: \"#f0fdf4\",\n        100: \"#dcfce7\",\n        200: \"#bbf7d0\",\n        300: \"#86efac\",\n        400: \"#4ade80\",\n        500: \"#22c55e\",\n        600: \"#16a34a\",\n        700: \"#15803d\",\n        800: \"#166534\",\n        900: \"#14532d\"\n    },\n    emerald: {\n        50: \"#ecfdf5\",\n        100: \"#d1fae5\",\n        200: \"#a7f3d0\",\n        300: \"#6ee7b7\",\n        400: \"#34d399\",\n        500: \"#10b981\",\n        600: \"#059669\",\n        700: \"#047857\",\n        800: \"#065f46\",\n        900: \"#064e3b\"\n    },\n    teal: {\n        50: \"#f0fdfa\",\n        100: \"#ccfbf1\",\n        200: \"#99f6e4\",\n        300: \"#5eead4\",\n        400: \"#2dd4bf\",\n        500: \"#14b8a6\",\n        600: \"#0d9488\",\n        700: \"#0f766e\",\n        800: \"#115e59\",\n        900: \"#134e4a\"\n    },\n    cyan: {\n        50: \"#ecfeff\",\n        100: \"#cffafe\",\n        200: \"#a5f3fc\",\n        300: \"#67e8f9\",\n        400: \"#22d3ee\",\n        500: \"#06b6d4\",\n        600: \"#0891b2\",\n        700: \"#0e7490\",\n        800: \"#155e75\",\n        900: \"#164e63\"\n    },\n    sky: {\n        50: \"#f0f9ff\",\n        100: \"#e0f2fe\",\n        200: \"#bae6fd\",\n        300: \"#7dd3fc\",\n        400: \"#38bdf8\",\n        500: \"#0ea5e9\",\n        600: \"#0284c7\",\n        700: \"#0369a1\",\n        800: \"#075985\",\n        900: \"#0c4a6e\"\n    },\n    blue: {\n        50: \"#eff6ff\",\n        100: \"#dbeafe\",\n        200: \"#bfdbfe\",\n        300: \"#93c5fd\",\n        400: \"#60a5fa\",\n        500: \"#3b82f6\",\n        600: \"#2563eb\",\n        700: \"#1d4ed8\",\n        800: \"#1e40af\",\n        900: \"#1e3a8a\"\n    },\n    indigo: {\n        50: \"#eef2ff\",\n        100: \"#e0e7ff\",\n        200: \"#c7d2fe\",\n        300: \"#a5b4fc\",\n        400: \"#818cf8\",\n        500: \"#6366f1\",\n        600: \"#4f46e5\",\n        700: \"#4338ca\",\n        800: \"#3730a3\",\n        900: \"#312e81\"\n    },\n    violet: {\n        50: \"#f5f3ff\",\n        100: \"#ede9fe\",\n        200: \"#ddd6fe\",\n        300: \"#c4b5fd\",\n        400: \"#a78bfa\",\n        500: \"#8b5cf6\",\n        600: \"#7c3aed\",\n        700: \"#6d28d9\",\n        800: \"#5b21b6\",\n        900: \"#4c1d95\"\n    },\n    purple: {\n        50: \"#faf5ff\",\n        100: \"#f3e8ff\",\n        200: \"#e9d5ff\",\n        300: \"#d8b4fe\",\n        400: \"#c084fc\",\n        500: \"#a855f7\",\n        600: \"#9333ea\",\n        700: \"#7e22ce\",\n        800: \"#6b21a8\",\n        900: \"#581c87\"\n    },\n    fuchsia: {\n        50: \"#fdf4ff\",\n        100: \"#fae8ff\",\n        200: \"#f5d0fe\",\n        300: \"#f0abfc\",\n        400: \"#e879f9\",\n        500: \"#d946ef\",\n        600: \"#c026d3\",\n        700: \"#a21caf\",\n        800: \"#86198f\",\n        900: \"#701a75\"\n    },\n    pink: {\n        50: \"#fdf2f8\",\n        100: \"#fce7f3\",\n        200: \"#fbcfe8\",\n        300: \"#f9a8d4\",\n        400: \"#f472b6\",\n        500: \"#ec4899\",\n        600: \"#db2777\",\n        700: \"#be185d\",\n        800: \"#9d174d\",\n        900: \"#831843\"\n    },\n    rose: {\n        50: \"#fff1f2\",\n        100: \"#ffe4e6\",\n        200: \"#fecdd3\",\n        300: \"#fda4af\",\n        400: \"#fb7185\",\n        500: \"#f43f5e\",\n        600: \"#e11d48\",\n        700: \"#be123c\",\n        800: \"#9f1239\",\n        900: \"#881337\"\n    },\n    get lightBlue () {\n        warn({\n            version: \"v2.2\",\n            from: \"lightBlue\",\n            to: \"sky\"\n        });\n        return this.sky;\n    },\n    get warmGray () {\n        warn({\n            version: \"v3.0\",\n            from: \"warmGray\",\n            to: \"stone\"\n        });\n        return this.stone;\n    },\n    get trueGray () {\n        warn({\n            version: \"v3.0\",\n            from: \"trueGray\",\n            to: \"neutral\"\n        });\n        return this.neutral;\n    },\n    get coolGray () {\n        warn({\n            version: \"v3.0\",\n            from: \"coolGray\",\n            to: \"gray\"\n        });\n        return this.gray;\n    },\n    get blueGray () {\n        warn({\n            version: \"v3.0\",\n            from: \"blueGray\",\n            to: \"slate\"\n        });\n        return this.slate;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _createPlugin = /*#__PURE__*/ _interopRequireDefault(require(\"../util/createPlugin\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst _default = _createPlugin.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>resolveConfig\n});\nconst _resolveConfig = /*#__PURE__*/ _interopRequireDefault(require(\"../util/resolveConfig\"));\nconst _getAllConfigs = /*#__PURE__*/ _interopRequireDefault(require(\"../util/getAllConfigs\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction resolveConfig(...configs) {\n    let [, ...defaultConfigs] = (0, _getAllConfigs.default)(configs[0]);\n    return (0, _resolveConfig.default)([\n        ...configs,\n        ...defaultConfigs\n    ]);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>bigSign\n});\nfunction bigSign(bigIntValue) {\n    return (bigIntValue > 0n) - (bigIntValue < 0n);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>buildMediaQuery\n});\nfunction buildMediaQuery(screens) {\n    screens = Array.isArray(screens) ? screens : [\n        screens\n    ];\n    return screens.map((screen)=>{\n        let values = screen.values.map((screen)=>{\n            if (screen.raw !== undefined) {\n                return screen.raw;\n            }\n            return [\n                screen.min && `(min-width: ${screen.min})`,\n                screen.max && `(max-width: ${screen.max})`\n            ].filter(Boolean).join(\" and \");\n        });\n        return screen.not ? `not all and ${values}` : values;\n    }).join(\", \");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"cloneDeep\", {\n    enumerable: true,\n    get: ()=>cloneDeep\n});\nfunction cloneDeep(value) {\n    if (Array.isArray(value)) {\n        return value.map((child)=>cloneDeep(child));\n    }\n    if (typeof value === \"object\" && value !== null) {\n        return Object.fromEntries(Object.entries(value).map(([k, v])=>[\n                k,\n                cloneDeep(v)\n            ]));\n    }\n    return value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>cloneNodes\n});\nfunction cloneNodes(nodes, source = undefined, raws = undefined) {\n    return nodes.map((node)=>{\n        var _node_raws_tailwind;\n        let cloned = node.clone();\n        // We always want override the source map\n        // except when explicitly told not to\n        let shouldOverwriteSource = ((_node_raws_tailwind = node.raws.tailwind) === null || _node_raws_tailwind === void 0 ? void 0 : _node_raws_tailwind.preserveSource) !== true || !cloned.source;\n        if (source !== undefined && shouldOverwriteSource) {\n            cloned.source = source;\n            if (\"walk\" in cloned) {\n                cloned.walk((child)=>{\n                    child.source = source;\n                });\n            }\n        }\n        if (raws !== undefined) {\n            cloned.raws.tailwind = {\n                ...cloned.raws.tailwind,\n                ...raws\n            };\n        }\n        return cloned;\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    parseColor: ()=>parseColor,\n    formatColor: ()=>formatColor\n});\nconst _colorName = /*#__PURE__*/ _interopRequireDefault(require(\"color-name\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet HEX = /^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\nlet SHORT_HEX = /^#([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\nlet VALUE = /(?:\\d+|\\d*\\.\\d+)%?/;\nlet SEP = /(?:\\s*,\\s*|\\s+)/;\nlet ALPHA_SEP = /\\s*[,/]\\s*/;\nlet CUSTOM_PROPERTY = /var\\(--(?:[^ )]*?)\\)/;\nlet RGB = new RegExp(`^(rgba?)\\\\(\\\\s*(${VALUE.source}|${CUSTOM_PROPERTY.source})(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${ALPHA_SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?\\\\s*\\\\)$`);\nlet HSL = new RegExp(`^(hsla?)\\\\(\\\\s*((?:${VALUE.source})(?:deg|rad|grad|turn)?|${CUSTOM_PROPERTY.source})(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${ALPHA_SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?\\\\s*\\\\)$`);\nfunction parseColor(value, { loose =false  } = {}) {\n    var _match_, _match__toString;\n    if (typeof value !== \"string\") {\n        return null;\n    }\n    value = value.trim();\n    if (value === \"transparent\") {\n        return {\n            mode: \"rgb\",\n            color: [\n                \"0\",\n                \"0\",\n                \"0\"\n            ],\n            alpha: \"0\"\n        };\n    }\n    if (value in _colorName.default) {\n        return {\n            mode: \"rgb\",\n            color: _colorName.default[value].map((v)=>v.toString())\n        };\n    }\n    let hex = value.replace(SHORT_HEX, (_, r, g, b, a)=>[\n            \"#\",\n            r,\n            r,\n            g,\n            g,\n            b,\n            b,\n            a ? a + a : \"\"\n        ].join(\"\")).match(HEX);\n    if (hex !== null) {\n        return {\n            mode: \"rgb\",\n            color: [\n                parseInt(hex[1], 16),\n                parseInt(hex[2], 16),\n                parseInt(hex[3], 16)\n            ].map((v)=>v.toString()),\n            alpha: hex[4] ? (parseInt(hex[4], 16) / 255).toString() : undefined\n        };\n    }\n    var _value_match;\n    let match = (_value_match = value.match(RGB)) !== null && _value_match !== void 0 ? _value_match : value.match(HSL);\n    if (match === null) {\n        return null;\n    }\n    let color = [\n        match[2],\n        match[3],\n        match[4]\n    ].filter(Boolean).map((v)=>v.toString());\n    // rgba(var(--my-color), 0.1)\n    // hsla(var(--my-color), 0.1)\n    if (color.length === 2 && color[0].startsWith(\"var(\")) {\n        return {\n            mode: match[1],\n            color: [\n                color[0]\n            ],\n            alpha: color[1]\n        };\n    }\n    if (!loose && color.length !== 3) {\n        return null;\n    }\n    if (color.length < 3 && !color.some((part)=>/^var\\(.*?\\)$/.test(part))) {\n        return null;\n    }\n    return {\n        mode: match[1],\n        color,\n        alpha: (_match_ = match[5]) === null || _match_ === void 0 ? void 0 : (_match__toString = _match_.toString) === null || _match__toString === void 0 ? void 0 : _match__toString.call(_match_)\n    };\n}\nfunction formatColor({ mode , color , alpha  }) {\n    let hasAlpha = alpha !== undefined;\n    if (mode === \"rgba\" || mode === \"hsla\") {\n        return `${mode}(${color.join(\", \")}${hasAlpha ? `, ${alpha}` : \"\"})`;\n    }\n    return `${mode}(${color.join(\" \")}${hasAlpha ? ` / ${alpha}` : \"\"})`;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nfunction _default(pluginConfig, plugins) {\n    if (pluginConfig === undefined) {\n        return plugins;\n    }\n    const pluginNames = Array.isArray(pluginConfig) ? pluginConfig : [\n        ...new Set(plugins.filter((pluginName)=>{\n            return pluginConfig !== false && pluginConfig[pluginName] !== false;\n        }).concat(Object.keys(pluginConfig).filter((pluginName)=>{\n            return pluginConfig[pluginName] !== false;\n        })))\n    ];\n    return pluginNames;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nfunction createPlugin(plugin, config) {\n    return {\n        handler: plugin,\n        config\n    };\n}\ncreatePlugin.withOptions = function(pluginFunction, configFunction = ()=>({})) {\n    const optionsFunction = function(options) {\n        return {\n            __options: options,\n            handler: pluginFunction(options),\n            config: configFunction(options)\n        };\n    };\n    optionsFunction.__isOptionsFunction = true;\n    // Expose plugin dependencies so that `object-hash` returns a different\n    // value if anything here changes, to ensure a rebuild is triggered.\n    optionsFunction.__pluginFunction = pluginFunction;\n    optionsFunction.__configFunction = configFunction;\n    return optionsFunction;\n};\nconst _default = createPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>createUtilityPlugin\n});\nconst _transformThemeValue = /*#__PURE__*/ _interopRequireDefault(require(\"./transformThemeValue\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction createUtilityPlugin(themeKey, utilityVariations = [\n    [\n        themeKey,\n        [\n            themeKey\n        ]\n    ]\n], { filterDefault =false , ...options } = {}) {\n    let transformValue = (0, _transformThemeValue.default)(themeKey);\n    return function({ matchUtilities , theme  }) {\n        for (let utilityVariation of utilityVariations){\n            let group = Array.isArray(utilityVariation[0]) ? utilityVariation : [\n                utilityVariation\n            ];\n            var _theme;\n            matchUtilities(group.reduce((obj, [classPrefix, properties])=>{\n                return Object.assign(obj, {\n                    [classPrefix]: (value)=>{\n                        return properties.reduce((obj, name)=>{\n                            if (Array.isArray(name)) {\n                                return Object.assign(obj, {\n                                    [name[0]]: name[1]\n                                });\n                            }\n                            return Object.assign(obj, {\n                                [name]: transformValue(value)\n                            });\n                        }, {});\n                    }\n                });\n            }, {}), {\n                ...options,\n                values: filterDefault ? Object.fromEntries(Object.entries((_theme = theme(themeKey)) !== null && _theme !== void 0 ? _theme : {}).filter(([modifier])=>modifier !== \"DEFAULT\")) : theme(themeKey)\n            });\n        }\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    normalize: ()=>normalize,\n    url: ()=>url,\n    number: ()=>number,\n    percentage: ()=>percentage,\n    length: ()=>length,\n    lineWidth: ()=>lineWidth,\n    shadow: ()=>shadow,\n    color: ()=>color,\n    image: ()=>image,\n    gradient: ()=>gradient,\n    position: ()=>position,\n    familyName: ()=>familyName,\n    genericName: ()=>genericName,\n    absoluteSize: ()=>absoluteSize,\n    relativeSize: ()=>relativeSize\n});\nconst _color = require(\"./color\");\nconst _parseBoxShadowValue = require(\"./parseBoxShadowValue\");\nconst _splitAtTopLevelOnly = require(\"./splitAtTopLevelOnly\");\nlet cssFunctions = [\n    \"min\",\n    \"max\",\n    \"clamp\",\n    \"calc\"\n];\n// Ref: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Types\nfunction isCSSFunction(value) {\n    return cssFunctions.some((fn)=>new RegExp(`^${fn}\\\\(.*\\\\)`).test(value));\n}\nconst placeholder = \"--tw-placeholder\";\nconst placeholderRe = new RegExp(placeholder, \"g\");\nfunction normalize(value, isRoot = true) {\n    // Keep raw strings if it starts with `url(`\n    if (value.includes(\"url(\")) {\n        return value.split(/(url\\(.*?\\))/g).filter(Boolean).map((part)=>{\n            if (/^url\\(.*?\\)$/.test(part)) {\n                return part;\n            }\n            return normalize(part, false);\n        }).join(\"\");\n    }\n    // Convert `_` to ` `, except for escaped underscores `\\_`\n    value = value.replace(/([^\\\\])_+/g, (fullMatch, characterBefore)=>characterBefore + \" \".repeat(fullMatch.length - 1)).replace(/^_/g, \" \").replace(/\\\\_/g, \"_\");\n    // Remove leftover whitespace\n    if (isRoot) {\n        value = value.trim();\n    }\n    // Add spaces around operators inside math functions like calc() that do not follow an operator\n    // or '('.\n    value = value.replace(/(calc|min|max|clamp)\\(.+\\)/g, (match)=>{\n        let vars = [];\n        return match.replace(/var\\((--.+?)[,)]/g, (match, g1)=>{\n            vars.push(g1);\n            return match.replace(g1, placeholder);\n        }).replace(/(-?\\d*\\.?\\d(?!\\b-\\d.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g, \"$1 $2 \").replace(placeholderRe, ()=>vars.shift());\n    });\n    return value;\n}\nfunction url(value) {\n    return value.startsWith(\"url(\");\n}\nfunction number(value) {\n    return !isNaN(Number(value)) || isCSSFunction(value);\n}\nfunction percentage(value) {\n    return value.endsWith(\"%\") && number(value.slice(0, -1)) || isCSSFunction(value);\n}\n// Please refer to MDN when updating this list:\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\n// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries#container_query_length_units\nlet lengthUnits = [\n    \"cm\",\n    \"mm\",\n    \"Q\",\n    \"in\",\n    \"pc\",\n    \"pt\",\n    \"px\",\n    \"em\",\n    \"ex\",\n    \"ch\",\n    \"rem\",\n    \"lh\",\n    \"rlh\",\n    \"vw\",\n    \"vh\",\n    \"vmin\",\n    \"vmax\",\n    \"vb\",\n    \"vi\",\n    \"svw\",\n    \"svh\",\n    \"lvw\",\n    \"lvh\",\n    \"dvw\",\n    \"dvh\",\n    \"cqw\",\n    \"cqh\",\n    \"cqi\",\n    \"cqb\",\n    \"cqmin\",\n    \"cqmax\"\n];\nlet lengthUnitsPattern = `(?:${lengthUnits.join(\"|\")})`;\nfunction length(value) {\n    return value === \"0\" || new RegExp(`^[+-]?[0-9]*\\.?[0-9]+(?:[eE][+-]?[0-9]+)?${lengthUnitsPattern}$`).test(value) || isCSSFunction(value);\n}\nlet lineWidths = new Set([\n    \"thin\",\n    \"medium\",\n    \"thick\"\n]);\nfunction lineWidth(value) {\n    return lineWidths.has(value);\n}\nfunction shadow(value) {\n    let parsedShadows = (0, _parseBoxShadowValue.parseBoxShadowValue)(normalize(value));\n    for (let parsedShadow of parsedShadows){\n        if (!parsedShadow.valid) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction color(value) {\n    let colors = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \"_\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if ((0, _color.parseColor)(part, {\n            loose: true\n        }) !== null) return colors++, true;\n        return false;\n    });\n    if (!result) return false;\n    return colors > 0;\n}\nfunction image(value) {\n    let images = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if (url(part) || gradient(part) || [\n            \"element(\",\n            \"image(\",\n            \"cross-fade(\",\n            \"image-set(\"\n        ].some((fn)=>part.startsWith(fn))) {\n            images++;\n            return true;\n        }\n        return false;\n    });\n    if (!result) return false;\n    return images > 0;\n}\nlet gradientTypes = new Set([\n    \"linear-gradient\",\n    \"radial-gradient\",\n    \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\",\n    \"conic-gradient\"\n]);\nfunction gradient(value) {\n    value = normalize(value);\n    for (let type of gradientTypes){\n        if (value.startsWith(`${type}(`)) {\n            return true;\n        }\n    }\n    return false;\n}\nlet validPositions = new Set([\n    \"center\",\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n]);\nfunction position(value) {\n    let positions = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \"_\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if (validPositions.has(part) || length(part) || percentage(part)) {\n            positions++;\n            return true;\n        }\n        return false;\n    });\n    if (!result) return false;\n    return positions > 0;\n}\nfunction familyName(value) {\n    let fonts = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        // If it contains spaces, then it should be quoted\n        if (part.includes(\" \")) {\n            if (!/(['\"])([^\"']+)\\1/g.test(part)) {\n                return false;\n            }\n        }\n        // If it starts with a number, it's invalid\n        if (/^\\d/g.test(part)) {\n            return false;\n        }\n        fonts++;\n        return true;\n    });\n    if (!result) return false;\n    return fonts > 0;\n}\nlet genericNames = new Set([\n    \"serif\",\n    \"sans-serif\",\n    \"monospace\",\n    \"cursive\",\n    \"fantasy\",\n    \"system-ui\",\n    \"ui-serif\",\n    \"ui-sans-serif\",\n    \"ui-monospace\",\n    \"ui-rounded\",\n    \"math\",\n    \"emoji\",\n    \"fangsong\"\n]);\nfunction genericName(value) {\n    return genericNames.has(value);\n}\nlet absoluteSizes = new Set([\n    \"xx-small\",\n    \"x-small\",\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"x-large\",\n    \"x-large\",\n    \"xxx-large\"\n]);\nfunction absoluteSize(value) {\n    return absoluteSizes.has(value);\n}\nlet relativeSizes = new Set([\n    \"larger\",\n    \"smaller\"\n]);\nfunction relativeSize(value) {\n    return relativeSizes.has(value);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"defaults\", {\n    enumerable: true,\n    get: ()=>defaults\n});\nfunction defaults(target, ...sources) {\n    for (let source of sources){\n        for(let k in source){\n            var _target_hasOwnProperty;\n            if (!(target === null || target === void 0 ? void 0 : (_target_hasOwnProperty = target.hasOwnProperty) === null || _target_hasOwnProperty === void 0 ? void 0 : _target_hasOwnProperty.call(target, k))) {\n                target[k] = source[k];\n            }\n        }\n        for (let k1 of Object.getOwnPropertySymbols(source)){\n            var _target_hasOwnProperty1;\n            if (!(target === null || target === void 0 ? void 0 : (_target_hasOwnProperty1 = target.hasOwnProperty) === null || _target_hasOwnProperty1 === void 0 ? void 0 : _target_hasOwnProperty1.call(target, k1))) {\n                target[k1] = source[k1];\n            }\n        }\n    }\n    return target;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>escapeClassName\n});\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nconst _escapeCommas = /*#__PURE__*/ _interopRequireDefault(require(\"./escapeCommas\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction escapeClassName(className) {\n    var _node_raws;\n    let node = _postcssSelectorParser.default.className();\n    node.value = className;\n    var _node_raws_value;\n    return (0, _escapeCommas.default)((_node_raws_value = node === null || node === void 0 ? void 0 : (_node_raws = node.raws) === null || _node_raws === void 0 ? void 0 : _node_raws.value) !== null && _node_raws_value !== void 0 ? _node_raws_value : node.value);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>escapeCommas\n});\nfunction escapeCommas(className) {\n    return className.replace(/\\\\,/g, \"\\\\2c \");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst flattenColorPalette = (colors)=>Object.assign({}, ...Object.entries(colors !== null && colors !== void 0 ? colors : {}).flatMap(([color, values])=>typeof values == \"object\" ? Object.entries(flattenColorPalette(values)).map(([number, hex])=>({\n                [color + (number === \"DEFAULT\" ? \"\" : `-${number}`)]: hex\n            })) : [\n            {\n                [`${color}`]: values\n            }\n        ]));\nconst _default = flattenColorPalette;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    formatVariantSelector: ()=>formatVariantSelector,\n    eliminateIrrelevantSelectors: ()=>eliminateIrrelevantSelectors,\n    finalizeSelector: ()=>finalizeSelector,\n    handleMergePseudo: ()=>handleMergePseudo\n});\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nconst _unesc = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser/dist/util/unesc\"));\nconst _escapeClassName = /*#__PURE__*/ _interopRequireDefault(require(\"../util/escapeClassName\"));\nconst _prefixSelector = /*#__PURE__*/ _interopRequireDefault(require(\"../util/prefixSelector\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/** @typedef {import('postcss-selector-parser').Root} Root */ /** @typedef {import('postcss-selector-parser').Selector} Selector */ /** @typedef {import('postcss-selector-parser').Pseudo} Pseudo */ /** @typedef {import('postcss-selector-parser').Node} Node */ /** @typedef {{format: string, isArbitraryVariant: boolean}[]} RawFormats */ /** @typedef {import('postcss-selector-parser').Root} ParsedFormats */ /** @typedef {RawFormats | ParsedFormats} AcceptedFormats */ let MERGE = \":merge\";\nfunction formatVariantSelector(formats, { context , candidate  }) {\n    var _context_tailwindConfig_prefix;\n    let prefix = (_context_tailwindConfig_prefix = context === null || context === void 0 ? void 0 : context.tailwindConfig.prefix) !== null && _context_tailwindConfig_prefix !== void 0 ? _context_tailwindConfig_prefix : \"\";\n    // Parse the format selector into an AST\n    let parsedFormats = formats.map((format)=>{\n        let ast = (0, _postcssSelectorParser.default)().astSync(format.format);\n        return {\n            ...format,\n            ast: format.isArbitraryVariant ? ast : (0, _prefixSelector.default)(prefix, ast)\n        };\n    });\n    // We start with the candidate selector\n    let formatAst = _postcssSelectorParser.default.root({\n        nodes: [\n            _postcssSelectorParser.default.selector({\n                nodes: [\n                    _postcssSelectorParser.default.className({\n                        value: (0, _escapeClassName.default)(candidate)\n                    })\n                ]\n            })\n        ]\n    });\n    // And iteratively merge each format selector into the candidate selector\n    for (let { ast  } of parsedFormats){\n        [formatAst, ast] = handleMergePseudo(formatAst, ast);\n        // 2. Merge the format selector into the current selector AST\n        ast.walkNesting((nesting)=>nesting.replaceWith(...formatAst.nodes[0].nodes));\n        // 3. Keep going!\n        formatAst = ast;\n    }\n    return formatAst;\n}\n/**\n * Given any node in a selector this gets the \"simple\" selector it's a part of\n * A simple selector is just a list of nodes without any combinators\n * Technically :is(), :not(), :has(), etc… can have combinators but those are nested\n * inside the relevant node and won't be picked up so they're fine to ignore\n *\n * @param {Node} node\n * @returns {Node[]}\n **/ function simpleSelectorForNode(node) {\n    /** @type {Node[]} */ let nodes = [];\n    // Walk backwards until we hit a combinator node (or the start)\n    while(node.prev() && node.prev().type !== \"combinator\"){\n        node = node.prev();\n    }\n    // Now record all non-combinator nodes until we hit one (or the end)\n    while(node && node.type !== \"combinator\"){\n        nodes.push(node);\n        node = node.next();\n    }\n    return nodes;\n}\n/**\n * Resorts the nodes in a selector to ensure they're in the correct order\n * Tags go before classes, and pseudo classes go after classes\n *\n * @param {Selector} sel\n * @returns {Selector}\n **/ function resortSelector(sel) {\n    sel.sort((a, b)=>{\n        if (a.type === \"tag\" && b.type === \"class\") {\n            return -1;\n        } else if (a.type === \"class\" && b.type === \"tag\") {\n            return 1;\n        } else if (a.type === \"class\" && b.type === \"pseudo\" && b.value.startsWith(\"::\")) {\n            return -1;\n        } else if (a.type === \"pseudo\" && a.value.startsWith(\"::\") && b.type === \"class\") {\n            return 1;\n        }\n        return sel.index(a) - sel.index(b);\n    });\n    return sel;\n}\nfunction eliminateIrrelevantSelectors(sel, base) {\n    let hasClassesMatchingCandidate = false;\n    sel.walk((child)=>{\n        if (child.type === \"class\" && child.value === base) {\n            hasClassesMatchingCandidate = true;\n            return false // Stop walking\n            ;\n        }\n    });\n    if (!hasClassesMatchingCandidate) {\n        sel.remove();\n    }\n// We do NOT recursively eliminate sub selectors that don't have the base class\n// as this is NOT a safe operation. For example, if we have:\n// `.space-x-2 > :not([hidden]) ~ :not([hidden])`\n// We cannot remove the [hidden] from the :not() because it would change the\n// meaning of the selector.\n// TODO: Can we do this for :matches, :is, and :where?\n}\nfunction finalizeSelector(current, formats, { context , candidate , base  }) {\n    var _context_tailwindConfig;\n    var _context_tailwindConfig_separator;\n    let separator = (_context_tailwindConfig_separator = context === null || context === void 0 ? void 0 : (_context_tailwindConfig = context.tailwindConfig) === null || _context_tailwindConfig === void 0 ? void 0 : _context_tailwindConfig.separator) !== null && _context_tailwindConfig_separator !== void 0 ? _context_tailwindConfig_separator : \":\";\n    // Split by the separator, but ignore the separator inside square brackets:\n    //\n    // E.g.: dark:lg:hover:[paint-order:markers]\n    //           ┬  ┬     ┬            ┬\n    //           │  │     │            ╰── We will not split here\n    //           ╰──┴─────┴─────────────── We will split here\n    //\n    base = base !== null && base !== void 0 ? base : candidate.split(new RegExp(`\\\\${separator}(?![^[]*\\\\])`)).pop();\n    // Parse the selector into an AST\n    let selector = (0, _postcssSelectorParser.default)().astSync(current);\n    // Normalize escaped classes, e.g.:\n    //\n    // The idea would be to replace the escaped `base` in the selector with the\n    // `format`. However, in css you can escape the same selector in a few\n    // different ways. This would result in different strings and therefore we\n    // can't replace it properly.\n    //\n    //               base: bg-[rgb(255,0,0)]\n    //   base in selector: bg-\\\\[rgb\\\\(255\\\\,0\\\\,0\\\\)\\\\]\n    //       escaped base: bg-\\\\[rgb\\\\(255\\\\2c 0\\\\2c 0\\\\)\\\\]\n    //\n    selector.walkClasses((node)=>{\n        if (node.raws && node.value.includes(base)) {\n            node.raws.value = (0, _escapeClassName.default)((0, _unesc.default)(node.raws.value));\n        }\n    });\n    // Remove extraneous selectors that do not include the base candidate\n    selector.each((sel)=>eliminateIrrelevantSelectors(sel, base));\n    // If there are no formats that means there were no variants added to the candidate\n    // so we can just return the selector as-is\n    let formatAst = Array.isArray(formats) ? formatVariantSelector(formats, {\n        context,\n        candidate\n    }) : formats;\n    if (formatAst === null) {\n        return selector.toString();\n    }\n    let simpleStart = _postcssSelectorParser.default.comment({\n        value: \"/*__simple__*/\"\n    });\n    let simpleEnd = _postcssSelectorParser.default.comment({\n        value: \"/*__simple__*/\"\n    });\n    // We can safely replace the escaped base now, since the `base` section is\n    // now in a normalized escaped value.\n    selector.walkClasses((node)=>{\n        if (node.value !== base) {\n            return;\n        }\n        let parent = node.parent;\n        let formatNodes = formatAst.nodes[0].nodes;\n        // Perf optimization: if the parent is a single class we can just replace it and be done\n        if (parent.nodes.length === 1) {\n            node.replaceWith(...formatNodes);\n            return;\n        }\n        let simpleSelector = simpleSelectorForNode(node);\n        parent.insertBefore(simpleSelector[0], simpleStart);\n        parent.insertAfter(simpleSelector[simpleSelector.length - 1], simpleEnd);\n        for (let child of formatNodes){\n            parent.insertBefore(simpleSelector[0], child.clone());\n        }\n        node.remove();\n        // Re-sort the simple selector to ensure it's in the correct order\n        simpleSelector = simpleSelectorForNode(simpleStart);\n        let firstNode = parent.index(simpleStart);\n        parent.nodes.splice(firstNode, simpleSelector.length, ...resortSelector(_postcssSelectorParser.default.selector({\n            nodes: simpleSelector\n        })).nodes);\n        simpleStart.remove();\n        simpleEnd.remove();\n    });\n    // Remove unnecessary pseudo selectors that we used as placeholders\n    selector.walkPseudos((p)=>{\n        if (p.value === MERGE) {\n            p.replaceWith(p.nodes);\n        }\n    });\n    // Move pseudo elements to the end of the selector (if necessary)\n    selector.each((sel)=>{\n        let pseudoElements = collectPseudoElements(sel);\n        if (pseudoElements.length > 0) {\n            sel.nodes.push(pseudoElements.sort(sortSelector));\n        }\n    });\n    return selector.toString();\n}\nfunction handleMergePseudo(selector, format) {\n    /** @type {{pseudo: Pseudo, value: string}[]} */ let merges = [];\n    // Find all :merge() pseudo-classes in `selector`\n    selector.walkPseudos((pseudo)=>{\n        if (pseudo.value === MERGE) {\n            merges.push({\n                pseudo,\n                value: pseudo.nodes[0].toString()\n            });\n        }\n    });\n    // Find all :merge() \"attachments\" in `format` and attach them to the matching selector in `selector`\n    format.walkPseudos((pseudo)=>{\n        if (pseudo.value !== MERGE) {\n            return;\n        }\n        let value = pseudo.nodes[0].toString();\n        // Does `selector` contain a :merge() pseudo-class with the same value?\n        let existing = merges.find((merge)=>merge.value === value);\n        // Nope so there's nothing to do\n        if (!existing) {\n            return;\n        }\n        // Everything after `:merge()` up to the next combinator is what is attached to the merged selector\n        let attachments = [];\n        let next = pseudo.next();\n        while(next && next.type !== \"combinator\"){\n            attachments.push(next);\n            next = next.next();\n        }\n        let combinator = next;\n        existing.pseudo.parent.insertAfter(existing.pseudo, _postcssSelectorParser.default.selector({\n            nodes: attachments.map((node)=>node.clone())\n        }));\n        pseudo.remove();\n        attachments.forEach((node)=>node.remove());\n        // What about this case:\n        // :merge(.group):focus > &\n        // :merge(.group):hover &\n        if (combinator && combinator.type === \"combinator\") {\n            combinator.remove();\n        }\n    });\n    return [\n        selector,\n        format\n    ];\n}\n// Note: As a rule, double colons (::) should be used instead of a single colon\n// (:). This distinguishes pseudo-classes from pseudo-elements. However, since\n// this distinction was not present in older versions of the W3C spec, most\n// browsers support both syntaxes for the original pseudo-elements.\nlet pseudoElementsBC = [\n    \":before\",\n    \":after\",\n    \":first-line\",\n    \":first-letter\"\n];\n// These pseudo-elements _can_ be combined with other pseudo selectors AND the order does matter.\nlet pseudoElementExceptions = [\n    \"::file-selector-button\",\n    // Webkit scroll bar pseudo elements can be combined with user-action pseudo classes\n    \"::-webkit-scrollbar\",\n    \"::-webkit-scrollbar-button\",\n    \"::-webkit-scrollbar-thumb\",\n    \"::-webkit-scrollbar-track\",\n    \"::-webkit-scrollbar-track-piece\",\n    \"::-webkit-scrollbar-corner\",\n    \"::-webkit-resizer\"\n];\n/**\n * This will make sure to move pseudo's to the correct spot (the end for\n * pseudo elements) because otherwise the selector will never work\n * anyway.\n *\n * E.g.:\n *  - `before:hover:text-center` would result in `.before\\:hover\\:text-center:hover::before`\n *  - `hover:before:text-center` would result in `.hover\\:before\\:text-center:hover::before`\n *\n * `::before:hover` doesn't work, which means that we can make it work for you by flipping the order.\n *\n * @param {Selector} selector\n **/ function collectPseudoElements(selector) {\n    /** @type {Node[]} */ let nodes = [];\n    for (let node of selector.nodes){\n        if (isPseudoElement(node)) {\n            nodes.push(node);\n            selector.removeChild(node);\n        }\n        if (node === null || node === void 0 ? void 0 : node.nodes) {\n            nodes.push(...collectPseudoElements(node));\n        }\n    }\n    return nodes;\n}\n// This will make sure to move pseudo's to the correct spot (the end for\n// pseudo elements) because otherwise the selector will never work\n// anyway.\n//\n// E.g.:\n//  - `before:hover:text-center` would result in `.before\\:hover\\:text-center:hover::before`\n//  - `hover:before:text-center` would result in `.hover\\:before\\:text-center:hover::before`\n//\n// `::before:hover` doesn't work, which means that we can make it work\n// for you by flipping the order.\nfunction sortSelector(a, z) {\n    // Both nodes are non-pseudo's so we can safely ignore them and keep\n    // them in the same order.\n    if (a.type !== \"pseudo\" && z.type !== \"pseudo\") {\n        return 0;\n    }\n    // If one of them is a combinator, we need to keep it in the same order\n    // because that means it will start a new \"section\" in the selector.\n    if (a.type === \"combinator\" ^ z.type === \"combinator\") {\n        return 0;\n    }\n    // One of the items is a pseudo and the other one isn't. Let's move\n    // the pseudo to the right.\n    if (a.type === \"pseudo\" ^ z.type === \"pseudo\") {\n        return (a.type === \"pseudo\") - (z.type === \"pseudo\");\n    }\n    // Both are pseudo's, move the pseudo elements (except for\n    // ::file-selector-button) to the right.\n    return isPseudoElement(a) - isPseudoElement(z);\n}\nfunction isPseudoElement(node) {\n    if (node.type !== \"pseudo\") return false;\n    if (pseudoElementExceptions.includes(node.value)) return false;\n    return node.value.startsWith(\"::\") || pseudoElementsBC.includes(node.value);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>getAllConfigs\n});\nconst _defaultConfigStubJs = /*#__PURE__*/ _interopRequireDefault(require(\"../../stubs/defaultConfig.stub.js\"));\nconst _featureFlags = require(\"../featureFlags\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction getAllConfigs(config) {\n    var _config_presets;\n    const configs = ((_config_presets = config === null || config === void 0 ? void 0 : config.presets) !== null && _config_presets !== void 0 ? _config_presets : [\n        _defaultConfigStubJs.default\n    ]).slice().reverse().flatMap((preset)=>getAllConfigs(preset instanceof Function ? preset() : preset));\n    const features = {\n        // Add experimental configs here...\n        respectDefaultRingColorOpacity: {\n            theme: {\n                ringColor: ({ theme  })=>({\n                        DEFAULT: \"#3b82f67f\",\n                        ...theme(\"colors\")\n                    })\n            }\n        },\n        disableColorOpacityUtilitiesByDefault: {\n            corePlugins: {\n                backgroundOpacity: false,\n                borderOpacity: false,\n                divideOpacity: false,\n                placeholderOpacity: false,\n                ringOpacity: false,\n                textOpacity: false\n            }\n        }\n    };\n    const experimentals = Object.keys(features).filter((feature)=>(0, _featureFlags.flagEnabled)(config, feature)).map((feature)=>features[feature]);\n    return [\n        config,\n        ...experimentals,\n        ...configs\n    ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>hashConfig\n});\nconst _objectHash = /*#__PURE__*/ _interopRequireDefault(require(\"object-hash\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction hashConfig(config) {\n    return (0, _objectHash.default)(config, {\n        ignoreUnknown: true\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>isPlainObject\n});\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== \"[object Object]\") {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, // Arbitrary values must contain balanced brackets (), [] and {}. Escaped\n// values don't count, and brackets inside quotes also don't count.\n//\n// E.g.: w-[this-is]w-[weird-and-invalid]\n// E.g.: w-[this-is\\\\]w-\\\\[weird-but-valid]\n// E.g.: content-['this-is-also-valid]-weirdly-enough']\n\"default\", {\n    enumerable: true,\n    get: ()=>isSyntacticallyValidPropertyValue\n});\nlet matchingBrackets = new Map([\n    [\n        \"{\",\n        \"}\"\n    ],\n    [\n        \"[\",\n        \"]\"\n    ],\n    [\n        \"(\",\n        \")\"\n    ]\n]);\nlet inverseMatchingBrackets = new Map(Array.from(matchingBrackets.entries()).map(([k, v])=>[\n        v,\n        k\n    ]));\nlet quotes = new Set([\n    '\"',\n    \"'\",\n    \"`\"\n]);\nfunction isSyntacticallyValidPropertyValue(value) {\n    let stack = [];\n    let inQuotes = false;\n    for(let i = 0; i < value.length; i++){\n        let char = value[i];\n        if (char === \":\" && !inQuotes && stack.length === 0) {\n            return false;\n        }\n        // Non-escaped quotes allow us to \"allow\" anything in between\n        if (quotes.has(char) && value[i - 1] !== \"\\\\\") {\n            inQuotes = !inQuotes;\n        }\n        if (inQuotes) continue;\n        if (value[i - 1] === \"\\\\\") continue; // Escaped\n        if (matchingBrackets.has(char)) {\n            stack.push(char);\n        } else if (inverseMatchingBrackets.has(char)) {\n            let inverse = inverseMatchingBrackets.get(char);\n            // Nothing to pop from, therefore it is unbalanced\n            if (stack.length <= 0) {\n                return false;\n            }\n            // Popped value must match the inverse value, otherwise it is unbalanced\n            if (stack.pop() !== inverse) {\n                return false;\n            }\n        }\n    }\n    // If there is still something on the stack, it is also unbalanced\n    if (stack.length > 0) {\n        return false;\n    }\n    // All good, totally balanced!\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    dim: ()=>dim,\n    default: ()=>_default\n});\nconst _picocolors = /*#__PURE__*/ _interopRequireDefault(require(\"picocolors\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet alreadyShown = new Set();\nfunction log(type, messages, key) {\n    if (typeof process !== \"undefined\" && process.env.JEST_WORKER_ID) return;\n    if (key && alreadyShown.has(key)) return;\n    if (key) alreadyShown.add(key);\n    console.warn(\"\");\n    messages.forEach((message)=>console.warn(type, \"-\", message));\n}\nfunction dim(input) {\n    return _picocolors.default.dim(input);\n}\nconst _default = {\n    info (key, messages) {\n        log(_picocolors.default.bold(_picocolors.default.cyan(\"info\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    },\n    warn (key, messages) {\n        log(_picocolors.default.bold(_picocolors.default.yellow(\"warn\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    },\n    risk (key, messages) {\n        log(_picocolors.default.bold(_picocolors.default.magenta(\"risk\")), ...Array.isArray(key) ? [\n            key\n        ] : [\n            messages,\n            key\n        ]);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    asClass: ()=>asClass,\n    default: ()=>nameClass,\n    formatClass: ()=>formatClass\n});\nconst _escapeClassName = /*#__PURE__*/ _interopRequireDefault(require(\"./escapeClassName\"));\nconst _escapeCommas = /*#__PURE__*/ _interopRequireDefault(require(\"./escapeCommas\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction asClass(name) {\n    return (0, _escapeCommas.default)(`.${(0, _escapeClassName.default)(name)}`);\n}\nfunction nameClass(classPrefix, key) {\n    return asClass(formatClass(classPrefix, key));\n}\nfunction formatClass(classPrefix, key) {\n    if (key === \"DEFAULT\") {\n        return classPrefix;\n    }\n    if (key === \"-\" || key === \"-DEFAULT\") {\n        return `-${classPrefix}`;\n    }\n    if (key.startsWith(\"-\")) {\n        return `-${classPrefix}${key}`;\n    }\n    if (key.startsWith(\"/\")) {\n        return `${classPrefix}${key}`;\n    }\n    return `${classPrefix}-${key}`;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>negateValue\n});\nfunction negateValue(value) {\n    value = `${value}`;\n    if (value === \"0\") {\n        return \"0\";\n    }\n    // Flip sign of numbers\n    if (/^[+-]?(\\d+|\\d*\\.\\d+)(e[+-]?\\d+)?(%|\\w+)?$/.test(value)) {\n        return value.replace(/^[+-]?/, (sign)=>sign === \"-\" ? \"\" : \"-\");\n    }\n    // What functions we support negating numeric values for\n    // var() isn't inherently a numeric function but we support it anyway\n    // The trigonometric functions are omitted because you'll need to use calc(…) with them _anyway_\n    // to produce generally useful results and that will be covered already\n    let numericFunctions = [\n        \"var\",\n        \"calc\",\n        \"min\",\n        \"max\",\n        \"clamp\"\n    ];\n    for (const fn of numericFunctions){\n        if (value.includes(`${fn}(`)) {\n            return `calc(${value} * -1)`;\n        }\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"normalizeConfig\", {\n    enumerable: true,\n    get: ()=>normalizeConfig\n});\nconst _log = /*#__PURE__*/ _interopRequireWildcard(require(\"./log\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction normalizeConfig(config) {\n    // Quick structure validation\n    /**\n   * type FilePath = string\n   * type RawFile = { raw: string, extension?: string }\n   * type ExtractorFn = (content: string) => Array<string>\n   * type TransformerFn = (content: string) => string\n   *\n   * type Content =\n   *   | Array<FilePath | RawFile>\n   *   | {\n   *       files: Array<FilePath | RawFile>,\n   *       extract?: ExtractorFn | { [extension: string]: ExtractorFn }\n   *       transform?: TransformerFn | { [extension: string]: TransformerFn }\n   *   }\n   */ let valid = (()=>{\n        // `config.purge` should not exist anymore\n        if (config.purge) {\n            return false;\n        }\n        // `config.content` should exist\n        if (!config.content) {\n            return false;\n        }\n        // `config.content` should be an object or an array\n        if (!Array.isArray(config.content) && !(typeof config.content === \"object\" && config.content !== null)) {\n            return false;\n        }\n        // When `config.content` is an array, it should consist of FilePaths or RawFiles\n        if (Array.isArray(config.content)) {\n            return config.content.every((path)=>{\n                // `path` can be a string\n                if (typeof path === \"string\") return true;\n                // `path` can be an object { raw: string, extension?: string }\n                // `raw` must be a string\n                if (typeof (path === null || path === void 0 ? void 0 : path.raw) !== \"string\") return false;\n                // `extension` (if provided) should also be a string\n                if ((path === null || path === void 0 ? void 0 : path.extension) && typeof (path === null || path === void 0 ? void 0 : path.extension) !== \"string\") {\n                    return false;\n                }\n                return true;\n            });\n        }\n        // When `config.content` is an object\n        if (typeof config.content === \"object\" && config.content !== null) {\n            // Only `files`, `relative`, `extract`, and `transform` can exist in `config.content`\n            if (Object.keys(config.content).some((key)=>![\n                    \"files\",\n                    \"relative\",\n                    \"extract\",\n                    \"transform\"\n                ].includes(key))) {\n                return false;\n            }\n            // `config.content.files` should exist of FilePaths or RawFiles\n            if (Array.isArray(config.content.files)) {\n                if (!config.content.files.every((path)=>{\n                    // `path` can be a string\n                    if (typeof path === \"string\") return true;\n                    // `path` can be an object { raw: string, extension?: string }\n                    // `raw` must be a string\n                    if (typeof (path === null || path === void 0 ? void 0 : path.raw) !== \"string\") return false;\n                    // `extension` (if provided) should also be a string\n                    if ((path === null || path === void 0 ? void 0 : path.extension) && typeof (path === null || path === void 0 ? void 0 : path.extension) !== \"string\") {\n                        return false;\n                    }\n                    return true;\n                })) {\n                    return false;\n                }\n                // `config.content.extract` is optional, and can be a Function or a Record<String, Function>\n                if (typeof config.content.extract === \"object\") {\n                    for (let value of Object.values(config.content.extract)){\n                        if (typeof value !== \"function\") {\n                            return false;\n                        }\n                    }\n                } else if (!(config.content.extract === undefined || typeof config.content.extract === \"function\")) {\n                    return false;\n                }\n                // `config.content.transform` is optional, and can be a Function or a Record<String, Function>\n                if (typeof config.content.transform === \"object\") {\n                    for (let value1 of Object.values(config.content.transform)){\n                        if (typeof value1 !== \"function\") {\n                            return false;\n                        }\n                    }\n                } else if (!(config.content.transform === undefined || typeof config.content.transform === \"function\")) {\n                    return false;\n                }\n                // `config.content.relative` is optional and can be a boolean\n                if (typeof config.content.relative !== \"boolean\" && typeof config.content.relative !== \"undefined\") {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    })();\n    if (!valid) {\n        _log.default.warn(\"purge-deprecation\", [\n            \"The `purge`/`content` options have changed in Tailwind CSS v3.0.\",\n            \"Update your configuration file to eliminate this warning.\",\n            \"https://tailwindcss.com/docs/upgrade-guide#configure-content-sources\"\n        ]);\n    }\n    // Normalize the `safelist`\n    config.safelist = (()=>{\n        var _purge_options;\n        let { content , purge , safelist  } = config;\n        if (Array.isArray(safelist)) return safelist;\n        if (Array.isArray(content === null || content === void 0 ? void 0 : content.safelist)) return content.safelist;\n        if (Array.isArray(purge === null || purge === void 0 ? void 0 : purge.safelist)) return purge.safelist;\n        if (Array.isArray(purge === null || purge === void 0 ? void 0 : (_purge_options = purge.options) === null || _purge_options === void 0 ? void 0 : _purge_options.safelist)) return purge.options.safelist;\n        return [];\n    })();\n    // Normalize the `blocklist`\n    config.blocklist = (()=>{\n        let { blocklist  } = config;\n        if (Array.isArray(blocklist)) {\n            if (blocklist.every((item)=>typeof item === \"string\")) {\n                return blocklist;\n            }\n            _log.default.warn(\"blocklist-invalid\", [\n                \"The `blocklist` option must be an array of strings.\",\n                \"https://tailwindcss.com/docs/content-configuration#discarding-classes\"\n            ]);\n        }\n        return [];\n    })();\n    // Normalize prefix option\n    if (typeof config.prefix === \"function\") {\n        _log.default.warn(\"prefix-function\", [\n            \"As of Tailwind CSS v3.0, `prefix` cannot be a function.\",\n            \"Update `prefix` in your configuration to be a string to eliminate this warning.\",\n            \"https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function\"\n        ]);\n        config.prefix = \"\";\n    } else {\n        var _config_prefix;\n        config.prefix = (_config_prefix = config.prefix) !== null && _config_prefix !== void 0 ? _config_prefix : \"\";\n    }\n    // Normalize the `content`\n    config.content = {\n        relative: (()=>{\n            var _config_future;\n            let { content  } = config;\n            if (content === null || content === void 0 ? void 0 : content.relative) {\n                return content.relative;\n            }\n            var _config_future_relativeContentPathsByDefault;\n            return (_config_future_relativeContentPathsByDefault = (_config_future = config.future) === null || _config_future === void 0 ? void 0 : _config_future.relativeContentPathsByDefault) !== null && _config_future_relativeContentPathsByDefault !== void 0 ? _config_future_relativeContentPathsByDefault : false;\n        })(),\n        files: (()=>{\n            let { content , purge  } = config;\n            if (Array.isArray(purge)) return purge;\n            if (Array.isArray(purge === null || purge === void 0 ? void 0 : purge.content)) return purge.content;\n            if (Array.isArray(content)) return content;\n            if (Array.isArray(content === null || content === void 0 ? void 0 : content.content)) return content.content;\n            if (Array.isArray(content === null || content === void 0 ? void 0 : content.files)) return content.files;\n            return [];\n        })(),\n        extract: (()=>{\n            let extract = (()=>{\n                var _config_purge, _config_content, _config_purge1, _config_purge_extract, _config_content1, _config_content_extract, _config_purge2, _config_purge_options, _config_content2, _config_content_options;\n                if ((_config_purge = config.purge) === null || _config_purge === void 0 ? void 0 : _config_purge.extract) return config.purge.extract;\n                if ((_config_content = config.content) === null || _config_content === void 0 ? void 0 : _config_content.extract) return config.content.extract;\n                if ((_config_purge1 = config.purge) === null || _config_purge1 === void 0 ? void 0 : (_config_purge_extract = _config_purge1.extract) === null || _config_purge_extract === void 0 ? void 0 : _config_purge_extract.DEFAULT) return config.purge.extract.DEFAULT;\n                if ((_config_content1 = config.content) === null || _config_content1 === void 0 ? void 0 : (_config_content_extract = _config_content1.extract) === null || _config_content_extract === void 0 ? void 0 : _config_content_extract.DEFAULT) return config.content.extract.DEFAULT;\n                if ((_config_purge2 = config.purge) === null || _config_purge2 === void 0 ? void 0 : (_config_purge_options = _config_purge2.options) === null || _config_purge_options === void 0 ? void 0 : _config_purge_options.extractors) return config.purge.options.extractors;\n                if ((_config_content2 = config.content) === null || _config_content2 === void 0 ? void 0 : (_config_content_options = _config_content2.options) === null || _config_content_options === void 0 ? void 0 : _config_content_options.extractors) return config.content.options.extractors;\n                return {};\n            })();\n            let extractors = {};\n            let defaultExtractor = (()=>{\n                var _config_purge, _config_purge_options, _config_content, _config_content_options;\n                if ((_config_purge = config.purge) === null || _config_purge === void 0 ? void 0 : (_config_purge_options = _config_purge.options) === null || _config_purge_options === void 0 ? void 0 : _config_purge_options.defaultExtractor) {\n                    return config.purge.options.defaultExtractor;\n                }\n                if ((_config_content = config.content) === null || _config_content === void 0 ? void 0 : (_config_content_options = _config_content.options) === null || _config_content_options === void 0 ? void 0 : _config_content_options.defaultExtractor) {\n                    return config.content.options.defaultExtractor;\n                }\n                return undefined;\n            })();\n            if (defaultExtractor !== undefined) {\n                extractors.DEFAULT = defaultExtractor;\n            }\n            // Functions\n            if (typeof extract === \"function\") {\n                extractors.DEFAULT = extract;\n            } else if (Array.isArray(extract)) {\n                for (let { extensions , extractor  } of extract !== null && extract !== void 0 ? extract : []){\n                    for (let extension of extensions){\n                        extractors[extension] = extractor;\n                    }\n                }\n            } else if (typeof extract === \"object\" && extract !== null) {\n                Object.assign(extractors, extract);\n            }\n            return extractors;\n        })(),\n        transform: (()=>{\n            let transform = (()=>{\n                var _config_purge, _config_content, _config_purge1, _config_purge_transform, _config_content1, _config_content_transform;\n                if ((_config_purge = config.purge) === null || _config_purge === void 0 ? void 0 : _config_purge.transform) return config.purge.transform;\n                if ((_config_content = config.content) === null || _config_content === void 0 ? void 0 : _config_content.transform) return config.content.transform;\n                if ((_config_purge1 = config.purge) === null || _config_purge1 === void 0 ? void 0 : (_config_purge_transform = _config_purge1.transform) === null || _config_purge_transform === void 0 ? void 0 : _config_purge_transform.DEFAULT) return config.purge.transform.DEFAULT;\n                if ((_config_content1 = config.content) === null || _config_content1 === void 0 ? void 0 : (_config_content_transform = _config_content1.transform) === null || _config_content_transform === void 0 ? void 0 : _config_content_transform.DEFAULT) return config.content.transform.DEFAULT;\n                return {};\n            })();\n            let transformers = {};\n            if (typeof transform === \"function\") {\n                transformers.DEFAULT = transform;\n            }\n            if (typeof transform === \"object\" && transform !== null) {\n                Object.assign(transformers, transform);\n            }\n            return transformers;\n        })()\n    };\n    // Validate globs to prevent bogus globs.\n    // E.g.: `./src/*.{html}` is invalid, the `{html}` should just be `html`\n    for (let file of config.content.files){\n        if (typeof file === \"string\" && /{([^,]*?)}/g.test(file)) {\n            _log.default.warn(\"invalid-glob-braces\", [\n                `The glob pattern ${(0, _log.dim)(file)} in your Tailwind CSS configuration is invalid.`,\n                `Update it to ${(0, _log.dim)(file.replace(/{([^,]*?)}/g, \"$1\"))} to silence this warning.`\n            ]);\n            break;\n        }\n    }\n    return config;\n}\n","/**\n * @typedef {object} ScreenValue\n * @property {number|undefined} min\n * @property {number|undefined} max\n * @property {string|undefined} raw\n */ /**\n * @typedef {object} Screen\n * @property {string} name\n * @property {boolean} not\n * @property {ScreenValue[]} values\n */ /**\n * A function that normalizes the various forms that the screens object can be\n * provided in.\n *\n * Input(s):\n *   - ['100px', '200px'] // Raw strings\n *   - { sm: '100px', md: '200px' } // Object with string values\n *   - { sm: { min: '100px' }, md: { max: '100px' } } // Object with object values\n *   - { sm: [{ min: '100px' }, { max: '200px' }] } // Object with object array (multiple values)\n *\n * Output(s):\n *   - [{ name: 'sm', values: [{ min: '100px', max: '200px' }] }] // List of objects, that contains multiple values\n *\n * @returns {Screen[]}\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    normalizeScreens: ()=>normalizeScreens,\n    isScreenSortable: ()=>isScreenSortable,\n    compareScreens: ()=>compareScreens,\n    toScreen: ()=>toScreen\n});\nfunction normalizeScreens(screens, root = true) {\n    if (Array.isArray(screens)) {\n        return screens.map((screen)=>{\n            if (root && Array.isArray(screen)) {\n                throw new Error(\"The tuple syntax is not supported for `screens`.\");\n            }\n            if (typeof screen === \"string\") {\n                return {\n                    name: screen.toString(),\n                    not: false,\n                    values: [\n                        {\n                            min: screen,\n                            max: undefined\n                        }\n                    ]\n                };\n            }\n            let [name, options] = screen;\n            name = name.toString();\n            if (typeof options === \"string\") {\n                return {\n                    name,\n                    not: false,\n                    values: [\n                        {\n                            min: options,\n                            max: undefined\n                        }\n                    ]\n                };\n            }\n            if (Array.isArray(options)) {\n                return {\n                    name,\n                    not: false,\n                    values: options.map((option)=>resolveValue(option))\n                };\n            }\n            return {\n                name,\n                not: false,\n                values: [\n                    resolveValue(options)\n                ]\n            };\n        });\n    }\n    return normalizeScreens(Object.entries(screens !== null && screens !== void 0 ? screens : {}), false);\n}\nfunction isScreenSortable(screen) {\n    if (screen.values.length !== 1) {\n        return {\n            result: false,\n            reason: \"multiple-values\"\n        };\n    } else if (screen.values[0].raw !== undefined) {\n        return {\n            result: false,\n            reason: \"raw-values\"\n        };\n    } else if (screen.values[0].min !== undefined && screen.values[0].max !== undefined) {\n        return {\n            result: false,\n            reason: \"min-and-max\"\n        };\n    }\n    return {\n        result: true,\n        reason: null\n    };\n}\nfunction compareScreens(type, a, z) {\n    let aScreen = toScreen(a, type);\n    let zScreen = toScreen(z, type);\n    let aSorting = isScreenSortable(aScreen);\n    let bSorting = isScreenSortable(zScreen);\n    // These cases should never happen and indicate a bug in Tailwind CSS itself\n    if (aSorting.reason === \"multiple-values\" || bSorting.reason === \"multiple-values\") {\n        throw new Error(\"Attempted to sort a screen with multiple values. This should never happen. Please open a bug report.\");\n    } else if (aSorting.reason === \"raw-values\" || bSorting.reason === \"raw-values\") {\n        throw new Error(\"Attempted to sort a screen with raw values. This should never happen. Please open a bug report.\");\n    } else if (aSorting.reason === \"min-and-max\" || bSorting.reason === \"min-and-max\") {\n        throw new Error(\"Attempted to sort a screen with both min and max values. This should never happen. Please open a bug report.\");\n    }\n    // Let the sorting begin\n    let { min: aMin , max: aMax  } = aScreen.values[0];\n    let { min: zMin , max: zMax  } = zScreen.values[0];\n    // Negating screens flip their behavior. Basically `not min-width` is `max-width`\n    if (a.not) [aMin, aMax] = [\n        aMax,\n        aMin\n    ];\n    if (z.not) [zMin, zMax] = [\n        zMax,\n        zMin\n    ];\n    aMin = aMin === undefined ? aMin : parseFloat(aMin);\n    aMax = aMax === undefined ? aMax : parseFloat(aMax);\n    zMin = zMin === undefined ? zMin : parseFloat(zMin);\n    zMax = zMax === undefined ? zMax : parseFloat(zMax);\n    let [aValue, zValue] = type === \"min\" ? [\n        aMin,\n        zMin\n    ] : [\n        zMax,\n        aMax\n    ];\n    return aValue - zValue;\n}\nfunction toScreen(value, type) {\n    if (typeof value === \"object\") {\n        return value;\n    }\n    return {\n        name: \"arbitrary-screen\",\n        values: [\n            {\n                [type]: value\n            }\n        ]\n    };\n}\nfunction resolveValue({ \"min-width\": _minWidth , min =_minWidth , max , raw  } = {}) {\n    return {\n        min,\n        max,\n        raw\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>parseAnimationValue\n});\nconst DIRECTIONS = new Set([\n    \"normal\",\n    \"reverse\",\n    \"alternate\",\n    \"alternate-reverse\"\n]);\nconst PLAY_STATES = new Set([\n    \"running\",\n    \"paused\"\n]);\nconst FILL_MODES = new Set([\n    \"none\",\n    \"forwards\",\n    \"backwards\",\n    \"both\"\n]);\nconst ITERATION_COUNTS = new Set([\n    \"infinite\"\n]);\nconst TIMINGS = new Set([\n    \"linear\",\n    \"ease\",\n    \"ease-in\",\n    \"ease-out\",\n    \"ease-in-out\",\n    \"step-start\",\n    \"step-end\"\n]);\nconst TIMING_FNS = [\n    \"cubic-bezier\",\n    \"steps\"\n];\nconst COMMA = /\\,(?![^(]*\\))/g // Comma separator that is not located between brackets. E.g.: `cubiz-bezier(a, b, c)` these don't count.\n;\nconst SPACE = /\\ +(?![^(]*\\))/g // Similar to the one above, but with spaces instead.\n;\nconst TIME = /^(-?[\\d.]+m?s)$/;\nconst DIGIT = /^(\\d+)$/;\nfunction parseAnimationValue(input) {\n    let animations = input.split(COMMA);\n    return animations.map((animation)=>{\n        let value = animation.trim();\n        let result = {\n            value\n        };\n        let parts = value.split(SPACE);\n        let seen = new Set();\n        for (let part of parts){\n            if (!seen.has(\"DIRECTIONS\") && DIRECTIONS.has(part)) {\n                result.direction = part;\n                seen.add(\"DIRECTIONS\");\n            } else if (!seen.has(\"PLAY_STATES\") && PLAY_STATES.has(part)) {\n                result.playState = part;\n                seen.add(\"PLAY_STATES\");\n            } else if (!seen.has(\"FILL_MODES\") && FILL_MODES.has(part)) {\n                result.fillMode = part;\n                seen.add(\"FILL_MODES\");\n            } else if (!seen.has(\"ITERATION_COUNTS\") && (ITERATION_COUNTS.has(part) || DIGIT.test(part))) {\n                result.iterationCount = part;\n                seen.add(\"ITERATION_COUNTS\");\n            } else if (!seen.has(\"TIMING_FUNCTION\") && TIMINGS.has(part)) {\n                result.timingFunction = part;\n                seen.add(\"TIMING_FUNCTION\");\n            } else if (!seen.has(\"TIMING_FUNCTION\") && TIMING_FNS.some((f)=>part.startsWith(`${f}(`))) {\n                result.timingFunction = part;\n                seen.add(\"TIMING_FUNCTION\");\n            } else if (!seen.has(\"DURATION\") && TIME.test(part)) {\n                result.duration = part;\n                seen.add(\"DURATION\");\n            } else if (!seen.has(\"DELAY\") && TIME.test(part)) {\n                result.delay = part;\n                seen.add(\"DELAY\");\n            } else if (!seen.has(\"NAME\")) {\n                result.name = part;\n                seen.add(\"NAME\");\n            } else {\n                if (!result.unknown) result.unknown = [];\n                result.unknown.push(part);\n            }\n        }\n        return result;\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    parseBoxShadowValue: ()=>parseBoxShadowValue,\n    formatBoxShadowValue: ()=>formatBoxShadowValue\n});\nconst _splitAtTopLevelOnly = require(\"./splitAtTopLevelOnly\");\nlet KEYWORDS = new Set([\n    \"inset\",\n    \"inherit\",\n    \"initial\",\n    \"revert\",\n    \"unset\"\n]);\nlet SPACE = /\\ +(?![^(]*\\))/g // Similar to the one above, but with spaces instead.\n;\nlet LENGTH = /^-?(\\d+|\\.\\d+)(.*?)$/g;\nfunction parseBoxShadowValue(input) {\n    let shadows = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(input, \",\");\n    return shadows.map((shadow)=>{\n        let value = shadow.trim();\n        let result = {\n            raw: value\n        };\n        let parts = value.split(SPACE);\n        let seen = new Set();\n        for (let part of parts){\n            // Reset index, since the regex is stateful.\n            LENGTH.lastIndex = 0;\n            // Keyword\n            if (!seen.has(\"KEYWORD\") && KEYWORDS.has(part)) {\n                result.keyword = part;\n                seen.add(\"KEYWORD\");\n            } else if (LENGTH.test(part)) {\n                if (!seen.has(\"X\")) {\n                    result.x = part;\n                    seen.add(\"X\");\n                } else if (!seen.has(\"Y\")) {\n                    result.y = part;\n                    seen.add(\"Y\");\n                } else if (!seen.has(\"BLUR\")) {\n                    result.blur = part;\n                    seen.add(\"BLUR\");\n                } else if (!seen.has(\"SPREAD\")) {\n                    result.spread = part;\n                    seen.add(\"SPREAD\");\n                }\n            } else {\n                if (!result.color) {\n                    result.color = part;\n                } else {\n                    if (!result.unknown) result.unknown = [];\n                    result.unknown.push(part);\n                }\n            }\n        }\n        // Check if valid\n        result.valid = result.x !== undefined && result.y !== undefined;\n        return result;\n    });\n}\nfunction formatBoxShadowValue(shadows) {\n    return shadows.map((shadow)=>{\n        if (!shadow.valid) {\n            return shadow.raw;\n        }\n        return [\n            shadow.keyword,\n            shadow.x,\n            shadow.y,\n            shadow.blur,\n            shadow.spread,\n            shadow.color\n        ].filter(Boolean).join(\" \");\n    }).join(\", \");\n}\n","// @ts-check\n/**\n * @typedef {{type: 'dependency', file: string} | {type: 'dir-dependency', dir: string, glob: string}} Dependency\n */ /**\n *\n * @param {import('../lib/content.js').ContentPath} contentPath\n * @returns {Dependency[]}\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>parseDependency\n});\nfunction parseDependency(contentPath) {\n    if (contentPath.ignore) {\n        return [];\n    }\n    if (!contentPath.glob) {\n        return [\n            {\n                type: \"dependency\",\n                file: contentPath.base\n            }\n        ];\n    }\n    if (process.env.ROLLUP_WATCH === \"true\") {\n        // rollup-plugin-postcss does not support dir-dependency messages\n        // but directories can be watched in the same way as files\n        return [\n            {\n                type: \"dependency\",\n                file: contentPath.base\n            }\n        ];\n    }\n    return [\n        {\n            type: \"dir-dependency\",\n            dir: contentPath.base,\n            glob: contentPath.glob\n        }\n    ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"parseGlob\", {\n    enumerable: true,\n    get: ()=>parseGlob\n});\nconst _globParent = /*#__PURE__*/ _interopRequireDefault(require(\"glob-parent\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction parseGlob(pattern) {\n    let glob = pattern;\n    let base = (0, _globParent.default)(pattern);\n    if (base !== \".\") {\n        glob = pattern.substr(base.length);\n        if (glob.charAt(0) === \"/\") {\n            glob = glob.substr(1);\n        }\n    }\n    if (glob.substr(0, 2) === \"./\") {\n        glob = glob.substr(2);\n    }\n    if (glob.charAt(0) === \"/\") {\n        glob = glob.substr(1);\n    }\n    return {\n        base,\n        glob\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>parseObjectStyles\n});\nconst _postcss = /*#__PURE__*/ _interopRequireDefault(require(\"postcss\"));\nconst _postcssNested = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-nested\"));\nconst _postcssJs = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction parseObjectStyles(styles) {\n    if (!Array.isArray(styles)) {\n        return parseObjectStyles([\n            styles\n        ]);\n    }\n    return styles.flatMap((style)=>{\n        return (0, _postcss.default)([\n            (0, _postcssNested.default)({\n                bubble: [\n                    \"screen\"\n                ]\n            })\n        ]).process(style, {\n            parser: _postcssJs.default\n        }).root.nodes;\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    updateAllClasses: ()=>updateAllClasses,\n    asValue: ()=>asValue,\n    parseColorFormat: ()=>parseColorFormat,\n    asColor: ()=>asColor,\n    asLookupValue: ()=>asLookupValue,\n    typeMap: ()=>typeMap,\n    coerceValue: ()=>coerceValue,\n    getMatchingTypes: ()=>getMatchingTypes\n});\nconst _escapeCommas = /*#__PURE__*/ _interopRequireDefault(require(\"./escapeCommas\"));\nconst _withAlphaVariable = require(\"./withAlphaVariable\");\nconst _dataTypes = require(\"./dataTypes\");\nconst _negateValue = /*#__PURE__*/ _interopRequireDefault(require(\"./negateValue\"));\nconst _validateFormalSyntax = require(\"./validateFormalSyntax\");\nconst _featureFlagsJs = require(\"../featureFlags.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction updateAllClasses(selectors, updateClass) {\n    selectors.walkClasses((sel)=>{\n        sel.value = updateClass(sel.value);\n        if (sel.raws && sel.raws.value) {\n            sel.raws.value = (0, _escapeCommas.default)(sel.raws.value);\n        }\n    });\n}\nfunction resolveArbitraryValue(modifier, validate) {\n    if (!isArbitraryValue(modifier)) {\n        return undefined;\n    }\n    let value = modifier.slice(1, -1);\n    if (!validate(value)) {\n        return undefined;\n    }\n    return (0, _dataTypes.normalize)(value);\n}\nfunction asNegativeValue(modifier, lookup = {}, validate) {\n    let positiveValue = lookup[modifier];\n    if (positiveValue !== undefined) {\n        return (0, _negateValue.default)(positiveValue);\n    }\n    if (isArbitraryValue(modifier)) {\n        let resolved = resolveArbitraryValue(modifier, validate);\n        if (resolved === undefined) {\n            return undefined;\n        }\n        return (0, _negateValue.default)(resolved);\n    }\n}\nfunction asValue(modifier, options = {}, { validate =()=>true  } = {}) {\n    var _options_values;\n    let value = (_options_values = options.values) === null || _options_values === void 0 ? void 0 : _options_values[modifier];\n    if (value !== undefined) {\n        return value;\n    }\n    if (options.supportsNegativeValues && modifier.startsWith(\"-\")) {\n        return asNegativeValue(modifier.slice(1), options.values, validate);\n    }\n    return resolveArbitraryValue(modifier, validate);\n}\nfunction isArbitraryValue(input) {\n    return input.startsWith(\"[\") && input.endsWith(\"]\");\n}\nfunction splitUtilityModifier(modifier) {\n    let slashIdx = modifier.lastIndexOf(\"/\");\n    if (slashIdx === -1 || slashIdx === modifier.length - 1) {\n        return [\n            modifier,\n            undefined\n        ];\n    }\n    let arbitrary = isArbitraryValue(modifier);\n    // The modifier could be of the form `[foo]/[bar]`\n    // We want to handle this case properly\n    // without affecting `[foo/bar]`\n    if (arbitrary && !modifier.includes(\"]/[\")) {\n        return [\n            modifier,\n            undefined\n        ];\n    }\n    return [\n        modifier.slice(0, slashIdx),\n        modifier.slice(slashIdx + 1)\n    ];\n}\nfunction parseColorFormat(value) {\n    if (typeof value === \"string\" && value.includes(\"<alpha-value>\")) {\n        let oldValue = value;\n        return ({ opacityValue =1  })=>oldValue.replace(\"<alpha-value>\", opacityValue);\n    }\n    return value;\n}\nfunction asColor(modifier, options = {}, { tailwindConfig ={}  } = {}) {\n    var _options_values;\n    if (((_options_values = options.values) === null || _options_values === void 0 ? void 0 : _options_values[modifier]) !== undefined) {\n        var _options_values1;\n        return parseColorFormat((_options_values1 = options.values) === null || _options_values1 === void 0 ? void 0 : _options_values1[modifier]);\n    }\n    // TODO: Hoist this up to getMatchingTypes or something\n    // We do this here because we need the alpha value (if any)\n    let [color, alpha] = splitUtilityModifier(modifier);\n    if (alpha !== undefined) {\n        var _options_values2, _tailwindConfig_theme, _tailwindConfig_theme_opacity;\n        var _options_values_color;\n        let normalizedColor = (_options_values_color = (_options_values2 = options.values) === null || _options_values2 === void 0 ? void 0 : _options_values2[color]) !== null && _options_values_color !== void 0 ? _options_values_color : isArbitraryValue(color) ? color.slice(1, -1) : undefined;\n        if (normalizedColor === undefined) {\n            return undefined;\n        }\n        normalizedColor = parseColorFormat(normalizedColor);\n        if (isArbitraryValue(alpha)) {\n            return (0, _withAlphaVariable.withAlphaValue)(normalizedColor, alpha.slice(1, -1));\n        }\n        if (((_tailwindConfig_theme = tailwindConfig.theme) === null || _tailwindConfig_theme === void 0 ? void 0 : (_tailwindConfig_theme_opacity = _tailwindConfig_theme.opacity) === null || _tailwindConfig_theme_opacity === void 0 ? void 0 : _tailwindConfig_theme_opacity[alpha]) === undefined) {\n            return undefined;\n        }\n        return (0, _withAlphaVariable.withAlphaValue)(normalizedColor, tailwindConfig.theme.opacity[alpha]);\n    }\n    return asValue(modifier, options, {\n        validate: _dataTypes.color\n    });\n}\nfunction asLookupValue(modifier, options = {}) {\n    var _options_values;\n    return (_options_values = options.values) === null || _options_values === void 0 ? void 0 : _options_values[modifier];\n}\nfunction guess(validate) {\n    return (modifier, options)=>{\n        return asValue(modifier, options, {\n            validate\n        });\n    };\n}\nlet typeMap = {\n    any: asValue,\n    color: asColor,\n    url: guess(_dataTypes.url),\n    image: guess(_dataTypes.image),\n    length: guess(_dataTypes.length),\n    percentage: guess(_dataTypes.percentage),\n    position: guess(_dataTypes.position),\n    lookup: asLookupValue,\n    \"generic-name\": guess(_dataTypes.genericName),\n    \"family-name\": guess(_dataTypes.familyName),\n    number: guess(_dataTypes.number),\n    \"line-width\": guess(_dataTypes.lineWidth),\n    \"absolute-size\": guess(_dataTypes.absoluteSize),\n    \"relative-size\": guess(_dataTypes.relativeSize),\n    shadow: guess(_dataTypes.shadow),\n    size: guess(_validateFormalSyntax.backgroundSize)\n};\nlet supportedTypes = Object.keys(typeMap);\nfunction splitAtFirst(input, delim) {\n    let idx = input.indexOf(delim);\n    if (idx === -1) return [\n        undefined,\n        input\n    ];\n    return [\n        input.slice(0, idx),\n        input.slice(idx + 1)\n    ];\n}\nfunction coerceValue(types, modifier, options, tailwindConfig) {\n    if (options.values && modifier in options.values) {\n        for (let { type  } of types !== null && types !== void 0 ? types : []){\n            let result = typeMap[type](modifier, options, {\n                tailwindConfig\n            });\n            if (result === undefined) {\n                continue;\n            }\n            return [\n                result,\n                type,\n                null\n            ];\n        }\n    }\n    if (isArbitraryValue(modifier)) {\n        let arbitraryValue = modifier.slice(1, -1);\n        let [explicitType, value] = splitAtFirst(arbitraryValue, \":\");\n        // It could be that this resolves to `url(https` which is not a valid\n        // identifier. We currently only support \"simple\" words with dashes or\n        // underscores. E.g.: family-name\n        if (!/^[\\w-_]+$/g.test(explicitType)) {\n            value = arbitraryValue;\n        } else if (explicitType !== undefined && !supportedTypes.includes(explicitType)) {\n            return [];\n        }\n        if (value.length > 0 && supportedTypes.includes(explicitType)) {\n            return [\n                asValue(`[${value}]`, options),\n                explicitType,\n                null\n            ];\n        }\n    }\n    let matches = getMatchingTypes(types, modifier, options, tailwindConfig);\n    // Find first matching type\n    for (let match of matches){\n        return match;\n    }\n    return [];\n}\nfunction* getMatchingTypes(types, rawModifier, options, tailwindConfig) {\n    let modifiersEnabled = (0, _featureFlagsJs.flagEnabled)(tailwindConfig, \"generalizedModifiers\");\n    let [modifier, utilityModifier] = splitUtilityModifier(rawModifier);\n    let canUseUtilityModifier = modifiersEnabled && options.modifiers != null && (options.modifiers === \"any\" || typeof options.modifiers === \"object\" && (utilityModifier && isArbitraryValue(utilityModifier) || utilityModifier in options.modifiers));\n    if (!canUseUtilityModifier) {\n        modifier = rawModifier;\n        utilityModifier = undefined;\n    }\n    if (utilityModifier !== undefined && modifier === \"\") {\n        modifier = \"DEFAULT\";\n    }\n    // Check the full value first\n    // TODO: Move to asValue… somehow\n    if (utilityModifier !== undefined) {\n        if (typeof options.modifiers === \"object\") {\n            var _options_modifiers;\n            var _options_modifiers_utilityModifier;\n            let configValue = (_options_modifiers_utilityModifier = (_options_modifiers = options.modifiers) === null || _options_modifiers === void 0 ? void 0 : _options_modifiers[utilityModifier]) !== null && _options_modifiers_utilityModifier !== void 0 ? _options_modifiers_utilityModifier : null;\n            if (configValue !== null) {\n                utilityModifier = configValue;\n            } else if (isArbitraryValue(utilityModifier)) {\n                utilityModifier = utilityModifier.slice(1, -1);\n            }\n        }\n    }\n    for (let { type  } of types !== null && types !== void 0 ? types : []){\n        let result = typeMap[type](modifier, options, {\n            tailwindConfig\n        });\n        if (result === undefined) {\n            continue;\n        }\n        yield [\n            result,\n            type,\n            utilityModifier !== null && utilityModifier !== void 0 ? utilityModifier : null\n        ];\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, /**\n * @template {string | import('postcss-selector-parser').Root} T\n *\n * Prefix all classes in the selector with the given prefix\n *\n * It can take either a string or a selector AST and will return the same type\n *\n * @param {string} prefix\n * @param {T} selector\n * @param {boolean} prependNegative\n * @returns {T}\n */ \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _default(prefix, selector, prependNegative = false) {\n    if (prefix === \"\") {\n        return selector;\n    }\n    let ast = typeof selector === \"string\" ? (0, _postcssSelectorParser.default)().astSync(selector) : selector;\n    ast.walkClasses((classSelector)=>{\n        let baseClass = classSelector.value;\n        let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith(\"-\");\n        classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;\n    });\n    return typeof selector === \"string\" ? ast.toString() : ast;\n}\n","/**\n * This function removes any uses of CSS variables used as an alpha channel\n *\n * This is required for selectors like `:visited` which do not allow\n * changes in opacity or external control using CSS variables.\n *\n * @param {import('postcss').Container} container\n * @param {string[]} toRemove\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"removeAlphaVariables\", {\n    enumerable: true,\n    get: ()=>removeAlphaVariables\n});\nfunction removeAlphaVariables(container, toRemove) {\n    container.walkDecls((decl)=>{\n        if (toRemove.includes(decl.prop)) {\n            decl.remove();\n            return;\n        }\n        for (let varName of toRemove){\n            if (decl.value.includes(`/ var(${varName})`)) {\n                decl.value = decl.value.replace(`/ var(${varName})`, \"\");\n            }\n        }\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>resolveConfig\n});\nconst _negateValue = /*#__PURE__*/ _interopRequireDefault(require(\"./negateValue\"));\nconst _corePluginList = /*#__PURE__*/ _interopRequireDefault(require(\"../corePluginList\"));\nconst _configurePlugins = /*#__PURE__*/ _interopRequireDefault(require(\"./configurePlugins\"));\nconst _colors = /*#__PURE__*/ _interopRequireDefault(require(\"../public/colors\"));\nconst _defaults = require(\"./defaults\");\nconst _toPath = require(\"./toPath\");\nconst _normalizeConfig = require(\"./normalizeConfig\");\nconst _isPlainObject = /*#__PURE__*/ _interopRequireDefault(require(\"./isPlainObject\"));\nconst _cloneDeep = require(\"./cloneDeep\");\nconst _pluginUtils = require(\"./pluginUtils\");\nconst _withAlphaVariable = require(\"./withAlphaVariable\");\nconst _toColorValue = /*#__PURE__*/ _interopRequireDefault(require(\"./toColorValue\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isFunction(input) {\n    return typeof input === \"function\";\n}\nfunction mergeWith(target, ...sources) {\n    let customizer = sources.pop();\n    for (let source of sources){\n        for(let k in source){\n            let merged = customizer(target[k], source[k]);\n            if (merged === undefined) {\n                if ((0, _isPlainObject.default)(target[k]) && (0, _isPlainObject.default)(source[k])) {\n                    target[k] = mergeWith({}, target[k], source[k], customizer);\n                } else {\n                    target[k] = source[k];\n                }\n            } else {\n                target[k] = merged;\n            }\n        }\n    }\n    return target;\n}\nconst configUtils = {\n    colors: _colors.default,\n    negative (scale) {\n        // TODO: Log that this function isn't really needed anymore?\n        return Object.keys(scale).filter((key)=>scale[key] !== \"0\").reduce((negativeScale, key)=>{\n            let negativeValue = (0, _negateValue.default)(scale[key]);\n            if (negativeValue !== undefined) {\n                negativeScale[`-${key}`] = negativeValue;\n            }\n            return negativeScale;\n        }, {});\n    },\n    breakpoints (screens) {\n        return Object.keys(screens).filter((key)=>typeof screens[key] === \"string\").reduce((breakpoints, key)=>({\n                ...breakpoints,\n                [`screen-${key}`]: screens[key]\n            }), {});\n    }\n};\nfunction value(valueToResolve, ...args) {\n    return isFunction(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\nfunction collectExtends(items) {\n    return items.reduce((merged, { extend  })=>{\n        return mergeWith(merged, extend, (mergedValue, extendValue)=>{\n            if (mergedValue === undefined) {\n                return [\n                    extendValue\n                ];\n            }\n            if (Array.isArray(mergedValue)) {\n                return [\n                    extendValue,\n                    ...mergedValue\n                ];\n            }\n            return [\n                extendValue,\n                mergedValue\n            ];\n        });\n    }, {});\n}\nfunction mergeThemes(themes) {\n    return {\n        ...themes.reduce((merged, theme)=>(0, _defaults.defaults)(merged, theme), {}),\n        // In order to resolve n config objects, we combine all of their `extend` properties\n        // into arrays instead of objects so they aren't overridden.\n        extend: collectExtends(themes)\n    };\n}\nfunction mergeExtensionCustomizer(merged, value) {\n    // When we have an array of objects, we do want to merge it\n    if (Array.isArray(merged) && (0, _isPlainObject.default)(merged[0])) {\n        return merged.concat(value);\n    }\n    // When the incoming value is an array, and the existing config is an object, prepend the existing object\n    if (Array.isArray(value) && (0, _isPlainObject.default)(value[0]) && (0, _isPlainObject.default)(merged)) {\n        return [\n            merged,\n            ...value\n        ];\n    }\n    // Override arrays (for example for font-families, box-shadows, ...)\n    if (Array.isArray(value)) {\n        return value;\n    }\n    // Execute default behaviour\n    return undefined;\n}\nfunction mergeExtensions({ extend , ...theme }) {\n    return mergeWith(theme, extend, (themeValue, extensions)=>{\n        // The `extend` property is an array, so we need to check if it contains any functions\n        if (!isFunction(themeValue) && !extensions.some(isFunction)) {\n            return mergeWith({}, themeValue, ...extensions, mergeExtensionCustomizer);\n        }\n        return (resolveThemePath, utils)=>mergeWith({}, ...[\n                themeValue,\n                ...extensions\n            ].map((e)=>value(e, resolveThemePath, utils)), mergeExtensionCustomizer);\n    });\n}\n/**\n *\n * @param {string} key\n * @return {Iterable<string[] & {alpha: string | undefined}>}\n */ function* toPaths(key) {\n    let path = (0, _toPath.toPath)(key);\n    if (path.length === 0) {\n        return;\n    }\n    yield path;\n    if (Array.isArray(key)) {\n        return;\n    }\n    let pattern = /^(.*?)\\s*\\/\\s*([^/]+)$/;\n    let matches = key.match(pattern);\n    if (matches !== null) {\n        let [, prefix, alpha] = matches;\n        let newPath = (0, _toPath.toPath)(prefix);\n        newPath.alpha = alpha;\n        yield newPath;\n    }\n}\nfunction resolveFunctionKeys(object) {\n    // theme('colors.red.500 / 0.5') -> ['colors', 'red', '500 / 0', '5]\n    const resolvePath = (key, defaultValue)=>{\n        for (const path of toPaths(key)){\n            let index = 0;\n            let val = object;\n            while(val !== undefined && val !== null && index < path.length){\n                val = val[path[index++]];\n                let shouldResolveAsFn = isFunction(val) && (path.alpha === undefined || index <= path.length - 1);\n                val = shouldResolveAsFn ? val(resolvePath, configUtils) : val;\n            }\n            if (val !== undefined) {\n                if (path.alpha !== undefined) {\n                    let normalized = (0, _pluginUtils.parseColorFormat)(val);\n                    return (0, _withAlphaVariable.withAlphaValue)(normalized, path.alpha, (0, _toColorValue.default)(normalized));\n                }\n                if ((0, _isPlainObject.default)(val)) {\n                    return (0, _cloneDeep.cloneDeep)(val);\n                }\n                return val;\n            }\n        }\n        return defaultValue;\n    };\n    Object.assign(resolvePath, {\n        theme: resolvePath,\n        ...configUtils\n    });\n    return Object.keys(object).reduce((resolved, key)=>{\n        resolved[key] = isFunction(object[key]) ? object[key](resolvePath, configUtils) : object[key];\n        return resolved;\n    }, {});\n}\nfunction extractPluginConfigs(configs) {\n    let allConfigs = [];\n    configs.forEach((config)=>{\n        allConfigs = [\n            ...allConfigs,\n            config\n        ];\n        var _config_plugins;\n        const plugins = (_config_plugins = config === null || config === void 0 ? void 0 : config.plugins) !== null && _config_plugins !== void 0 ? _config_plugins : [];\n        if (plugins.length === 0) {\n            return;\n        }\n        plugins.forEach((plugin)=>{\n            if (plugin.__isOptionsFunction) {\n                plugin = plugin();\n            }\n            var _plugin_config;\n            allConfigs = [\n                ...allConfigs,\n                ...extractPluginConfigs([\n                    (_plugin_config = plugin === null || plugin === void 0 ? void 0 : plugin.config) !== null && _plugin_config !== void 0 ? _plugin_config : {}\n                ])\n            ];\n        });\n    });\n    return allConfigs;\n}\nfunction resolveCorePlugins(corePluginConfigs) {\n    const result = [\n        ...corePluginConfigs\n    ].reduceRight((resolved, corePluginConfig)=>{\n        if (isFunction(corePluginConfig)) {\n            return corePluginConfig({\n                corePlugins: resolved\n            });\n        }\n        return (0, _configurePlugins.default)(corePluginConfig, resolved);\n    }, _corePluginList.default);\n    return result;\n}\nfunction resolvePluginLists(pluginLists) {\n    const result = [\n        ...pluginLists\n    ].reduceRight((resolved, pluginList)=>{\n        return [\n            ...resolved,\n            ...pluginList\n        ];\n    }, []);\n    return result;\n}\nfunction resolveConfig(configs) {\n    let allConfigs = [\n        ...extractPluginConfigs(configs),\n        {\n            prefix: \"\",\n            important: false,\n            separator: \":\"\n        }\n    ];\n    var _t_theme, _c_plugins;\n    return (0, _normalizeConfig.normalizeConfig)((0, _defaults.defaults)({\n        theme: resolveFunctionKeys(mergeExtensions(mergeThemes(allConfigs.map((t)=>{\n            return (_t_theme = t === null || t === void 0 ? void 0 : t.theme) !== null && _t_theme !== void 0 ? _t_theme : {};\n        })))),\n        corePlugins: resolveCorePlugins(allConfigs.map((c)=>c.corePlugins)),\n        plugins: resolvePluginLists(configs.map((c)=>{\n            return (_c_plugins = c === null || c === void 0 ? void 0 : c.plugins) !== null && _c_plugins !== void 0 ? _c_plugins : [];\n        }))\n    }, ...allConfigs));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>resolveConfigPath\n});\nconst _fs = /*#__PURE__*/ _interopRequireDefault(require(\"fs\"));\nconst _path = /*#__PURE__*/ _interopRequireDefault(require(\"path\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n}\nfunction resolveConfigPath(pathOrConfig) {\n    // require('tailwindcss')({ theme: ..., variants: ... })\n    if (isObject(pathOrConfig) && pathOrConfig.config === undefined && !isEmpty(pathOrConfig)) {\n        return null;\n    }\n    // require('tailwindcss')({ config: 'custom-config.js' })\n    if (isObject(pathOrConfig) && pathOrConfig.config !== undefined && isString(pathOrConfig.config)) {\n        return _path.default.resolve(pathOrConfig.config);\n    }\n    // require('tailwindcss')({ config: { theme: ..., variants: ... } })\n    if (isObject(pathOrConfig) && pathOrConfig.config !== undefined && isObject(pathOrConfig.config)) {\n        return null;\n    }\n    // require('tailwindcss')('custom-config.js')\n    if (isString(pathOrConfig)) {\n        return _path.default.resolve(pathOrConfig);\n    }\n    // require('tailwindcss')\n    for (const configFile of [\n        \"./tailwind.config.js\",\n        \"./tailwind.config.cjs\"\n    ]){\n        try {\n            const configPath = _path.default.resolve(configFile);\n            _fs.default.accessSync(configPath);\n            return configPath;\n        } catch (err) {}\n    }\n    return null;\n}\n","/**\n * This splits a string on a top-level character.\n *\n * Regex doesn't support recursion (at least not the JS-flavored version).\n * So we have to use a tiny state machine to keep track of paren placement.\n *\n * Expected behavior using commas:\n * var(--a, 0 0 1px rgb(0, 0, 0)), 0 0 1px rgb(0, 0, 0)\n *       ─┬─             ┬  ┬    ┬\n *        x              x  x    ╰──────── Split because top-level\n *        ╰──────────────┴──┴───────────── Ignored b/c inside >= 1 levels of parens\n *\n * @param {string} input\n * @param {string} separator\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"splitAtTopLevelOnly\", {\n    enumerable: true,\n    get: ()=>splitAtTopLevelOnly\n});\nfunction splitAtTopLevelOnly(input, separator) {\n    let stack = [];\n    let parts = [];\n    let lastPos = 0;\n    for(let idx = 0; idx < input.length; idx++){\n        let char = input[idx];\n        if (stack.length === 0 && char === separator[0]) {\n            if (separator.length === 1 || input.slice(idx, idx + separator.length) === separator) {\n                parts.push(input.slice(lastPos, idx));\n                lastPos = idx + separator.length;\n            }\n        }\n        if (char === \"(\" || char === \"[\" || char === \"{\") {\n            stack.push(char);\n        } else if (char === \")\" && stack[stack.length - 1] === \"(\" || char === \"]\" && stack[stack.length - 1] === \"[\" || char === \"}\" && stack[stack.length - 1] === \"{\") {\n            stack.pop();\n        }\n    }\n    parts.push(input.slice(lastPos));\n    return parts;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>toColorValue\n});\nfunction toColorValue(maybeFunction) {\n    return typeof maybeFunction === \"function\" ? maybeFunction({}) : maybeFunction;\n}\n","/**\n * Parse a path string into an array of path segments.\n *\n * Square bracket notation `a[b]` may be used to \"escape\" dots that would otherwise be interpreted as path separators.\n *\n * Example:\n * a -> ['a']\n * a.b.c -> ['a', 'b', 'c']\n * a[b].c -> ['a', 'b', 'c']\n * a[b.c].e.f -> ['a', 'b.c', 'e', 'f']\n * a[b][c][d] -> ['a', 'b', 'c', 'd']\n *\n * @param {string|string[]} path\n **/ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"toPath\", {\n    enumerable: true,\n    get: ()=>toPath\n});\nfunction toPath(path) {\n    if (Array.isArray(path)) return path;\n    let openBrackets = path.split(\"[\").length - 1;\n    let closedBrackets = path.split(\"]\").length - 1;\n    if (openBrackets !== closedBrackets) {\n        throw new Error(`Path is invalid. Has unbalanced brackets: ${path}`);\n    }\n    return path.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>transformThemeValue\n});\nconst _postcss = /*#__PURE__*/ _interopRequireDefault(require(\"postcss\"));\nconst _isPlainObject = /*#__PURE__*/ _interopRequireDefault(require(\"./isPlainObject\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction transformThemeValue(themeSection) {\n    if ([\n        \"fontSize\",\n        \"outline\"\n    ].includes(themeSection)) {\n        return (value)=>{\n            if (typeof value === \"function\") value = value({});\n            if (Array.isArray(value)) value = value[0];\n            return value;\n        };\n    }\n    if (themeSection === \"fontFamily\") {\n        return (value)=>{\n            if (typeof value === \"function\") value = value({});\n            let families = Array.isArray(value) && (0, _isPlainObject.default)(value[1]) ? value[0] : value;\n            return Array.isArray(families) ? families.join(\", \") : families;\n        };\n    }\n    if ([\n        \"boxShadow\",\n        \"transitionProperty\",\n        \"transitionDuration\",\n        \"transitionDelay\",\n        \"transitionTimingFunction\",\n        \"backgroundImage\",\n        \"backgroundSize\",\n        \"backgroundColor\",\n        \"cursor\",\n        \"animation\"\n    ].includes(themeSection)) {\n        return (value)=>{\n            if (typeof value === \"function\") value = value({});\n            if (Array.isArray(value)) value = value.join(\", \");\n            return value;\n        };\n    }\n    // For backwards compatibility reasons, before we switched to underscores\n    // instead of commas for arbitrary values.\n    if ([\n        \"gridTemplateColumns\",\n        \"gridTemplateRows\",\n        \"objectPosition\"\n    ].includes(themeSection)) {\n        return (value)=>{\n            if (typeof value === \"function\") value = value({});\n            if (typeof value === \"string\") value = _postcss.default.list.comma(value).join(\" \");\n            return value;\n        };\n    }\n    return (value, opts = {})=>{\n        if (typeof value === \"function\") {\n            value = value(opts);\n        }\n        return value;\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"validateConfig\", {\n    enumerable: true,\n    get: ()=>validateConfig\n});\nconst _log = /*#__PURE__*/ _interopRequireDefault(require(\"./log\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction validateConfig(config) {\n    if (config.content.files.length === 0) {\n        _log.default.warn(\"content-problems\", [\n            \"The `content` option in your Tailwind CSS configuration is missing or empty.\",\n            \"Configure your content sources or your generated CSS will be missing styles.\",\n            \"https://tailwindcss.com/docs/content-configuration\"\n        ]);\n    }\n    return config;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"backgroundSize\", {\n    enumerable: true,\n    get: ()=>backgroundSize\n});\nconst _dataTypes = require(\"./dataTypes\");\nconst _splitAtTopLevelOnly = require(\"./splitAtTopLevelOnly\");\nfunction backgroundSize(value) {\n    let keywordValues = [\n        \"cover\",\n        \"contain\"\n    ];\n    // the <length-percentage> type will probably be a css function\n    // so we have to use `splitAtTopLevelOnly`\n    return (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every((part)=>{\n        let sizes = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(part, \"_\").filter(Boolean);\n        if (sizes.length === 1 && keywordValues.includes(sizes[0])) return true;\n        if (sizes.length !== 1 && sizes.length !== 2) return false;\n        return sizes.every((size)=>(0, _dataTypes.length)(size) || (0, _dataTypes.percentage)(size) || size === \"auto\");\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    withAlphaValue: ()=>withAlphaValue,\n    default: ()=>withAlphaVariable\n});\nconst _color = require(\"./color\");\nfunction withAlphaValue(color, alphaValue, defaultValue) {\n    if (typeof color === \"function\") {\n        return color({\n            opacityValue: alphaValue\n        });\n    }\n    let parsed = (0, _color.parseColor)(color, {\n        loose: true\n    });\n    if (parsed === null) {\n        return defaultValue;\n    }\n    return (0, _color.formatColor)({\n        ...parsed,\n        alpha: alphaValue\n    });\n}\nfunction withAlphaVariable({ color , property , variable  }) {\n    let properties = [].concat(property);\n    if (typeof color === \"function\") {\n        return {\n            [variable]: \"1\",\n            ...Object.fromEntries(properties.map((p)=>{\n                return [\n                    p,\n                    color({\n                        opacityVariable: variable,\n                        opacityValue: `var(${variable})`\n                    })\n                ];\n            }))\n        };\n    }\n    const parsed = (0, _color.parseColor)(color);\n    if (parsed === null) {\n        return Object.fromEntries(properties.map((p)=>[\n                p,\n                color\n            ]));\n    }\n    if (parsed.alpha !== undefined) {\n        // Has an alpha value, return color as-is\n        return Object.fromEntries(properties.map((p)=>[\n                p,\n                color\n            ]));\n    }\n    return {\n        [variable]: \"1\",\n        ...Object.fromEntries(properties.map((p)=>{\n            return [\n                p,\n                (0, _color.formatColor)({\n                    ...parsed,\n                    alpha: `var(${variable})`\n                })\n            ];\n        }))\n    };\n}\n","'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar escaped = /\\\\([!*?|[\\](){}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (isEnclosure(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlobby(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n\nfunction isEnclosure(str) {\n  var lastChar = str.slice(-1);\n\n  var enclosureStart;\n  switch (lastChar) {\n    case '}':\n      enclosureStart = '{';\n      break;\n    case ']':\n      enclosureStart = '[';\n      break;\n    default:\n      return false;\n  }\n\n  var foundIndex = str.indexOf(enclosureStart);\n  if (foundIndex < 0) {\n    return false;\n  }\n\n  return str.slice(foundIndex + 1, -1).includes(slash);\n}\n\nfunction isGlobby(str) {\n  if (/\\([^()]+$/.test(str)) {\n    return true;\n  }\n  if (str[0] === '{' || str[0] === '[') {\n    return true;\n  }\n  if (/[^\\\\][{[]/.test(str)) {\n    return true;\n  }\n  return isGlob(str);\n}\n","let createPlugin = require('./lib/public/create-plugin')\nmodule.exports = (createPlugin.__esModule ? createPlugin : { default: createPlugin }).default\n","/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [],\n  presets: [],\n  darkMode: 'media', // or 'class'\n  theme: {\n    accentColor: ({ theme }) => ({\n      ...theme('colors'),\n      auto: 'auto',\n    }),\n    animation: {\n      none: 'none',\n      spin: 'spin 1s linear infinite',\n      ping: 'ping 1s cubic-bezier(0, 0, 0.2, 1) infinite',\n      pulse: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n      bounce: 'bounce 1s infinite',\n    },\n    aria: {\n      checked: 'checked=\"true\"',\n      disabled: 'disabled=\"true\"',\n      expanded: 'expanded=\"true\"',\n      hidden: 'hidden=\"true\"',\n      pressed: 'pressed=\"true\"',\n      readonly: 'readonly=\"true\"',\n      required: 'required=\"true\"',\n      selected: 'selected=\"true\"',\n    },\n    aspectRatio: {\n      auto: 'auto',\n      square: '1 / 1',\n      video: '16 / 9',\n    },\n    backdropBlur: ({ theme }) => theme('blur'),\n    backdropBrightness: ({ theme }) => theme('brightness'),\n    backdropContrast: ({ theme }) => theme('contrast'),\n    backdropGrayscale: ({ theme }) => theme('grayscale'),\n    backdropHueRotate: ({ theme }) => theme('hueRotate'),\n    backdropInvert: ({ theme }) => theme('invert'),\n    backdropOpacity: ({ theme }) => theme('opacity'),\n    backdropSaturate: ({ theme }) => theme('saturate'),\n    backdropSepia: ({ theme }) => theme('sepia'),\n    backgroundColor: ({ theme }) => theme('colors'),\n    backgroundImage: {\n      none: 'none',\n      'gradient-to-t': 'linear-gradient(to top, var(--tw-gradient-stops))',\n      'gradient-to-tr': 'linear-gradient(to top right, var(--tw-gradient-stops))',\n      'gradient-to-r': 'linear-gradient(to right, var(--tw-gradient-stops))',\n      'gradient-to-br': 'linear-gradient(to bottom right, var(--tw-gradient-stops))',\n      'gradient-to-b': 'linear-gradient(to bottom, var(--tw-gradient-stops))',\n      'gradient-to-bl': 'linear-gradient(to bottom left, var(--tw-gradient-stops))',\n      'gradient-to-l': 'linear-gradient(to left, var(--tw-gradient-stops))',\n      'gradient-to-tl': 'linear-gradient(to top left, var(--tw-gradient-stops))',\n    },\n    backgroundOpacity: ({ theme }) => theme('opacity'),\n    backgroundPosition: {\n      bottom: 'bottom',\n      center: 'center',\n      left: 'left',\n      'left-bottom': 'left bottom',\n      'left-top': 'left top',\n      right: 'right',\n      'right-bottom': 'right bottom',\n      'right-top': 'right top',\n      top: 'top',\n    },\n    backgroundSize: {\n      auto: 'auto',\n      cover: 'cover',\n      contain: 'contain',\n    },\n    blur: {\n      0: '0',\n      none: '0',\n      sm: '4px',\n      DEFAULT: '8px',\n      md: '12px',\n      lg: '16px',\n      xl: '24px',\n      '2xl': '40px',\n      '3xl': '64px',\n    },\n    borderColor: ({ theme }) => ({\n      ...theme('colors'),\n      DEFAULT: theme('colors.gray.200', 'currentColor'),\n    }),\n    borderOpacity: ({ theme }) => theme('opacity'),\n    borderRadius: {\n      none: '0px',\n      sm: '0.125rem',\n      DEFAULT: '0.25rem',\n      md: '0.375rem',\n      lg: '0.5rem',\n      xl: '0.75rem',\n      '2xl': '1rem',\n      '3xl': '1.5rem',\n      full: '9999px',\n    },\n    borderSpacing: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    borderWidth: {\n      DEFAULT: '1px',\n      0: '0px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    boxShadow: {\n      sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n      DEFAULT: '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',\n      md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n      lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',\n      xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',\n      '2xl': '0 25px 50px -12px rgb(0 0 0 / 0.25)',\n      inner: 'inset 0 2px 4px 0 rgb(0 0 0 / 0.05)',\n      none: 'none',\n    },\n    boxShadowColor: ({ theme }) => theme('colors'),\n    brightness: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      90: '.9',\n      95: '.95',\n      100: '1',\n      105: '1.05',\n      110: '1.1',\n      125: '1.25',\n      150: '1.5',\n      200: '2',\n    },\n    caretColor: ({ theme }) => theme('colors'),\n    colors: ({ colors }) => ({\n      inherit: colors.inherit,\n      current: colors.current,\n      transparent: colors.transparent,\n      black: colors.black,\n      white: colors.white,\n      slate: colors.slate,\n      gray: colors.gray,\n      zinc: colors.zinc,\n      neutral: colors.neutral,\n      stone: colors.stone,\n      red: colors.red,\n      orange: colors.orange,\n      amber: colors.amber,\n      yellow: colors.yellow,\n      lime: colors.lime,\n      green: colors.green,\n      emerald: colors.emerald,\n      teal: colors.teal,\n      cyan: colors.cyan,\n      sky: colors.sky,\n      blue: colors.blue,\n      indigo: colors.indigo,\n      violet: colors.violet,\n      purple: colors.purple,\n      fuchsia: colors.fuchsia,\n      pink: colors.pink,\n      rose: colors.rose,\n    }),\n    columns: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      '3xs': '16rem',\n      '2xs': '18rem',\n      xs: '20rem',\n      sm: '24rem',\n      md: '28rem',\n      lg: '32rem',\n      xl: '36rem',\n      '2xl': '42rem',\n      '3xl': '48rem',\n      '4xl': '56rem',\n      '5xl': '64rem',\n      '6xl': '72rem',\n      '7xl': '80rem',\n    },\n    container: {},\n    content: {\n      none: 'none',\n    },\n    contrast: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      100: '1',\n      125: '1.25',\n      150: '1.5',\n      200: '2',\n    },\n    cursor: {\n      auto: 'auto',\n      default: 'default',\n      pointer: 'pointer',\n      wait: 'wait',\n      text: 'text',\n      move: 'move',\n      help: 'help',\n      'not-allowed': 'not-allowed',\n      none: 'none',\n      'context-menu': 'context-menu',\n      progress: 'progress',\n      cell: 'cell',\n      crosshair: 'crosshair',\n      'vertical-text': 'vertical-text',\n      alias: 'alias',\n      copy: 'copy',\n      'no-drop': 'no-drop',\n      grab: 'grab',\n      grabbing: 'grabbing',\n      'all-scroll': 'all-scroll',\n      'col-resize': 'col-resize',\n      'row-resize': 'row-resize',\n      'n-resize': 'n-resize',\n      'e-resize': 'e-resize',\n      's-resize': 's-resize',\n      'w-resize': 'w-resize',\n      'ne-resize': 'ne-resize',\n      'nw-resize': 'nw-resize',\n      'se-resize': 'se-resize',\n      'sw-resize': 'sw-resize',\n      'ew-resize': 'ew-resize',\n      'ns-resize': 'ns-resize',\n      'nesw-resize': 'nesw-resize',\n      'nwse-resize': 'nwse-resize',\n      'zoom-in': 'zoom-in',\n      'zoom-out': 'zoom-out',\n    },\n    divideColor: ({ theme }) => theme('borderColor'),\n    divideOpacity: ({ theme }) => theme('borderOpacity'),\n    divideWidth: ({ theme }) => theme('borderWidth'),\n    dropShadow: {\n      sm: '0 1px 1px rgb(0 0 0 / 0.05)',\n      DEFAULT: ['0 1px 2px rgb(0 0 0 / 0.1)', '0 1px 1px rgb(0 0 0 / 0.06)'],\n      md: ['0 4px 3px rgb(0 0 0 / 0.07)', '0 2px 2px rgb(0 0 0 / 0.06)'],\n      lg: ['0 10px 8px rgb(0 0 0 / 0.04)', '0 4px 3px rgb(0 0 0 / 0.1)'],\n      xl: ['0 20px 13px rgb(0 0 0 / 0.03)', '0 8px 5px rgb(0 0 0 / 0.08)'],\n      '2xl': '0 25px 25px rgb(0 0 0 / 0.15)',\n      none: '0 0 #0000',\n    },\n    fill: ({ theme }) => ({\n      none: 'none',\n      ...theme('colors'),\n    }),\n    flex: {\n      1: '1 1 0%',\n      auto: '1 1 auto',\n      initial: '0 1 auto',\n      none: 'none',\n    },\n    flexBasis: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      '1/12': '8.333333%',\n      '2/12': '16.666667%',\n      '3/12': '25%',\n      '4/12': '33.333333%',\n      '5/12': '41.666667%',\n      '6/12': '50%',\n      '7/12': '58.333333%',\n      '8/12': '66.666667%',\n      '9/12': '75%',\n      '10/12': '83.333333%',\n      '11/12': '91.666667%',\n      full: '100%',\n    }),\n    flexGrow: {\n      0: '0',\n      DEFAULT: '1',\n    },\n    flexShrink: {\n      0: '0',\n      DEFAULT: '1',\n    },\n    fontFamily: {\n      sans: [\n        'ui-sans-serif',\n        'system-ui',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        '\"Noto Sans\"',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n        '\"Noto Color Emoji\"',\n      ],\n      serif: ['ui-serif', 'Georgia', 'Cambria', '\"Times New Roman\"', 'Times', 'serif'],\n      mono: [\n        'ui-monospace',\n        'SFMono-Regular',\n        'Menlo',\n        'Monaco',\n        'Consolas',\n        '\"Liberation Mono\"',\n        '\"Courier New\"',\n        'monospace',\n      ],\n    },\n    fontSize: {\n      xs: ['0.75rem', { lineHeight: '1rem' }],\n      sm: ['0.875rem', { lineHeight: '1.25rem' }],\n      base: ['1rem', { lineHeight: '1.5rem' }],\n      lg: ['1.125rem', { lineHeight: '1.75rem' }],\n      xl: ['1.25rem', { lineHeight: '1.75rem' }],\n      '2xl': ['1.5rem', { lineHeight: '2rem' }],\n      '3xl': ['1.875rem', { lineHeight: '2.25rem' }],\n      '4xl': ['2.25rem', { lineHeight: '2.5rem' }],\n      '5xl': ['3rem', { lineHeight: '1' }],\n      '6xl': ['3.75rem', { lineHeight: '1' }],\n      '7xl': ['4.5rem', { lineHeight: '1' }],\n      '8xl': ['6rem', { lineHeight: '1' }],\n      '9xl': ['8rem', { lineHeight: '1' }],\n    },\n    fontWeight: {\n      thin: '100',\n      extralight: '200',\n      light: '300',\n      normal: '400',\n      medium: '500',\n      semibold: '600',\n      bold: '700',\n      extrabold: '800',\n      black: '900',\n    },\n    gap: ({ theme }) => theme('spacing'),\n    gradientColorStops: ({ theme }) => theme('colors'),\n    grayscale: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    gridAutoColumns: {\n      auto: 'auto',\n      min: 'min-content',\n      max: 'max-content',\n      fr: 'minmax(0, 1fr)',\n    },\n    gridAutoRows: {\n      auto: 'auto',\n      min: 'min-content',\n      max: 'max-content',\n      fr: 'minmax(0, 1fr)',\n    },\n    gridColumn: {\n      auto: 'auto',\n      'span-1': 'span 1 / span 1',\n      'span-2': 'span 2 / span 2',\n      'span-3': 'span 3 / span 3',\n      'span-4': 'span 4 / span 4',\n      'span-5': 'span 5 / span 5',\n      'span-6': 'span 6 / span 6',\n      'span-7': 'span 7 / span 7',\n      'span-8': 'span 8 / span 8',\n      'span-9': 'span 9 / span 9',\n      'span-10': 'span 10 / span 10',\n      'span-11': 'span 11 / span 11',\n      'span-12': 'span 12 / span 12',\n      'span-full': '1 / -1',\n    },\n    gridColumnEnd: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      13: '13',\n    },\n    gridColumnStart: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      13: '13',\n    },\n    gridRow: {\n      auto: 'auto',\n      'span-1': 'span 1 / span 1',\n      'span-2': 'span 2 / span 2',\n      'span-3': 'span 3 / span 3',\n      'span-4': 'span 4 / span 4',\n      'span-5': 'span 5 / span 5',\n      'span-6': 'span 6 / span 6',\n      'span-full': '1 / -1',\n    },\n    gridRowEnd: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n    },\n    gridRowStart: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n    },\n    gridTemplateColumns: {\n      none: 'none',\n      1: 'repeat(1, minmax(0, 1fr))',\n      2: 'repeat(2, minmax(0, 1fr))',\n      3: 'repeat(3, minmax(0, 1fr))',\n      4: 'repeat(4, minmax(0, 1fr))',\n      5: 'repeat(5, minmax(0, 1fr))',\n      6: 'repeat(6, minmax(0, 1fr))',\n      7: 'repeat(7, minmax(0, 1fr))',\n      8: 'repeat(8, minmax(0, 1fr))',\n      9: 'repeat(9, minmax(0, 1fr))',\n      10: 'repeat(10, minmax(0, 1fr))',\n      11: 'repeat(11, minmax(0, 1fr))',\n      12: 'repeat(12, minmax(0, 1fr))',\n    },\n    gridTemplateRows: {\n      none: 'none',\n      1: 'repeat(1, minmax(0, 1fr))',\n      2: 'repeat(2, minmax(0, 1fr))',\n      3: 'repeat(3, minmax(0, 1fr))',\n      4: 'repeat(4, minmax(0, 1fr))',\n      5: 'repeat(5, minmax(0, 1fr))',\n      6: 'repeat(6, minmax(0, 1fr))',\n    },\n    height: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      full: '100%',\n      screen: '100vh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    hueRotate: {\n      0: '0deg',\n      15: '15deg',\n      30: '30deg',\n      60: '60deg',\n      90: '90deg',\n      180: '180deg',\n    },\n    inset: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      full: '100%',\n    }),\n    invert: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    keyframes: {\n      spin: {\n        to: {\n          transform: 'rotate(360deg)',\n        },\n      },\n      ping: {\n        '75%, 100%': {\n          transform: 'scale(2)',\n          opacity: '0',\n        },\n      },\n      pulse: {\n        '50%': {\n          opacity: '.5',\n        },\n      },\n      bounce: {\n        '0%, 100%': {\n          transform: 'translateY(-25%)',\n          animationTimingFunction: 'cubic-bezier(0.8,0,1,1)',\n        },\n        '50%': {\n          transform: 'none',\n          animationTimingFunction: 'cubic-bezier(0,0,0.2,1)',\n        },\n      },\n    },\n    letterSpacing: {\n      tighter: '-0.05em',\n      tight: '-0.025em',\n      normal: '0em',\n      wide: '0.025em',\n      wider: '0.05em',\n      widest: '0.1em',\n    },\n    lineHeight: {\n      none: '1',\n      tight: '1.25',\n      snug: '1.375',\n      normal: '1.5',\n      relaxed: '1.625',\n      loose: '2',\n      3: '.75rem',\n      4: '1rem',\n      5: '1.25rem',\n      6: '1.5rem',\n      7: '1.75rem',\n      8: '2rem',\n      9: '2.25rem',\n      10: '2.5rem',\n    },\n    listStyleType: {\n      none: 'none',\n      disc: 'disc',\n      decimal: 'decimal',\n    },\n    margin: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n    }),\n    maxHeight: ({ theme }) => ({\n      ...theme('spacing'),\n      none: 'none',\n      full: '100%',\n      screen: '100vh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    maxWidth: ({ theme, breakpoints }) => ({\n      none: 'none',\n      0: '0rem',\n      xs: '20rem',\n      sm: '24rem',\n      md: '28rem',\n      lg: '32rem',\n      xl: '36rem',\n      '2xl': '42rem',\n      '3xl': '48rem',\n      '4xl': '56rem',\n      '5xl': '64rem',\n      '6xl': '72rem',\n      '7xl': '80rem',\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n      prose: '65ch',\n      ...breakpoints(theme('screens')),\n    }),\n    minHeight: {\n      0: '0px',\n      full: '100%',\n      screen: '100vh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    },\n    minWidth: {\n      0: '0px',\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    },\n    objectPosition: {\n      bottom: 'bottom',\n      center: 'center',\n      left: 'left',\n      'left-bottom': 'left bottom',\n      'left-top': 'left top',\n      right: 'right',\n      'right-bottom': 'right bottom',\n      'right-top': 'right top',\n      top: 'top',\n    },\n    opacity: {\n      0: '0',\n      5: '0.05',\n      10: '0.1',\n      20: '0.2',\n      25: '0.25',\n      30: '0.3',\n      40: '0.4',\n      50: '0.5',\n      60: '0.6',\n      70: '0.7',\n      75: '0.75',\n      80: '0.8',\n      90: '0.9',\n      95: '0.95',\n      100: '1',\n    },\n    order: {\n      first: '-9999',\n      last: '9999',\n      none: '0',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    outlineColor: ({ theme }) => theme('colors'),\n    outlineOffset: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    outlineWidth: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    padding: ({ theme }) => theme('spacing'),\n    placeholderColor: ({ theme }) => theme('colors'),\n    placeholderOpacity: ({ theme }) => theme('opacity'),\n    ringColor: ({ theme }) => ({\n      DEFAULT: theme('colors.blue.500', '#3b82f6'),\n      ...theme('colors'),\n    }),\n    ringOffsetColor: ({ theme }) => theme('colors'),\n    ringOffsetWidth: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    ringOpacity: ({ theme }) => ({\n      DEFAULT: '0.5',\n      ...theme('opacity'),\n    }),\n    ringWidth: {\n      DEFAULT: '3px',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    rotate: {\n      0: '0deg',\n      1: '1deg',\n      2: '2deg',\n      3: '3deg',\n      6: '6deg',\n      12: '12deg',\n      45: '45deg',\n      90: '90deg',\n      180: '180deg',\n    },\n    saturate: {\n      0: '0',\n      50: '.5',\n      100: '1',\n      150: '1.5',\n      200: '2',\n    },\n    scale: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      90: '.9',\n      95: '.95',\n      100: '1',\n      105: '1.05',\n      110: '1.1',\n      125: '1.25',\n      150: '1.5',\n    },\n    screens: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n      '2xl': '1536px',\n    },\n    scrollMargin: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    scrollPadding: ({ theme }) => theme('spacing'),\n    sepia: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    skew: {\n      0: '0deg',\n      1: '1deg',\n      2: '2deg',\n      3: '3deg',\n      6: '6deg',\n      12: '12deg',\n    },\n    space: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    spacing: {\n      px: '1px',\n      0: '0px',\n      0.5: '0.125rem',\n      1: '0.25rem',\n      1.5: '0.375rem',\n      2: '0.5rem',\n      2.5: '0.625rem',\n      3: '0.75rem',\n      3.5: '0.875rem',\n      4: '1rem',\n      5: '1.25rem',\n      6: '1.5rem',\n      7: '1.75rem',\n      8: '2rem',\n      9: '2.25rem',\n      10: '2.5rem',\n      11: '2.75rem',\n      12: '3rem',\n      14: '3.5rem',\n      16: '4rem',\n      20: '5rem',\n      24: '6rem',\n      28: '7rem',\n      32: '8rem',\n      36: '9rem',\n      40: '10rem',\n      44: '11rem',\n      48: '12rem',\n      52: '13rem',\n      56: '14rem',\n      60: '15rem',\n      64: '16rem',\n      72: '18rem',\n      80: '20rem',\n      96: '24rem',\n    },\n    stroke: ({ theme }) => ({\n      none: 'none',\n      ...theme('colors'),\n    }),\n    strokeWidth: {\n      0: '0',\n      1: '1',\n      2: '2',\n    },\n    supports: {},\n    data: {},\n    textColor: ({ theme }) => theme('colors'),\n    textDecorationColor: ({ theme }) => theme('colors'),\n    textDecorationThickness: {\n      auto: 'auto',\n      'from-font': 'from-font',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    textIndent: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    textOpacity: ({ theme }) => theme('opacity'),\n    textUnderlineOffset: {\n      auto: 'auto',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    transformOrigin: {\n      center: 'center',\n      top: 'top',\n      'top-right': 'top right',\n      right: 'right',\n      'bottom-right': 'bottom right',\n      bottom: 'bottom',\n      'bottom-left': 'bottom left',\n      left: 'left',\n      'top-left': 'top left',\n    },\n    transitionDelay: {\n      75: '75ms',\n      100: '100ms',\n      150: '150ms',\n      200: '200ms',\n      300: '300ms',\n      500: '500ms',\n      700: '700ms',\n      1000: '1000ms',\n    },\n    transitionDuration: {\n      DEFAULT: '150ms',\n      75: '75ms',\n      100: '100ms',\n      150: '150ms',\n      200: '200ms',\n      300: '300ms',\n      500: '500ms',\n      700: '700ms',\n      1000: '1000ms',\n    },\n    transitionProperty: {\n      none: 'none',\n      all: 'all',\n      DEFAULT:\n        'color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter',\n      colors: 'color, background-color, border-color, text-decoration-color, fill, stroke',\n      opacity: 'opacity',\n      shadow: 'box-shadow',\n      transform: 'transform',\n    },\n    transitionTimingFunction: {\n      DEFAULT: 'cubic-bezier(0.4, 0, 0.2, 1)',\n      linear: 'linear',\n      in: 'cubic-bezier(0.4, 0, 1, 1)',\n      out: 'cubic-bezier(0, 0, 0.2, 1)',\n      'in-out': 'cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    translate: ({ theme }) => ({\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      full: '100%',\n    }),\n    width: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      '1/12': '8.333333%',\n      '2/12': '16.666667%',\n      '3/12': '25%',\n      '4/12': '33.333333%',\n      '5/12': '41.666667%',\n      '6/12': '50%',\n      '7/12': '58.333333%',\n      '8/12': '66.666667%',\n      '9/12': '75%',\n      '10/12': '83.333333%',\n      '11/12': '91.666667%',\n      full: '100%',\n      screen: '100vw',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    willChange: {\n      auto: 'auto',\n      scroll: 'scroll-position',\n      contents: 'contents',\n      transform: 'transform',\n    },\n    zIndex: {\n      auto: 'auto',\n      0: '0',\n      10: '10',\n      20: '20',\n      30: '30',\n      40: '40',\n      50: '50',\n    },\n  },\n  plugins: [],\n}\n","/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","const tailwind = require('tailwindcss');\nrequire('tailwindcss/plugin'); // for configJs, defined later on\nconst autoprefixer = require('autoprefixer');\nconst postcss = require('postcss');\nconst fs = require('fs');\n\n// const inputCss = require.resolve('./main.css');\n// const inputCss = require('./main.css');\n\nconst inputCss = `\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  h1 {\n    @apply text-2xl font-bold;\n  }\n  ul {\n    @apply list-disc pl-5 mb-2;\n  }\n  p {\n    @apply mb-2;\n  }\n  code {\n    @apply text-slate-600 bg-amber-100;\n  }\n  a code {\n    @apply bg-inherit hover:text-amber-700 hover:font-semibold;\n  }\n  a {\n    @apply hover:underline hover:text-amber-700;\n  }\n  .tooltip-contents {\n    @apply invisible rounded-md shadow-lg py-1 px-2 bg-gray-200 border-2 border-amber-500 absolute -mt-9 -ml-2;\n  }\n  .tooltip-container {\n    @apply cursor-default;\n  }\n  .tooltip-container:hover .tooltip-contents {\n    @apply visible z-50;\n  }\n  .tooltip-container:hover {\n    @apply bg-amber-100;\n  }\n\n  /*\n   * btn styles taken from:\n   * https://v1.tailwindcss.com/components/buttons#simple\n   * Adding inline-block here for a element.\n   */\n  a.btn {\n    @apply inline-block;\n  }\n  .btn {\n    @apply font-bold py-1 px-2 rounded;\n  }\n  .btn-blue {\n    @apply bg-blue-500 text-white;\n  }\n  .btn-blue:hover {\n    @apply bg-blue-700 text-white;\n  }\n}\n\n/*\n * TODO consider why this class is defined in this layer, not base.\n * Clearly, Stackoverflow told me to, but I need to learn more about Tailwind to see why or if needed.\n */\n@layer components {\n  /*\n   * We need this to combine with border-seperate, in order not to have gaps between\n   * borders of cells within a table.\n   * It's seemingly not a utility offered, out-of-the-box, by Tailwind - see:\n   * https://stackoverflow.com/a/70326229/392847\n   */\n  .zero-border-spacing {\n    border-spacing: 0;\n  }\n}\n`;\n\n// const configJs = require('./tailwind.config.js.txt');\n\nconst configJs = `\n// eslint-disable-next-line import/no-extraneous-dependencies\nconst plugin = require('tailwindcss/plugin');\n\nmodule.exports = {\n  content: ['./output/*.html'],\n  theme: {\n    extend: {},\n  },\n  plugins: [\n    plugin(({ addUtilities: addAblyUtilities }) => {\n      const newUtilities = {\n        '.vertical-lr': {\n          writingMode: 'vertical-lr',\n        },\n      };\n      addAblyUtilities(newUtilities);\n    }),\n  ],\n};\n`;\n\nasync function wrapper() {\n  // see:\n  // - https://github.com/postcss/postcss/tree/main#js-api\n  // - https://postcss.org/api/#processor\n  const processor = postcss([tailwind, autoprefixer]);\n  const outputPath = 'output/tailwind.css';\n  fs.writeFileSync('tailwind.config.js', configJs);\n  const result = await processor.process(inputCss, {\n    from: 'main.css',\n    to: outputPath,\n  });\n  fs.writeFileSync(outputPath, result.css);\n}\n\nmodule.exports = {\n  tailwindBuild: wrapper,\n};\n",null,"function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 28440;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"assert\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"node:https\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","'use strict';\n\nvar PlainValue = require('./PlainValue-ec8e588e.js');\nvar resolveSeq = require('./resolveSeq-d03cb037.js');\nvar Schema = require('./Schema-88e323a7.js');\n\nconst defaultOptions = {\n  anchorPrefix: 'a',\n  customTags: null,\n  indent: 2,\n  indentSeq: true,\n  keepCstNodes: false,\n  keepNodeTypes: true,\n  keepBlobsInJSON: true,\n  mapAsMap: false,\n  maxAliasCount: 100,\n  prettyErrors: false,\n  // TODO Set true in v2\n  simpleKeys: false,\n  version: '1.2'\n};\nconst scalarOptions = {\n  get binary() {\n    return resolveSeq.binaryOptions;\n  },\n\n  set binary(opt) {\n    Object.assign(resolveSeq.binaryOptions, opt);\n  },\n\n  get bool() {\n    return resolveSeq.boolOptions;\n  },\n\n  set bool(opt) {\n    Object.assign(resolveSeq.boolOptions, opt);\n  },\n\n  get int() {\n    return resolveSeq.intOptions;\n  },\n\n  set int(opt) {\n    Object.assign(resolveSeq.intOptions, opt);\n  },\n\n  get null() {\n    return resolveSeq.nullOptions;\n  },\n\n  set null(opt) {\n    Object.assign(resolveSeq.nullOptions, opt);\n  },\n\n  get str() {\n    return resolveSeq.strOptions;\n  },\n\n  set str(opt) {\n    Object.assign(resolveSeq.strOptions, opt);\n  }\n\n};\nconst documentOptions = {\n  '1.0': {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: PlainValue.defaultTagPrefix\n    }, {\n      handle: '!!',\n      prefix: 'tag:private.yaml.org,2002:'\n    }]\n  },\n  1.1: {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: PlainValue.defaultTagPrefix\n    }]\n  },\n  1.2: {\n    schema: 'core',\n    merge: false,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: PlainValue.defaultTagPrefix\n    }]\n  }\n};\n\nfunction stringifyTag(doc, tag) {\n  if ((doc.version || doc.options.version) === '1.0') {\n    const priv = tag.match(/^tag:private\\.yaml\\.org,2002:([^:/]+)$/);\n    if (priv) return '!' + priv[1];\n    const vocab = tag.match(/^tag:([a-zA-Z0-9-]+)\\.yaml\\.org,2002:(.*)/);\n    return vocab ? `!${vocab[1]}/${vocab[2]}` : `!${tag.replace(/^tag:/, '')}`;\n  }\n\n  let p = doc.tagPrefixes.find(p => tag.indexOf(p.prefix) === 0);\n\n  if (!p) {\n    const dtp = doc.getDefaults().tagPrefixes;\n    p = dtp && dtp.find(p => tag.indexOf(p.prefix) === 0);\n  }\n\n  if (!p) return tag[0] === '!' ? tag : `!<${tag}>`;\n  const suffix = tag.substr(p.prefix.length).replace(/[!,[\\]{}]/g, ch => ({\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n  })[ch]);\n  return p.handle + suffix;\n}\n\nfunction getTagObject(tags, item) {\n  if (item instanceof resolveSeq.Alias) return resolveSeq.Alias;\n\n  if (item.tag) {\n    const match = tags.filter(t => t.tag === item.tag);\n    if (match.length > 0) return match.find(t => t.format === item.format) || match[0];\n  }\n\n  let tagObj, obj;\n\n  if (item instanceof resolveSeq.Scalar) {\n    obj = item.value; // TODO: deprecate/remove class check\n\n    const match = tags.filter(t => t.identify && t.identify(obj) || t.class && obj instanceof t.class);\n    tagObj = match.find(t => t.format === item.format) || match.find(t => !t.format);\n  } else {\n    obj = item;\n    tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n  }\n\n  if (!tagObj) {\n    const name = obj && obj.constructor ? obj.constructor.name : typeof obj;\n    throw new Error(`Tag not resolved for ${name} value`);\n  }\n\n  return tagObj;\n} // needs to be called before value stringifier to allow for circular anchor refs\n\n\nfunction stringifyProps(node, tagObj, {\n  anchors,\n  doc\n}) {\n  const props = [];\n  const anchor = doc.anchors.getName(node);\n\n  if (anchor) {\n    anchors[anchor] = node;\n    props.push(`&${anchor}`);\n  }\n\n  if (node.tag) {\n    props.push(stringifyTag(doc, node.tag));\n  } else if (!tagObj.default) {\n    props.push(stringifyTag(doc, tagObj.tag));\n  }\n\n  return props.join(' ');\n}\n\nfunction stringify(item, ctx, onComment, onChompKeep) {\n  const {\n    anchors,\n    schema\n  } = ctx.doc;\n  let tagObj;\n\n  if (!(item instanceof resolveSeq.Node)) {\n    const createCtx = {\n      aliasNodes: [],\n      onTagObj: o => tagObj = o,\n      prevObjects: new Map()\n    };\n    item = schema.createNode(item, true, null, createCtx);\n\n    for (const alias of createCtx.aliasNodes) {\n      alias.source = alias.source.node;\n      let name = anchors.getName(alias.source);\n\n      if (!name) {\n        name = anchors.newName();\n        anchors.map[name] = alias.source;\n      }\n    }\n  }\n\n  if (item instanceof resolveSeq.Pair) return item.toString(ctx, onComment, onChompKeep);\n  if (!tagObj) tagObj = getTagObject(schema.tags, item);\n  const props = stringifyProps(item, tagObj, ctx);\n  if (props.length > 0) ctx.indentAtStart = (ctx.indentAtStart || 0) + props.length + 1;\n  const str = typeof tagObj.stringify === 'function' ? tagObj.stringify(item, ctx, onComment, onChompKeep) : item instanceof resolveSeq.Scalar ? resolveSeq.stringifyString(item, ctx, onComment, onChompKeep) : item.toString(ctx, onComment, onChompKeep);\n  if (!props) return str;\n  return item instanceof resolveSeq.Scalar || str[0] === '{' || str[0] === '[' ? `${props} ${str}` : `${props}\\n${ctx.indent}${str}`;\n}\n\nclass Anchors {\n  static validAnchorNode(node) {\n    return node instanceof resolveSeq.Scalar || node instanceof resolveSeq.YAMLSeq || node instanceof resolveSeq.YAMLMap;\n  }\n\n  constructor(prefix) {\n    PlainValue._defineProperty(this, \"map\", Object.create(null));\n\n    this.prefix = prefix;\n  }\n\n  createAlias(node, name) {\n    this.setAnchor(node, name);\n    return new resolveSeq.Alias(node);\n  }\n\n  createMergePair(...sources) {\n    const merge = new resolveSeq.Merge();\n    merge.value.items = sources.map(s => {\n      if (s instanceof resolveSeq.Alias) {\n        if (s.source instanceof resolveSeq.YAMLMap) return s;\n      } else if (s instanceof resolveSeq.YAMLMap) {\n        return this.createAlias(s);\n      }\n\n      throw new Error('Merge sources must be Map nodes or their Aliases');\n    });\n    return merge;\n  }\n\n  getName(node) {\n    const {\n      map\n    } = this;\n    return Object.keys(map).find(a => map[a] === node);\n  }\n\n  getNames() {\n    return Object.keys(this.map);\n  }\n\n  getNode(name) {\n    return this.map[name];\n  }\n\n  newName(prefix) {\n    if (!prefix) prefix = this.prefix;\n    const names = Object.keys(this.map);\n\n    for (let i = 1; true; ++i) {\n      const name = `${prefix}${i}`;\n      if (!names.includes(name)) return name;\n    }\n  } // During parsing, map & aliases contain CST nodes\n\n\n  resolveNodes() {\n    const {\n      map,\n      _cstAliases\n    } = this;\n    Object.keys(map).forEach(a => {\n      map[a] = map[a].resolved;\n    });\n\n    _cstAliases.forEach(a => {\n      a.source = a.source.resolved;\n    });\n\n    delete this._cstAliases;\n  }\n\n  setAnchor(node, name) {\n    if (node != null && !Anchors.validAnchorNode(node)) {\n      throw new Error('Anchors may only be set for Scalar, Seq and Map nodes');\n    }\n\n    if (name && /[\\x00-\\x19\\s,[\\]{}]/.test(name)) {\n      throw new Error('Anchor names must not contain whitespace or control characters');\n    }\n\n    const {\n      map\n    } = this;\n    const prev = node && Object.keys(map).find(a => map[a] === node);\n\n    if (prev) {\n      if (!name) {\n        return prev;\n      } else if (prev !== name) {\n        delete map[prev];\n        map[name] = node;\n      }\n    } else {\n      if (!name) {\n        if (!node) return null;\n        name = this.newName();\n      }\n\n      map[name] = node;\n    }\n\n    return name;\n  }\n\n}\n\nconst visit = (node, tags) => {\n  if (node && typeof node === 'object') {\n    const {\n      tag\n    } = node;\n\n    if (node instanceof resolveSeq.Collection) {\n      if (tag) tags[tag] = true;\n      node.items.forEach(n => visit(n, tags));\n    } else if (node instanceof resolveSeq.Pair) {\n      visit(node.key, tags);\n      visit(node.value, tags);\n    } else if (node instanceof resolveSeq.Scalar) {\n      if (tag) tags[tag] = true;\n    }\n  }\n\n  return tags;\n};\n\nconst listTagNames = node => Object.keys(visit(node, {}));\n\nfunction parseContents(doc, contents) {\n  const comments = {\n    before: [],\n    after: []\n  };\n  let body = undefined;\n  let spaceBefore = false;\n\n  for (const node of contents) {\n    if (node.valueRange) {\n      if (body !== undefined) {\n        const msg = 'Document contains trailing content not separated by a ... or --- line';\n        doc.errors.push(new PlainValue.YAMLSyntaxError(node, msg));\n        break;\n      }\n\n      const res = resolveSeq.resolveNode(doc, node);\n\n      if (spaceBefore) {\n        res.spaceBefore = true;\n        spaceBefore = false;\n      }\n\n      body = res;\n    } else if (node.comment !== null) {\n      const cc = body === undefined ? comments.before : comments.after;\n      cc.push(node.comment);\n    } else if (node.type === PlainValue.Type.BLANK_LINE) {\n      spaceBefore = true;\n\n      if (body === undefined && comments.before.length > 0 && !doc.commentBefore) {\n        // space-separated comments at start are parsed as document comments\n        doc.commentBefore = comments.before.join('\\n');\n        comments.before = [];\n      }\n    }\n  }\n\n  doc.contents = body || null;\n\n  if (!body) {\n    doc.comment = comments.before.concat(comments.after).join('\\n') || null;\n  } else {\n    const cb = comments.before.join('\\n');\n\n    if (cb) {\n      const cbNode = body instanceof resolveSeq.Collection && body.items[0] ? body.items[0] : body;\n      cbNode.commentBefore = cbNode.commentBefore ? `${cb}\\n${cbNode.commentBefore}` : cb;\n    }\n\n    doc.comment = comments.after.join('\\n') || null;\n  }\n}\n\nfunction resolveTagDirective({\n  tagPrefixes\n}, directive) {\n  const [handle, prefix] = directive.parameters;\n\n  if (!handle || !prefix) {\n    const msg = 'Insufficient parameters given for %TAG directive';\n    throw new PlainValue.YAMLSemanticError(directive, msg);\n  }\n\n  if (tagPrefixes.some(p => p.handle === handle)) {\n    const msg = 'The %TAG directive must only be given at most once per handle in the same document.';\n    throw new PlainValue.YAMLSemanticError(directive, msg);\n  }\n\n  return {\n    handle,\n    prefix\n  };\n}\n\nfunction resolveYamlDirective(doc, directive) {\n  let [version] = directive.parameters;\n  if (directive.name === 'YAML:1.0') version = '1.0';\n\n  if (!version) {\n    const msg = 'Insufficient parameters given for %YAML directive';\n    throw new PlainValue.YAMLSemanticError(directive, msg);\n  }\n\n  if (!documentOptions[version]) {\n    const v0 = doc.version || doc.options.version;\n    const msg = `Document will be parsed as YAML ${v0} rather than YAML ${version}`;\n    doc.warnings.push(new PlainValue.YAMLWarning(directive, msg));\n  }\n\n  return version;\n}\n\nfunction parseDirectives(doc, directives, prevDoc) {\n  const directiveComments = [];\n  let hasDirectives = false;\n\n  for (const directive of directives) {\n    const {\n      comment,\n      name\n    } = directive;\n\n    switch (name) {\n      case 'TAG':\n        try {\n          doc.tagPrefixes.push(resolveTagDirective(doc, directive));\n        } catch (error) {\n          doc.errors.push(error);\n        }\n\n        hasDirectives = true;\n        break;\n\n      case 'YAML':\n      case 'YAML:1.0':\n        if (doc.version) {\n          const msg = 'The %YAML directive must only be given at most once per document.';\n          doc.errors.push(new PlainValue.YAMLSemanticError(directive, msg));\n        }\n\n        try {\n          doc.version = resolveYamlDirective(doc, directive);\n        } catch (error) {\n          doc.errors.push(error);\n        }\n\n        hasDirectives = true;\n        break;\n\n      default:\n        if (name) {\n          const msg = `YAML only supports %TAG and %YAML directives, and not %${name}`;\n          doc.warnings.push(new PlainValue.YAMLWarning(directive, msg));\n        }\n\n    }\n\n    if (comment) directiveComments.push(comment);\n  }\n\n  if (prevDoc && !hasDirectives && '1.1' === (doc.version || prevDoc.version || doc.options.version)) {\n    const copyTagPrefix = ({\n      handle,\n      prefix\n    }) => ({\n      handle,\n      prefix\n    });\n\n    doc.tagPrefixes = prevDoc.tagPrefixes.map(copyTagPrefix);\n    doc.version = prevDoc.version;\n  }\n\n  doc.commentBefore = directiveComments.join('\\n') || null;\n}\n\nfunction assertCollection(contents) {\n  if (contents instanceof resolveSeq.Collection) return true;\n  throw new Error('Expected a YAML collection as document contents');\n}\n\nclass Document {\n  constructor(options) {\n    this.anchors = new Anchors(options.anchorPrefix);\n    this.commentBefore = null;\n    this.comment = null;\n    this.contents = null;\n    this.directivesEndMarker = null;\n    this.errors = [];\n    this.options = options;\n    this.schema = null;\n    this.tagPrefixes = [];\n    this.version = null;\n    this.warnings = [];\n  }\n\n  add(value) {\n    assertCollection(this.contents);\n    return this.contents.add(value);\n  }\n\n  addIn(path, value) {\n    assertCollection(this.contents);\n    this.contents.addIn(path, value);\n  }\n\n  delete(key) {\n    assertCollection(this.contents);\n    return this.contents.delete(key);\n  }\n\n  deleteIn(path) {\n    if (resolveSeq.isEmptyPath(path)) {\n      if (this.contents == null) return false;\n      this.contents = null;\n      return true;\n    }\n\n    assertCollection(this.contents);\n    return this.contents.deleteIn(path);\n  }\n\n  getDefaults() {\n    return Document.defaults[this.version] || Document.defaults[this.options.version] || {};\n  }\n\n  get(key, keepScalar) {\n    return this.contents instanceof resolveSeq.Collection ? this.contents.get(key, keepScalar) : undefined;\n  }\n\n  getIn(path, keepScalar) {\n    if (resolveSeq.isEmptyPath(path)) return !keepScalar && this.contents instanceof resolveSeq.Scalar ? this.contents.value : this.contents;\n    return this.contents instanceof resolveSeq.Collection ? this.contents.getIn(path, keepScalar) : undefined;\n  }\n\n  has(key) {\n    return this.contents instanceof resolveSeq.Collection ? this.contents.has(key) : false;\n  }\n\n  hasIn(path) {\n    if (resolveSeq.isEmptyPath(path)) return this.contents !== undefined;\n    return this.contents instanceof resolveSeq.Collection ? this.contents.hasIn(path) : false;\n  }\n\n  set(key, value) {\n    assertCollection(this.contents);\n    this.contents.set(key, value);\n  }\n\n  setIn(path, value) {\n    if (resolveSeq.isEmptyPath(path)) this.contents = value;else {\n      assertCollection(this.contents);\n      this.contents.setIn(path, value);\n    }\n  }\n\n  setSchema(id, customTags) {\n    if (!id && !customTags && this.schema) return;\n    if (typeof id === 'number') id = id.toFixed(1);\n\n    if (id === '1.0' || id === '1.1' || id === '1.2') {\n      if (this.version) this.version = id;else this.options.version = id;\n      delete this.options.schema;\n    } else if (id && typeof id === 'string') {\n      this.options.schema = id;\n    }\n\n    if (Array.isArray(customTags)) this.options.customTags = customTags;\n    const opt = Object.assign({}, this.getDefaults(), this.options);\n    this.schema = new Schema.Schema(opt);\n  }\n\n  parse(node, prevDoc) {\n    if (this.options.keepCstNodes) this.cstNode = node;\n    if (this.options.keepNodeTypes) this.type = 'DOCUMENT';\n    const {\n      directives = [],\n      contents = [],\n      directivesEndMarker,\n      error,\n      valueRange\n    } = node;\n\n    if (error) {\n      if (!error.source) error.source = this;\n      this.errors.push(error);\n    }\n\n    parseDirectives(this, directives, prevDoc);\n    if (directivesEndMarker) this.directivesEndMarker = true;\n    this.range = valueRange ? [valueRange.start, valueRange.end] : null;\n    this.setSchema();\n    this.anchors._cstAliases = [];\n    parseContents(this, contents);\n    this.anchors.resolveNodes();\n\n    if (this.options.prettyErrors) {\n      for (const error of this.errors) if (error instanceof PlainValue.YAMLError) error.makePretty();\n\n      for (const warn of this.warnings) if (warn instanceof PlainValue.YAMLError) warn.makePretty();\n    }\n\n    return this;\n  }\n\n  listNonDefaultTags() {\n    return listTagNames(this.contents).filter(t => t.indexOf(Schema.Schema.defaultPrefix) !== 0);\n  }\n\n  setTagPrefix(handle, prefix) {\n    if (handle[0] !== '!' || handle[handle.length - 1] !== '!') throw new Error('Handle must start and end with !');\n\n    if (prefix) {\n      const prev = this.tagPrefixes.find(p => p.handle === handle);\n      if (prev) prev.prefix = prefix;else this.tagPrefixes.push({\n        handle,\n        prefix\n      });\n    } else {\n      this.tagPrefixes = this.tagPrefixes.filter(p => p.handle !== handle);\n    }\n  }\n\n  toJSON(arg, onAnchor) {\n    const {\n      keepBlobsInJSON,\n      mapAsMap,\n      maxAliasCount\n    } = this.options;\n    const keep = keepBlobsInJSON && (typeof arg !== 'string' || !(this.contents instanceof resolveSeq.Scalar));\n    const ctx = {\n      doc: this,\n      indentStep: '  ',\n      keep,\n      mapAsMap: keep && !!mapAsMap,\n      maxAliasCount,\n      stringify // Requiring directly in Pair would create circular dependencies\n\n    };\n    const anchorNames = Object.keys(this.anchors.map);\n    if (anchorNames.length > 0) ctx.anchors = new Map(anchorNames.map(name => [this.anchors.map[name], {\n      alias: [],\n      aliasCount: 0,\n      count: 1\n    }]));\n    const res = resolveSeq.toJSON(this.contents, arg, ctx);\n    if (typeof onAnchor === 'function' && ctx.anchors) for (const {\n      count,\n      res\n    } of ctx.anchors.values()) onAnchor(res, count);\n    return res;\n  }\n\n  toString() {\n    if (this.errors.length > 0) throw new Error('Document with errors cannot be stringified');\n    const indentSize = this.options.indent;\n\n    if (!Number.isInteger(indentSize) || indentSize <= 0) {\n      const s = JSON.stringify(indentSize);\n      throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n    }\n\n    this.setSchema();\n    const lines = [];\n    let hasDirectives = false;\n\n    if (this.version) {\n      let vd = '%YAML 1.2';\n\n      if (this.schema.name === 'yaml-1.1') {\n        if (this.version === '1.0') vd = '%YAML:1.0';else if (this.version === '1.1') vd = '%YAML 1.1';\n      }\n\n      lines.push(vd);\n      hasDirectives = true;\n    }\n\n    const tagNames = this.listNonDefaultTags();\n    this.tagPrefixes.forEach(({\n      handle,\n      prefix\n    }) => {\n      if (tagNames.some(t => t.indexOf(prefix) === 0)) {\n        lines.push(`%TAG ${handle} ${prefix}`);\n        hasDirectives = true;\n      }\n    });\n    if (hasDirectives || this.directivesEndMarker) lines.push('---');\n\n    if (this.commentBefore) {\n      if (hasDirectives || !this.directivesEndMarker) lines.unshift('');\n      lines.unshift(this.commentBefore.replace(/^/gm, '#'));\n    }\n\n    const ctx = {\n      anchors: Object.create(null),\n      doc: this,\n      indent: '',\n      indentStep: ' '.repeat(indentSize),\n      stringify // Requiring directly in nodes would create circular dependencies\n\n    };\n    let chompKeep = false;\n    let contentComment = null;\n\n    if (this.contents) {\n      if (this.contents instanceof resolveSeq.Node) {\n        if (this.contents.spaceBefore && (hasDirectives || this.directivesEndMarker)) lines.push('');\n        if (this.contents.commentBefore) lines.push(this.contents.commentBefore.replace(/^/gm, '#')); // top-level block scalars need to be indented if followed by a comment\n\n        ctx.forceBlockIndent = !!this.comment;\n        contentComment = this.contents.comment;\n      }\n\n      const onChompKeep = contentComment ? null : () => chompKeep = true;\n      const body = stringify(this.contents, ctx, () => contentComment = null, onChompKeep);\n      lines.push(resolveSeq.addComment(body, '', contentComment));\n    } else if (this.contents !== undefined) {\n      lines.push(stringify(this.contents, ctx));\n    }\n\n    if (this.comment) {\n      if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '') lines.push('');\n      lines.push(this.comment.replace(/^/gm, '#'));\n    }\n\n    return lines.join('\\n') + '\\n';\n  }\n\n}\n\nPlainValue._defineProperty(Document, \"defaults\", documentOptions);\n\nexports.Document = Document;\nexports.defaultOptions = defaultOptions;\nexports.scalarOptions = scalarOptions;\n","'use strict';\n\nconst Char = {\n  ANCHOR: '&',\n  COMMENT: '#',\n  TAG: '!',\n  DIRECTIVES_END: '-',\n  DOCUMENT_END: '.'\n};\nconst Type = {\n  ALIAS: 'ALIAS',\n  BLANK_LINE: 'BLANK_LINE',\n  BLOCK_FOLDED: 'BLOCK_FOLDED',\n  BLOCK_LITERAL: 'BLOCK_LITERAL',\n  COMMENT: 'COMMENT',\n  DIRECTIVE: 'DIRECTIVE',\n  DOCUMENT: 'DOCUMENT',\n  FLOW_MAP: 'FLOW_MAP',\n  FLOW_SEQ: 'FLOW_SEQ',\n  MAP: 'MAP',\n  MAP_KEY: 'MAP_KEY',\n  MAP_VALUE: 'MAP_VALUE',\n  PLAIN: 'PLAIN',\n  QUOTE_DOUBLE: 'QUOTE_DOUBLE',\n  QUOTE_SINGLE: 'QUOTE_SINGLE',\n  SEQ: 'SEQ',\n  SEQ_ITEM: 'SEQ_ITEM'\n};\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nconst defaultTags = {\n  MAP: 'tag:yaml.org,2002:map',\n  SEQ: 'tag:yaml.org,2002:seq',\n  STR: 'tag:yaml.org,2002:str'\n};\n\nfunction findLineStarts(src) {\n  const ls = [0];\n  let offset = src.indexOf('\\n');\n\n  while (offset !== -1) {\n    offset += 1;\n    ls.push(offset);\n    offset = src.indexOf('\\n', offset);\n  }\n\n  return ls;\n}\n\nfunction getSrcInfo(cst) {\n  let lineStarts, src;\n\n  if (typeof cst === 'string') {\n    lineStarts = findLineStarts(cst);\n    src = cst;\n  } else {\n    if (Array.isArray(cst)) cst = cst[0];\n\n    if (cst && cst.context) {\n      if (!cst.lineStarts) cst.lineStarts = findLineStarts(cst.context.src);\n      lineStarts = cst.lineStarts;\n      src = cst.context.src;\n    }\n  }\n\n  return {\n    lineStarts,\n    src\n  };\n}\n/**\n * @typedef {Object} LinePos - One-indexed position in the source\n * @property {number} line\n * @property {number} col\n */\n\n/**\n * Determine the line/col position matching a character offset.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns a one-indexed `{ line, col }` location if found, or\n * `undefined` otherwise.\n *\n * @param {number} offset\n * @param {string|Document|Document[]} cst\n * @returns {?LinePos}\n */\n\n\nfunction getLinePos(offset, cst) {\n  if (typeof offset !== 'number' || offset < 0) return null;\n  const {\n    lineStarts,\n    src\n  } = getSrcInfo(cst);\n  if (!lineStarts || !src || offset > src.length) return null;\n\n  for (let i = 0; i < lineStarts.length; ++i) {\n    const start = lineStarts[i];\n\n    if (offset < start) {\n      return {\n        line: i,\n        col: offset - lineStarts[i - 1] + 1\n      };\n    }\n\n    if (offset === start) return {\n      line: i + 1,\n      col: 1\n    };\n  }\n\n  const line = lineStarts.length;\n  return {\n    line,\n    col: offset - lineStarts[line - 1] + 1\n  };\n}\n/**\n * Get a specified line from the source.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns the line as a string if found, or `null` otherwise.\n *\n * @param {number} line One-indexed line number\n * @param {string|Document|Document[]} cst\n * @returns {?string}\n */\n\nfunction getLine(line, cst) {\n  const {\n    lineStarts,\n    src\n  } = getSrcInfo(cst);\n  if (!lineStarts || !(line >= 1) || line > lineStarts.length) return null;\n  const start = lineStarts[line - 1];\n  let end = lineStarts[line]; // undefined for last line; that's ok for slice()\n\n  while (end && end > start && src[end - 1] === '\\n') --end;\n\n  return src.slice(start, end);\n}\n/**\n * Pretty-print the starting line from the source indicated by the range `pos`\n *\n * Trims output to `maxWidth` chars while keeping the starting column visible,\n * using `…` at either end to indicate dropped characters.\n *\n * Returns a two-line string (or `null`) with `\\n` as separator; the second line\n * will hold appropriately indented `^` marks indicating the column range.\n *\n * @param {Object} pos\n * @param {LinePos} pos.start\n * @param {LinePos} [pos.end]\n * @param {string|Document|Document[]*} cst\n * @param {number} [maxWidth=80]\n * @returns {?string}\n */\n\nfunction getPrettyContext({\n  start,\n  end\n}, cst, maxWidth = 80) {\n  let src = getLine(start.line, cst);\n  if (!src) return null;\n  let {\n    col\n  } = start;\n\n  if (src.length > maxWidth) {\n    if (col <= maxWidth - 10) {\n      src = src.substr(0, maxWidth - 1) + '…';\n    } else {\n      const halfWidth = Math.round(maxWidth / 2);\n      if (src.length > col + halfWidth) src = src.substr(0, col + halfWidth - 1) + '…';\n      col -= src.length - maxWidth;\n      src = '…' + src.substr(1 - maxWidth);\n    }\n  }\n\n  let errLen = 1;\n  let errEnd = '';\n\n  if (end) {\n    if (end.line === start.line && col + (end.col - start.col) <= maxWidth + 1) {\n      errLen = end.col - start.col;\n    } else {\n      errLen = Math.min(src.length + 1, maxWidth) - col;\n      errEnd = '…';\n    }\n  }\n\n  const offset = col > 1 ? ' '.repeat(col - 1) : '';\n  const err = '^'.repeat(errLen);\n  return `${src}\\n${offset}${err}${errEnd}`;\n}\n\nclass Range {\n  static copy(orig) {\n    return new Range(orig.start, orig.end);\n  }\n\n  constructor(start, end) {\n    this.start = start;\n    this.end = end || start;\n  }\n\n  isEmpty() {\n    return typeof this.start !== 'number' || !this.end || this.end <= this.start;\n  }\n  /**\n   * Set `origStart` and `origEnd` to point to the original source range for\n   * this node, which may differ due to dropped CR characters.\n   *\n   * @param {number[]} cr - Positions of dropped CR characters\n   * @param {number} offset - Starting index of `cr` from the last call\n   * @returns {number} - The next offset, matching the one found for `origStart`\n   */\n\n\n  setOrigRange(cr, offset) {\n    const {\n      start,\n      end\n    } = this;\n\n    if (cr.length === 0 || end <= cr[0]) {\n      this.origStart = start;\n      this.origEnd = end;\n      return offset;\n    }\n\n    let i = offset;\n\n    while (i < cr.length) {\n      if (cr[i] > start) break;else ++i;\n    }\n\n    this.origStart = start + i;\n    const nextOffset = i;\n\n    while (i < cr.length) {\n      // if end was at \\n, it should now be at \\r\n      if (cr[i] >= end) break;else ++i;\n    }\n\n    this.origEnd = end + i;\n    return nextOffset;\n  }\n\n}\n\n/** Root class of all nodes */\n\nclass Node {\n  static addStringTerminator(src, offset, str) {\n    if (str[str.length - 1] === '\\n') return str;\n    const next = Node.endOfWhiteSpace(src, offset);\n    return next >= src.length || src[next] === '\\n' ? str + '\\n' : str;\n  } // ^(---|...)\n\n\n  static atDocumentBoundary(src, offset, sep) {\n    const ch0 = src[offset];\n    if (!ch0) return true;\n    const prev = src[offset - 1];\n    if (prev && prev !== '\\n') return false;\n\n    if (sep) {\n      if (ch0 !== sep) return false;\n    } else {\n      if (ch0 !== Char.DIRECTIVES_END && ch0 !== Char.DOCUMENT_END) return false;\n    }\n\n    const ch1 = src[offset + 1];\n    const ch2 = src[offset + 2];\n    if (ch1 !== ch0 || ch2 !== ch0) return false;\n    const ch3 = src[offset + 3];\n    return !ch3 || ch3 === '\\n' || ch3 === '\\t' || ch3 === ' ';\n  }\n\n  static endOfIdentifier(src, offset) {\n    let ch = src[offset];\n    const isVerbatim = ch === '<';\n    const notOk = isVerbatim ? ['\\n', '\\t', ' ', '>'] : ['\\n', '\\t', ' ', '[', ']', '{', '}', ','];\n\n    while (ch && notOk.indexOf(ch) === -1) ch = src[offset += 1];\n\n    if (isVerbatim && ch === '>') offset += 1;\n    return offset;\n  }\n\n  static endOfIndent(src, offset) {\n    let ch = src[offset];\n\n    while (ch === ' ') ch = src[offset += 1];\n\n    return offset;\n  }\n\n  static endOfLine(src, offset) {\n    let ch = src[offset];\n\n    while (ch && ch !== '\\n') ch = src[offset += 1];\n\n    return offset;\n  }\n\n  static endOfWhiteSpace(src, offset) {\n    let ch = src[offset];\n\n    while (ch === '\\t' || ch === ' ') ch = src[offset += 1];\n\n    return offset;\n  }\n\n  static startOfLine(src, offset) {\n    let ch = src[offset - 1];\n    if (ch === '\\n') return offset;\n\n    while (ch && ch !== '\\n') ch = src[offset -= 1];\n\n    return offset + 1;\n  }\n  /**\n   * End of indentation, or null if the line's indent level is not more\n   * than `indent`\n   *\n   * @param {string} src\n   * @param {number} indent\n   * @param {number} lineStart\n   * @returns {?number}\n   */\n\n\n  static endOfBlockIndent(src, indent, lineStart) {\n    const inEnd = Node.endOfIndent(src, lineStart);\n\n    if (inEnd > lineStart + indent) {\n      return inEnd;\n    } else {\n      const wsEnd = Node.endOfWhiteSpace(src, inEnd);\n      const ch = src[wsEnd];\n      if (!ch || ch === '\\n') return wsEnd;\n    }\n\n    return null;\n  }\n\n  static atBlank(src, offset, endAsBlank) {\n    const ch = src[offset];\n    return ch === '\\n' || ch === '\\t' || ch === ' ' || endAsBlank && !ch;\n  }\n\n  static nextNodeIsIndented(ch, indentDiff, indicatorAsIndent) {\n    if (!ch || indentDiff < 0) return false;\n    if (indentDiff > 0) return true;\n    return indicatorAsIndent && ch === '-';\n  } // should be at line or string end, or at next non-whitespace char\n\n\n  static normalizeOffset(src, offset) {\n    const ch = src[offset];\n    return !ch ? offset : ch !== '\\n' && src[offset - 1] === '\\n' ? offset - 1 : Node.endOfWhiteSpace(src, offset);\n  } // fold single newline into space, multiple newlines to N - 1 newlines\n  // presumes src[offset] === '\\n'\n\n\n  static foldNewline(src, offset, indent) {\n    let inCount = 0;\n    let error = false;\n    let fold = '';\n    let ch = src[offset + 1];\n\n    while (ch === ' ' || ch === '\\t' || ch === '\\n') {\n      switch (ch) {\n        case '\\n':\n          inCount = 0;\n          offset += 1;\n          fold += '\\n';\n          break;\n\n        case '\\t':\n          if (inCount <= indent) error = true;\n          offset = Node.endOfWhiteSpace(src, offset + 2) - 1;\n          break;\n\n        case ' ':\n          inCount += 1;\n          offset += 1;\n          break;\n      }\n\n      ch = src[offset + 1];\n    }\n\n    if (!fold) fold = ' ';\n    if (ch && inCount <= indent) error = true;\n    return {\n      fold,\n      offset,\n      error\n    };\n  }\n\n  constructor(type, props, context) {\n    Object.defineProperty(this, 'context', {\n      value: context || null,\n      writable: true\n    });\n    this.error = null;\n    this.range = null;\n    this.valueRange = null;\n    this.props = props || [];\n    this.type = type;\n    this.value = null;\n  }\n\n  getPropValue(idx, key, skipKey) {\n    if (!this.context) return null;\n    const {\n      src\n    } = this.context;\n    const prop = this.props[idx];\n    return prop && src[prop.start] === key ? src.slice(prop.start + (skipKey ? 1 : 0), prop.end) : null;\n  }\n\n  get anchor() {\n    for (let i = 0; i < this.props.length; ++i) {\n      const anchor = this.getPropValue(i, Char.ANCHOR, true);\n      if (anchor != null) return anchor;\n    }\n\n    return null;\n  }\n\n  get comment() {\n    const comments = [];\n\n    for (let i = 0; i < this.props.length; ++i) {\n      const comment = this.getPropValue(i, Char.COMMENT, true);\n      if (comment != null) comments.push(comment);\n    }\n\n    return comments.length > 0 ? comments.join('\\n') : null;\n  }\n\n  commentHasRequiredWhitespace(start) {\n    const {\n      src\n    } = this.context;\n    if (this.header && start === this.header.end) return false;\n    if (!this.valueRange) return false;\n    const {\n      end\n    } = this.valueRange;\n    return start !== end || Node.atBlank(src, end - 1);\n  }\n\n  get hasComment() {\n    if (this.context) {\n      const {\n        src\n      } = this.context;\n\n      for (let i = 0; i < this.props.length; ++i) {\n        if (src[this.props[i].start] === Char.COMMENT) return true;\n      }\n    }\n\n    return false;\n  }\n\n  get hasProps() {\n    if (this.context) {\n      const {\n        src\n      } = this.context;\n\n      for (let i = 0; i < this.props.length; ++i) {\n        if (src[this.props[i].start] !== Char.COMMENT) return true;\n      }\n    }\n\n    return false;\n  }\n\n  get includesTrailingLines() {\n    return false;\n  }\n\n  get jsonLike() {\n    const jsonLikeTypes = [Type.FLOW_MAP, Type.FLOW_SEQ, Type.QUOTE_DOUBLE, Type.QUOTE_SINGLE];\n    return jsonLikeTypes.indexOf(this.type) !== -1;\n  }\n\n  get rangeAsLinePos() {\n    if (!this.range || !this.context) return undefined;\n    const start = getLinePos(this.range.start, this.context.root);\n    if (!start) return undefined;\n    const end = getLinePos(this.range.end, this.context.root);\n    return {\n      start,\n      end\n    };\n  }\n\n  get rawValue() {\n    if (!this.valueRange || !this.context) return null;\n    const {\n      start,\n      end\n    } = this.valueRange;\n    return this.context.src.slice(start, end);\n  }\n\n  get tag() {\n    for (let i = 0; i < this.props.length; ++i) {\n      const tag = this.getPropValue(i, Char.TAG, false);\n\n      if (tag != null) {\n        if (tag[1] === '<') {\n          return {\n            verbatim: tag.slice(2, -1)\n          };\n        } else {\n          // eslint-disable-next-line no-unused-vars\n          const [_, handle, suffix] = tag.match(/^(.*!)([^!]*)$/);\n          return {\n            handle,\n            suffix\n          };\n        }\n      }\n    }\n\n    return null;\n  }\n\n  get valueRangeContainsNewline() {\n    if (!this.valueRange || !this.context) return false;\n    const {\n      start,\n      end\n    } = this.valueRange;\n    const {\n      src\n    } = this.context;\n\n    for (let i = start; i < end; ++i) {\n      if (src[i] === '\\n') return true;\n    }\n\n    return false;\n  }\n\n  parseComment(start) {\n    const {\n      src\n    } = this.context;\n\n    if (src[start] === Char.COMMENT) {\n      const end = Node.endOfLine(src, start + 1);\n      const commentRange = new Range(start, end);\n      this.props.push(commentRange);\n      return end;\n    }\n\n    return start;\n  }\n  /**\n   * Populates the `origStart` and `origEnd` values of all ranges for this\n   * node. Extended by child classes to handle descendant nodes.\n   *\n   * @param {number[]} cr - Positions of dropped CR characters\n   * @param {number} offset - Starting index of `cr` from the last call\n   * @returns {number} - The next offset, matching the one found for `origStart`\n   */\n\n\n  setOrigRanges(cr, offset) {\n    if (this.range) offset = this.range.setOrigRange(cr, offset);\n    if (this.valueRange) this.valueRange.setOrigRange(cr, offset);\n    this.props.forEach(prop => prop.setOrigRange(cr, offset));\n    return offset;\n  }\n\n  toString() {\n    const {\n      context: {\n        src\n      },\n      range,\n      value\n    } = this;\n    if (value != null) return value;\n    const str = src.slice(range.start, range.end);\n    return Node.addStringTerminator(src, range.end, str);\n  }\n\n}\n\nclass YAMLError extends Error {\n  constructor(name, source, message) {\n    if (!message || !(source instanceof Node)) throw new Error(`Invalid arguments for new ${name}`);\n    super();\n    this.name = name;\n    this.message = message;\n    this.source = source;\n  }\n\n  makePretty() {\n    if (!this.source) return;\n    this.nodeType = this.source.type;\n    const cst = this.source.context && this.source.context.root;\n\n    if (typeof this.offset === 'number') {\n      this.range = new Range(this.offset, this.offset + 1);\n      const start = cst && getLinePos(this.offset, cst);\n\n      if (start) {\n        const end = {\n          line: start.line,\n          col: start.col + 1\n        };\n        this.linePos = {\n          start,\n          end\n        };\n      }\n\n      delete this.offset;\n    } else {\n      this.range = this.source.range;\n      this.linePos = this.source.rangeAsLinePos;\n    }\n\n    if (this.linePos) {\n      const {\n        line,\n        col\n      } = this.linePos.start;\n      this.message += ` at line ${line}, column ${col}`;\n      const ctx = cst && getPrettyContext(this.linePos, cst);\n      if (ctx) this.message += `:\\n\\n${ctx}\\n`;\n    }\n\n    delete this.source;\n  }\n\n}\nclass YAMLReferenceError extends YAMLError {\n  constructor(source, message) {\n    super('YAMLReferenceError', source, message);\n  }\n\n}\nclass YAMLSemanticError extends YAMLError {\n  constructor(source, message) {\n    super('YAMLSemanticError', source, message);\n  }\n\n}\nclass YAMLSyntaxError extends YAMLError {\n  constructor(source, message) {\n    super('YAMLSyntaxError', source, message);\n  }\n\n}\nclass YAMLWarning extends YAMLError {\n  constructor(source, message) {\n    super('YAMLWarning', source, message);\n  }\n\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass PlainValue extends Node {\n  static endOfLine(src, start, inFlow) {\n    let ch = src[start];\n    let offset = start;\n\n    while (ch && ch !== '\\n') {\n      if (inFlow && (ch === '[' || ch === ']' || ch === '{' || ch === '}' || ch === ',')) break;\n      const next = src[offset + 1];\n      if (ch === ':' && (!next || next === '\\n' || next === '\\t' || next === ' ' || inFlow && next === ',')) break;\n      if ((ch === ' ' || ch === '\\t') && next === '#') break;\n      offset += 1;\n      ch = next;\n    }\n\n    return offset;\n  }\n\n  get strValue() {\n    if (!this.valueRange || !this.context) return null;\n    let {\n      start,\n      end\n    } = this.valueRange;\n    const {\n      src\n    } = this.context;\n    let ch = src[end - 1];\n\n    while (start < end && (ch === '\\n' || ch === '\\t' || ch === ' ')) ch = src[--end - 1];\n\n    let str = '';\n\n    for (let i = start; i < end; ++i) {\n      const ch = src[i];\n\n      if (ch === '\\n') {\n        const {\n          fold,\n          offset\n        } = Node.foldNewline(src, i, -1);\n        str += fold;\n        i = offset;\n      } else if (ch === ' ' || ch === '\\t') {\n        // trim trailing whitespace\n        const wsStart = i;\n        let next = src[i + 1];\n\n        while (i < end && (next === ' ' || next === '\\t')) {\n          i += 1;\n          next = src[i + 1];\n        }\n\n        if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n      } else {\n        str += ch;\n      }\n    }\n\n    const ch0 = src[start];\n\n    switch (ch0) {\n      case '\\t':\n        {\n          const msg = 'Plain value cannot start with a tab character';\n          const errors = [new YAMLSemanticError(this, msg)];\n          return {\n            errors,\n            str\n          };\n        }\n\n      case '@':\n      case '`':\n        {\n          const msg = `Plain value cannot start with reserved character ${ch0}`;\n          const errors = [new YAMLSemanticError(this, msg)];\n          return {\n            errors,\n            str\n          };\n        }\n\n      default:\n        return str;\n    }\n  }\n\n  parseBlockValue(start) {\n    const {\n      indent,\n      inFlow,\n      src\n    } = this.context;\n    let offset = start;\n    let valueEnd = start;\n\n    for (let ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n      if (Node.atDocumentBoundary(src, offset + 1)) break;\n      const end = Node.endOfBlockIndent(src, indent, offset + 1);\n      if (end === null || src[end] === '#') break;\n\n      if (src[end] === '\\n') {\n        offset = end;\n      } else {\n        valueEnd = PlainValue.endOfLine(src, end, inFlow);\n        offset = valueEnd;\n      }\n    }\n\n    if (this.valueRange.isEmpty()) this.valueRange.start = start;\n    this.valueRange.end = valueEnd;\n    return valueEnd;\n  }\n  /**\n   * Parses a plain value from the source\n   *\n   * Accepted forms are:\n   * ```\n   * #comment\n   *\n   * first line\n   *\n   * first line #comment\n   *\n   * first line\n   * block\n   * lines\n   *\n   * #comment\n   * block\n   * lines\n   * ```\n   * where block lines are empty or have an indent level greater than `indent`.\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar, may be `\\n`\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    const {\n      inFlow,\n      src\n    } = context;\n    let offset = start;\n    const ch = src[offset];\n\n    if (ch && ch !== '#' && ch !== '\\n') {\n      offset = PlainValue.endOfLine(src, start, inFlow);\n    }\n\n    this.valueRange = new Range(start, offset);\n    offset = Node.endOfWhiteSpace(src, offset);\n    offset = this.parseComment(offset);\n\n    if (!this.hasComment || this.valueRange.isEmpty()) {\n      offset = this.parseBlockValue(offset);\n    }\n\n    return offset;\n  }\n\n}\n\nexports.Char = Char;\nexports.Node = Node;\nexports.PlainValue = PlainValue;\nexports.Range = Range;\nexports.Type = Type;\nexports.YAMLError = YAMLError;\nexports.YAMLReferenceError = YAMLReferenceError;\nexports.YAMLSemanticError = YAMLSemanticError;\nexports.YAMLSyntaxError = YAMLSyntaxError;\nexports.YAMLWarning = YAMLWarning;\nexports._defineProperty = _defineProperty;\nexports.defaultTagPrefix = defaultTagPrefix;\nexports.defaultTags = defaultTags;\n","'use strict';\n\nvar PlainValue = require('./PlainValue-ec8e588e.js');\nvar resolveSeq = require('./resolveSeq-d03cb037.js');\nvar warnings = require('./warnings-1000a372.js');\n\nfunction createMap(schema, obj, ctx) {\n  const map = new resolveSeq.YAMLMap(schema);\n\n  if (obj instanceof Map) {\n    for (const [key, value] of obj) map.items.push(schema.createPair(key, value, ctx));\n  } else if (obj && typeof obj === 'object') {\n    for (const key of Object.keys(obj)) map.items.push(schema.createPair(key, obj[key], ctx));\n  }\n\n  if (typeof schema.sortMapEntries === 'function') {\n    map.items.sort(schema.sortMapEntries);\n  }\n\n  return map;\n}\n\nconst map = {\n  createNode: createMap,\n  default: true,\n  nodeClass: resolveSeq.YAMLMap,\n  tag: 'tag:yaml.org,2002:map',\n  resolve: resolveSeq.resolveMap\n};\n\nfunction createSeq(schema, obj, ctx) {\n  const seq = new resolveSeq.YAMLSeq(schema);\n\n  if (obj && obj[Symbol.iterator]) {\n    for (const it of obj) {\n      const v = schema.createNode(it, ctx.wrapScalars, null, ctx);\n      seq.items.push(v);\n    }\n  }\n\n  return seq;\n}\n\nconst seq = {\n  createNode: createSeq,\n  default: true,\n  nodeClass: resolveSeq.YAMLSeq,\n  tag: 'tag:yaml.org,2002:seq',\n  resolve: resolveSeq.resolveSeq\n};\n\nconst string = {\n  identify: value => typeof value === 'string',\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveSeq.resolveString,\n\n  stringify(item, ctx, onComment, onChompKeep) {\n    ctx = Object.assign({\n      actualString: true\n    }, ctx);\n    return resolveSeq.stringifyString(item, ctx, onComment, onChompKeep);\n  },\n\n  options: resolveSeq.strOptions\n};\n\nconst failsafe = [map, seq, string];\n\n/* global BigInt */\n\nconst intIdentify$2 = value => typeof value === 'bigint' || Number.isInteger(value);\n\nconst intResolve$1 = (src, part, radix) => resolveSeq.intOptions.asBigInt ? BigInt(src) : parseInt(part, radix);\n\nfunction intStringify$1(node, radix, prefix) {\n  const {\n    value\n  } = node;\n  if (intIdentify$2(value) && value >= 0) return prefix + value.toString(radix);\n  return resolveSeq.stringifyNumber(node);\n}\n\nconst nullObj = {\n  identify: value => value == null,\n  createNode: (schema, value, ctx) => ctx.wrapScalars ? new resolveSeq.Scalar(null) : null,\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: () => null,\n  options: resolveSeq.nullOptions,\n  stringify: () => resolveSeq.nullOptions.nullStr\n};\nconst boolObj = {\n  identify: value => typeof value === 'boolean',\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n  resolve: str => str[0] === 't' || str[0] === 'T',\n  options: resolveSeq.boolOptions,\n  stringify: ({\n    value\n  }) => value ? resolveSeq.boolOptions.trueStr : resolveSeq.boolOptions.falseStr\n};\nconst octObj = {\n  identify: value => intIdentify$2(value) && value >= 0,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^0o([0-7]+)$/,\n  resolve: (str, oct) => intResolve$1(str, oct, 8),\n  options: resolveSeq.intOptions,\n  stringify: node => intStringify$1(node, 8, '0o')\n};\nconst intObj = {\n  identify: intIdentify$2,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9]+$/,\n  resolve: str => intResolve$1(str, str, 10),\n  options: resolveSeq.intOptions,\n  stringify: resolveSeq.stringifyNumber\n};\nconst hexObj = {\n  identify: value => intIdentify$2(value) && value >= 0,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F]+)$/,\n  resolve: (str, hex) => intResolve$1(str, hex, 16),\n  options: resolveSeq.intOptions,\n  stringify: node => intStringify$1(node, 16, '0x')\n};\nconst nanObj = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: (str, nan) => nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY,\n  stringify: resolveSeq.stringifyNumber\n};\nconst expObj = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n  resolve: str => parseFloat(str),\n  stringify: ({\n    value\n  }) => Number(value).toExponential()\n};\nconst floatObj = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:\\.([0-9]+)|[0-9]+\\.([0-9]*))$/,\n\n  resolve(str, frac1, frac2) {\n    const frac = frac1 || frac2;\n    const node = new resolveSeq.Scalar(parseFloat(str));\n    if (frac && frac[frac.length - 1] === '0') node.minFractionDigits = frac.length;\n    return node;\n  },\n\n  stringify: resolveSeq.stringifyNumber\n};\nconst core = failsafe.concat([nullObj, boolObj, octObj, intObj, hexObj, nanObj, expObj, floatObj]);\n\n/* global BigInt */\n\nconst intIdentify$1 = value => typeof value === 'bigint' || Number.isInteger(value);\n\nconst stringifyJSON = ({\n  value\n}) => JSON.stringify(value);\n\nconst json = [map, seq, {\n  identify: value => typeof value === 'string',\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveSeq.resolveString,\n  stringify: stringifyJSON\n}, {\n  identify: value => value == null,\n  createNode: (schema, value, ctx) => ctx.wrapScalars ? new resolveSeq.Scalar(null) : null,\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^null$/,\n  resolve: () => null,\n  stringify: stringifyJSON\n}, {\n  identify: value => typeof value === 'boolean',\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^true|false$/,\n  resolve: str => str === 'true',\n  stringify: stringifyJSON\n}, {\n  identify: intIdentify$1,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^-?(?:0|[1-9][0-9]*)$/,\n  resolve: str => resolveSeq.intOptions.asBigInt ? BigInt(str) : parseInt(str, 10),\n  stringify: ({\n    value\n  }) => intIdentify$1(value) ? value.toString() : JSON.stringify(value)\n}, {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n  resolve: str => parseFloat(str),\n  stringify: stringifyJSON\n}];\n\njson.scalarFallback = str => {\n  throw new SyntaxError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n};\n\n/* global BigInt */\n\nconst boolStringify = ({\n  value\n}) => value ? resolveSeq.boolOptions.trueStr : resolveSeq.boolOptions.falseStr;\n\nconst intIdentify = value => typeof value === 'bigint' || Number.isInteger(value);\n\nfunction intResolve(sign, src, radix) {\n  let str = src.replace(/_/g, '');\n\n  if (resolveSeq.intOptions.asBigInt) {\n    switch (radix) {\n      case 2:\n        str = `0b${str}`;\n        break;\n\n      case 8:\n        str = `0o${str}`;\n        break;\n\n      case 16:\n        str = `0x${str}`;\n        break;\n    }\n\n    const n = BigInt(str);\n    return sign === '-' ? BigInt(-1) * n : n;\n  }\n\n  const n = parseInt(str, radix);\n  return sign === '-' ? -1 * n : n;\n}\n\nfunction intStringify(node, radix, prefix) {\n  const {\n    value\n  } = node;\n\n  if (intIdentify(value)) {\n    const str = value.toString(radix);\n    return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n  }\n\n  return resolveSeq.stringifyNumber(node);\n}\n\nconst yaml11 = failsafe.concat([{\n  identify: value => value == null,\n  createNode: (schema, value, ctx) => ctx.wrapScalars ? new resolveSeq.Scalar(null) : null,\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: () => null,\n  options: resolveSeq.nullOptions,\n  stringify: () => resolveSeq.nullOptions.nullStr\n}, {\n  identify: value => typeof value === 'boolean',\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: () => true,\n  options: resolveSeq.boolOptions,\n  stringify: boolStringify\n}, {\n  identify: value => typeof value === 'boolean',\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n  resolve: () => false,\n  options: resolveSeq.boolOptions,\n  stringify: boolStringify\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'BIN',\n  test: /^([-+]?)0b([0-1_]+)$/,\n  resolve: (str, sign, bin) => intResolve(sign, bin, 2),\n  stringify: node => intStringify(node, 2, '0b')\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^([-+]?)0([0-7_]+)$/,\n  resolve: (str, sign, oct) => intResolve(sign, oct, 8),\n  stringify: node => intStringify(node, 8, '0')\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^([-+]?)([0-9][0-9_]*)$/,\n  resolve: (str, sign, abs) => intResolve(sign, abs, 10),\n  stringify: resolveSeq.stringifyNumber\n}, {\n  identify: intIdentify,\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^([-+]?)0x([0-9a-fA-F_]+)$/,\n  resolve: (str, sign, hex) => intResolve(sign, hex, 16),\n  stringify: node => intStringify(node, 16, '0x')\n}, {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: (str, nan) => nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY,\n  stringify: resolveSeq.stringifyNumber\n}, {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?([0-9][0-9_]*)?(\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n  resolve: str => parseFloat(str.replace(/_/g, '')),\n  stringify: ({\n    value\n  }) => Number(value).toExponential()\n}, {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:[0-9][0-9_]*)?\\.([0-9_]*)$/,\n\n  resolve(str, frac) {\n    const node = new resolveSeq.Scalar(parseFloat(str.replace(/_/g, '')));\n\n    if (frac) {\n      const f = frac.replace(/_/g, '');\n      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;\n    }\n\n    return node;\n  },\n\n  stringify: resolveSeq.stringifyNumber\n}], warnings.binary, warnings.omap, warnings.pairs, warnings.set, warnings.intTime, warnings.floatTime, warnings.timestamp);\n\nconst schemas = {\n  core,\n  failsafe,\n  json,\n  yaml11\n};\nconst tags = {\n  binary: warnings.binary,\n  bool: boolObj,\n  float: floatObj,\n  floatExp: expObj,\n  floatNaN: nanObj,\n  floatTime: warnings.floatTime,\n  int: intObj,\n  intHex: hexObj,\n  intOct: octObj,\n  intTime: warnings.intTime,\n  map,\n  null: nullObj,\n  omap: warnings.omap,\n  pairs: warnings.pairs,\n  seq,\n  set: warnings.set,\n  timestamp: warnings.timestamp\n};\n\nfunction findTagObject(value, tagName, tags) {\n  if (tagName) {\n    const match = tags.filter(t => t.tag === tagName);\n    const tagObj = match.find(t => !t.format) || match[0];\n    if (!tagObj) throw new Error(`Tag ${tagName} not found`);\n    return tagObj;\n  } // TODO: deprecate/remove class check\n\n\n  return tags.find(t => (t.identify && t.identify(value) || t.class && value instanceof t.class) && !t.format);\n}\n\nfunction createNode(value, tagName, ctx) {\n  if (value instanceof resolveSeq.Node) return value;\n  const {\n    defaultPrefix,\n    onTagObj,\n    prevObjects,\n    schema,\n    wrapScalars\n  } = ctx;\n  if (tagName && tagName.startsWith('!!')) tagName = defaultPrefix + tagName.slice(2);\n  let tagObj = findTagObject(value, tagName, schema.tags);\n\n  if (!tagObj) {\n    if (typeof value.toJSON === 'function') value = value.toJSON();\n    if (!value || typeof value !== 'object') return wrapScalars ? new resolveSeq.Scalar(value) : value;\n    tagObj = value instanceof Map ? map : value[Symbol.iterator] ? seq : map;\n  }\n\n  if (onTagObj) {\n    onTagObj(tagObj);\n    delete ctx.onTagObj;\n  } // Detect duplicate references to the same object & use Alias nodes for all\n  // after first. The `obj` wrapper allows for circular references to resolve.\n\n\n  const obj = {\n    value: undefined,\n    node: undefined\n  };\n\n  if (value && typeof value === 'object' && prevObjects) {\n    const prev = prevObjects.get(value);\n\n    if (prev) {\n      const alias = new resolveSeq.Alias(prev); // leaves source dirty; must be cleaned by caller\n\n      ctx.aliasNodes.push(alias); // defined along with prevObjects\n\n      return alias;\n    }\n\n    obj.value = value;\n    prevObjects.set(value, obj);\n  }\n\n  obj.node = tagObj.createNode ? tagObj.createNode(ctx.schema, value, ctx) : wrapScalars ? new resolveSeq.Scalar(value) : value;\n  if (tagName && obj.node instanceof resolveSeq.Node) obj.node.tag = tagName;\n  return obj.node;\n}\n\nfunction getSchemaTags(schemas, knownTags, customTags, schemaId) {\n  let tags = schemas[schemaId.replace(/\\W/g, '')]; // 'yaml-1.1' -> 'yaml11'\n\n  if (!tags) {\n    const keys = Object.keys(schemas).map(key => JSON.stringify(key)).join(', ');\n    throw new Error(`Unknown schema \"${schemaId}\"; use one of ${keys}`);\n  }\n\n  if (Array.isArray(customTags)) {\n    for (const tag of customTags) tags = tags.concat(tag);\n  } else if (typeof customTags === 'function') {\n    tags = customTags(tags.slice());\n  }\n\n  for (let i = 0; i < tags.length; ++i) {\n    const tag = tags[i];\n\n    if (typeof tag === 'string') {\n      const tagObj = knownTags[tag];\n\n      if (!tagObj) {\n        const keys = Object.keys(knownTags).map(key => JSON.stringify(key)).join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n      }\n\n      tags[i] = tagObj;\n    }\n  }\n\n  return tags;\n}\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\n\nclass Schema {\n  // TODO: remove in v2\n  // TODO: remove in v2\n  constructor({\n    customTags,\n    merge,\n    schema,\n    sortMapEntries,\n    tags: deprecatedCustomTags\n  }) {\n    this.merge = !!merge;\n    this.name = schema;\n    this.sortMapEntries = sortMapEntries === true ? sortMapEntriesByKey : sortMapEntries || null;\n    if (!customTags && deprecatedCustomTags) warnings.warnOptionDeprecation('tags', 'customTags');\n    this.tags = getSchemaTags(schemas, tags, customTags || deprecatedCustomTags, schema);\n  }\n\n  createNode(value, wrapScalars, tagName, ctx) {\n    const baseCtx = {\n      defaultPrefix: Schema.defaultPrefix,\n      schema: this,\n      wrapScalars\n    };\n    const createCtx = ctx ? Object.assign(ctx, baseCtx) : baseCtx;\n    return createNode(value, tagName, createCtx);\n  }\n\n  createPair(key, value, ctx) {\n    if (!ctx) ctx = {\n      wrapScalars: true\n    };\n    const k = this.createNode(key, ctx.wrapScalars, null, ctx);\n    const v = this.createNode(value, ctx.wrapScalars, null, ctx);\n    return new resolveSeq.Pair(k, v);\n  }\n\n}\n\nPlainValue._defineProperty(Schema, \"defaultPrefix\", PlainValue.defaultTagPrefix);\n\nPlainValue._defineProperty(Schema, \"defaultTags\", PlainValue.defaultTags);\n\nexports.Schema = Schema;\n","'use strict';\n\nvar parseCst = require('./parse-cst.js');\nvar Document$1 = require('./Document-9b4560a1.js');\nvar Schema = require('./Schema-88e323a7.js');\nvar PlainValue = require('./PlainValue-ec8e588e.js');\nvar warnings = require('./warnings-1000a372.js');\nrequire('./resolveSeq-d03cb037.js');\n\nfunction createNode(value, wrapScalars = true, tag) {\n  if (tag === undefined && typeof wrapScalars === 'string') {\n    tag = wrapScalars;\n    wrapScalars = true;\n  }\n\n  const options = Object.assign({}, Document$1.Document.defaults[Document$1.defaultOptions.version], Document$1.defaultOptions);\n  const schema = new Schema.Schema(options);\n  return schema.createNode(value, wrapScalars, tag);\n}\n\nclass Document extends Document$1.Document {\n  constructor(options) {\n    super(Object.assign({}, Document$1.defaultOptions, options));\n  }\n\n}\n\nfunction parseAllDocuments(src, options) {\n  const stream = [];\n  let prev;\n\n  for (const cstDoc of parseCst.parse(src)) {\n    const doc = new Document(options);\n    doc.parse(cstDoc, prev);\n    stream.push(doc);\n    prev = doc;\n  }\n\n  return stream;\n}\n\nfunction parseDocument(src, options) {\n  const cst = parseCst.parse(src);\n  const doc = new Document(options).parse(cst[0]);\n\n  if (cst.length > 1) {\n    const errMsg = 'Source contains multiple documents; please use YAML.parseAllDocuments()';\n    doc.errors.unshift(new PlainValue.YAMLSemanticError(cst[1], errMsg));\n  }\n\n  return doc;\n}\n\nfunction parse(src, options) {\n  const doc = parseDocument(src, options);\n  doc.warnings.forEach(warning => warnings.warn(warning));\n  if (doc.errors.length > 0) throw doc.errors[0];\n  return doc.toJSON();\n}\n\nfunction stringify(value, options) {\n  const doc = new Document(options);\n  doc.contents = value;\n  return String(doc);\n}\n\nconst YAML = {\n  createNode,\n  defaultOptions: Document$1.defaultOptions,\n  Document,\n  parse,\n  parseAllDocuments,\n  parseCST: parseCst.parse,\n  parseDocument,\n  scalarOptions: Document$1.scalarOptions,\n  stringify\n};\n\nexports.YAML = YAML;\n","'use strict';\n\nvar PlainValue = require('./PlainValue-ec8e588e.js');\n\nclass BlankLine extends PlainValue.Node {\n  constructor() {\n    super(PlainValue.Type.BLANK_LINE);\n  }\n  /* istanbul ignore next */\n\n\n  get includesTrailingLines() {\n    // This is never called from anywhere, but if it were,\n    // this is the value it should return.\n    return true;\n  }\n  /**\n   * Parses a blank line from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first \\n character\n   * @returns {number} - Index of the character after this\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    this.range = new PlainValue.Range(start, start + 1);\n    return start + 1;\n  }\n\n}\n\nclass CollectionItem extends PlainValue.Node {\n  constructor(type, props) {\n    super(type, props);\n    this.node = null;\n  }\n\n  get includesTrailingLines() {\n    return !!this.node && this.node.includesTrailingLines;\n  }\n  /**\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    const {\n      parseNode,\n      src\n    } = context;\n    let {\n      atLineStart,\n      lineStart\n    } = context;\n    if (!atLineStart && this.type === PlainValue.Type.SEQ_ITEM) this.error = new PlainValue.YAMLSemanticError(this, 'Sequence items must not have preceding content on the same line');\n    const indent = atLineStart ? start - lineStart : context.indent;\n    let offset = PlainValue.Node.endOfWhiteSpace(src, start + 1);\n    let ch = src[offset];\n    const inlineComment = ch === '#';\n    const comments = [];\n    let blankLine = null;\n\n    while (ch === '\\n' || ch === '#') {\n      if (ch === '#') {\n        const end = PlainValue.Node.endOfLine(src, offset + 1);\n        comments.push(new PlainValue.Range(offset, end));\n        offset = end;\n      } else {\n        atLineStart = true;\n        lineStart = offset + 1;\n        const wsEnd = PlainValue.Node.endOfWhiteSpace(src, lineStart);\n\n        if (src[wsEnd] === '\\n' && comments.length === 0) {\n          blankLine = new BlankLine();\n          lineStart = blankLine.parse({\n            src\n          }, lineStart);\n        }\n\n        offset = PlainValue.Node.endOfIndent(src, lineStart);\n      }\n\n      ch = src[offset];\n    }\n\n    if (PlainValue.Node.nextNodeIsIndented(ch, offset - (lineStart + indent), this.type !== PlainValue.Type.SEQ_ITEM)) {\n      this.node = parseNode({\n        atLineStart,\n        inCollection: false,\n        indent,\n        lineStart,\n        parent: this\n      }, offset);\n    } else if (ch && lineStart > start + 1) {\n      offset = lineStart - 1;\n    }\n\n    if (this.node) {\n      if (blankLine) {\n        // Only blank lines preceding non-empty nodes are captured. Note that\n        // this means that collection item range start indices do not always\n        // increase monotonically. -- eemeli/yaml#126\n        const items = context.parent.items || context.parent.contents;\n        if (items) items.push(blankLine);\n      }\n\n      if (comments.length) Array.prototype.push.apply(this.props, comments);\n      offset = this.node.range.end;\n    } else {\n      if (inlineComment) {\n        const c = comments[0];\n        this.props.push(c);\n        offset = c.end;\n      } else {\n        offset = PlainValue.Node.endOfLine(src, start + 1);\n      }\n    }\n\n    const end = this.node ? this.node.valueRange.end : offset;\n    this.valueRange = new PlainValue.Range(start, end);\n    return offset;\n  }\n\n  setOrigRanges(cr, offset) {\n    offset = super.setOrigRanges(cr, offset);\n    return this.node ? this.node.setOrigRanges(cr, offset) : offset;\n  }\n\n  toString() {\n    const {\n      context: {\n        src\n      },\n      node,\n      range,\n      value\n    } = this;\n    if (value != null) return value;\n    const str = node ? src.slice(range.start, node.range.start) + String(node) : src.slice(range.start, range.end);\n    return PlainValue.Node.addStringTerminator(src, range.end, str);\n  }\n\n}\n\nclass Comment extends PlainValue.Node {\n  constructor() {\n    super(PlainValue.Type.COMMENT);\n  }\n  /**\n   * Parses a comment line from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    const offset = this.parseComment(start);\n    this.range = new PlainValue.Range(start, offset);\n    return offset;\n  }\n\n}\n\nfunction grabCollectionEndComments(node) {\n  let cnode = node;\n\n  while (cnode instanceof CollectionItem) cnode = cnode.node;\n\n  if (!(cnode instanceof Collection)) return null;\n  const len = cnode.items.length;\n  let ci = -1;\n\n  for (let i = len - 1; i >= 0; --i) {\n    const n = cnode.items[i];\n\n    if (n.type === PlainValue.Type.COMMENT) {\n      // Keep sufficiently indented comments with preceding node\n      const {\n        indent,\n        lineStart\n      } = n.context;\n      if (indent > 0 && n.range.start >= lineStart + indent) break;\n      ci = i;\n    } else if (n.type === PlainValue.Type.BLANK_LINE) ci = i;else break;\n  }\n\n  if (ci === -1) return null;\n  const ca = cnode.items.splice(ci, len - ci);\n  const prevEnd = ca[0].range.start;\n\n  while (true) {\n    cnode.range.end = prevEnd;\n    if (cnode.valueRange && cnode.valueRange.end > prevEnd) cnode.valueRange.end = prevEnd;\n    if (cnode === node) break;\n    cnode = cnode.context.parent;\n  }\n\n  return ca;\n}\nclass Collection extends PlainValue.Node {\n  static nextContentHasIndent(src, offset, indent) {\n    const lineStart = PlainValue.Node.endOfLine(src, offset) + 1;\n    offset = PlainValue.Node.endOfWhiteSpace(src, lineStart);\n    const ch = src[offset];\n    if (!ch) return false;\n    if (offset >= lineStart + indent) return true;\n    if (ch !== '#' && ch !== '\\n') return false;\n    return Collection.nextContentHasIndent(src, offset, indent);\n  }\n\n  constructor(firstItem) {\n    super(firstItem.type === PlainValue.Type.SEQ_ITEM ? PlainValue.Type.SEQ : PlainValue.Type.MAP);\n\n    for (let i = firstItem.props.length - 1; i >= 0; --i) {\n      if (firstItem.props[i].start < firstItem.context.lineStart) {\n        // props on previous line are assumed by the collection\n        this.props = firstItem.props.slice(0, i + 1);\n        firstItem.props = firstItem.props.slice(i + 1);\n        const itemRange = firstItem.props[0] || firstItem.valueRange;\n        firstItem.range.start = itemRange.start;\n        break;\n      }\n    }\n\n    this.items = [firstItem];\n    const ec = grabCollectionEndComments(firstItem);\n    if (ec) Array.prototype.push.apply(this.items, ec);\n  }\n\n  get includesTrailingLines() {\n    return this.items.length > 0;\n  }\n  /**\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    const {\n      parseNode,\n      src\n    } = context; // It's easier to recalculate lineStart here rather than tracking down the\n    // last context from which to read it -- eemeli/yaml#2\n\n    let lineStart = PlainValue.Node.startOfLine(src, start);\n    const firstItem = this.items[0]; // First-item context needs to be correct for later comment handling\n    // -- eemeli/yaml#17\n\n    firstItem.context.parent = this;\n    this.valueRange = PlainValue.Range.copy(firstItem.valueRange);\n    const indent = firstItem.range.start - firstItem.context.lineStart;\n    let offset = start;\n    offset = PlainValue.Node.normalizeOffset(src, offset);\n    let ch = src[offset];\n    let atLineStart = PlainValue.Node.endOfWhiteSpace(src, lineStart) === offset;\n    let prevIncludesTrailingLines = false;\n\n    while (ch) {\n      while (ch === '\\n' || ch === '#') {\n        if (atLineStart && ch === '\\n' && !prevIncludesTrailingLines) {\n          const blankLine = new BlankLine();\n          offset = blankLine.parse({\n            src\n          }, offset);\n          this.valueRange.end = offset;\n\n          if (offset >= src.length) {\n            ch = null;\n            break;\n          }\n\n          this.items.push(blankLine);\n          offset -= 1; // blankLine.parse() consumes terminal newline\n        } else if (ch === '#') {\n          if (offset < lineStart + indent && !Collection.nextContentHasIndent(src, offset, indent)) {\n            return offset;\n          }\n\n          const comment = new Comment();\n          offset = comment.parse({\n            indent,\n            lineStart,\n            src\n          }, offset);\n          this.items.push(comment);\n          this.valueRange.end = offset;\n\n          if (offset >= src.length) {\n            ch = null;\n            break;\n          }\n        }\n\n        lineStart = offset + 1;\n        offset = PlainValue.Node.endOfIndent(src, lineStart);\n\n        if (PlainValue.Node.atBlank(src, offset)) {\n          const wsEnd = PlainValue.Node.endOfWhiteSpace(src, offset);\n          const next = src[wsEnd];\n\n          if (!next || next === '\\n' || next === '#') {\n            offset = wsEnd;\n          }\n        }\n\n        ch = src[offset];\n        atLineStart = true;\n      }\n\n      if (!ch) {\n        break;\n      }\n\n      if (offset !== lineStart + indent && (atLineStart || ch !== ':')) {\n        if (offset < lineStart + indent) {\n          if (lineStart > start) offset = lineStart;\n          break;\n        } else if (!this.error) {\n          const msg = 'All collection items must start at the same column';\n          this.error = new PlainValue.YAMLSyntaxError(this, msg);\n        }\n      }\n\n      if (firstItem.type === PlainValue.Type.SEQ_ITEM) {\n        if (ch !== '-') {\n          if (lineStart > start) offset = lineStart;\n          break;\n        }\n      } else if (ch === '-' && !this.error) {\n        // map key may start with -, as long as it's followed by a non-whitespace char\n        const next = src[offset + 1];\n\n        if (!next || next === '\\n' || next === '\\t' || next === ' ') {\n          const msg = 'A collection cannot be both a mapping and a sequence';\n          this.error = new PlainValue.YAMLSyntaxError(this, msg);\n        }\n      }\n\n      const node = parseNode({\n        atLineStart,\n        inCollection: true,\n        indent,\n        lineStart,\n        parent: this\n      }, offset);\n      if (!node) return offset; // at next document start\n\n      this.items.push(node);\n      this.valueRange.end = node.valueRange.end;\n      offset = PlainValue.Node.normalizeOffset(src, node.range.end);\n      ch = src[offset];\n      atLineStart = false;\n      prevIncludesTrailingLines = node.includesTrailingLines; // Need to reset lineStart and atLineStart here if preceding node's range\n      // has advanced to check the current line's indentation level\n      // -- eemeli/yaml#10 & eemeli/yaml#38\n\n      if (ch) {\n        let ls = offset - 1;\n        let prev = src[ls];\n\n        while (prev === ' ' || prev === '\\t') prev = src[--ls];\n\n        if (prev === '\\n') {\n          lineStart = ls + 1;\n          atLineStart = true;\n        }\n      }\n\n      const ec = grabCollectionEndComments(node);\n      if (ec) Array.prototype.push.apply(this.items, ec);\n    }\n\n    return offset;\n  }\n\n  setOrigRanges(cr, offset) {\n    offset = super.setOrigRanges(cr, offset);\n    this.items.forEach(node => {\n      offset = node.setOrigRanges(cr, offset);\n    });\n    return offset;\n  }\n\n  toString() {\n    const {\n      context: {\n        src\n      },\n      items,\n      range,\n      value\n    } = this;\n    if (value != null) return value;\n    let str = src.slice(range.start, items[0].range.start) + String(items[0]);\n\n    for (let i = 1; i < items.length; ++i) {\n      const item = items[i];\n      const {\n        atLineStart,\n        indent\n      } = item.context;\n      if (atLineStart) for (let i = 0; i < indent; ++i) str += ' ';\n      str += String(item);\n    }\n\n    return PlainValue.Node.addStringTerminator(src, range.end, str);\n  }\n\n}\n\nclass Directive extends PlainValue.Node {\n  constructor() {\n    super(PlainValue.Type.DIRECTIVE);\n    this.name = null;\n  }\n\n  get parameters() {\n    const raw = this.rawValue;\n    return raw ? raw.trim().split(/[ \\t]+/) : [];\n  }\n\n  parseName(start) {\n    const {\n      src\n    } = this.context;\n    let offset = start;\n    let ch = src[offset];\n\n    while (ch && ch !== '\\n' && ch !== '\\t' && ch !== ' ') ch = src[offset += 1];\n\n    this.name = src.slice(start, offset);\n    return offset;\n  }\n\n  parseParameters(start) {\n    const {\n      src\n    } = this.context;\n    let offset = start;\n    let ch = src[offset];\n\n    while (ch && ch !== '\\n' && ch !== '#') ch = src[offset += 1];\n\n    this.valueRange = new PlainValue.Range(start, offset);\n    return offset;\n  }\n\n  parse(context, start) {\n    this.context = context;\n    let offset = this.parseName(start + 1);\n    offset = this.parseParameters(offset);\n    offset = this.parseComment(offset);\n    this.range = new PlainValue.Range(start, offset);\n    return offset;\n  }\n\n}\n\nclass Document extends PlainValue.Node {\n  static startCommentOrEndBlankLine(src, start) {\n    const offset = PlainValue.Node.endOfWhiteSpace(src, start);\n    const ch = src[offset];\n    return ch === '#' || ch === '\\n' ? offset : start;\n  }\n\n  constructor() {\n    super(PlainValue.Type.DOCUMENT);\n    this.directives = null;\n    this.contents = null;\n    this.directivesEndMarker = null;\n    this.documentEndMarker = null;\n  }\n\n  parseDirectives(start) {\n    const {\n      src\n    } = this.context;\n    this.directives = [];\n    let atLineStart = true;\n    let hasDirectives = false;\n    let offset = start;\n\n    while (!PlainValue.Node.atDocumentBoundary(src, offset, PlainValue.Char.DIRECTIVES_END)) {\n      offset = Document.startCommentOrEndBlankLine(src, offset);\n\n      switch (src[offset]) {\n        case '\\n':\n          if (atLineStart) {\n            const blankLine = new BlankLine();\n            offset = blankLine.parse({\n              src\n            }, offset);\n\n            if (offset < src.length) {\n              this.directives.push(blankLine);\n            }\n          } else {\n            offset += 1;\n            atLineStart = true;\n          }\n\n          break;\n\n        case '#':\n          {\n            const comment = new Comment();\n            offset = comment.parse({\n              src\n            }, offset);\n            this.directives.push(comment);\n            atLineStart = false;\n          }\n          break;\n\n        case '%':\n          {\n            const directive = new Directive();\n            offset = directive.parse({\n              parent: this,\n              src\n            }, offset);\n            this.directives.push(directive);\n            hasDirectives = true;\n            atLineStart = false;\n          }\n          break;\n\n        default:\n          if (hasDirectives) {\n            this.error = new PlainValue.YAMLSemanticError(this, 'Missing directives-end indicator line');\n          } else if (this.directives.length > 0) {\n            this.contents = this.directives;\n            this.directives = [];\n          }\n\n          return offset;\n      }\n    }\n\n    if (src[offset]) {\n      this.directivesEndMarker = new PlainValue.Range(offset, offset + 3);\n      return offset + 3;\n    }\n\n    if (hasDirectives) {\n      this.error = new PlainValue.YAMLSemanticError(this, 'Missing directives-end indicator line');\n    } else if (this.directives.length > 0) {\n      this.contents = this.directives;\n      this.directives = [];\n    }\n\n    return offset;\n  }\n\n  parseContents(start) {\n    const {\n      parseNode,\n      src\n    } = this.context;\n    if (!this.contents) this.contents = [];\n    let lineStart = start;\n\n    while (src[lineStart - 1] === '-') lineStart -= 1;\n\n    let offset = PlainValue.Node.endOfWhiteSpace(src, start);\n    let atLineStart = lineStart === start;\n    this.valueRange = new PlainValue.Range(offset);\n\n    while (!PlainValue.Node.atDocumentBoundary(src, offset, PlainValue.Char.DOCUMENT_END)) {\n      switch (src[offset]) {\n        case '\\n':\n          if (atLineStart) {\n            const blankLine = new BlankLine();\n            offset = blankLine.parse({\n              src\n            }, offset);\n\n            if (offset < src.length) {\n              this.contents.push(blankLine);\n            }\n          } else {\n            offset += 1;\n            atLineStart = true;\n          }\n\n          lineStart = offset;\n          break;\n\n        case '#':\n          {\n            const comment = new Comment();\n            offset = comment.parse({\n              src\n            }, offset);\n            this.contents.push(comment);\n            atLineStart = false;\n          }\n          break;\n\n        default:\n          {\n            const iEnd = PlainValue.Node.endOfIndent(src, offset);\n            const context = {\n              atLineStart,\n              indent: -1,\n              inFlow: false,\n              inCollection: false,\n              lineStart,\n              parent: this\n            };\n            const node = parseNode(context, iEnd);\n            if (!node) return this.valueRange.end = iEnd; // at next document start\n\n            this.contents.push(node);\n            offset = node.range.end;\n            atLineStart = false;\n            const ec = grabCollectionEndComments(node);\n            if (ec) Array.prototype.push.apply(this.contents, ec);\n          }\n      }\n\n      offset = Document.startCommentOrEndBlankLine(src, offset);\n    }\n\n    this.valueRange.end = offset;\n\n    if (src[offset]) {\n      this.documentEndMarker = new PlainValue.Range(offset, offset + 3);\n      offset += 3;\n\n      if (src[offset]) {\n        offset = PlainValue.Node.endOfWhiteSpace(src, offset);\n\n        if (src[offset] === '#') {\n          const comment = new Comment();\n          offset = comment.parse({\n            src\n          }, offset);\n          this.contents.push(comment);\n        }\n\n        switch (src[offset]) {\n          case '\\n':\n            offset += 1;\n            break;\n\n          case undefined:\n            break;\n\n          default:\n            this.error = new PlainValue.YAMLSyntaxError(this, 'Document end marker line cannot have a non-comment suffix');\n        }\n      }\n    }\n\n    return offset;\n  }\n  /**\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this\n   */\n\n\n  parse(context, start) {\n    context.root = this;\n    this.context = context;\n    const {\n      src\n    } = context;\n    let offset = src.charCodeAt(start) === 0xfeff ? start + 1 : start; // skip BOM\n\n    offset = this.parseDirectives(offset);\n    offset = this.parseContents(offset);\n    return offset;\n  }\n\n  setOrigRanges(cr, offset) {\n    offset = super.setOrigRanges(cr, offset);\n    this.directives.forEach(node => {\n      offset = node.setOrigRanges(cr, offset);\n    });\n    if (this.directivesEndMarker) offset = this.directivesEndMarker.setOrigRange(cr, offset);\n    this.contents.forEach(node => {\n      offset = node.setOrigRanges(cr, offset);\n    });\n    if (this.documentEndMarker) offset = this.documentEndMarker.setOrigRange(cr, offset);\n    return offset;\n  }\n\n  toString() {\n    const {\n      contents,\n      directives,\n      value\n    } = this;\n    if (value != null) return value;\n    let str = directives.join('');\n\n    if (contents.length > 0) {\n      if (directives.length > 0 || contents[0].type === PlainValue.Type.COMMENT) str += '---\\n';\n      str += contents.join('');\n    }\n\n    if (str[str.length - 1] !== '\\n') str += '\\n';\n    return str;\n  }\n\n}\n\nclass Alias extends PlainValue.Node {\n  /**\n   * Parses an *alias from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar\n   */\n  parse(context, start) {\n    this.context = context;\n    const {\n      src\n    } = context;\n    let offset = PlainValue.Node.endOfIdentifier(src, start + 1);\n    this.valueRange = new PlainValue.Range(start + 1, offset);\n    offset = PlainValue.Node.endOfWhiteSpace(src, offset);\n    offset = this.parseComment(offset);\n    return offset;\n  }\n\n}\n\nconst Chomp = {\n  CLIP: 'CLIP',\n  KEEP: 'KEEP',\n  STRIP: 'STRIP'\n};\nclass BlockValue extends PlainValue.Node {\n  constructor(type, props) {\n    super(type, props);\n    this.blockIndent = null;\n    this.chomping = Chomp.CLIP;\n    this.header = null;\n  }\n\n  get includesTrailingLines() {\n    return this.chomping === Chomp.KEEP;\n  }\n\n  get strValue() {\n    if (!this.valueRange || !this.context) return null;\n    let {\n      start,\n      end\n    } = this.valueRange;\n    const {\n      indent,\n      src\n    } = this.context;\n    if (this.valueRange.isEmpty()) return '';\n    let lastNewLine = null;\n    let ch = src[end - 1];\n\n    while (ch === '\\n' || ch === '\\t' || ch === ' ') {\n      end -= 1;\n\n      if (end <= start) {\n        if (this.chomping === Chomp.KEEP) break;else return ''; // probably never happens\n      }\n\n      if (ch === '\\n') lastNewLine = end;\n      ch = src[end - 1];\n    }\n\n    let keepStart = end + 1;\n\n    if (lastNewLine) {\n      if (this.chomping === Chomp.KEEP) {\n        keepStart = lastNewLine;\n        end = this.valueRange.end;\n      } else {\n        end = lastNewLine;\n      }\n    }\n\n    const bi = indent + this.blockIndent;\n    const folded = this.type === PlainValue.Type.BLOCK_FOLDED;\n    let atStart = true;\n    let str = '';\n    let sep = '';\n    let prevMoreIndented = false;\n\n    for (let i = start; i < end; ++i) {\n      for (let j = 0; j < bi; ++j) {\n        if (src[i] !== ' ') break;\n        i += 1;\n      }\n\n      const ch = src[i];\n\n      if (ch === '\\n') {\n        if (sep === '\\n') str += '\\n';else sep = '\\n';\n      } else {\n        const lineEnd = PlainValue.Node.endOfLine(src, i);\n        const line = src.slice(i, lineEnd);\n        i = lineEnd;\n\n        if (folded && (ch === ' ' || ch === '\\t') && i < keepStart) {\n          if (sep === ' ') sep = '\\n';else if (!prevMoreIndented && !atStart && sep === '\\n') sep = '\\n\\n';\n          str += sep + line; //+ ((lineEnd < end && src[lineEnd]) || '')\n\n          sep = lineEnd < end && src[lineEnd] || '';\n          prevMoreIndented = true;\n        } else {\n          str += sep + line;\n          sep = folded && i < keepStart ? ' ' : '\\n';\n          prevMoreIndented = false;\n        }\n\n        if (atStart && line !== '') atStart = false;\n      }\n    }\n\n    return this.chomping === Chomp.STRIP ? str : str + '\\n';\n  }\n\n  parseBlockHeader(start) {\n    const {\n      src\n    } = this.context;\n    let offset = start + 1;\n    let bi = '';\n\n    while (true) {\n      const ch = src[offset];\n\n      switch (ch) {\n        case '-':\n          this.chomping = Chomp.STRIP;\n          break;\n\n        case '+':\n          this.chomping = Chomp.KEEP;\n          break;\n\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          bi += ch;\n          break;\n\n        default:\n          this.blockIndent = Number(bi) || null;\n          this.header = new PlainValue.Range(start, offset);\n          return offset;\n      }\n\n      offset += 1;\n    }\n  }\n\n  parseBlockValue(start) {\n    const {\n      indent,\n      src\n    } = this.context;\n    const explicit = !!this.blockIndent;\n    let offset = start;\n    let valueEnd = start;\n    let minBlockIndent = 1;\n\n    for (let ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n      offset += 1;\n      if (PlainValue.Node.atDocumentBoundary(src, offset)) break;\n      const end = PlainValue.Node.endOfBlockIndent(src, indent, offset); // should not include tab?\n\n      if (end === null) break;\n      const ch = src[end];\n      const lineIndent = end - (offset + indent);\n\n      if (!this.blockIndent) {\n        // no explicit block indent, none yet detected\n        if (src[end] !== '\\n') {\n          // first line with non-whitespace content\n          if (lineIndent < minBlockIndent) {\n            const msg = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n            this.error = new PlainValue.YAMLSemanticError(this, msg);\n          }\n\n          this.blockIndent = lineIndent;\n        } else if (lineIndent > minBlockIndent) {\n          // empty line with more whitespace\n          minBlockIndent = lineIndent;\n        }\n      } else if (ch && ch !== '\\n' && lineIndent < this.blockIndent) {\n        if (src[end] === '#') break;\n\n        if (!this.error) {\n          const src = explicit ? 'explicit indentation indicator' : 'first line';\n          const msg = `Block scalars must not be less indented than their ${src}`;\n          this.error = new PlainValue.YAMLSemanticError(this, msg);\n        }\n      }\n\n      if (src[end] === '\\n') {\n        offset = end;\n      } else {\n        offset = valueEnd = PlainValue.Node.endOfLine(src, end);\n      }\n    }\n\n    if (this.chomping !== Chomp.KEEP) {\n      offset = src[valueEnd] ? valueEnd + 1 : valueEnd;\n    }\n\n    this.valueRange = new PlainValue.Range(start + 1, offset);\n    return offset;\n  }\n  /**\n   * Parses a block value from the source\n   *\n   * Accepted forms are:\n   * ```\n   * BS\n   * block\n   * lines\n   *\n   * BS #comment\n   * block\n   * lines\n   * ```\n   * where the block style BS matches the regexp `[|>][-+1-9]*` and block lines\n   * are empty or have an indent level greater than `indent`.\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this block\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    const {\n      src\n    } = context;\n    let offset = this.parseBlockHeader(start);\n    offset = PlainValue.Node.endOfWhiteSpace(src, offset);\n    offset = this.parseComment(offset);\n    offset = this.parseBlockValue(offset);\n    return offset;\n  }\n\n  setOrigRanges(cr, offset) {\n    offset = super.setOrigRanges(cr, offset);\n    return this.header ? this.header.setOrigRange(cr, offset) : offset;\n  }\n\n}\n\nclass FlowCollection extends PlainValue.Node {\n  constructor(type, props) {\n    super(type, props);\n    this.items = null;\n  }\n\n  prevNodeIsJsonLike(idx = this.items.length) {\n    const node = this.items[idx - 1];\n    return !!node && (node.jsonLike || node.type === PlainValue.Type.COMMENT && this.prevNodeIsJsonLike(idx - 1));\n  }\n  /**\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    const {\n      parseNode,\n      src\n    } = context;\n    let {\n      indent,\n      lineStart\n    } = context;\n    let char = src[start]; // { or [\n\n    this.items = [{\n      char,\n      offset: start\n    }];\n    let offset = PlainValue.Node.endOfWhiteSpace(src, start + 1);\n    char = src[offset];\n\n    while (char && char !== ']' && char !== '}') {\n      switch (char) {\n        case '\\n':\n          {\n            lineStart = offset + 1;\n            const wsEnd = PlainValue.Node.endOfWhiteSpace(src, lineStart);\n\n            if (src[wsEnd] === '\\n') {\n              const blankLine = new BlankLine();\n              lineStart = blankLine.parse({\n                src\n              }, lineStart);\n              this.items.push(blankLine);\n            }\n\n            offset = PlainValue.Node.endOfIndent(src, lineStart);\n\n            if (offset <= lineStart + indent) {\n              char = src[offset];\n\n              if (offset < lineStart + indent || char !== ']' && char !== '}') {\n                const msg = 'Insufficient indentation in flow collection';\n                this.error = new PlainValue.YAMLSemanticError(this, msg);\n              }\n            }\n          }\n          break;\n\n        case ',':\n          {\n            this.items.push({\n              char,\n              offset\n            });\n            offset += 1;\n          }\n          break;\n\n        case '#':\n          {\n            const comment = new Comment();\n            offset = comment.parse({\n              src\n            }, offset);\n            this.items.push(comment);\n          }\n          break;\n\n        case '?':\n        case ':':\n          {\n            const next = src[offset + 1];\n\n            if (next === '\\n' || next === '\\t' || next === ' ' || next === ',' || // in-flow : after JSON-like key does not need to be followed by whitespace\n            char === ':' && this.prevNodeIsJsonLike()) {\n              this.items.push({\n                char,\n                offset\n              });\n              offset += 1;\n              break;\n            }\n          }\n        // fallthrough\n\n        default:\n          {\n            const node = parseNode({\n              atLineStart: false,\n              inCollection: false,\n              inFlow: true,\n              indent: -1,\n              lineStart,\n              parent: this\n            }, offset);\n\n            if (!node) {\n              // at next document start\n              this.valueRange = new PlainValue.Range(start, offset);\n              return offset;\n            }\n\n            this.items.push(node);\n            offset = PlainValue.Node.normalizeOffset(src, node.range.end);\n          }\n      }\n\n      offset = PlainValue.Node.endOfWhiteSpace(src, offset);\n      char = src[offset];\n    }\n\n    this.valueRange = new PlainValue.Range(start, offset + 1);\n\n    if (char) {\n      this.items.push({\n        char,\n        offset\n      });\n      offset = PlainValue.Node.endOfWhiteSpace(src, offset + 1);\n      offset = this.parseComment(offset);\n    }\n\n    return offset;\n  }\n\n  setOrigRanges(cr, offset) {\n    offset = super.setOrigRanges(cr, offset);\n    this.items.forEach(node => {\n      if (node instanceof PlainValue.Node) {\n        offset = node.setOrigRanges(cr, offset);\n      } else if (cr.length === 0) {\n        node.origOffset = node.offset;\n      } else {\n        let i = offset;\n\n        while (i < cr.length) {\n          if (cr[i] > node.offset) break;else ++i;\n        }\n\n        node.origOffset = node.offset + i;\n        offset = i;\n      }\n    });\n    return offset;\n  }\n\n  toString() {\n    const {\n      context: {\n        src\n      },\n      items,\n      range,\n      value\n    } = this;\n    if (value != null) return value;\n    const nodes = items.filter(item => item instanceof PlainValue.Node);\n    let str = '';\n    let prevEnd = range.start;\n    nodes.forEach(node => {\n      const prefix = src.slice(prevEnd, node.range.start);\n      prevEnd = node.range.end;\n      str += prefix + String(node);\n\n      if (str[str.length - 1] === '\\n' && src[prevEnd - 1] !== '\\n' && src[prevEnd] === '\\n') {\n        // Comment range does not include the terminal newline, but its\n        // stringified value does. Without this fix, newlines at comment ends\n        // get duplicated.\n        prevEnd += 1;\n      }\n    });\n    str += src.slice(prevEnd, range.end);\n    return PlainValue.Node.addStringTerminator(src, range.end, str);\n  }\n\n}\n\nclass QuoteDouble extends PlainValue.Node {\n  static endOfQuote(src, offset) {\n    let ch = src[offset];\n\n    while (ch && ch !== '\"') {\n      offset += ch === '\\\\' ? 2 : 1;\n      ch = src[offset];\n    }\n\n    return offset + 1;\n  }\n  /**\n   * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n   */\n\n\n  get strValue() {\n    if (!this.valueRange || !this.context) return null;\n    const errors = [];\n    const {\n      start,\n      end\n    } = this.valueRange;\n    const {\n      indent,\n      src\n    } = this.context;\n    if (src[end - 1] !== '\"') errors.push(new PlainValue.YAMLSyntaxError(this, 'Missing closing \"quote')); // Using String#replace is too painful with escaped newlines preceded by\n    // escaped backslashes; also, this should be faster.\n\n    let str = '';\n\n    for (let i = start + 1; i < end - 1; ++i) {\n      const ch = src[i];\n\n      if (ch === '\\n') {\n        if (PlainValue.Node.atDocumentBoundary(src, i + 1)) errors.push(new PlainValue.YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n        const {\n          fold,\n          offset,\n          error\n        } = PlainValue.Node.foldNewline(src, i, indent);\n        str += fold;\n        i = offset;\n        if (error) errors.push(new PlainValue.YAMLSemanticError(this, 'Multi-line double-quoted string needs to be sufficiently indented'));\n      } else if (ch === '\\\\') {\n        i += 1;\n\n        switch (src[i]) {\n          case '0':\n            str += '\\0';\n            break;\n          // null character\n\n          case 'a':\n            str += '\\x07';\n            break;\n          // bell character\n\n          case 'b':\n            str += '\\b';\n            break;\n          // backspace\n\n          case 'e':\n            str += '\\x1b';\n            break;\n          // escape character\n\n          case 'f':\n            str += '\\f';\n            break;\n          // form feed\n\n          case 'n':\n            str += '\\n';\n            break;\n          // line feed\n\n          case 'r':\n            str += '\\r';\n            break;\n          // carriage return\n\n          case 't':\n            str += '\\t';\n            break;\n          // horizontal tab\n\n          case 'v':\n            str += '\\v';\n            break;\n          // vertical tab\n\n          case 'N':\n            str += '\\u0085';\n            break;\n          // Unicode next line\n\n          case '_':\n            str += '\\u00a0';\n            break;\n          // Unicode non-breaking space\n\n          case 'L':\n            str += '\\u2028';\n            break;\n          // Unicode line separator\n\n          case 'P':\n            str += '\\u2029';\n            break;\n          // Unicode paragraph separator\n\n          case ' ':\n            str += ' ';\n            break;\n\n          case '\"':\n            str += '\"';\n            break;\n\n          case '/':\n            str += '/';\n            break;\n\n          case '\\\\':\n            str += '\\\\';\n            break;\n\n          case '\\t':\n            str += '\\t';\n            break;\n\n          case 'x':\n            str += this.parseCharCode(i + 1, 2, errors);\n            i += 2;\n            break;\n\n          case 'u':\n            str += this.parseCharCode(i + 1, 4, errors);\n            i += 4;\n            break;\n\n          case 'U':\n            str += this.parseCharCode(i + 1, 8, errors);\n            i += 8;\n            break;\n\n          case '\\n':\n            // skip escaped newlines, but still trim the following line\n            while (src[i + 1] === ' ' || src[i + 1] === '\\t') i += 1;\n\n            break;\n\n          default:\n            errors.push(new PlainValue.YAMLSyntaxError(this, `Invalid escape sequence ${src.substr(i - 1, 2)}`));\n            str += '\\\\' + src[i];\n        }\n      } else if (ch === ' ' || ch === '\\t') {\n        // trim trailing whitespace\n        const wsStart = i;\n        let next = src[i + 1];\n\n        while (next === ' ' || next === '\\t') {\n          i += 1;\n          next = src[i + 1];\n        }\n\n        if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n      } else {\n        str += ch;\n      }\n    }\n\n    return errors.length > 0 ? {\n      errors,\n      str\n    } : str;\n  }\n\n  parseCharCode(offset, length, errors) {\n    const {\n      src\n    } = this.context;\n    const cc = src.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n\n    if (isNaN(code)) {\n      errors.push(new PlainValue.YAMLSyntaxError(this, `Invalid escape sequence ${src.substr(offset - 2, length + 2)}`));\n      return src.substr(offset - 2, length + 2);\n    }\n\n    return String.fromCodePoint(code);\n  }\n  /**\n   * Parses a \"double quoted\" value from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    const {\n      src\n    } = context;\n    let offset = QuoteDouble.endOfQuote(src, start + 1);\n    this.valueRange = new PlainValue.Range(start, offset);\n    offset = PlainValue.Node.endOfWhiteSpace(src, offset);\n    offset = this.parseComment(offset);\n    return offset;\n  }\n\n}\n\nclass QuoteSingle extends PlainValue.Node {\n  static endOfQuote(src, offset) {\n    let ch = src[offset];\n\n    while (ch) {\n      if (ch === \"'\") {\n        if (src[offset + 1] !== \"'\") break;\n        ch = src[offset += 2];\n      } else {\n        ch = src[offset += 1];\n      }\n    }\n\n    return offset + 1;\n  }\n  /**\n   * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n   */\n\n\n  get strValue() {\n    if (!this.valueRange || !this.context) return null;\n    const errors = [];\n    const {\n      start,\n      end\n    } = this.valueRange;\n    const {\n      indent,\n      src\n    } = this.context;\n    if (src[end - 1] !== \"'\") errors.push(new PlainValue.YAMLSyntaxError(this, \"Missing closing 'quote\"));\n    let str = '';\n\n    for (let i = start + 1; i < end - 1; ++i) {\n      const ch = src[i];\n\n      if (ch === '\\n') {\n        if (PlainValue.Node.atDocumentBoundary(src, i + 1)) errors.push(new PlainValue.YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n        const {\n          fold,\n          offset,\n          error\n        } = PlainValue.Node.foldNewline(src, i, indent);\n        str += fold;\n        i = offset;\n        if (error) errors.push(new PlainValue.YAMLSemanticError(this, 'Multi-line single-quoted string needs to be sufficiently indented'));\n      } else if (ch === \"'\") {\n        str += ch;\n        i += 1;\n        if (src[i] !== \"'\") errors.push(new PlainValue.YAMLSyntaxError(this, 'Unescaped single quote? This should not happen.'));\n      } else if (ch === ' ' || ch === '\\t') {\n        // trim trailing whitespace\n        const wsStart = i;\n        let next = src[i + 1];\n\n        while (next === ' ' || next === '\\t') {\n          i += 1;\n          next = src[i + 1];\n        }\n\n        if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n      } else {\n        str += ch;\n      }\n    }\n\n    return errors.length > 0 ? {\n      errors,\n      str\n    } : str;\n  }\n  /**\n   * Parses a 'single quoted' value from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar\n   */\n\n\n  parse(context, start) {\n    this.context = context;\n    const {\n      src\n    } = context;\n    let offset = QuoteSingle.endOfQuote(src, start + 1);\n    this.valueRange = new PlainValue.Range(start, offset);\n    offset = PlainValue.Node.endOfWhiteSpace(src, offset);\n    offset = this.parseComment(offset);\n    return offset;\n  }\n\n}\n\nfunction createNewNode(type, props) {\n  switch (type) {\n    case PlainValue.Type.ALIAS:\n      return new Alias(type, props);\n\n    case PlainValue.Type.BLOCK_FOLDED:\n    case PlainValue.Type.BLOCK_LITERAL:\n      return new BlockValue(type, props);\n\n    case PlainValue.Type.FLOW_MAP:\n    case PlainValue.Type.FLOW_SEQ:\n      return new FlowCollection(type, props);\n\n    case PlainValue.Type.MAP_KEY:\n    case PlainValue.Type.MAP_VALUE:\n    case PlainValue.Type.SEQ_ITEM:\n      return new CollectionItem(type, props);\n\n    case PlainValue.Type.COMMENT:\n    case PlainValue.Type.PLAIN:\n      return new PlainValue.PlainValue(type, props);\n\n    case PlainValue.Type.QUOTE_DOUBLE:\n      return new QuoteDouble(type, props);\n\n    case PlainValue.Type.QUOTE_SINGLE:\n      return new QuoteSingle(type, props);\n\n    /* istanbul ignore next */\n\n    default:\n      return null;\n    // should never happen\n  }\n}\n/**\n * @param {boolean} atLineStart - Node starts at beginning of line\n * @param {boolean} inFlow - true if currently in a flow context\n * @param {boolean} inCollection - true if currently in a collection context\n * @param {number} indent - Current level of indentation\n * @param {number} lineStart - Start of the current line\n * @param {Node} parent - The parent of the node\n * @param {string} src - Source of the YAML document\n */\n\n\nclass ParseContext {\n  static parseType(src, offset, inFlow) {\n    switch (src[offset]) {\n      case '*':\n        return PlainValue.Type.ALIAS;\n\n      case '>':\n        return PlainValue.Type.BLOCK_FOLDED;\n\n      case '|':\n        return PlainValue.Type.BLOCK_LITERAL;\n\n      case '{':\n        return PlainValue.Type.FLOW_MAP;\n\n      case '[':\n        return PlainValue.Type.FLOW_SEQ;\n\n      case '?':\n        return !inFlow && PlainValue.Node.atBlank(src, offset + 1, true) ? PlainValue.Type.MAP_KEY : PlainValue.Type.PLAIN;\n\n      case ':':\n        return !inFlow && PlainValue.Node.atBlank(src, offset + 1, true) ? PlainValue.Type.MAP_VALUE : PlainValue.Type.PLAIN;\n\n      case '-':\n        return !inFlow && PlainValue.Node.atBlank(src, offset + 1, true) ? PlainValue.Type.SEQ_ITEM : PlainValue.Type.PLAIN;\n\n      case '\"':\n        return PlainValue.Type.QUOTE_DOUBLE;\n\n      case \"'\":\n        return PlainValue.Type.QUOTE_SINGLE;\n\n      default:\n        return PlainValue.Type.PLAIN;\n    }\n  }\n\n  constructor(orig = {}, {\n    atLineStart,\n    inCollection,\n    inFlow,\n    indent,\n    lineStart,\n    parent\n  } = {}) {\n    PlainValue._defineProperty(this, \"parseNode\", (overlay, start) => {\n      if (PlainValue.Node.atDocumentBoundary(this.src, start)) return null;\n      const context = new ParseContext(this, overlay);\n      const {\n        props,\n        type,\n        valueStart\n      } = context.parseProps(start);\n      const node = createNewNode(type, props);\n      let offset = node.parse(context, valueStart);\n      node.range = new PlainValue.Range(start, offset);\n      /* istanbul ignore if */\n\n      if (offset <= start) {\n        // This should never happen, but if it does, let's make sure to at least\n        // step one character forward to avoid a busy loop.\n        node.error = new Error(`Node#parse consumed no characters`);\n        node.error.parseEnd = offset;\n        node.error.source = node;\n        node.range.end = start + 1;\n      }\n\n      if (context.nodeStartsCollection(node)) {\n        if (!node.error && !context.atLineStart && context.parent.type === PlainValue.Type.DOCUMENT) {\n          node.error = new PlainValue.YAMLSyntaxError(node, 'Block collection must not have preceding content here (e.g. directives-end indicator)');\n        }\n\n        const collection = new Collection(node);\n        offset = collection.parse(new ParseContext(context), offset);\n        collection.range = new PlainValue.Range(start, offset);\n        return collection;\n      }\n\n      return node;\n    });\n\n    this.atLineStart = atLineStart != null ? atLineStart : orig.atLineStart || false;\n    this.inCollection = inCollection != null ? inCollection : orig.inCollection || false;\n    this.inFlow = inFlow != null ? inFlow : orig.inFlow || false;\n    this.indent = indent != null ? indent : orig.indent;\n    this.lineStart = lineStart != null ? lineStart : orig.lineStart;\n    this.parent = parent != null ? parent : orig.parent || {};\n    this.root = orig.root;\n    this.src = orig.src;\n  }\n\n  nodeStartsCollection(node) {\n    const {\n      inCollection,\n      inFlow,\n      src\n    } = this;\n    if (inCollection || inFlow) return false;\n    if (node instanceof CollectionItem) return true; // check for implicit key\n\n    let offset = node.range.end;\n    if (src[offset] === '\\n' || src[offset - 1] === '\\n') return false;\n    offset = PlainValue.Node.endOfWhiteSpace(src, offset);\n    return src[offset] === ':';\n  } // Anchor and tag are before type, which determines the node implementation\n  // class; hence this intermediate step.\n\n\n  parseProps(offset) {\n    const {\n      inFlow,\n      parent,\n      src\n    } = this;\n    const props = [];\n    let lineHasProps = false;\n    offset = this.atLineStart ? PlainValue.Node.endOfIndent(src, offset) : PlainValue.Node.endOfWhiteSpace(src, offset);\n    let ch = src[offset];\n\n    while (ch === PlainValue.Char.ANCHOR || ch === PlainValue.Char.COMMENT || ch === PlainValue.Char.TAG || ch === '\\n') {\n      if (ch === '\\n') {\n        let inEnd = offset;\n        let lineStart;\n\n        do {\n          lineStart = inEnd + 1;\n          inEnd = PlainValue.Node.endOfIndent(src, lineStart);\n        } while (src[inEnd] === '\\n');\n\n        const indentDiff = inEnd - (lineStart + this.indent);\n        const noIndicatorAsIndent = parent.type === PlainValue.Type.SEQ_ITEM && parent.context.atLineStart;\n        if (src[inEnd] !== '#' && !PlainValue.Node.nextNodeIsIndented(src[inEnd], indentDiff, !noIndicatorAsIndent)) break;\n        this.atLineStart = true;\n        this.lineStart = lineStart;\n        lineHasProps = false;\n        offset = inEnd;\n      } else if (ch === PlainValue.Char.COMMENT) {\n        const end = PlainValue.Node.endOfLine(src, offset + 1);\n        props.push(new PlainValue.Range(offset, end));\n        offset = end;\n      } else {\n        let end = PlainValue.Node.endOfIdentifier(src, offset + 1);\n\n        if (ch === PlainValue.Char.TAG && src[end] === ',' && /^[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+,\\d\\d\\d\\d(-\\d\\d){0,2}\\/\\S/.test(src.slice(offset + 1, end + 13))) {\n          // Let's presume we're dealing with a YAML 1.0 domain tag here, rather\n          // than an empty but 'foo.bar' private-tagged node in a flow collection\n          // followed without whitespace by a plain string starting with a year\n          // or date divided by something.\n          end = PlainValue.Node.endOfIdentifier(src, end + 5);\n        }\n\n        props.push(new PlainValue.Range(offset, end));\n        lineHasProps = true;\n        offset = PlainValue.Node.endOfWhiteSpace(src, end);\n      }\n\n      ch = src[offset];\n    } // '- &a : b' has an anchor on an empty node\n\n\n    if (lineHasProps && ch === ':' && PlainValue.Node.atBlank(src, offset + 1, true)) offset -= 1;\n    const type = ParseContext.parseType(src, offset, inFlow);\n    return {\n      props,\n      type,\n      valueStart: offset\n    };\n  }\n  /**\n   * Parses a node from the source\n   * @param {ParseContext} overlay\n   * @param {number} start - Index of first non-whitespace character for the node\n   * @returns {?Node} - null if at a document boundary\n   */\n\n\n}\n\n// Published as 'yaml/parse-cst'\nfunction parse(src) {\n  const cr = [];\n\n  if (src.indexOf('\\r') !== -1) {\n    src = src.replace(/\\r\\n?/g, (match, offset) => {\n      if (match.length > 1) cr.push(offset);\n      return '\\n';\n    });\n  }\n\n  const documents = [];\n  let offset = 0;\n\n  do {\n    const doc = new Document();\n    const context = new ParseContext({\n      src\n    });\n    offset = doc.parse(context, offset);\n    documents.push(doc);\n  } while (offset < src.length);\n\n  documents.setOrigRanges = () => {\n    if (cr.length === 0) return false;\n\n    for (let i = 1; i < cr.length; ++i) cr[i] -= i;\n\n    let crOffset = 0;\n\n    for (let i = 0; i < documents.length; ++i) {\n      crOffset = documents[i].setOrigRanges(cr, crOffset);\n    }\n\n    cr.splice(0, cr.length);\n    return true;\n  };\n\n  documents.toString = () => documents.join('...\\n');\n\n  return documents;\n}\n\nexports.parse = parse;\n","'use strict';\n\nvar PlainValue = require('./PlainValue-ec8e588e.js');\n\nfunction addCommentBefore(str, indent, comment) {\n  if (!comment) return str;\n  const cc = comment.replace(/[\\s\\S]^/gm, `$&${indent}#`);\n  return `#${cc}\\n${indent}${str}`;\n}\nfunction addComment(str, indent, comment) {\n  return !comment ? str : comment.indexOf('\\n') === -1 ? `${str} #${comment}` : `${str}\\n` + comment.replace(/^/gm, `${indent || ''}#`);\n}\n\nclass Node {}\n\nfunction toJSON(value, arg, ctx) {\n  if (Array.isArray(value)) return value.map((v, i) => toJSON(v, String(i), ctx));\n\n  if (value && typeof value.toJSON === 'function') {\n    const anchor = ctx && ctx.anchors && ctx.anchors.get(value);\n    if (anchor) ctx.onCreate = res => {\n      anchor.res = res;\n      delete ctx.onCreate;\n    };\n    const res = value.toJSON(arg, ctx);\n    if (anchor && ctx.onCreate) ctx.onCreate(res);\n    return res;\n  }\n\n  if ((!ctx || !ctx.keep) && typeof value === 'bigint') return Number(value);\n  return value;\n}\n\nclass Scalar extends Node {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  toJSON(arg, ctx) {\n    return ctx && ctx.keep ? this.value : toJSON(this.value, arg, ctx);\n  }\n\n  toString() {\n    return String(this.value);\n  }\n\n}\n\nfunction collectionFromPath(schema, path, value) {\n  let v = value;\n\n  for (let i = path.length - 1; i >= 0; --i) {\n    const k = path[i];\n\n    if (Number.isInteger(k) && k >= 0) {\n      const a = [];\n      a[k] = v;\n      v = a;\n    } else {\n      const o = {};\n      Object.defineProperty(o, k, {\n        value: v,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });\n      v = o;\n    }\n  }\n\n  return schema.createNode(v, false);\n} // null, undefined, or an empty non-string iterable (e.g. [])\n\n\nconst isEmptyPath = path => path == null || typeof path === 'object' && path[Symbol.iterator]().next().done;\nclass Collection extends Node {\n  constructor(schema) {\n    super();\n\n    PlainValue._defineProperty(this, \"items\", []);\n\n    this.schema = schema;\n  }\n\n  addIn(path, value) {\n    if (isEmptyPath(path)) this.add(value);else {\n      const [key, ...rest] = path;\n      const node = this.get(key, true);\n      if (node instanceof Collection) node.addIn(rest, value);else if (node === undefined && this.schema) this.set(key, collectionFromPath(this.schema, rest, value));else throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n  }\n\n  deleteIn([key, ...rest]) {\n    if (rest.length === 0) return this.delete(key);\n    const node = this.get(key, true);\n    if (node instanceof Collection) return node.deleteIn(rest);else throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n  }\n\n  getIn([key, ...rest], keepScalar) {\n    const node = this.get(key, true);\n    if (rest.length === 0) return !keepScalar && node instanceof Scalar ? node.value : node;else return node instanceof Collection ? node.getIn(rest, keepScalar) : undefined;\n  }\n\n  hasAllNullValues() {\n    return this.items.every(node => {\n      if (!node || node.type !== 'PAIR') return false;\n      const n = node.value;\n      return n == null || n instanceof Scalar && n.value == null && !n.commentBefore && !n.comment && !n.tag;\n    });\n  }\n\n  hasIn([key, ...rest]) {\n    if (rest.length === 0) return this.has(key);\n    const node = this.get(key, true);\n    return node instanceof Collection ? node.hasIn(rest) : false;\n  }\n\n  setIn([key, ...rest], value) {\n    if (rest.length === 0) {\n      this.set(key, value);\n    } else {\n      const node = this.get(key, true);\n      if (node instanceof Collection) node.setIn(rest, value);else if (node === undefined && this.schema) this.set(key, collectionFromPath(this.schema, rest, value));else throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n  } // overridden in implementations\n\n  /* istanbul ignore next */\n\n\n  toJSON() {\n    return null;\n  }\n\n  toString(ctx, {\n    blockItem,\n    flowChars,\n    isMap,\n    itemIndent\n  }, onComment, onChompKeep) {\n    const {\n      indent,\n      indentStep,\n      stringify\n    } = ctx;\n    const inFlow = this.type === PlainValue.Type.FLOW_MAP || this.type === PlainValue.Type.FLOW_SEQ || ctx.inFlow;\n    if (inFlow) itemIndent += indentStep;\n    const allNullValues = isMap && this.hasAllNullValues();\n    ctx = Object.assign({}, ctx, {\n      allNullValues,\n      indent: itemIndent,\n      inFlow,\n      type: null\n    });\n    let chompKeep = false;\n    let hasItemWithNewLine = false;\n    const nodes = this.items.reduce((nodes, item, i) => {\n      let comment;\n\n      if (item) {\n        if (!chompKeep && item.spaceBefore) nodes.push({\n          type: 'comment',\n          str: ''\n        });\n        if (item.commentBefore) item.commentBefore.match(/^.*$/gm).forEach(line => {\n          nodes.push({\n            type: 'comment',\n            str: `#${line}`\n          });\n        });\n        if (item.comment) comment = item.comment;\n        if (inFlow && (!chompKeep && item.spaceBefore || item.commentBefore || item.comment || item.key && (item.key.commentBefore || item.key.comment) || item.value && (item.value.commentBefore || item.value.comment))) hasItemWithNewLine = true;\n      }\n\n      chompKeep = false;\n      let str = stringify(item, ctx, () => comment = null, () => chompKeep = true);\n      if (inFlow && !hasItemWithNewLine && str.includes('\\n')) hasItemWithNewLine = true;\n      if (inFlow && i < this.items.length - 1) str += ',';\n      str = addComment(str, itemIndent, comment);\n      if (chompKeep && (comment || inFlow)) chompKeep = false;\n      nodes.push({\n        type: 'item',\n        str\n      });\n      return nodes;\n    }, []);\n    let str;\n\n    if (nodes.length === 0) {\n      str = flowChars.start + flowChars.end;\n    } else if (inFlow) {\n      const {\n        start,\n        end\n      } = flowChars;\n      const strings = nodes.map(n => n.str);\n\n      if (hasItemWithNewLine || strings.reduce((sum, str) => sum + str.length + 2, 2) > Collection.maxFlowStringSingleLineLength) {\n        str = start;\n\n        for (const s of strings) {\n          str += s ? `\\n${indentStep}${indent}${s}` : '\\n';\n        }\n\n        str += `\\n${indent}${end}`;\n      } else {\n        str = `${start} ${strings.join(' ')} ${end}`;\n      }\n    } else {\n      const strings = nodes.map(blockItem);\n      str = strings.shift();\n\n      for (const s of strings) str += s ? `\\n${indent}${s}` : '\\n';\n    }\n\n    if (this.comment) {\n      str += '\\n' + this.comment.replace(/^/gm, `${indent}#`);\n      if (onComment) onComment();\n    } else if (chompKeep && onChompKeep) onChompKeep();\n\n    return str;\n  }\n\n}\n\nPlainValue._defineProperty(Collection, \"maxFlowStringSingleLineLength\", 60);\n\nfunction asItemIndex(key) {\n  let idx = key instanceof Scalar ? key.value : key;\n  if (idx && typeof idx === 'string') idx = Number(idx);\n  return Number.isInteger(idx) && idx >= 0 ? idx : null;\n}\n\nclass YAMLSeq extends Collection {\n  add(value) {\n    this.items.push(value);\n  }\n\n  delete(key) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') return false;\n    const del = this.items.splice(idx, 1);\n    return del.length > 0;\n  }\n\n  get(key, keepScalar) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') return undefined;\n    const it = this.items[idx];\n    return !keepScalar && it instanceof Scalar ? it.value : it;\n  }\n\n  has(key) {\n    const idx = asItemIndex(key);\n    return typeof idx === 'number' && idx < this.items.length;\n  }\n\n  set(key, value) {\n    const idx = asItemIndex(key);\n    if (typeof idx !== 'number') throw new Error(`Expected a valid index, not ${key}.`);\n    this.items[idx] = value;\n  }\n\n  toJSON(_, ctx) {\n    const seq = [];\n    if (ctx && ctx.onCreate) ctx.onCreate(seq);\n    let i = 0;\n\n    for (const item of this.items) seq.push(toJSON(item, String(i++), ctx));\n\n    return seq;\n  }\n\n  toString(ctx, onComment, onChompKeep) {\n    if (!ctx) return JSON.stringify(this);\n    return super.toString(ctx, {\n      blockItem: n => n.type === 'comment' ? n.str : `- ${n.str}`,\n      flowChars: {\n        start: '[',\n        end: ']'\n      },\n      isMap: false,\n      itemIndent: (ctx.indent || '') + '  '\n    }, onComment, onChompKeep);\n  }\n\n}\n\nconst stringifyKey = (key, jsKey, ctx) => {\n  if (jsKey === null) return '';\n  if (typeof jsKey !== 'object') return String(jsKey);\n  if (key instanceof Node && ctx && ctx.doc) return key.toString({\n    anchors: Object.create(null),\n    doc: ctx.doc,\n    indent: '',\n    indentStep: ctx.indentStep,\n    inFlow: true,\n    inStringifyKey: true,\n    stringify: ctx.stringify\n  });\n  return JSON.stringify(jsKey);\n};\n\nclass Pair extends Node {\n  constructor(key, value = null) {\n    super();\n    this.key = key;\n    this.value = value;\n    this.type = Pair.Type.PAIR;\n  }\n\n  get commentBefore() {\n    return this.key instanceof Node ? this.key.commentBefore : undefined;\n  }\n\n  set commentBefore(cb) {\n    if (this.key == null) this.key = new Scalar(null);\n    if (this.key instanceof Node) this.key.commentBefore = cb;else {\n      const msg = 'Pair.commentBefore is an alias for Pair.key.commentBefore. To set it, the key must be a Node.';\n      throw new Error(msg);\n    }\n  }\n\n  addToJSMap(ctx, map) {\n    const key = toJSON(this.key, '', ctx);\n\n    if (map instanceof Map) {\n      const value = toJSON(this.value, key, ctx);\n      map.set(key, value);\n    } else if (map instanceof Set) {\n      map.add(key);\n    } else {\n      const stringKey = stringifyKey(this.key, key, ctx);\n      const value = toJSON(this.value, stringKey, ctx);\n      if (stringKey in map) Object.defineProperty(map, stringKey, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });else map[stringKey] = value;\n    }\n\n    return map;\n  }\n\n  toJSON(_, ctx) {\n    const pair = ctx && ctx.mapAsMap ? new Map() : {};\n    return this.addToJSMap(ctx, pair);\n  }\n\n  toString(ctx, onComment, onChompKeep) {\n    if (!ctx || !ctx.doc) return JSON.stringify(this);\n    const {\n      indent: indentSize,\n      indentSeq,\n      simpleKeys\n    } = ctx.doc.options;\n    let {\n      key,\n      value\n    } = this;\n    let keyComment = key instanceof Node && key.comment;\n\n    if (simpleKeys) {\n      if (keyComment) {\n        throw new Error('With simple keys, key nodes cannot have comments');\n      }\n\n      if (key instanceof Collection) {\n        const msg = 'With simple keys, collection cannot be used as a key value';\n        throw new Error(msg);\n      }\n    }\n\n    let explicitKey = !simpleKeys && (!key || keyComment || (key instanceof Node ? key instanceof Collection || key.type === PlainValue.Type.BLOCK_FOLDED || key.type === PlainValue.Type.BLOCK_LITERAL : typeof key === 'object'));\n    const {\n      doc,\n      indent,\n      indentStep,\n      stringify\n    } = ctx;\n    ctx = Object.assign({}, ctx, {\n      implicitKey: !explicitKey,\n      indent: indent + indentStep\n    });\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => keyComment = null, () => chompKeep = true);\n    str = addComment(str, ctx.indent, keyComment);\n\n    if (!explicitKey && str.length > 1024) {\n      if (simpleKeys) throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n      explicitKey = true;\n    }\n\n    if (ctx.allNullValues && !simpleKeys) {\n      if (this.comment) {\n        str = addComment(str, ctx.indent, this.comment);\n        if (onComment) onComment();\n      } else if (chompKeep && !keyComment && onChompKeep) onChompKeep();\n\n      return ctx.inFlow && !explicitKey ? str : `? ${str}`;\n    }\n\n    str = explicitKey ? `? ${str}\\n${indent}:` : `${str}:`;\n\n    if (this.comment) {\n      // expected (but not strictly required) to be a single-line comment\n      str = addComment(str, ctx.indent, this.comment);\n      if (onComment) onComment();\n    }\n\n    let vcb = '';\n    let valueComment = null;\n\n    if (value instanceof Node) {\n      if (value.spaceBefore) vcb = '\\n';\n\n      if (value.commentBefore) {\n        const cs = value.commentBefore.replace(/^/gm, `${ctx.indent}#`);\n        vcb += `\\n${cs}`;\n      }\n\n      valueComment = value.comment;\n    } else if (value && typeof value === 'object') {\n      value = doc.schema.createNode(value, true);\n    }\n\n    ctx.implicitKey = false;\n    if (!explicitKey && !this.comment && value instanceof Scalar) ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n\n    if (!indentSeq && indentSize >= 2 && !ctx.inFlow && !explicitKey && value instanceof YAMLSeq && value.type !== PlainValue.Type.FLOW_SEQ && !value.tag && !doc.anchors.getName(value)) {\n      // If indentSeq === false, consider '- ' as part of indentation where possible\n      ctx.indent = ctx.indent.substr(2);\n    }\n\n    const valueStr = stringify(value, ctx, () => valueComment = null, () => chompKeep = true);\n    let ws = ' ';\n\n    if (vcb || this.comment) {\n      ws = `${vcb}\\n${ctx.indent}`;\n    } else if (!explicitKey && value instanceof Collection) {\n      const flow = valueStr[0] === '[' || valueStr[0] === '{';\n      if (!flow || valueStr.includes('\\n')) ws = `\\n${ctx.indent}`;\n    } else if (valueStr[0] === '\\n') ws = '';\n\n    if (chompKeep && !valueComment && onChompKeep) onChompKeep();\n    return addComment(str + ws + valueStr, ctx.indent, valueComment);\n  }\n\n}\n\nPlainValue._defineProperty(Pair, \"Type\", {\n  PAIR: 'PAIR',\n  MERGE_PAIR: 'MERGE_PAIR'\n});\n\nconst getAliasCount = (node, anchors) => {\n  if (node instanceof Alias) {\n    const anchor = anchors.get(node.source);\n    return anchor.count * anchor.aliasCount;\n  } else if (node instanceof Collection) {\n    let count = 0;\n\n    for (const item of node.items) {\n      const c = getAliasCount(item, anchors);\n      if (c > count) count = c;\n    }\n\n    return count;\n  } else if (node instanceof Pair) {\n    const kc = getAliasCount(node.key, anchors);\n    const vc = getAliasCount(node.value, anchors);\n    return Math.max(kc, vc);\n  }\n\n  return 1;\n};\n\nclass Alias extends Node {\n  static stringify({\n    range,\n    source\n  }, {\n    anchors,\n    doc,\n    implicitKey,\n    inStringifyKey\n  }) {\n    let anchor = Object.keys(anchors).find(a => anchors[a] === source);\n    if (!anchor && inStringifyKey) anchor = doc.anchors.getName(source) || doc.anchors.newName();\n    if (anchor) return `*${anchor}${implicitKey ? ' ' : ''}`;\n    const msg = doc.anchors.getName(source) ? 'Alias node must be after source node' : 'Source node not found for alias node';\n    throw new Error(`${msg} [${range}]`);\n  }\n\n  constructor(source) {\n    super();\n    this.source = source;\n    this.type = PlainValue.Type.ALIAS;\n  }\n\n  set tag(t) {\n    throw new Error('Alias nodes cannot have tags');\n  }\n\n  toJSON(arg, ctx) {\n    if (!ctx) return toJSON(this.source, arg, ctx);\n    const {\n      anchors,\n      maxAliasCount\n    } = ctx;\n    const anchor = anchors.get(this.source);\n    /* istanbul ignore if */\n\n    if (!anchor || anchor.res === undefined) {\n      const msg = 'This should not happen: Alias anchor was not resolved?';\n      if (this.cstNode) throw new PlainValue.YAMLReferenceError(this.cstNode, msg);else throw new ReferenceError(msg);\n    }\n\n    if (maxAliasCount >= 0) {\n      anchor.count += 1;\n      if (anchor.aliasCount === 0) anchor.aliasCount = getAliasCount(this.source, anchors);\n\n      if (anchor.count * anchor.aliasCount > maxAliasCount) {\n        const msg = 'Excessive alias count indicates a resource exhaustion attack';\n        if (this.cstNode) throw new PlainValue.YAMLReferenceError(this.cstNode, msg);else throw new ReferenceError(msg);\n      }\n    }\n\n    return anchor.res;\n  } // Only called when stringifying an alias mapping key while constructing\n  // Object output.\n\n\n  toString(ctx) {\n    return Alias.stringify(this, ctx);\n  }\n\n}\n\nPlainValue._defineProperty(Alias, \"default\", true);\n\nfunction findPair(items, key) {\n  const k = key instanceof Scalar ? key.value : key;\n\n  for (const it of items) {\n    if (it instanceof Pair) {\n      if (it.key === key || it.key === k) return it;\n      if (it.key && it.key.value === k) return it;\n    }\n  }\n\n  return undefined;\n}\nclass YAMLMap extends Collection {\n  add(pair, overwrite) {\n    if (!pair) pair = new Pair(pair);else if (!(pair instanceof Pair)) pair = new Pair(pair.key || pair, pair.value);\n    const prev = findPair(this.items, pair.key);\n    const sortEntries = this.schema && this.schema.sortMapEntries;\n\n    if (prev) {\n      if (overwrite) prev.value = pair.value;else throw new Error(`Key ${pair.key} already set`);\n    } else if (sortEntries) {\n      const i = this.items.findIndex(item => sortEntries(pair, item) < 0);\n      if (i === -1) this.items.push(pair);else this.items.splice(i, 0, pair);\n    } else {\n      this.items.push(pair);\n    }\n  }\n\n  delete(key) {\n    const it = findPair(this.items, key);\n    if (!it) return false;\n    const del = this.items.splice(this.items.indexOf(it), 1);\n    return del.length > 0;\n  }\n\n  get(key, keepScalar) {\n    const it = findPair(this.items, key);\n    const node = it && it.value;\n    return !keepScalar && node instanceof Scalar ? node.value : node;\n  }\n\n  has(key) {\n    return !!findPair(this.items, key);\n  }\n\n  set(key, value) {\n    this.add(new Pair(key, value), true);\n  }\n  /**\n   * @param {*} arg ignored\n   * @param {*} ctx Conversion context, originally set in Document#toJSON()\n   * @param {Class} Type If set, forces the returned collection type\n   * @returns {*} Instance of Type, Map, or Object\n   */\n\n\n  toJSON(_, ctx, Type) {\n    const map = Type ? new Type() : ctx && ctx.mapAsMap ? new Map() : {};\n    if (ctx && ctx.onCreate) ctx.onCreate(map);\n\n    for (const item of this.items) item.addToJSMap(ctx, map);\n\n    return map;\n  }\n\n  toString(ctx, onComment, onChompKeep) {\n    if (!ctx) return JSON.stringify(this);\n\n    for (const item of this.items) {\n      if (!(item instanceof Pair)) throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n    }\n\n    return super.toString(ctx, {\n      blockItem: n => n.str,\n      flowChars: {\n        start: '{',\n        end: '}'\n      },\n      isMap: true,\n      itemIndent: ctx.indent || ''\n    }, onComment, onChompKeep);\n  }\n\n}\n\nconst MERGE_KEY = '<<';\nclass Merge extends Pair {\n  constructor(pair) {\n    if (pair instanceof Pair) {\n      let seq = pair.value;\n\n      if (!(seq instanceof YAMLSeq)) {\n        seq = new YAMLSeq();\n        seq.items.push(pair.value);\n        seq.range = pair.value.range;\n      }\n\n      super(pair.key, seq);\n      this.range = pair.range;\n    } else {\n      super(new Scalar(MERGE_KEY), new YAMLSeq());\n    }\n\n    this.type = Pair.Type.MERGE_PAIR;\n  } // If the value associated with a merge key is a single mapping node, each of\n  // its key/value pairs is inserted into the current mapping, unless the key\n  // already exists in it. If the value associated with the merge key is a\n  // sequence, then this sequence is expected to contain mapping nodes and each\n  // of these nodes is merged in turn according to its order in the sequence.\n  // Keys in mapping nodes earlier in the sequence override keys specified in\n  // later mapping nodes. -- http://yaml.org/type/merge.html\n\n\n  addToJSMap(ctx, map) {\n    for (const {\n      source\n    } of this.value.items) {\n      if (!(source instanceof YAMLMap)) throw new Error('Merge sources must be maps');\n      const srcMap = source.toJSON(null, ctx, Map);\n\n      for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n          if (!map.has(key)) map.set(key, value);\n        } else if (map instanceof Set) {\n          map.add(key);\n        } else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n          Object.defineProperty(map, key, {\n            value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        }\n      }\n    }\n\n    return map;\n  }\n\n  toString(ctx, onComment) {\n    const seq = this.value;\n    if (seq.items.length > 1) return super.toString(ctx, onComment);\n    this.value = seq.items[0];\n    const str = super.toString(ctx, onComment);\n    this.value = seq;\n    return str;\n  }\n\n}\n\nconst binaryOptions = {\n  defaultType: PlainValue.Type.BLOCK_LITERAL,\n  lineWidth: 76\n};\nconst boolOptions = {\n  trueStr: 'true',\n  falseStr: 'false'\n};\nconst intOptions = {\n  asBigInt: false\n};\nconst nullOptions = {\n  nullStr: 'null'\n};\nconst strOptions = {\n  defaultType: PlainValue.Type.PLAIN,\n  doubleQuoted: {\n    jsonEncoding: false,\n    minMultiLineLength: 40\n  },\n  fold: {\n    lineWidth: 80,\n    minContentWidth: 20\n  }\n};\n\nfunction resolveScalar(str, tags, scalarFallback) {\n  for (const {\n    format,\n    test,\n    resolve\n  } of tags) {\n    if (test) {\n      const match = str.match(test);\n\n      if (match) {\n        let res = resolve.apply(null, match);\n        if (!(res instanceof Scalar)) res = new Scalar(res);\n        if (format) res.format = format;\n        return res;\n      }\n    }\n  }\n\n  if (scalarFallback) str = scalarFallback(str);\n  return new Scalar(str);\n}\n\nconst FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted'; // presumes i+1 is at the start of a line\n// returns index of last newline in more-indented block\n\nconst consumeMoreIndentedLines = (text, i) => {\n  let ch = text[i + 1];\n\n  while (ch === ' ' || ch === '\\t') {\n    do {\n      ch = text[i += 1];\n    } while (ch && ch !== '\\n');\n\n    ch = text[i + 1];\n  }\n\n  return i;\n};\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n *\n * @param {string} text\n * @param {string} indent\n * @param {string} [mode='flow'] `'block'` prevents more-indented lines\n *   from being folded; `'quoted'` allows for `\\` escapes, including escaped\n *   newlines\n * @param {Object} options\n * @param {number} [options.indentAtStart] Accounts for leading contents on\n *   the first line, defaulting to `indent.length`\n * @param {number} [options.lineWidth=80]\n * @param {number} [options.minContentWidth=20] Allow highly indented lines to\n *   stretch the line width or indent content from the start\n * @param {function} options.onFold Called once if the text is folded\n * @param {function} options.onFold Called once if any line of text exceeds\n *   lineWidth characters\n */\n\n\nfunction foldFlowLines(text, indent, mode, {\n  indentAtStart,\n  lineWidth = 80,\n  minContentWidth = 20,\n  onFold,\n  onOverflow\n}) {\n  if (!lineWidth || lineWidth < 0) return text;\n  const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n  if (text.length <= endStep) return text;\n  const folds = [];\n  const escapedFolds = {};\n  let end = lineWidth - indent.length;\n\n  if (typeof indentAtStart === 'number') {\n    if (indentAtStart > lineWidth - Math.max(2, minContentWidth)) folds.push(0);else end = lineWidth - indentAtStart;\n  }\n\n  let split = undefined;\n  let prev = undefined;\n  let overflow = false;\n  let i = -1;\n  let escStart = -1;\n  let escEnd = -1;\n\n  if (mode === FOLD_BLOCK) {\n    i = consumeMoreIndentedLines(text, i);\n    if (i !== -1) end = i + endStep;\n  }\n\n  for (let ch; ch = text[i += 1];) {\n    if (mode === FOLD_QUOTED && ch === '\\\\') {\n      escStart = i;\n\n      switch (text[i + 1]) {\n        case 'x':\n          i += 3;\n          break;\n\n        case 'u':\n          i += 5;\n          break;\n\n        case 'U':\n          i += 9;\n          break;\n\n        default:\n          i += 1;\n      }\n\n      escEnd = i;\n    }\n\n    if (ch === '\\n') {\n      if (mode === FOLD_BLOCK) i = consumeMoreIndentedLines(text, i);\n      end = i + endStep;\n      split = undefined;\n    } else {\n      if (ch === ' ' && prev && prev !== ' ' && prev !== '\\n' && prev !== '\\t') {\n        // space surrounded by non-space can be replaced with newline + indent\n        const next = text[i + 1];\n        if (next && next !== ' ' && next !== '\\n' && next !== '\\t') split = i;\n      }\n\n      if (i >= end) {\n        if (split) {\n          folds.push(split);\n          end = split + endStep;\n          split = undefined;\n        } else if (mode === FOLD_QUOTED) {\n          // white-space collected at end may stretch past lineWidth\n          while (prev === ' ' || prev === '\\t') {\n            prev = ch;\n            ch = text[i += 1];\n            overflow = true;\n          } // Account for newline escape, but don't break preceding escape\n\n\n          const j = i > escEnd + 1 ? i - 2 : escStart - 1; // Bail out if lineWidth & minContentWidth are shorter than an escape string\n\n          if (escapedFolds[j]) return text;\n          folds.push(j);\n          escapedFolds[j] = true;\n          end = j + endStep;\n          split = undefined;\n        } else {\n          overflow = true;\n        }\n      }\n    }\n\n    prev = ch;\n  }\n\n  if (overflow && onOverflow) onOverflow();\n  if (folds.length === 0) return text;\n  if (onFold) onFold();\n  let res = text.slice(0, folds[0]);\n\n  for (let i = 0; i < folds.length; ++i) {\n    const fold = folds[i];\n    const end = folds[i + 1] || text.length;\n    if (fold === 0) res = `\\n${indent}${text.slice(0, end)}`;else {\n      if (mode === FOLD_QUOTED && escapedFolds[fold]) res += `${text[fold]}\\\\`;\n      res += `\\n${indent}${text.slice(fold + 1, end)}`;\n    }\n  }\n\n  return res;\n}\n\nconst getFoldOptions = ({\n  indentAtStart\n}) => indentAtStart ? Object.assign({\n  indentAtStart\n}, strOptions.fold) : strOptions.fold; // Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\n\n\nconst containsDocumentMarker = str => /^(%|---|\\.\\.\\.)/m.test(str);\n\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n  if (!lineWidth || lineWidth < 0) return false;\n  const limit = lineWidth - indentLength;\n  const strLen = str.length;\n  if (strLen <= limit) return false;\n\n  for (let i = 0, start = 0; i < strLen; ++i) {\n    if (str[i] === '\\n') {\n      if (i - start > limit) return true;\n      start = i + 1;\n      if (strLen - start <= limit) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction doubleQuotedString(value, ctx) {\n  const {\n    implicitKey\n  } = ctx;\n  const {\n    jsonEncoding,\n    minMultiLineLength\n  } = strOptions.doubleQuoted;\n  const json = JSON.stringify(value);\n  if (jsonEncoding) return json;\n  const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n  let str = '';\n  let start = 0;\n\n  for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n    if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n      // space before newline needs to be escaped to not be folded\n      str += json.slice(start, i) + '\\\\ ';\n      i += 1;\n      start = i;\n      ch = '\\\\';\n    }\n\n    if (ch === '\\\\') switch (json[i + 1]) {\n      case 'u':\n        {\n          str += json.slice(start, i);\n          const code = json.substr(i + 2, 4);\n\n          switch (code) {\n            case '0000':\n              str += '\\\\0';\n              break;\n\n            case '0007':\n              str += '\\\\a';\n              break;\n\n            case '000b':\n              str += '\\\\v';\n              break;\n\n            case '001b':\n              str += '\\\\e';\n              break;\n\n            case '0085':\n              str += '\\\\N';\n              break;\n\n            case '00a0':\n              str += '\\\\_';\n              break;\n\n            case '2028':\n              str += '\\\\L';\n              break;\n\n            case '2029':\n              str += '\\\\P';\n              break;\n\n            default:\n              if (code.substr(0, 2) === '00') str += '\\\\x' + code.substr(2);else str += json.substr(i, 6);\n          }\n\n          i += 5;\n          start = i + 1;\n        }\n        break;\n\n      case 'n':\n        if (implicitKey || json[i + 2] === '\"' || json.length < minMultiLineLength) {\n          i += 1;\n        } else {\n          // folding will eat first newline\n          str += json.slice(start, i) + '\\n\\n';\n\n          while (json[i + 2] === '\\\\' && json[i + 3] === 'n' && json[i + 4] !== '\"') {\n            str += '\\n';\n            i += 2;\n          }\n\n          str += indent; // space after newline needs to be escaped to not be folded\n\n          if (json[i + 2] === ' ') str += '\\\\';\n          i += 1;\n          start = i + 1;\n        }\n\n        break;\n\n      default:\n        i += 1;\n    }\n  }\n\n  str = start ? str + json.slice(start) : json;\n  return implicitKey ? str : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\n\nfunction singleQuotedString(value, ctx) {\n  if (ctx.implicitKey) {\n    if (/\\n/.test(value)) return doubleQuotedString(value, ctx);\n  } else {\n    // single quoted string can't have leading or trailing whitespace around newline\n    if (/[ \\t]\\n|\\n[ \\t]/.test(value)) return doubleQuotedString(value, ctx);\n  }\n\n  const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n  const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n  return ctx.implicitKey ? res : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\n\nfunction blockString({\n  comment,\n  type,\n  value\n}, ctx, onComment, onChompKeep) {\n  // 1. Block can't end in whitespace unless the last line is non-empty.\n  // 2. Strings consisting of only whitespace are best rendered explicitly.\n  if (/\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  const indent = ctx.indent || (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n  const indentSize = indent ? '2' : '1'; // root is at -1\n\n  const literal = type === PlainValue.Type.BLOCK_FOLDED ? false : type === PlainValue.Type.BLOCK_LITERAL ? true : !lineLengthOverLimit(value, strOptions.fold.lineWidth, indent.length);\n  let header = literal ? '|' : '>';\n  if (!value) return header + '\\n';\n  let wsStart = '';\n  let wsEnd = '';\n  value = value.replace(/[\\n\\t ]*$/, ws => {\n    const n = ws.indexOf('\\n');\n\n    if (n === -1) {\n      header += '-'; // strip\n    } else if (value === ws || n !== ws.length - 1) {\n      header += '+'; // keep\n\n      if (onChompKeep) onChompKeep();\n    }\n\n    wsEnd = ws.replace(/\\n$/, '');\n    return '';\n  }).replace(/^[\\n ]*/, ws => {\n    if (ws.indexOf(' ') !== -1) header += indentSize;\n    const m = ws.match(/ +$/);\n\n    if (m) {\n      wsStart = ws.slice(0, -m[0].length);\n      return m[0];\n    } else {\n      wsStart = ws;\n      return '';\n    }\n  });\n  if (wsEnd) wsEnd = wsEnd.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n  if (wsStart) wsStart = wsStart.replace(/\\n+/g, `$&${indent}`);\n\n  if (comment) {\n    header += ' #' + comment.replace(/ ?[\\r\\n]+/g, ' ');\n    if (onComment) onComment();\n  }\n\n  if (!value) return `${header}${indentSize}\\n${indent}${wsEnd}`;\n\n  if (literal) {\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `${header}\\n${indent}${wsStart}${value}${wsEnd}`;\n  }\n\n  value = value.replace(/\\n+/g, '\\n$&').replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n  //         ^ ind.line  ^ empty     ^ capture next empty lines only at end of indent\n  .replace(/\\n+/g, `$&${indent}`);\n  const body = foldFlowLines(`${wsStart}${value}${wsEnd}`, indent, FOLD_BLOCK, strOptions.fold);\n  return `${header}\\n${indent}${body}`;\n}\n\nfunction plainString(item, ctx, onComment, onChompKeep) {\n  const {\n    comment,\n    type,\n    value\n  } = item;\n  const {\n    actualString,\n    implicitKey,\n    indent,\n    inFlow\n  } = ctx;\n\n  if (implicitKey && /[\\n[\\]{},]/.test(value) || inFlow && /[[\\]{},]/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  if (!value || /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n    // not allowed:\n    // - empty string, '-' or '?'\n    // - start with an indicator character (except [?:-]) or /[?-] /\n    // - '\\n ', ': ' or ' \\n' anywhere\n    // - '#' not preceded by a non-space char\n    // - end with ' ' or ':'\n    return implicitKey || inFlow || value.indexOf('\\n') === -1 ? value.indexOf('\"') !== -1 && value.indexOf(\"'\") === -1 ? singleQuotedString(value, ctx) : doubleQuotedString(value, ctx) : blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  if (!implicitKey && !inFlow && type !== PlainValue.Type.PLAIN && value.indexOf('\\n') !== -1) {\n    // Where allowed & type not set explicitly, prefer block style for multiline strings\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  if (indent === '' && containsDocumentMarker(value)) {\n    ctx.forceBlockIndent = true;\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  const str = value.replace(/\\n+/g, `$&\\n${indent}`); // Verify that output will be parsed as a string, as e.g. plain numbers and\n  // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n  // and others in v1.1.\n\n  if (actualString) {\n    const {\n      tags\n    } = ctx.doc.schema;\n    const resolved = resolveScalar(str, tags, tags.scalarFallback).value;\n    if (typeof resolved !== 'string') return doubleQuotedString(value, ctx);\n  }\n\n  const body = implicitKey ? str : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n\n  if (comment && !inFlow && (body.indexOf('\\n') !== -1 || comment.indexOf('\\n') !== -1)) {\n    if (onComment) onComment();\n    return addCommentBefore(body, indent, comment);\n  }\n\n  return body;\n}\n\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n  const {\n    defaultType\n  } = strOptions;\n  const {\n    implicitKey,\n    inFlow\n  } = ctx;\n  let {\n    type,\n    value\n  } = item;\n\n  if (typeof value !== 'string') {\n    value = String(value);\n    item = Object.assign({}, item, {\n      value\n    });\n  }\n\n  const _stringify = _type => {\n    switch (_type) {\n      case PlainValue.Type.BLOCK_FOLDED:\n      case PlainValue.Type.BLOCK_LITERAL:\n        return blockString(item, ctx, onComment, onChompKeep);\n\n      case PlainValue.Type.QUOTE_DOUBLE:\n        return doubleQuotedString(value, ctx);\n\n      case PlainValue.Type.QUOTE_SINGLE:\n        return singleQuotedString(value, ctx);\n\n      case PlainValue.Type.PLAIN:\n        return plainString(item, ctx, onComment, onChompKeep);\n\n      default:\n        return null;\n    }\n  };\n\n  if (type !== PlainValue.Type.QUOTE_DOUBLE && /[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f]/.test(value)) {\n    // force double quotes on control characters\n    type = PlainValue.Type.QUOTE_DOUBLE;\n  } else if ((implicitKey || inFlow) && (type === PlainValue.Type.BLOCK_FOLDED || type === PlainValue.Type.BLOCK_LITERAL)) {\n    // should not happen; blocks are not valid inside flow containers\n    type = PlainValue.Type.QUOTE_DOUBLE;\n  }\n\n  let res = _stringify(type);\n\n  if (res === null) {\n    res = _stringify(defaultType);\n    if (res === null) throw new Error(`Unsupported default string type ${defaultType}`);\n  }\n\n  return res;\n}\n\nfunction stringifyNumber({\n  format,\n  minFractionDigits,\n  tag,\n  value\n}) {\n  if (typeof value === 'bigint') return String(value);\n  if (!isFinite(value)) return isNaN(value) ? '.nan' : value < 0 ? '-.inf' : '.inf';\n  let n = JSON.stringify(value);\n\n  if (!format && minFractionDigits && (!tag || tag === 'tag:yaml.org,2002:float') && /^\\d/.test(n)) {\n    let i = n.indexOf('.');\n\n    if (i < 0) {\n      i = n.length;\n      n += '.';\n    }\n\n    let d = minFractionDigits - (n.length - i - 1);\n\n    while (d-- > 0) n += '0';\n  }\n\n  return n;\n}\n\nfunction checkFlowCollectionEnd(errors, cst) {\n  let char, name;\n\n  switch (cst.type) {\n    case PlainValue.Type.FLOW_MAP:\n      char = '}';\n      name = 'flow map';\n      break;\n\n    case PlainValue.Type.FLOW_SEQ:\n      char = ']';\n      name = 'flow sequence';\n      break;\n\n    default:\n      errors.push(new PlainValue.YAMLSemanticError(cst, 'Not a flow collection!?'));\n      return;\n  }\n\n  let lastItem;\n\n  for (let i = cst.items.length - 1; i >= 0; --i) {\n    const item = cst.items[i];\n\n    if (!item || item.type !== PlainValue.Type.COMMENT) {\n      lastItem = item;\n      break;\n    }\n  }\n\n  if (lastItem && lastItem.char !== char) {\n    const msg = `Expected ${name} to end with ${char}`;\n    let err;\n\n    if (typeof lastItem.offset === 'number') {\n      err = new PlainValue.YAMLSemanticError(cst, msg);\n      err.offset = lastItem.offset + 1;\n    } else {\n      err = new PlainValue.YAMLSemanticError(lastItem, msg);\n      if (lastItem.range && lastItem.range.end) err.offset = lastItem.range.end - lastItem.range.start;\n    }\n\n    errors.push(err);\n  }\n}\nfunction checkFlowCommentSpace(errors, comment) {\n  const prev = comment.context.src[comment.range.start - 1];\n\n  if (prev !== '\\n' && prev !== '\\t' && prev !== ' ') {\n    const msg = 'Comments must be separated from other tokens by white space characters';\n    errors.push(new PlainValue.YAMLSemanticError(comment, msg));\n  }\n}\nfunction getLongKeyError(source, key) {\n  const sk = String(key);\n  const k = sk.substr(0, 8) + '...' + sk.substr(-8);\n  return new PlainValue.YAMLSemanticError(source, `The \"${k}\" key is too long`);\n}\nfunction resolveComments(collection, comments) {\n  for (const {\n    afterKey,\n    before,\n    comment\n  } of comments) {\n    let item = collection.items[before];\n\n    if (!item) {\n      if (comment !== undefined) {\n        if (collection.comment) collection.comment += '\\n' + comment;else collection.comment = comment;\n      }\n    } else {\n      if (afterKey && item.value) item = item.value;\n\n      if (comment === undefined) {\n        if (afterKey || !item.commentBefore) item.spaceBefore = true;\n      } else {\n        if (item.commentBefore) item.commentBefore += '\\n' + comment;else item.commentBefore = comment;\n      }\n    }\n  }\n}\n\n// on error, will return { str: string, errors: Error[] }\nfunction resolveString(doc, node) {\n  const res = node.strValue;\n  if (!res) return '';\n  if (typeof res === 'string') return res;\n  res.errors.forEach(error => {\n    if (!error.source) error.source = node;\n    doc.errors.push(error);\n  });\n  return res.str;\n}\n\nfunction resolveTagHandle(doc, node) {\n  const {\n    handle,\n    suffix\n  } = node.tag;\n  let prefix = doc.tagPrefixes.find(p => p.handle === handle);\n\n  if (!prefix) {\n    const dtp = doc.getDefaults().tagPrefixes;\n    if (dtp) prefix = dtp.find(p => p.handle === handle);\n    if (!prefix) throw new PlainValue.YAMLSemanticError(node, `The ${handle} tag handle is non-default and was not declared.`);\n  }\n\n  if (!suffix) throw new PlainValue.YAMLSemanticError(node, `The ${handle} tag has no suffix.`);\n\n  if (handle === '!' && (doc.version || doc.options.version) === '1.0') {\n    if (suffix[0] === '^') {\n      doc.warnings.push(new PlainValue.YAMLWarning(node, 'YAML 1.0 ^ tag expansion is not supported'));\n      return suffix;\n    }\n\n    if (/[:/]/.test(suffix)) {\n      // word/foo -> tag:word.yaml.org,2002:foo\n      const vocab = suffix.match(/^([a-z0-9-]+)\\/(.*)/i);\n      return vocab ? `tag:${vocab[1]}.yaml.org,2002:${vocab[2]}` : `tag:${suffix}`;\n    }\n  }\n\n  return prefix.prefix + decodeURIComponent(suffix);\n}\n\nfunction resolveTagName(doc, node) {\n  const {\n    tag,\n    type\n  } = node;\n  let nonSpecific = false;\n\n  if (tag) {\n    const {\n      handle,\n      suffix,\n      verbatim\n    } = tag;\n\n    if (verbatim) {\n      if (verbatim !== '!' && verbatim !== '!!') return verbatim;\n      const msg = `Verbatim tags aren't resolved, so ${verbatim} is invalid.`;\n      doc.errors.push(new PlainValue.YAMLSemanticError(node, msg));\n    } else if (handle === '!' && !suffix) {\n      nonSpecific = true;\n    } else {\n      try {\n        return resolveTagHandle(doc, node);\n      } catch (error) {\n        doc.errors.push(error);\n      }\n    }\n  }\n\n  switch (type) {\n    case PlainValue.Type.BLOCK_FOLDED:\n    case PlainValue.Type.BLOCK_LITERAL:\n    case PlainValue.Type.QUOTE_DOUBLE:\n    case PlainValue.Type.QUOTE_SINGLE:\n      return PlainValue.defaultTags.STR;\n\n    case PlainValue.Type.FLOW_MAP:\n    case PlainValue.Type.MAP:\n      return PlainValue.defaultTags.MAP;\n\n    case PlainValue.Type.FLOW_SEQ:\n    case PlainValue.Type.SEQ:\n      return PlainValue.defaultTags.SEQ;\n\n    case PlainValue.Type.PLAIN:\n      return nonSpecific ? PlainValue.defaultTags.STR : null;\n\n    default:\n      return null;\n  }\n}\n\nfunction resolveByTagName(doc, node, tagName) {\n  const {\n    tags\n  } = doc.schema;\n  const matchWithTest = [];\n\n  for (const tag of tags) {\n    if (tag.tag === tagName) {\n      if (tag.test) matchWithTest.push(tag);else {\n        const res = tag.resolve(doc, node);\n        return res instanceof Collection ? res : new Scalar(res);\n      }\n    }\n  }\n\n  const str = resolveString(doc, node);\n  if (typeof str === 'string' && matchWithTest.length > 0) return resolveScalar(str, matchWithTest, tags.scalarFallback);\n  return null;\n}\n\nfunction getFallbackTagName({\n  type\n}) {\n  switch (type) {\n    case PlainValue.Type.FLOW_MAP:\n    case PlainValue.Type.MAP:\n      return PlainValue.defaultTags.MAP;\n\n    case PlainValue.Type.FLOW_SEQ:\n    case PlainValue.Type.SEQ:\n      return PlainValue.defaultTags.SEQ;\n\n    default:\n      return PlainValue.defaultTags.STR;\n  }\n}\n\nfunction resolveTag(doc, node, tagName) {\n  try {\n    const res = resolveByTagName(doc, node, tagName);\n\n    if (res) {\n      if (tagName && node.tag) res.tag = tagName;\n      return res;\n    }\n  } catch (error) {\n    /* istanbul ignore if */\n    if (!error.source) error.source = node;\n    doc.errors.push(error);\n    return null;\n  }\n\n  try {\n    const fallback = getFallbackTagName(node);\n    if (!fallback) throw new Error(`The tag ${tagName} is unavailable`);\n    const msg = `The tag ${tagName} is unavailable, falling back to ${fallback}`;\n    doc.warnings.push(new PlainValue.YAMLWarning(node, msg));\n    const res = resolveByTagName(doc, node, fallback);\n    res.tag = tagName;\n    return res;\n  } catch (error) {\n    const refError = new PlainValue.YAMLReferenceError(node, error.message);\n    refError.stack = error.stack;\n    doc.errors.push(refError);\n    return null;\n  }\n}\n\nconst isCollectionItem = node => {\n  if (!node) return false;\n  const {\n    type\n  } = node;\n  return type === PlainValue.Type.MAP_KEY || type === PlainValue.Type.MAP_VALUE || type === PlainValue.Type.SEQ_ITEM;\n};\n\nfunction resolveNodeProps(errors, node) {\n  const comments = {\n    before: [],\n    after: []\n  };\n  let hasAnchor = false;\n  let hasTag = false;\n  const props = isCollectionItem(node.context.parent) ? node.context.parent.props.concat(node.props) : node.props;\n\n  for (const {\n    start,\n    end\n  } of props) {\n    switch (node.context.src[start]) {\n      case PlainValue.Char.COMMENT:\n        {\n          if (!node.commentHasRequiredWhitespace(start)) {\n            const msg = 'Comments must be separated from other tokens by white space characters';\n            errors.push(new PlainValue.YAMLSemanticError(node, msg));\n          }\n\n          const {\n            header,\n            valueRange\n          } = node;\n          const cc = valueRange && (start > valueRange.start || header && start > header.start) ? comments.after : comments.before;\n          cc.push(node.context.src.slice(start + 1, end));\n          break;\n        }\n      // Actual anchor & tag resolution is handled by schema, here we just complain\n\n      case PlainValue.Char.ANCHOR:\n        if (hasAnchor) {\n          const msg = 'A node can have at most one anchor';\n          errors.push(new PlainValue.YAMLSemanticError(node, msg));\n        }\n\n        hasAnchor = true;\n        break;\n\n      case PlainValue.Char.TAG:\n        if (hasTag) {\n          const msg = 'A node can have at most one tag';\n          errors.push(new PlainValue.YAMLSemanticError(node, msg));\n        }\n\n        hasTag = true;\n        break;\n    }\n  }\n\n  return {\n    comments,\n    hasAnchor,\n    hasTag\n  };\n}\n\nfunction resolveNodeValue(doc, node) {\n  const {\n    anchors,\n    errors,\n    schema\n  } = doc;\n\n  if (node.type === PlainValue.Type.ALIAS) {\n    const name = node.rawValue;\n    const src = anchors.getNode(name);\n\n    if (!src) {\n      const msg = `Aliased anchor not found: ${name}`;\n      errors.push(new PlainValue.YAMLReferenceError(node, msg));\n      return null;\n    } // Lazy resolution for circular references\n\n\n    const res = new Alias(src);\n\n    anchors._cstAliases.push(res);\n\n    return res;\n  }\n\n  const tagName = resolveTagName(doc, node);\n  if (tagName) return resolveTag(doc, node, tagName);\n\n  if (node.type !== PlainValue.Type.PLAIN) {\n    const msg = `Failed to resolve ${node.type} node here`;\n    errors.push(new PlainValue.YAMLSyntaxError(node, msg));\n    return null;\n  }\n\n  try {\n    const str = resolveString(doc, node);\n    return resolveScalar(str, schema.tags, schema.tags.scalarFallback);\n  } catch (error) {\n    if (!error.source) error.source = node;\n    errors.push(error);\n    return null;\n  }\n} // sets node.resolved on success\n\n\nfunction resolveNode(doc, node) {\n  if (!node) return null;\n  if (node.error) doc.errors.push(node.error);\n  const {\n    comments,\n    hasAnchor,\n    hasTag\n  } = resolveNodeProps(doc.errors, node);\n\n  if (hasAnchor) {\n    const {\n      anchors\n    } = doc;\n    const name = node.anchor;\n    const prev = anchors.getNode(name); // At this point, aliases for any preceding node with the same anchor\n    // name have already been resolved, so it may safely be renamed.\n\n    if (prev) anchors.map[anchors.newName(name)] = prev; // During parsing, we need to store the CST node in anchors.map as\n    // anchors need to be available during resolution to allow for\n    // circular references.\n\n    anchors.map[name] = node;\n  }\n\n  if (node.type === PlainValue.Type.ALIAS && (hasAnchor || hasTag)) {\n    const msg = 'An alias node must not specify any properties';\n    doc.errors.push(new PlainValue.YAMLSemanticError(node, msg));\n  }\n\n  const res = resolveNodeValue(doc, node);\n\n  if (res) {\n    res.range = [node.range.start, node.range.end];\n    if (doc.options.keepCstNodes) res.cstNode = node;\n    if (doc.options.keepNodeTypes) res.type = node.type;\n    const cb = comments.before.join('\\n');\n\n    if (cb) {\n      res.commentBefore = res.commentBefore ? `${res.commentBefore}\\n${cb}` : cb;\n    }\n\n    const ca = comments.after.join('\\n');\n    if (ca) res.comment = res.comment ? `${res.comment}\\n${ca}` : ca;\n  }\n\n  return node.resolved = res;\n}\n\nfunction resolveMap(doc, cst) {\n  if (cst.type !== PlainValue.Type.MAP && cst.type !== PlainValue.Type.FLOW_MAP) {\n    const msg = `A ${cst.type} node cannot be resolved as a mapping`;\n    doc.errors.push(new PlainValue.YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  const {\n    comments,\n    items\n  } = cst.type === PlainValue.Type.FLOW_MAP ? resolveFlowMapItems(doc, cst) : resolveBlockMapItems(doc, cst);\n  const map = new YAMLMap();\n  map.items = items;\n  resolveComments(map, comments);\n  let hasCollectionKey = false;\n\n  for (let i = 0; i < items.length; ++i) {\n    const {\n      key: iKey\n    } = items[i];\n    if (iKey instanceof Collection) hasCollectionKey = true;\n\n    if (doc.schema.merge && iKey && iKey.value === MERGE_KEY) {\n      items[i] = new Merge(items[i]);\n      const sources = items[i].value.items;\n      let error = null;\n      sources.some(node => {\n        if (node instanceof Alias) {\n          // During parsing, alias sources are CST nodes; to account for\n          // circular references their resolved values can't be used here.\n          const {\n            type\n          } = node.source;\n          if (type === PlainValue.Type.MAP || type === PlainValue.Type.FLOW_MAP) return false;\n          return error = 'Merge nodes aliases can only point to maps';\n        }\n\n        return error = 'Merge nodes can only have Alias nodes as values';\n      });\n      if (error) doc.errors.push(new PlainValue.YAMLSemanticError(cst, error));\n    } else {\n      for (let j = i + 1; j < items.length; ++j) {\n        const {\n          key: jKey\n        } = items[j];\n\n        if (iKey === jKey || iKey && jKey && Object.prototype.hasOwnProperty.call(iKey, 'value') && iKey.value === jKey.value) {\n          const msg = `Map keys must be unique; \"${iKey}\" is repeated`;\n          doc.errors.push(new PlainValue.YAMLSemanticError(cst, msg));\n          break;\n        }\n      }\n    }\n  }\n\n  if (hasCollectionKey && !doc.options.mapAsMap) {\n    const warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new PlainValue.YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = map;\n  return map;\n}\n\nconst valueHasPairComment = ({\n  context: {\n    lineStart,\n    node,\n    src\n  },\n  props\n}) => {\n  if (props.length === 0) return false;\n  const {\n    start\n  } = props[0];\n  if (node && start > node.valueRange.start) return false;\n  if (src[start] !== PlainValue.Char.COMMENT) return false;\n\n  for (let i = lineStart; i < start; ++i) if (src[i] === '\\n') return false;\n\n  return true;\n};\n\nfunction resolvePairComment(item, pair) {\n  if (!valueHasPairComment(item)) return;\n  const comment = item.getPropValue(0, PlainValue.Char.COMMENT, true);\n  let found = false;\n  const cb = pair.value.commentBefore;\n\n  if (cb && cb.startsWith(comment)) {\n    pair.value.commentBefore = cb.substr(comment.length + 1);\n    found = true;\n  } else {\n    const cc = pair.value.comment;\n\n    if (!item.node && cc && cc.startsWith(comment)) {\n      pair.value.comment = cc.substr(comment.length + 1);\n      found = true;\n    }\n  }\n\n  if (found) pair.comment = comment;\n}\n\nfunction resolveBlockMapItems(doc, cst) {\n  const comments = [];\n  const items = [];\n  let key = undefined;\n  let keyStart = null;\n\n  for (let i = 0; i < cst.items.length; ++i) {\n    const item = cst.items[i];\n\n    switch (item.type) {\n      case PlainValue.Type.BLANK_LINE:\n        comments.push({\n          afterKey: !!key,\n          before: items.length\n        });\n        break;\n\n      case PlainValue.Type.COMMENT:\n        comments.push({\n          afterKey: !!key,\n          before: items.length,\n          comment: item.comment\n        });\n        break;\n\n      case PlainValue.Type.MAP_KEY:\n        if (key !== undefined) items.push(new Pair(key));\n        if (item.error) doc.errors.push(item.error);\n        key = resolveNode(doc, item.node);\n        keyStart = null;\n        break;\n\n      case PlainValue.Type.MAP_VALUE:\n        {\n          if (key === undefined) key = null;\n          if (item.error) doc.errors.push(item.error);\n\n          if (!item.context.atLineStart && item.node && item.node.type === PlainValue.Type.MAP && !item.node.context.atLineStart) {\n            const msg = 'Nested mappings are not allowed in compact mappings';\n            doc.errors.push(new PlainValue.YAMLSemanticError(item.node, msg));\n          }\n\n          let valueNode = item.node;\n\n          if (!valueNode && item.props.length > 0) {\n            // Comments on an empty mapping value need to be preserved, so we\n            // need to construct a minimal empty node here to use instead of the\n            // missing `item.node`. -- eemeli/yaml#19\n            valueNode = new PlainValue.PlainValue(PlainValue.Type.PLAIN, []);\n            valueNode.context = {\n              parent: item,\n              src: item.context.src\n            };\n            const pos = item.range.start + 1;\n            valueNode.range = {\n              start: pos,\n              end: pos\n            };\n            valueNode.valueRange = {\n              start: pos,\n              end: pos\n            };\n\n            if (typeof item.range.origStart === 'number') {\n              const origPos = item.range.origStart + 1;\n              valueNode.range.origStart = valueNode.range.origEnd = origPos;\n              valueNode.valueRange.origStart = valueNode.valueRange.origEnd = origPos;\n            }\n          }\n\n          const pair = new Pair(key, resolveNode(doc, valueNode));\n          resolvePairComment(item, pair);\n          items.push(pair);\n\n          if (key && typeof keyStart === 'number') {\n            if (item.range.start > keyStart + 1024) doc.errors.push(getLongKeyError(cst, key));\n          }\n\n          key = undefined;\n          keyStart = null;\n        }\n        break;\n\n      default:\n        if (key !== undefined) items.push(new Pair(key));\n        key = resolveNode(doc, item);\n        keyStart = item.range.start;\n        if (item.error) doc.errors.push(item.error);\n\n        next: for (let j = i + 1;; ++j) {\n          const nextItem = cst.items[j];\n\n          switch (nextItem && nextItem.type) {\n            case PlainValue.Type.BLANK_LINE:\n            case PlainValue.Type.COMMENT:\n              continue next;\n\n            case PlainValue.Type.MAP_VALUE:\n              break next;\n\n            default:\n              {\n                const msg = 'Implicit map keys need to be followed by map values';\n                doc.errors.push(new PlainValue.YAMLSemanticError(item, msg));\n                break next;\n              }\n          }\n        }\n\n        if (item.valueRangeContainsNewline) {\n          const msg = 'Implicit map keys need to be on a single line';\n          doc.errors.push(new PlainValue.YAMLSemanticError(item, msg));\n        }\n\n    }\n  }\n\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments,\n    items\n  };\n}\n\nfunction resolveFlowMapItems(doc, cst) {\n  const comments = [];\n  const items = [];\n  let key = undefined;\n  let explicitKey = false;\n  let next = '{';\n\n  for (let i = 0; i < cst.items.length; ++i) {\n    const item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      const {\n        char,\n        offset\n      } = item;\n\n      if (char === '?' && key === undefined && !explicitKey) {\n        explicitKey = true;\n        next = ':';\n        continue;\n      }\n\n      if (char === ':') {\n        if (key === undefined) key = null;\n\n        if (next === ':') {\n          next = ',';\n          continue;\n        }\n      } else {\n        if (explicitKey) {\n          if (key === undefined && char !== ',') key = null;\n          explicitKey = false;\n        }\n\n        if (key !== undefined) {\n          items.push(new Pair(key));\n          key = undefined;\n\n          if (char === ',') {\n            next = ':';\n            continue;\n          }\n        }\n      }\n\n      if (char === '}') {\n        if (i === cst.items.length - 1) continue;\n      } else if (char === next) {\n        next = ':';\n        continue;\n      }\n\n      const msg = `Flow map contains an unexpected ${char}`;\n      const err = new PlainValue.YAMLSyntaxError(cst, msg);\n      err.offset = offset;\n      doc.errors.push(err);\n    } else if (item.type === PlainValue.Type.BLANK_LINE) {\n      comments.push({\n        afterKey: !!key,\n        before: items.length\n      });\n    } else if (item.type === PlainValue.Type.COMMENT) {\n      checkFlowCommentSpace(doc.errors, item);\n      comments.push({\n        afterKey: !!key,\n        before: items.length,\n        comment: item.comment\n      });\n    } else if (key === undefined) {\n      if (next === ',') doc.errors.push(new PlainValue.YAMLSemanticError(item, 'Separator , missing in flow map'));\n      key = resolveNode(doc, item);\n    } else {\n      if (next !== ',') doc.errors.push(new PlainValue.YAMLSemanticError(item, 'Indicator : missing in flow map entry'));\n      items.push(new Pair(key, resolveNode(doc, item)));\n      key = undefined;\n      explicitKey = false;\n    }\n  }\n\n  checkFlowCollectionEnd(doc.errors, cst);\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments,\n    items\n  };\n}\n\nfunction resolveSeq(doc, cst) {\n  if (cst.type !== PlainValue.Type.SEQ && cst.type !== PlainValue.Type.FLOW_SEQ) {\n    const msg = `A ${cst.type} node cannot be resolved as a sequence`;\n    doc.errors.push(new PlainValue.YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  const {\n    comments,\n    items\n  } = cst.type === PlainValue.Type.FLOW_SEQ ? resolveFlowSeqItems(doc, cst) : resolveBlockSeqItems(doc, cst);\n  const seq = new YAMLSeq();\n  seq.items = items;\n  resolveComments(seq, comments);\n\n  if (!doc.options.mapAsMap && items.some(it => it instanceof Pair && it.key instanceof Collection)) {\n    const warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new PlainValue.YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = seq;\n  return seq;\n}\n\nfunction resolveBlockSeqItems(doc, cst) {\n  const comments = [];\n  const items = [];\n\n  for (let i = 0; i < cst.items.length; ++i) {\n    const item = cst.items[i];\n\n    switch (item.type) {\n      case PlainValue.Type.BLANK_LINE:\n        comments.push({\n          before: items.length\n        });\n        break;\n\n      case PlainValue.Type.COMMENT:\n        comments.push({\n          comment: item.comment,\n          before: items.length\n        });\n        break;\n\n      case PlainValue.Type.SEQ_ITEM:\n        if (item.error) doc.errors.push(item.error);\n        items.push(resolveNode(doc, item.node));\n\n        if (item.hasProps) {\n          const msg = 'Sequence items cannot have tags or anchors before the - indicator';\n          doc.errors.push(new PlainValue.YAMLSemanticError(item, msg));\n        }\n\n        break;\n\n      default:\n        if (item.error) doc.errors.push(item.error);\n        doc.errors.push(new PlainValue.YAMLSyntaxError(item, `Unexpected ${item.type} node in sequence`));\n    }\n  }\n\n  return {\n    comments,\n    items\n  };\n}\n\nfunction resolveFlowSeqItems(doc, cst) {\n  const comments = [];\n  const items = [];\n  let explicitKey = false;\n  let key = undefined;\n  let keyStart = null;\n  let next = '[';\n  let prevItem = null;\n\n  for (let i = 0; i < cst.items.length; ++i) {\n    const item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      const {\n        char,\n        offset\n      } = item;\n\n      if (char !== ':' && (explicitKey || key !== undefined)) {\n        if (explicitKey && key === undefined) key = next ? items.pop() : null;\n        items.push(new Pair(key));\n        explicitKey = false;\n        key = undefined;\n        keyStart = null;\n      }\n\n      if (char === next) {\n        next = null;\n      } else if (!next && char === '?') {\n        explicitKey = true;\n      } else if (next !== '[' && char === ':' && key === undefined) {\n        if (next === ',') {\n          key = items.pop();\n\n          if (key instanceof Pair) {\n            const msg = 'Chaining flow sequence pairs is invalid';\n            const err = new PlainValue.YAMLSemanticError(cst, msg);\n            err.offset = offset;\n            doc.errors.push(err);\n          }\n\n          if (!explicitKey && typeof keyStart === 'number') {\n            const keyEnd = item.range ? item.range.start : item.offset;\n            if (keyEnd > keyStart + 1024) doc.errors.push(getLongKeyError(cst, key));\n            const {\n              src\n            } = prevItem.context;\n\n            for (let i = keyStart; i < keyEnd; ++i) if (src[i] === '\\n') {\n              const msg = 'Implicit keys of flow sequence pairs need to be on a single line';\n              doc.errors.push(new PlainValue.YAMLSemanticError(prevItem, msg));\n              break;\n            }\n          }\n        } else {\n          key = null;\n        }\n\n        keyStart = null;\n        explicitKey = false;\n        next = null;\n      } else if (next === '[' || char !== ']' || i < cst.items.length - 1) {\n        const msg = `Flow sequence contains an unexpected ${char}`;\n        const err = new PlainValue.YAMLSyntaxError(cst, msg);\n        err.offset = offset;\n        doc.errors.push(err);\n      }\n    } else if (item.type === PlainValue.Type.BLANK_LINE) {\n      comments.push({\n        before: items.length\n      });\n    } else if (item.type === PlainValue.Type.COMMENT) {\n      checkFlowCommentSpace(doc.errors, item);\n      comments.push({\n        comment: item.comment,\n        before: items.length\n      });\n    } else {\n      if (next) {\n        const msg = `Expected a ${next} in flow sequence`;\n        doc.errors.push(new PlainValue.YAMLSemanticError(item, msg));\n      }\n\n      const value = resolveNode(doc, item);\n\n      if (key === undefined) {\n        items.push(value);\n        prevItem = item;\n      } else {\n        items.push(new Pair(key, value));\n        key = undefined;\n      }\n\n      keyStart = item.range.start;\n      next = ',';\n    }\n  }\n\n  checkFlowCollectionEnd(doc.errors, cst);\n  if (key !== undefined) items.push(new Pair(key));\n  return {\n    comments,\n    items\n  };\n}\n\nexports.Alias = Alias;\nexports.Collection = Collection;\nexports.Merge = Merge;\nexports.Node = Node;\nexports.Pair = Pair;\nexports.Scalar = Scalar;\nexports.YAMLMap = YAMLMap;\nexports.YAMLSeq = YAMLSeq;\nexports.addComment = addComment;\nexports.binaryOptions = binaryOptions;\nexports.boolOptions = boolOptions;\nexports.findPair = findPair;\nexports.intOptions = intOptions;\nexports.isEmptyPath = isEmptyPath;\nexports.nullOptions = nullOptions;\nexports.resolveMap = resolveMap;\nexports.resolveNode = resolveNode;\nexports.resolveSeq = resolveSeq;\nexports.resolveString = resolveString;\nexports.strOptions = strOptions;\nexports.stringifyNumber = stringifyNumber;\nexports.stringifyString = stringifyString;\nexports.toJSON = toJSON;\n","'use strict';\n\nvar PlainValue = require('./PlainValue-ec8e588e.js');\nvar resolveSeq = require('./resolveSeq-d03cb037.js');\n\n/* global atob, btoa, Buffer */\nconst binary = {\n  identify: value => value instanceof Uint8Array,\n  // Buffer inherits from Uint8Array\n  default: false,\n  tag: 'tag:yaml.org,2002:binary',\n\n  /**\n   * Returns a Buffer in node and an Uint8Array in browsers\n   *\n   * To use the resulting buffer as an image, you'll want to do something like:\n   *\n   *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n   *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n   */\n  resolve: (doc, node) => {\n    const src = resolveSeq.resolveString(doc, node);\n\n    if (typeof Buffer === 'function') {\n      return Buffer.from(src, 'base64');\n    } else if (typeof atob === 'function') {\n      // On IE 11, atob() can't handle newlines\n      const str = atob(src.replace(/[\\n\\r]/g, ''));\n      const buffer = new Uint8Array(str.length);\n\n      for (let i = 0; i < str.length; ++i) buffer[i] = str.charCodeAt(i);\n\n      return buffer;\n    } else {\n      const msg = 'This environment does not support reading binary tags; either Buffer or atob is required';\n      doc.errors.push(new PlainValue.YAMLReferenceError(node, msg));\n      return null;\n    }\n  },\n  options: resolveSeq.binaryOptions,\n  stringify: ({\n    comment,\n    type,\n    value\n  }, ctx, onComment, onChompKeep) => {\n    let src;\n\n    if (typeof Buffer === 'function') {\n      src = value instanceof Buffer ? value.toString('base64') : Buffer.from(value.buffer).toString('base64');\n    } else if (typeof btoa === 'function') {\n      let s = '';\n\n      for (let i = 0; i < value.length; ++i) s += String.fromCharCode(value[i]);\n\n      src = btoa(s);\n    } else {\n      throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n    }\n\n    if (!type) type = resolveSeq.binaryOptions.defaultType;\n\n    if (type === PlainValue.Type.QUOTE_DOUBLE) {\n      value = src;\n    } else {\n      const {\n        lineWidth\n      } = resolveSeq.binaryOptions;\n      const n = Math.ceil(src.length / lineWidth);\n      const lines = new Array(n);\n\n      for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n        lines[i] = src.substr(o, lineWidth);\n      }\n\n      value = lines.join(type === PlainValue.Type.BLOCK_LITERAL ? '\\n' : ' ');\n    }\n\n    return resolveSeq.stringifyString({\n      comment,\n      type,\n      value\n    }, ctx, onComment, onChompKeep);\n  }\n};\n\nfunction parsePairs(doc, cst) {\n  const seq = resolveSeq.resolveSeq(doc, cst);\n\n  for (let i = 0; i < seq.items.length; ++i) {\n    let item = seq.items[i];\n    if (item instanceof resolveSeq.Pair) continue;else if (item instanceof resolveSeq.YAMLMap) {\n      if (item.items.length > 1) {\n        const msg = 'Each pair must have its own sequence indicator';\n        throw new PlainValue.YAMLSemanticError(cst, msg);\n      }\n\n      const pair = item.items[0] || new resolveSeq.Pair();\n      if (item.commentBefore) pair.commentBefore = pair.commentBefore ? `${item.commentBefore}\\n${pair.commentBefore}` : item.commentBefore;\n      if (item.comment) pair.comment = pair.comment ? `${item.comment}\\n${pair.comment}` : item.comment;\n      item = pair;\n    }\n    seq.items[i] = item instanceof resolveSeq.Pair ? item : new resolveSeq.Pair(item);\n  }\n\n  return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n  const pairs = new resolveSeq.YAMLSeq(schema);\n  pairs.tag = 'tag:yaml.org,2002:pairs';\n\n  for (const it of iterable) {\n    let key, value;\n\n    if (Array.isArray(it)) {\n      if (it.length === 2) {\n        key = it[0];\n        value = it[1];\n      } else throw new TypeError(`Expected [key, value] tuple: ${it}`);\n    } else if (it && it instanceof Object) {\n      const keys = Object.keys(it);\n\n      if (keys.length === 1) {\n        key = keys[0];\n        value = it[key];\n      } else throw new TypeError(`Expected { key: value } tuple: ${it}`);\n    } else {\n      key = it;\n    }\n\n    const pair = schema.createPair(key, value, ctx);\n    pairs.items.push(pair);\n  }\n\n  return pairs;\n}\nconst pairs = {\n  default: false,\n  tag: 'tag:yaml.org,2002:pairs',\n  resolve: parsePairs,\n  createNode: createPairs\n};\n\nclass YAMLOMap extends resolveSeq.YAMLSeq {\n  constructor() {\n    super();\n\n    PlainValue._defineProperty(this, \"add\", resolveSeq.YAMLMap.prototype.add.bind(this));\n\n    PlainValue._defineProperty(this, \"delete\", resolveSeq.YAMLMap.prototype.delete.bind(this));\n\n    PlainValue._defineProperty(this, \"get\", resolveSeq.YAMLMap.prototype.get.bind(this));\n\n    PlainValue._defineProperty(this, \"has\", resolveSeq.YAMLMap.prototype.has.bind(this));\n\n    PlainValue._defineProperty(this, \"set\", resolveSeq.YAMLMap.prototype.set.bind(this));\n\n    this.tag = YAMLOMap.tag;\n  }\n\n  toJSON(_, ctx) {\n    const map = new Map();\n    if (ctx && ctx.onCreate) ctx.onCreate(map);\n\n    for (const pair of this.items) {\n      let key, value;\n\n      if (pair instanceof resolveSeq.Pair) {\n        key = resolveSeq.toJSON(pair.key, '', ctx);\n        value = resolveSeq.toJSON(pair.value, key, ctx);\n      } else {\n        key = resolveSeq.toJSON(pair, '', ctx);\n      }\n\n      if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');\n      map.set(key, value);\n    }\n\n    return map;\n  }\n\n}\n\nPlainValue._defineProperty(YAMLOMap, \"tag\", 'tag:yaml.org,2002:omap');\n\nfunction parseOMap(doc, cst) {\n  const pairs = parsePairs(doc, cst);\n  const seenKeys = [];\n\n  for (const {\n    key\n  } of pairs.items) {\n    if (key instanceof resolveSeq.Scalar) {\n      if (seenKeys.includes(key.value)) {\n        const msg = 'Ordered maps must not include duplicate keys';\n        throw new PlainValue.YAMLSemanticError(cst, msg);\n      } else {\n        seenKeys.push(key.value);\n      }\n    }\n  }\n\n  return Object.assign(new YAMLOMap(), pairs);\n}\n\nfunction createOMap(schema, iterable, ctx) {\n  const pairs = createPairs(schema, iterable, ctx);\n  const omap = new YAMLOMap();\n  omap.items = pairs.items;\n  return omap;\n}\n\nconst omap = {\n  identify: value => value instanceof Map,\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: 'tag:yaml.org,2002:omap',\n  resolve: parseOMap,\n  createNode: createOMap\n};\n\nclass YAMLSet extends resolveSeq.YAMLMap {\n  constructor() {\n    super();\n    this.tag = YAMLSet.tag;\n  }\n\n  add(key) {\n    const pair = key instanceof resolveSeq.Pair ? key : new resolveSeq.Pair(key);\n    const prev = resolveSeq.findPair(this.items, pair.key);\n    if (!prev) this.items.push(pair);\n  }\n\n  get(key, keepPair) {\n    const pair = resolveSeq.findPair(this.items, key);\n    return !keepPair && pair instanceof resolveSeq.Pair ? pair.key instanceof resolveSeq.Scalar ? pair.key.value : pair.key : pair;\n  }\n\n  set(key, value) {\n    if (typeof value !== 'boolean') throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n    const prev = resolveSeq.findPair(this.items, key);\n\n    if (prev && !value) {\n      this.items.splice(this.items.indexOf(prev), 1);\n    } else if (!prev && value) {\n      this.items.push(new resolveSeq.Pair(key));\n    }\n  }\n\n  toJSON(_, ctx) {\n    return super.toJSON(_, ctx, Set);\n  }\n\n  toString(ctx, onComment, onChompKeep) {\n    if (!ctx) return JSON.stringify(this);\n    if (this.hasAllNullValues()) return super.toString(ctx, onComment, onChompKeep);else throw new Error('Set items must all have null values');\n  }\n\n}\n\nPlainValue._defineProperty(YAMLSet, \"tag\", 'tag:yaml.org,2002:set');\n\nfunction parseSet(doc, cst) {\n  const map = resolveSeq.resolveMap(doc, cst);\n  if (!map.hasAllNullValues()) throw new PlainValue.YAMLSemanticError(cst, 'Set items must all have null values');\n  return Object.assign(new YAMLSet(), map);\n}\n\nfunction createSet(schema, iterable, ctx) {\n  const set = new YAMLSet();\n\n  for (const value of iterable) set.items.push(schema.createPair(value, null, ctx));\n\n  return set;\n}\n\nconst set = {\n  identify: value => value instanceof Set,\n  nodeClass: YAMLSet,\n  default: false,\n  tag: 'tag:yaml.org,2002:set',\n  resolve: parseSet,\n  createNode: createSet\n};\n\nconst parseSexagesimal = (sign, parts) => {\n  const n = parts.split(':').reduce((n, p) => n * 60 + Number(p), 0);\n  return sign === '-' ? -n : n;\n}; // hhhh:mm:ss.sss\n\n\nconst stringifySexagesimal = ({\n  value\n}) => {\n  if (isNaN(value) || !isFinite(value)) return resolveSeq.stringifyNumber(value);\n  let sign = '';\n\n  if (value < 0) {\n    sign = '-';\n    value = Math.abs(value);\n  }\n\n  const parts = [value % 60]; // seconds, including ms\n\n  if (value < 60) {\n    parts.unshift(0); // at least one : is required\n  } else {\n    value = Math.round((value - parts[0]) / 60);\n    parts.unshift(value % 60); // minutes\n\n    if (value >= 60) {\n      value = Math.round((value - parts[0]) / 60);\n      parts.unshift(value); // hours\n    }\n  }\n\n  return sign + parts.map(n => n < 10 ? '0' + String(n) : String(n)).join(':').replace(/000000\\d*$/, '') // % 60 may introduce error\n  ;\n};\n\nconst intTime = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,\n  resolve: (str, sign, parts) => parseSexagesimal(sign, parts.replace(/_/g, '')),\n  stringify: stringifySexagesimal\n};\nconst floatTime = {\n  identify: value => typeof value === 'number',\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*)$/,\n  resolve: (str, sign, parts) => parseSexagesimal(sign, parts.replace(/_/g, '')),\n  stringify: stringifySexagesimal\n};\nconst timestamp = {\n  identify: value => value instanceof Date,\n  default: true,\n  tag: 'tag:yaml.org,2002:timestamp',\n  // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n  // may be omitted altogether, resulting in a date format. In such a case, the time part is\n  // assumed to be 00:00:00Z (start of day, UTC).\n  test: RegExp('^(?:' + '([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n  '(?:(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n  '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n  '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n  ')?' + ')$'),\n  resolve: (str, year, month, day, hour, minute, second, millisec, tz) => {\n    if (millisec) millisec = (millisec + '00').substr(1, 3);\n    let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec || 0);\n\n    if (tz && tz !== 'Z') {\n      let d = parseSexagesimal(tz[0], tz.slice(1));\n      if (Math.abs(d) < 30) d *= 60;\n      date -= 60000 * d;\n    }\n\n    return new Date(date);\n  },\n  stringify: ({\n    value\n  }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\n/* global console, process, YAML_SILENCE_DEPRECATION_WARNINGS, YAML_SILENCE_WARNINGS */\nfunction shouldWarn(deprecation) {\n  const env = typeof process !== 'undefined' && process.env || {};\n\n  if (deprecation) {\n    if (typeof YAML_SILENCE_DEPRECATION_WARNINGS !== 'undefined') return !YAML_SILENCE_DEPRECATION_WARNINGS;\n    return !env.YAML_SILENCE_DEPRECATION_WARNINGS;\n  }\n\n  if (typeof YAML_SILENCE_WARNINGS !== 'undefined') return !YAML_SILENCE_WARNINGS;\n  return !env.YAML_SILENCE_WARNINGS;\n}\n\nfunction warn(warning, type) {\n  if (shouldWarn(false)) {\n    const emit = typeof process !== 'undefined' && process.emitWarning; // This will throw in Jest if `warning` is an Error instance due to\n    // https://github.com/facebook/jest/issues/2549\n\n    if (emit) emit(warning, type);else {\n      // eslint-disable-next-line no-console\n      console.warn(type ? `${type}: ${warning}` : warning);\n    }\n  }\n}\nfunction warnFileDeprecation(filename) {\n  if (shouldWarn(true)) {\n    const path = filename.replace(/.*yaml[/\\\\]/i, '').replace(/\\.js$/, '').replace(/\\\\/g, '/');\n    warn(`The endpoint 'yaml/${path}' will be removed in a future release.`, 'DeprecationWarning');\n  }\n}\nconst warned = {};\nfunction warnOptionDeprecation(name, alternative) {\n  if (!warned[name] && shouldWarn(true)) {\n    warned[name] = true;\n    let msg = `The option '${name}' will be removed in a future release`;\n    msg += alternative ? `, use '${alternative}' instead.` : '.';\n    warn(msg, 'DeprecationWarning');\n  }\n}\n\nexports.binary = binary;\nexports.floatTime = floatTime;\nexports.intTime = intTime;\nexports.omap = omap;\nexports.pairs = pairs;\nexports.set = set;\nexports.timestamp = timestamp;\nexports.warn = warn;\nexports.warnFileDeprecation = warnFileDeprecation;\nexports.warnOptionDeprecation = warnOptionDeprecation;\n","module.exports = require('./dist').YAML\n","/**\n * marked v4.2.12 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n'use strict';\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\nexports.defaults = getDefaults();\nfunction changeDefaults(newDefaults) {\n  exports.defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nvar escapeTest = /[&<>\"']/;\nvar escapeReplace = new RegExp(escapeTest.source, 'g');\nvar escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nvar escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nvar escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nvar getEscapeReplacement = function getEscapeReplacement(ch) {\n  return escapeReplacements[ch];\n};\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n  return html;\n}\nvar unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, function (_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\nvar caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  var obj = {\n    replace: function replace(name, val) {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: function getRegex() {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\nvar nonWordAndColonTest = /[^\\w:]/g;\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    var prot;\n    try {\n      prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\nvar baseUrls = {};\nvar justDomain = /^[^:]+:\\/*[^/]*$/;\nvar protocol = /^([^:]+:)[\\s\\S]*$/;\nvar domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  var relativeBase = base.indexOf(':') === -1;\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar noopTest = {\n  exec: function noopTest() {}\n};\nfunction merge(obj) {\n  var i = 1,\n    target,\n    key;\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n  return obj;\n}\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  var i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) {\n    cells.shift();\n  }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n    cells.pop();\n  }\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) {\n      cells.push('');\n    }\n  }\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  var l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    var currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n  return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var l = str.length;\n  var level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  var result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  var href = link.href;\n  var title = link.title ? escape(link.title) : null;\n  var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    var token = {\n      type: 'link',\n      raw: raw,\n      href: href,\n      title: title,\n      text: text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw: raw,\n    href: href,\n    title: title,\n    text: escape(text)\n  };\n}\nfunction indentCodeCompensation(raw, text) {\n  var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n  if (matchIndentToCode === null) {\n    return text;\n  }\n  var indentToCode = matchIndentToCode[1];\n  return text.split('\\n').map(function (node) {\n    var matchIndentInNode = node.match(/^\\s+/);\n    if (matchIndentInNode === null) {\n      return node;\n    }\n    var indentInNode = matchIndentInNode[0];\n    if (indentInNode.length >= indentToCode.length) {\n      return node.slice(indentToCode.length);\n    }\n    return node;\n  }).join('\\n');\n}\n\n/**\n * Tokenizer\n */\nvar Tokenizer = /*#__PURE__*/function () {\n  function Tokenizer(options) {\n    this.options = options || exports.defaults;\n  }\n  var _proto = Tokenizer.prototype;\n  _proto.space = function space(src) {\n    var cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  };\n  _proto.code = function code(src) {\n    var cap = this.rules.block.code.exec(src);\n    if (cap) {\n      var text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic ? rtrim(text, '\\n') : text\n      };\n    }\n  };\n  _proto.fences = function fences(src) {\n    var cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      var raw = cap[0];\n      var text = indentCodeCompensation(raw, cap[3] || '');\n      return {\n        type: 'code',\n        raw: raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text: text\n      };\n    }\n  };\n  _proto.heading = function heading(src) {\n    var cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      var text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        var trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  };\n  _proto.hr = function hr(src) {\n    var cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  };\n  _proto.blockquote = function blockquote(src) {\n    var cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      var top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      var tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: tokens,\n        text: text\n      };\n    }\n  };\n  _proto.list = function list(src) {\n    var cap = this.rules.block.list.exec(src);\n    if (cap) {\n      var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n      var bull = cap[1].trim();\n      var isordered = bull.length > 1;\n      var list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n      bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\");\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n        if (this.rules.block.hr.test(src)) {\n          // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n        raw = cap[0];\n        src = src.substring(raw.length);\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, function (t) {\n          return ' '.repeat(3 * t.length);\n        });\n        nextLine = src.split('\\n', 1)[0];\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n        blankLine = false;\n        if (!line && /^ *$/.test(nextLine)) {\n          // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n        if (!endEarly) {\n          var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))\");\n          var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n          var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n          var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\");\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) {\n              // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) {\n                // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n              itemContents += '\\n' + nextLine;\n            }\n            if (!blankLine && !nextLine.trim()) {\n              // Check if current line is blank\n              blankLine = true;\n            }\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n        list.items.push({\n          type: 'list_item',\n          raw: raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n      var l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        if (!list.loose) {\n          // Check if list should be loose\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.length > 0 && spacers.some(function (t) {\n            return /\\n.*\\n/.test(t.raw);\n          });\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n      return list;\n    }\n  };\n  _proto.html = function html(src) {\n    var cap = this.rules.block.html.exec(src);\n    if (cap) {\n      var token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  };\n  _proto.def = function def(src) {\n    var cap = this.rules.block.def.exec(src);\n    if (cap) {\n      var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      var href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      var title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag: tag,\n        raw: cap[0],\n        href: href,\n        title: title\n      };\n    }\n  };\n  _proto.table = function table(src) {\n    var cap = this.rules.block.table.exec(src);\n    if (cap) {\n      var item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(function (c) {\n          return {\n            text: c\n          };\n        }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n        var l = item.align.length;\n        var i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n            return {\n              text: c\n            };\n          });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n        return item;\n      }\n    }\n  };\n  _proto.lheading = function lheading(src) {\n    var cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  };\n  _proto.paragraph = function paragraph(src) {\n    var cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text: text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  };\n  _proto.text = function text(src) {\n    var cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  };\n  _proto.escape = function escape$1(src) {\n    var cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  };\n  _proto.tag = function tag(src) {\n    var cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n      return {\n        type: this.options.sanitize ? 'text' : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n      };\n    }\n  };\n  _proto.link = function link(src) {\n    var cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      var trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!/>$/.test(trimmedUrl)) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        var lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          var linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      var href = cap[2];\n      var title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  };\n  _proto.reflink = function reflink(src, links) {\n    var cap;\n    if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n      var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        var text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text: text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  };\n  _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n    if (prevChar === void 0) {\n      prevChar = '';\n    }\n    var match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n    var nextChar = match[1] || match[2] || '';\n    if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n      var lLength = match[0].length - 1;\n      var rDelim,\n        rLength,\n        delimTotal = lLength,\n        midDelimTotal = 0;\n      var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n        if (match[3] || match[4]) {\n          // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) {\n          // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n        var raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          var _text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw: raw,\n            text: _text,\n            tokens: this.lexer.inlineTokens(_text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        var text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw: raw,\n          text: text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  };\n  _proto.codespan = function codespan(src) {\n    var cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      var text = cap[2].replace(/\\n/g, ' ');\n      var hasNonSpaceChars = /[^ ]/.test(text);\n      var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text: text\n      };\n    }\n  };\n  _proto.br = function br(src) {\n    var cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  };\n  _proto.del = function del(src) {\n    var cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  };\n  _proto.autolink = function autolink(src, mangle) {\n    var cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      var text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text: text,\n        href: href,\n        tokens: [{\n          type: 'text',\n          raw: text,\n          text: text\n        }]\n      };\n    }\n  };\n  _proto.url = function url(src, mangle) {\n    var cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      var text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        var prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text: text,\n        href: href,\n        tokens: [{\n          type: 'text',\n          raw: text,\n          text: text\n        }]\n      };\n    }\n  };\n  _proto.inlineText = function inlineText(src, smartypants) {\n    var cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      var text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: text\n      };\n    }\n  };\n  return Tokenizer;\n}();\n\n/**\n * Block-Level Grammar\n */\nvar block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n  + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n  + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n  + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n  + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n  + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n  + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n  + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n  + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n  + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\nblock.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\nblock.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n.replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n.replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n.getRegex();\nblock.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n  + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n  + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n.replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n.getRegex();\nblock.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n.replace('table', block.gfm.table) // interrupt paragraphs with table\n.replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n.replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n.getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n  + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest,\n  // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n  + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n  + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n  + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n  + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n  // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\ninline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\ninline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\ninline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\ninline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\ninline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n  // em-dashes\n  .replace(/---/g, \"\\u2014\")\n  // en-dashes\n  .replace(/--/g, \"\\u2013\")\n  // opening singles\n  .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\")\n  // closing singles & apostrophes\n  .replace(/'/g, \"\\u2019\")\n  // opening doubles\n  .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\")\n  // closing doubles\n  .replace(/\"/g, \"\\u201D\")\n  // ellipses\n  .replace(/\\.{3}/g, \"\\u2026\");\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  var out = '',\n    i,\n    ch;\n  var l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n  return out;\n}\n\n/**\n * Block Lexer\n */\nvar Lexer = /*#__PURE__*/function () {\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || exports.defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n    var rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  /**\n   * Static Lex Method\n   */\n  Lexer.lex = function lex(src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */;\n  Lexer.lexInline = function lexInline(src, options) {\n    var lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */;\n  var _proto = Lexer.prototype;\n  _proto.lex = function lex(src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n');\n    this.blockTokens(src, this.tokens);\n    var next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */;\n  _proto.blockTokens = function blockTokens(src, tokens) {\n    var _this = this;\n    if (tokens === void 0) {\n      tokens = [];\n    }\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n    var token, lastToken, cutSrc, lastParagraphClipped;\n    while (src) {\n      if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n        if (token = extTokenizer.call({\n          lexer: _this\n        }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        (function () {\n          var startIndex = Infinity;\n          var tempSrc = src.slice(1);\n          var tempStart = void 0;\n          _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n            tempStart = getStartIndex.call({\n              lexer: this\n            }, tempSrc);\n            if (typeof tempStart === 'number' && tempStart >= 0) {\n              startIndex = Math.min(startIndex, tempStart);\n            }\n          });\n          if (startIndex < Infinity && startIndex >= 0) {\n            cutSrc = src.substring(0, startIndex + 1);\n          }\n        })();\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = cutSrc.length !== src.length;\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (src) {\n        var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n    this.state.top = true;\n    return tokens;\n  };\n  _proto.inline = function inline(src, tokens) {\n    if (tokens === void 0) {\n      tokens = [];\n    }\n    this.inlineQueue.push({\n      src: src,\n      tokens: tokens\n    });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */;\n  _proto.inlineTokens = function inlineTokens(src, tokens) {\n    var _this2 = this;\n    if (tokens === void 0) {\n      tokens = [];\n    }\n    var token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    var maskedSrc = src;\n    var match;\n    var keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      var links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n        if (token = extTokenizer.call({\n          lexer: _this2\n        }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        (function () {\n          var startIndex = Infinity;\n          var tempSrc = src.slice(1);\n          var tempStart = void 0;\n          _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n            tempStart = getStartIndex.call({\n              lexer: this\n            }, tempSrc);\n            if (typeof tempStart === 'number' && tempStart >= 0) {\n              startIndex = Math.min(startIndex, tempStart);\n            }\n          });\n          if (startIndex < Infinity && startIndex >= 0) {\n            cutSrc = src.substring(0, startIndex + 1);\n          }\n        })();\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') {\n          // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (src) {\n        var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n    return tokens;\n  };\n  _createClass(Lexer, null, [{\n    key: \"rules\",\n    get: function get() {\n      return {\n        block: block,\n        inline: inline\n      };\n    }\n  }]);\n  return Lexer;\n}();\n\n/**\n * Renderer\n */\nvar Renderer = /*#__PURE__*/function () {\n  function Renderer(options) {\n    this.options = options || exports.defaults;\n  }\n  var _proto = Renderer.prototype;\n  _proto.code = function code(_code, infostring, escaped) {\n    var lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      var out = this.options.highlight(_code, lang);\n      if (out != null && out !== _code) {\n        escaped = true;\n        _code = out;\n      }\n    }\n    _code = _code.replace(/\\n$/, '') + '\\n';\n    if (!lang) {\n      return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */;\n  _proto.blockquote = function blockquote(quote) {\n    return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n  };\n  _proto.html = function html(_html) {\n    return _html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */;\n  _proto.heading = function heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      var id = this.options.headerPrefix + slugger.slug(raw);\n      return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n    }\n\n    // ignore IDs\n    return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n  };\n  _proto.hr = function hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n  _proto.list = function list(body, ordered, start) {\n    var type = ordered ? 'ol' : 'ul',\n      startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */;\n  _proto.listitem = function listitem(text) {\n    return \"<li>\" + text + \"</li>\\n\";\n  };\n  _proto.checkbox = function checkbox(checked) {\n    return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */;\n  _proto.paragraph = function paragraph(text) {\n    return \"<p>\" + text + \"</p>\\n\";\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */;\n  _proto.table = function table(header, body) {\n    if (body) body = \"<tbody>\" + body + \"</tbody>\";\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */;\n  _proto.tablerow = function tablerow(content) {\n    return \"<tr>\\n\" + content + \"</tr>\\n\";\n  };\n  _proto.tablecell = function tablecell(content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n    return tag + content + (\"</\" + type + \">\\n\");\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */;\n  _proto.strong = function strong(text) {\n    return \"<strong>\" + text + \"</strong>\";\n  }\n\n  /**\n   * @param {string} text\n   */;\n  _proto.em = function em(text) {\n    return \"<em>\" + text + \"</em>\";\n  }\n\n  /**\n   * @param {string} text\n   */;\n  _proto.codespan = function codespan(text) {\n    return \"<code>\" + text + \"</code>\";\n  };\n  _proto.br = function br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */;\n  _proto.del = function del(text) {\n    return \"<del>\" + text + \"</del>\";\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */;\n  _proto.link = function link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    var out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */;\n  _proto.image = function image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n    if (title) {\n      out += \" title=\\\"\" + title + \"\\\"\";\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n  _proto.text = function text(_text) {\n    return _text;\n  };\n  return Renderer;\n}();\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nvar TextRenderer = /*#__PURE__*/function () {\n  function TextRenderer() {}\n  var _proto = TextRenderer.prototype;\n  // no need for block level renderers\n  _proto.strong = function strong(text) {\n    return text;\n  };\n  _proto.em = function em(text) {\n    return text;\n  };\n  _proto.codespan = function codespan(text) {\n    return text;\n  };\n  _proto.del = function del(text) {\n    return text;\n  };\n  _proto.html = function html(text) {\n    return text;\n  };\n  _proto.text = function text(_text) {\n    return _text;\n  };\n  _proto.link = function link(href, title, text) {\n    return '' + text;\n  };\n  _proto.image = function image(href, title, text) {\n    return '' + text;\n  };\n  _proto.br = function br() {\n    return '';\n  };\n  return TextRenderer;\n}();\n\n/**\n * Slugger generates header id\n */\nvar Slugger = /*#__PURE__*/function () {\n  function Slugger() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  var _proto = Slugger.prototype;\n  _proto.serialize = function serialize(value) {\n    return value.toLowerCase().trim()\n    // remove html tags\n    .replace(/<[!\\/a-z].*?>/ig, '')\n    // remove unwanted chars\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */;\n  _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n    var slug = originalSlug;\n    var occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */;\n  _proto.slug = function slug(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  };\n  return Slugger;\n}();\n\n/**\n * Parsing & Compiling\n */\nvar Parser = /*#__PURE__*/function () {\n  function Parser(options) {\n    this.options = options || exports.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  Parser.parse = function parse(tokens, options) {\n    var parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */;\n  Parser.parseInline = function parseInline(tokens, options) {\n    var parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */;\n  var _proto = Parser.prototype;\n  _proto.parse = function parse(tokens, top) {\n    if (top === void 0) {\n      top = true;\n    }\n    var out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n    var l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({\n          parser: this\n        }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n      switch (token.type) {\n        case 'space':\n          {\n            continue;\n          }\n        case 'hr':\n          {\n            out += this.renderer.hr();\n            continue;\n          }\n        case 'heading':\n          {\n            out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n            continue;\n          }\n        case 'code':\n          {\n            out += this.renderer.code(token.text, token.lang, token.escaped);\n            continue;\n          }\n        case 'table':\n          {\n            header = '';\n\n            // header\n            cell = '';\n            l2 = token.header.length;\n            for (j = 0; j < l2; j++) {\n              cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                header: true,\n                align: token.align[j]\n              });\n            }\n            header += this.renderer.tablerow(cell);\n            body = '';\n            l2 = token.rows.length;\n            for (j = 0; j < l2; j++) {\n              row = token.rows[j];\n              cell = '';\n              l3 = row.length;\n              for (k = 0; k < l3; k++) {\n                cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                  header: false,\n                  align: token.align[k]\n                });\n              }\n              body += this.renderer.tablerow(cell);\n            }\n            out += this.renderer.table(header, body);\n            continue;\n          }\n        case 'blockquote':\n          {\n            body = this.parse(token.tokens);\n            out += this.renderer.blockquote(body);\n            continue;\n          }\n        case 'list':\n          {\n            ordered = token.ordered;\n            start = token.start;\n            loose = token.loose;\n            l2 = token.items.length;\n            body = '';\n            for (j = 0; j < l2; j++) {\n              item = token.items[j];\n              checked = item.checked;\n              task = item.task;\n              itemBody = '';\n              if (item.task) {\n                checkbox = this.renderer.checkbox(checked);\n                if (loose) {\n                  if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                      item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                    }\n                  } else {\n                    item.tokens.unshift({\n                      type: 'text',\n                      text: checkbox\n                    });\n                  }\n                } else {\n                  itemBody += checkbox;\n                }\n              }\n              itemBody += this.parse(item.tokens, loose);\n              body += this.renderer.listitem(itemBody, task, checked);\n            }\n            out += this.renderer.list(body, ordered, start);\n            continue;\n          }\n        case 'html':\n          {\n            // TODO parse inline content if parameter markdown=1\n            out += this.renderer.html(token.text);\n            continue;\n          }\n        case 'paragraph':\n          {\n            out += this.renderer.paragraph(this.parseInline(token.tokens));\n            continue;\n          }\n        case 'text':\n          {\n            body = token.tokens ? this.parseInline(token.tokens) : token.text;\n            while (i + 1 < l && tokens[i + 1].type === 'text') {\n              token = tokens[++i];\n              body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n            }\n            out += top ? this.renderer.paragraph(body) : body;\n            continue;\n          }\n        default:\n          {\n            var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n            if (this.options.silent) {\n              console.error(errMsg);\n              return;\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    }\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */;\n  _proto.parseInline = function parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    var out = '',\n      i,\n      token,\n      ret;\n    var l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({\n          parser: this\n        }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n      switch (token.type) {\n        case 'escape':\n          {\n            out += renderer.text(token.text);\n            break;\n          }\n        case 'html':\n          {\n            out += renderer.html(token.text);\n            break;\n          }\n        case 'link':\n          {\n            out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n            break;\n          }\n        case 'image':\n          {\n            out += renderer.image(token.href, token.title, token.text);\n            break;\n          }\n        case 'strong':\n          {\n            out += renderer.strong(this.parseInline(token.tokens, renderer));\n            break;\n          }\n        case 'em':\n          {\n            out += renderer.em(this.parseInline(token.tokens, renderer));\n            break;\n          }\n        case 'codespan':\n          {\n            out += renderer.codespan(token.text);\n            break;\n          }\n        case 'br':\n          {\n            out += renderer.br();\n            break;\n          }\n        case 'del':\n          {\n            out += renderer.del(this.parseInline(token.tokens, renderer));\n            break;\n          }\n        case 'text':\n          {\n            out += renderer.text(token.text);\n            break;\n          }\n        default:\n          {\n            var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n            if (this.options.silent) {\n              console.error(errMsg);\n              return;\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    }\n    return out;\n  };\n  return Parser;\n}();\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n  }\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n  if (callback) {\n    var highlight = opt.highlight;\n    var tokens;\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n    var done = function done(err) {\n      var out;\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n      opt.highlight = highlight;\n      return err ? callback(err) : callback(null, out);\n    };\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n    delete opt.highlight;\n    if (!tokens.length) return done();\n    var pending = 0;\n    marked.walkTokens(tokens, function (token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(function () {\n          highlight(token.text, token.lang, function (err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n    if (pending === 0) {\n      done();\n    }\n    return;\n  }\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n    }\n    throw e;\n  }\n  try {\n    var _tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(_tokens, opt.walkTokens)).then(function () {\n          return Parser.parse(_tokens, opt);\n        })[\"catch\"](onError);\n      }\n      marked.walkTokens(_tokens, opt.walkTokens);\n    }\n    return Parser.parse(_tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options = marked.setOptions = function (opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\nmarked.getDefaults = getDefaults;\nmarked.defaults = exports.defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function () {\n  var extensions = marked.defaults.extensions || {\n    renderers: {},\n    childTokens: {}\n  };\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  args.forEach(function (pack) {\n    // copy options to new object\n    var opts = merge({}, pack);\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach(function (ext) {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) {\n          // Renderer extensions\n          var prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function () {\n              for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n              }\n              var ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) {\n          // Tokenizer Extensions\n          if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) {\n            // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) {\n          // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer();\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n          // Replace renderer with func to run extension, but fall back if false\n          renderer[prop] = function () {\n            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n            var ret = pack.renderer[prop].apply(renderer, args);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n            return ret;\n          };\n        };\n        for (var prop in pack.renderer) {\n          _loop(prop);\n        }\n        opts.renderer = renderer;\n      })();\n    }\n    if (pack.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n          // Replace tokenizer with func to run extension, but fall back if false\n          tokenizer[prop] = function () {\n            for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n              args[_key4] = arguments[_key4];\n            }\n            var ret = pack.tokenizer[prop].apply(tokenizer, args);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n            return ret;\n          };\n        };\n        for (var prop in pack.tokenizer) {\n          _loop2(prop);\n        }\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      var _walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function (token) {\n        var values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (_walkTokens) {\n          values = values.concat(_walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function (tokens, callback) {\n  var values = [];\n  var _loop3 = function _loop3() {\n    var token = _step.value;\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table':\n        {\n          for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n            var cell = _step2.value;\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n          for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n            var row = _step3.value;\n            for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n              var _cell = _step4.value;\n              values = values.concat(marked.walkTokens(_cell.tokens, callback));\n            }\n          }\n          break;\n        }\n      case 'list':\n        {\n          values = values.concat(marked.walkTokens(token.items, callback));\n          break;\n        }\n      default:\n        {\n          if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n            // Walk any extensions\n            marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n              values = values.concat(marked.walkTokens(token[childTokens], callback));\n            });\n          } else if (token.tokens) {\n            values = values.concat(marked.walkTokens(token.tokens, callback));\n          }\n        }\n    }\n  };\n  for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n    _loop3();\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function (src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n  }\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n  try {\n    var tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\nvar options = marked.options;\nvar setOptions = marked.setOptions;\nvar use = marked.use;\nvar walkTokens = marked.walkTokens;\nvar parseInline = marked.parseInline;\nvar parse = marked;\nvar parser = Parser.parse;\nvar lexer = Lexer.lex;\n\nexports.Lexer = Lexer;\nexports.Parser = Parser;\nexports.Renderer = Renderer;\nexports.Slugger = Slugger;\nexports.TextRenderer = TextRenderer;\nexports.Tokenizer = Tokenizer;\nexports.getDefaults = getDefaults;\nexports.lexer = lexer;\nexports.marked = marked;\nexports.options = options;\nexports.parse = parse;\nexports.parseInline = parseInline;\nexports.parser = parser;\nexports.setOptions = setOptions;\nexports.use = use;\nexports.walkTokens = walkTokens;\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","const core = require('@actions/core');\nconst https = require('node:https');\nconst { build, ManifestObjects } = require('@ably/features-core/html-matrix-build');\nconst { tailwindBuild } = require('./tailwind-wrapper');\n\nconst outputPath = 'output';\n\n// Entry Point\n(async () => {\n  try {\n    await render();\n    inform();\n  } catch (error) {\n    console.error(error);\n    process.exit(2);\n  }\n})();\n\nasync function render() {\n  const featuresSource = await fetch('https://github.com/ably/features/raw/main/sdk.yaml');\n\n  const sdkManifestObjects = new ManifestObjects(\n    ['this'],\n    new Map([['this', '.ably/capabilities.yaml']]),\n  );\n\n  console.log(`Feature List Version from ${sdkManifestObjects.objects.size} manifests: ${sdkManifestObjects.commonVersion}`);\n\n  build(\n    featuresSource,\n    sdkManifestObjects,\n    outputPath,\n  );\n\n  await tailwindBuild();\n}\n\nfunction inform() {\n  const emit = (key, value) => {\n    core.info(`${key}: ${value}`);\n    core.setOutput(key, value);\n  };\n\n  emit('matrix-path', outputPath);\n  emit('matrix-artifact-name', 'features');\n}\n\n/**\n * Simple Web-Fetch-alike function to HTTP GET a resource.\n * API based upon: https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * We need this because Node.js 16 (the maximum version supported by GitHub Actions) doesn't have Fetch.\n */\nasync function fetch(url) {\n  return new Promise((resolve, reject) => {\n    const fetchOrFollowRedirect = (location, depth) => {\n      if (depth > 3) {\n        throw new Error('Exceeded arbitrary redirect follow limit.');\n      }\n\n      https.get(location, (response) => {\n        const { statusCode } = response;\n        const contentType = response.headers['content-type'];\n\n        if (statusCode === 302) {\n          fetchOrFollowRedirect(response.headers.location, depth + 1);\n          return;\n        }\n\n        let error;\n        if (statusCode !== 200) {\n          error = new Error(`Request failed with status code ${statusCode}.`);\n        } else if (!/^text\\/plain/.test(contentType)) {\n          error = new Error(`Unexpected content-type. Expected 'text/plain' but received '${contentType}'.`);\n        }\n\n        if (error) {\n          response.resume(); // Consume response data to free up memory\n          reject(error);\n          return;\n        }\n\n        response.setEncoding('utf8');\n        let bodyData = '';\n        response.on('data', (chunk) => { bodyData += chunk; });\n        response.on('end', () => {\n          resolve(bodyData);\n        });\n      });\n    };\n\n    fetchOrFollowRedirect(url, 0);\n  });\n}\n"],"names":[],"sourceRoot":""}